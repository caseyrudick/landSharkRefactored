{"ast":null,"code":"// import LeaseLines from \"../APIs/LeaseLines\"\nimport wells from \"../APIs/wells\";\nimport { POST_LEASE_LINES_TO_JSONDB_REQUESTED, POST_LEASE_LINES_TO_JSONDB_RECEIVED, POST_LEASE_LINES_TO_JSONDB_FAILED } from \"./types\"; // export default (wellInfoAndLeaseLines) => {\n//   return async dispatch => {\n//     dispatch({\n//       type: POST_LEASE_LINES_TO_JSONDB_REQUESTED\n//     })\n//     try{\n//       const response = await wells.get(\"/wells\")\n//       // const response = await LeaseLines.post(\"LeaseLines\", wellInfoAndLeaseLines)\n//       dispatch({\n//         type: POST_LEASE_LINES_TO_JSONDB_RECEIVED,\n//         payload: response \n//       })\n//     } catch(error) {\n//       dispatch({\n//         type: POST_LEASE_LINES_TO_JSONDB_FAILED,\n//         payload: error\n//       })\n//     }\n//   }\n// }\n\nexport default (() => {\n  return async dispatch => {\n    dispatch({\n      type: POST_LEASE_LINES_TO_JSONDB_REQUESTED\n    });\n\n    try {\n      const response = await wells.get(\"/wells\");\n      dispatch({\n        type: POST_LEASE_LINES_TO_JSONDB_RECEIVED,\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch({\n        type: POST_LEASE_LINES_TO_JSONDB_FAILED,\n        payload: error\n      });\n    }\n  };\n});","map":{"version":3,"sources":["/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/postLeaseLinesToJSONDb.js"],"names":["wells","POST_LEASE_LINES_TO_JSONDB_REQUESTED","POST_LEASE_LINES_TO_JSONDB_RECEIVED","POST_LEASE_LINES_TO_JSONDB_FAILED","dispatch","type","response","get","payload","data","error"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,eAAlB;AACA,SACEC,oCADF,EAEEC,mCAFF,EAGEC,iCAHF,QAIO,SAJP,C,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,gBAAe,MAAM;AACnB,SAAO,MAAMC,QAAN,IAAkB;AACvBA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ;AADC,KAAD,CAAR;;AAGA,QAAI;AACF,YAAMK,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,QAAV,CAAvB;AACAH,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEH,mCADC;AAEPM,QAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFX,OAAD,CAAR;AAID,KAND,CAME,OAAOC,KAAP,EAAc;AACdN,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEF,iCADC;AAEPK,QAAAA,OAAO,EAAEE;AAFF,OAAD,CAAR;AAID;AACF,GAhBD;AAiBD,CAlBD","sourcesContent":["// import LeaseLines from \"../APIs/LeaseLines\"\nimport wells from \"../APIs/wells\"\nimport {\n  POST_LEASE_LINES_TO_JSONDB_REQUESTED,\n  POST_LEASE_LINES_TO_JSONDB_RECEIVED, \n  POST_LEASE_LINES_TO_JSONDB_FAILED\n} from \"./types\"\n\n// export default (wellInfoAndLeaseLines) => {\n//   return async dispatch => {\n//     dispatch({\n//       type: POST_LEASE_LINES_TO_JSONDB_REQUESTED\n//     })\n//     try{\n//       const response = await wells.get(\"/wells\")\n//       // const response = await LeaseLines.post(\"LeaseLines\", wellInfoAndLeaseLines)\n//       dispatch({\n//         type: POST_LEASE_LINES_TO_JSONDB_RECEIVED,\n//         payload: response \n//       })\n//     } catch(error) {\n//       dispatch({\n//         type: POST_LEASE_LINES_TO_JSONDB_FAILED,\n//         payload: error\n//       })\n//     }\n//   }\n// }\n\n\nexport default () => {\n  return async dispatch => {\n    dispatch({\n      type: POST_LEASE_LINES_TO_JSONDB_REQUESTED\n    })\n    try {\n      const response = await wells.get(\"/wells\")\n      dispatch({\n        type: POST_LEASE_LINES_TO_JSONDB_RECEIVED,\n        payload: response.data\n      })\n    } catch (error) {\n      dispatch({\n        type: POST_LEASE_LINES_TO_JSONDB_FAILED,\n        payload: error\n      })\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}