[{"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/PVA.js":"1","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/postWellInfoToJSONDb.js":"2","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/index.js":"3","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/saveWellInfoToReduxStoreReducer.js":"4","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/savePlansToReduxStoreReducer.js":"5","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getWellsFromJSONDbReducer.js":"6","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/saveActiveWellToReduxStoreReducer.js":"7","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getWellPlansFromJSONDbReducer.js":"8","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/saveWellInfoToReduxStore.js":"9","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/postPlansToJSONDb.js":"10","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/types.js":"11","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/EW.js":"12","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/TVD.js":"13","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/RF.js":"14","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/ExistingPVA.js":"15","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getLeaseLinesFromJSONDbReducer.js":"16","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/Home.js":"17","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/App.js":"18","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/Plans.js":"19","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/postWellInfoToJSONDbReducer.js":"20","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getWellPlansFromJSONDb.js":"21","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/saveLeaseLinesToReduxStore.js":"22","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/NS.js":"23","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/DLS.js":"24","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/DLC.js":"25","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getWellsFromJSONDb.js":"26","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getWellsWithLeaseLinesFromJSONDbReducer.js":"27","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/index.js":"28","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/postLeaseLinesToJSONDbReducer.js":"29","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getWellsWithLeaseLinesFromJSONDb.js":"30","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/Surveys.js":"31","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/postPlansToJSONDbReducer.js":"32","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/saveLeaseLinesToReduxStoreReducer.js":"33","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/SECT.js":"34","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getLeaseLinesFromJSONDb.js":"35","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/saveSurveysToReduxStoreReducer.js":"36","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/postSurveysToJSONDbReducer.js":"37","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/postSurveysToJSONDb.js":"38","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getWellsWithSurveysFromJSONDbReducer.js":"39","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getWellsWithSurveysFromJSONDb.js":"40","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/ExistingSurveys.js":"41","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getSurveysFromJSONDbReducer.js":"42","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getSurveysFromJSONDb.js":"43","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/ExistingPlans.js":"44","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/ExistingPolyLines.js":"45","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/ExistingLeaseLines.js":"46","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/postHardLinesToJSONDbReducer.js":"47","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getWellsWithHardLinesFromJSONDbReducer.js":"48","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/PolyLines.js":"49","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/LeaseLines.js":"50","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getHardLinesFromJSONDb.js":"51","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/ExistingHardLines.js":"52","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/HardLines.js":"53","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getWellsWithHardLinesFromJSONDb.js":"54","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/saveHardLinesToReduxStoreReducer.js":"55","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/saveSurveysToReduxStore.js":"56","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/postLeaseLinesToJSONDb.js":"57","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/APIs/wells.js":"58"},{"size":5191,"mtime":1608260498026,"results":"59","hashOfConfig":"60"},{"size":831,"mtime":1608086866799,"results":"61","hashOfConfig":"60"},{"size":2424,"mtime":1608240649215,"results":"62","hashOfConfig":"60"},{"size":705,"mtime":1607563251547,"results":"63","hashOfConfig":"60"},{"size":623,"mtime":1607523677659,"results":"64","hashOfConfig":"60"},{"size":626,"mtime":1607538953582,"results":"65","hashOfConfig":"60"},{"size":664,"mtime":1607633245513,"results":"66","hashOfConfig":"60"},{"size":637,"mtime":1607636656362,"results":"67","hashOfConfig":"60"},{"size":622,"mtime":1607563740710,"results":"68","hashOfConfig":"60"},{"size":838,"mtime":1607703856457,"results":"69","hashOfConfig":"60"},{"size":5705,"mtime":1608240524193,"results":"70","hashOfConfig":"60"},{"size":905,"mtime":1608144934403,"results":"71","hashOfConfig":"60"},{"size":827,"mtime":1608138150131,"results":"72","hashOfConfig":"60"},{"size":196,"mtime":1608143803818,"results":"73","hashOfConfig":"60"},{"size":5815,"mtime":1608262317225,"results":"74","hashOfConfig":"60"},{"size":638,"mtime":1608090093045,"results":"75","hashOfConfig":"60"},{"size":6473,"mtime":1608262246586,"results":"76","hashOfConfig":"60"},{"size":4176,"mtime":1608241643169,"results":"77","hashOfConfig":"60"},{"size":8948,"mtime":1607698076754,"results":"78","hashOfConfig":"60"},{"size":615,"mtime":1607486694229,"results":"79","hashOfConfig":"60"},{"size":1350,"mtime":1607882728534,"results":"80","hashOfConfig":"60"},{"size":549,"mtime":1607702894653,"results":"81","hashOfConfig":"60"},{"size":867,"mtime":1608144866509,"results":"82","hashOfConfig":"60"},{"size":478,"mtime":1607525889497,"results":"83","hashOfConfig":"60"},{"size":462,"mtime":1608143792958,"results":"84","hashOfConfig":"60"},{"size":555,"mtime":1608132032248,"results":"85","hashOfConfig":"60"},{"size":1144,"mtime":1608216198423,"results":"86","hashOfConfig":"60"},{"size":679,"mtime":1606780516169,"results":"87","hashOfConfig":"60"},{"size":632,"mtime":1607877919616,"results":"88","hashOfConfig":"60"},{"size":1354,"mtime":1608216060566,"results":"89","hashOfConfig":"60"},{"size":9228,"mtime":1608219411373,"results":"90","hashOfConfig":"60"},{"size":584,"mtime":1607528546735,"results":"91","hashOfConfig":"60"},{"size":694,"mtime":1607659948536,"results":"92","hashOfConfig":"60"},{"size":1222,"mtime":1607526475495,"results":"93","hashOfConfig":"60"},{"size":1119,"mtime":1608260264135,"results":"94","hashOfConfig":"60"},{"size":640,"mtime":1608216797800,"results":"95","hashOfConfig":"60"},{"size":611,"mtime":1608218987483,"results":"96","hashOfConfig":"60"},{"size":593,"mtime":1608219456070,"results":"97","hashOfConfig":"60"},{"size":682,"mtime":1608220509005,"results":"98","hashOfConfig":"60"},{"size":653,"mtime":1608222078292,"results":"99","hashOfConfig":"60"},{"size":2226,"mtime":1608223787867,"results":"100","hashOfConfig":"60"},{"size":619,"mtime":1608221538512,"results":"101","hashOfConfig":"60"},{"size":1038,"mtime":1608223853004,"results":"102","hashOfConfig":"60"},{"size":5295,"mtime":1608236762260,"results":"103","hashOfConfig":"60"},{"size":1267,"mtime":1608241471750,"results":"104","hashOfConfig":"60"},{"size":1689,"mtime":1608242709255,"results":"105","hashOfConfig":"60"},{"size":666,"mtime":1608239736034,"results":"106","hashOfConfig":"60"},{"size":663,"mtime":1608240154986,"results":"107","hashOfConfig":"60"},{"size":6530,"mtime":1608242687828,"results":"108","hashOfConfig":"60"},{"size":4312,"mtime":1608242076616,"results":"109","hashOfConfig":"60"},{"size":1028,"mtime":1608260229827,"results":"110","hashOfConfig":"60"},{"size":1673,"mtime":1608241692134,"results":"111","hashOfConfig":"60"},{"size":4297,"mtime":1608242072659,"results":"112","hashOfConfig":"60"},{"size":634,"mtime":1608243294731,"results":"113","hashOfConfig":"60"},{"size":689,"mtime":1608239459262,"results":"114","hashOfConfig":"60"},{"size":560,"mtime":1608216616484,"results":"115","hashOfConfig":"60"},{"size":652,"mtime":1607878537714,"results":"116","hashOfConfig":"60"},{"size":94,"mtime":1606780246113,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"5r6a9f",{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"126"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"137"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"126"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"133"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"126"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"126"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"137"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"133"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"126"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"133"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"126"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"126"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"218","messages":"219","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"224","messages":"225","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"226","messages":"227","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"126"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"126"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"126"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"243","messages":"244","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"126"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/PVA.js",["258"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/postWellInfoToJSONDb.js",["259","260"],"import wells from \"../APIs/wells\"\n\nimport { POST_WELLINFO_TO_JSONDB_REQUESTED,\n  POST_WELLINFO_TO_JSONDB_RECEIVED,\n  POST_WELLINFO_TO_JSONDB_FAILED } from './types';\n  \n  export default (wellInfo) => {\n\n    return async (dispatch, getState) => {\n      // let wellList = getState().getWellsFromJSONDbReducer.response\n      // console.log('should get wellList next')\n      // console.log(wellList)\n      const response = await wells.post(\"wells\", wellInfo)\n      dispatch({\n        type: POST_WELLINFO_TO_JSONDB_REQUESTED,\n      });\n      try {\n        dispatch({\n          type: POST_WELLINFO_TO_JSONDB_RECEIVED,\n          payload: wellInfo,\n        });\n      } catch (error) {\n        console.log(error)\n        dispatch({\n          type: POST_WELLINFO_TO_JSONDB_FAILED,\n          payload: error,\n        });\n      }\n    };\n  };\n  ",["261","262"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/index.js",[],["263","264"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/saveWellInfoToReduxStoreReducer.js",["265"],"import { SAVE_WELL_INFO_TO_REDUX_STORE_REQUESTED,\n  SAVE_WELL_INFO_TO_REDUX_STORE_RECEIVED,\n  SAVE_WELL_INFO_TO_REDUX_STORE_FAILED } from \"../ActionCreators/types\"\n\n  const INITIAL_STATE = {\n    response: {}, \n    status: \"\"\n  };\n\n  export default (state = INITIAL_STATE, { type, payload }) => {\n    \n    switch (type) {\n      case SAVE_WELL_INFO_TO_REDUX_STORE_REQUESTED:\n        return { ...state, status: 'waiting' };\n      case SAVE_WELL_INFO_TO_REDUX_STORE_RECEIVED:\n        return { ...state, response: payload, status: 'received' };\n      case SAVE_WELL_INFO_TO_REDUX_STORE_FAILED:\n        return { ...state, response: payload, status: 'failed' };\n      default:\n        return state;\n    }\n  };\n  ","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/savePlansToReduxStoreReducer.js",["266"],"import { SAVE_PLANS_TO_REDUX_STORE_REQUESTED,\n  SAVE_PLANS_TO_REDUX_STORE_RECEIVED,\n  SAVE_PLANS_TO_REDUX_STORE_FAILED\n} from \"../ActionCreators/types\"\n\nconst INITIAL_STATE = {\n  response: {},\n  status: \"\"\n}\n\nexport default (state=INITIAL_STATE, {type, payload}) =>{\n  switch (type) {\n    case SAVE_PLANS_TO_REDUX_STORE_REQUESTED:\n      return {...state, status: \"waiting\"}\n    case SAVE_PLANS_TO_REDUX_STORE_RECEIVED:\n      return {...state, response: payload, status: \"received\"}\n    case SAVE_PLANS_TO_REDUX_STORE_FAILED:\n      return {...state, response: payload, status: \"failed\"}\n    default:\n      return state\n  }\n}",["267","268"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getWellsFromJSONDbReducer.js",["269"],"import { GET_WELLS_FROM_JSON_REQUESTED,\n  GET_WELLS_FROM_JSON_RECEIVED,\n  GET_WELLS_FROM_JSON_FAILED } from \"../ActionCreators/types\"\n\n  const INITIAL_STATE = {\n    response: {},\n    status: \"\"\n  }\n\n  export default (state = INITIAL_STATE, {type, payload}) => {\n    switch (type) {\n      case GET_WELLS_FROM_JSON_REQUESTED:\n        return {...state, status: \"waiting\"}\n      case GET_WELLS_FROM_JSON_RECEIVED:\n        return {...state, response: payload, status: \"received\"}    \n      case GET_WELLS_FROM_JSON_FAILED:\n        return {...state, response: payload, status: \"failed\"}\n      default:\n        return state\n    }\n  }",["270","271"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/saveActiveWellToReduxStoreReducer.js",["272"],"import { SAVE_ACTIVE_WELL_TO_REDUX_STORE_RECEIVED,\n  SAVE_ACTIVE_WELL_TO_REDUX_STORE_REQUESTED,\n  SAVE_ACTIVE_WELL_TO_REDUX_STORE_FAILED\n } from \"../ActionCreators/types\"\n\nconst INITIAL_STATE = {\n  response: {},\n  status: \"\"\n}\n\nexport default (state = INITIAL_STATE, {type, payload}) => {\n  switch (type) {\n    case SAVE_ACTIVE_WELL_TO_REDUX_STORE_REQUESTED:\n      return {...state, status: \"waiting\"}\n    case SAVE_ACTIVE_WELL_TO_REDUX_STORE_RECEIVED:\n      return {...state, response: payload, status: \"received\"}\n    case SAVE_ACTIVE_WELL_TO_REDUX_STORE_FAILED:\n      return {...state, response: payload, status: \"failed\"}\n    default:\n      return state;\n  }\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getWellPlansFromJSONDbReducer.js",["273"],"import { GET_WELL_PLANS_FROM_JSONDB_REQUESTED, \n  GET_WELL_PLANS_FROM_JSONDB_RECEIVED,\n  GET_WELL_PLANS_FROM_JSONDB_FAILED} from \"../ActionCreators/types\"\n\n\nconst INITIAL_STATE = {\n  response: {},\n  status: \"\"\n}\n\nexport default (state = INITIAL_STATE, {type, payload}) => {\n  \n  switch (type) {\n    case GET_WELL_PLANS_FROM_JSONDB_REQUESTED:\n      return {...state, status: \"waiting\"}\n    case GET_WELL_PLANS_FROM_JSONDB_RECEIVED:\n      return {...state, response: payload, status: \"received\"}\n    case GET_WELL_PLANS_FROM_JSONDB_FAILED:\n      return {...state, response: payload, status: \"failed\"}\n    default:\n      return state\n  }\n}\n","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/saveWellInfoToReduxStore.js",["274"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/postPlansToJSONDb.js",["275"],"import wells from \"../APIs/wells\"\nimport { \n  POST_PLANS_TO_JSON_REQUESTED,\n  POST_PLANS_TO_JSON_RECEIVED,\n  POST_PLANS_TO_JSON_FAILED \n} from \"./types\"\nimport moment from \"moment\"\n\nexport default (operator, rig ,well, county, uSstate, grid, vsDirection) => {\n  return async (dispatch, getState) => {\n\n    dispatch({\n      type: POST_PLANS_TO_JSON_REQUESTED\n    })\n    try {\n      const wellData = {\n        operator,\n        rig,\n        well,\n        county,\n        uSstate,\n        vsDirection,\n        grid, \n        date: moment().format()\n      }\n      const response = await wells.post(`wells`, wellData)\n      dispatch({\n        type: POST_PLANS_TO_JSON_RECEIVED,\n        payload: response.data\n      })\n    } catch (error) {\n\n      dispatch({\n        type: POST_PLANS_TO_JSON_FAILED,\n        payload: error\n      })\n    }\n  }\n}\n","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/types.js",[],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/EW.js",["276"],"import DLC from \"./DLC\"\nimport RF from \"./RF\"\n\nexport default (measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior, inclinationPrior, azimuthPrior, calculatedEastingPrior) => {\n  const converter = (Math.PI)/180;\n\n  const calculatedDLC = DLC(inclinationPrior, inclinationCurrent, azimuthPrior, azimuthCurrent)\n  console.log(`EW calculatedDLC ${calculatedDLC}`)\n\n  const calculatedRF = RF(measuredDepthPrior, measuredDepthCurrent, calculatedDLC)\n  console.log(`EW calculatedRF ${calculatedRF}`)\n\n  const calculatedEastingCurrent = (calculatedEastingPrior + calculatedRF *(Math.sin(inclinationPrior*converter)* Math.sin(azimuthPrior * converter) + Math.sin(inclinationCurrent * converter)*Math.sin(azimuthCurrent*converter)));\n  console.log(`Easting: ${calculatedEastingCurrent}`)\n  return (\n    parseFloat(calculatedEastingCurrent.toFixed(2))\n    // calculatedEastingCurrent\n  )\n};\n","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/TVD.js",["277"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/RF.js",["278"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/ExistingPVA.js",["279","280","281","282","283","284","285","286","287"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getLeaseLinesFromJSONDbReducer.js",["288"],"import { GET_LEASE_LINES_FROM_JSONDB_REQUESTED,\n  GET_LEASE_LINES_FROM_JSONDB_RECEIVED,\n  GET_LEASE_LINES_FROM_JSONDB_FAILED } from \"../ActionCreators/types\"\n\nconst INITIAL_STATE = {\n  response: {},\n  status: \"\"\n}\n\nexport default (state = INITIAL_STATE, {type, payload}) => {\n  switch (type) {\n    case GET_LEASE_LINES_FROM_JSONDB_REQUESTED:\n      return {...state, status: \"waiting\"}\n    case GET_LEASE_LINES_FROM_JSONDB_RECEIVED:\n      return {...state, response: payload, status: \"received\"}\n    case GET_LEASE_LINES_FROM_JSONDB_FAILED:\n      return {...state, response: payload, status: \"failed\"}\n    default:\n      return state\n  }\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/Home.js",["289","290","291","292"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/App.js",["293","294","295","296"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/Plans.js",["297","298","299","300","301"],"import React, { useState, useEffect } from \"react\"\n//bootstrap\nimport Container from \"react-bootstrap/esm/Container\";\nimport Form from \"react-bootstrap/Form\"\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\nimport Button from \"react-bootstrap/Button\"\n//other libs\nimport 'react-datasheet/lib/react-datasheet.css';\nimport { connect } from \"react-redux\"\nimport ReactDataSheet from 'react-datasheet';\n// actionCreators\n\nimport savePlansToReduxStore from \"../ActionCreators/savePlansToReduxStore\"\n//helper functions\nimport calculateTVD from \"../HelperFunctions/Calculations/TVD\"\nimport calculateNS from \"../HelperFunctions/Calculations/NS\"\nimport calculateEW from \"../HelperFunctions/Calculations/EW\"\nimport calculateSECT from \"../HelperFunctions/Calculations/SECT\"\nimport calculateDLS from \"../HelperFunctions/Calculations/DLS\"\nimport postPlansToJSONDb from \"../ActionCreators/postPlansToJSONDb\";\n\n\n\nconst Plans = ({savePlansToReduxStore, saveWellInfoToReduxStoreReducer,savePlansToReduxStoreReducer, postPlansToJSONDb}) => {\n  \n  const [editGrid, setEditGrid] = useState(true)\n  const [input, setInput] = useState(false)\n  const [vsDirection, setVSDirection] = useState(0)\n  \n  const initialGrid = [\n    [{value: '', readOnly: true, width: '7rem'}, {value:\"Measured Depth\", readOnly: true, width: '7rem'}, {value:\"Inclination\", readOnly: true, width: '7rem'}, {value:\"Azimuth\", readOnly: true, width: '7rem'}, {value:\"TVD\", readOnly: true, width: '7rem'}, {value:\"Northing\", readOnly: true, width: '7rem'}, {value:\"Easting\", readOnly: true, width: '7rem'}, {value:\"VS\", readOnly: true, width: '7rem'},{value:\"DLS\", readOnly: true, width: '7rem'}],\n    \n    [{value: 1, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}],\n    \n    [{readOnly: true, value: 2}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}],\n    [{readOnly: true, value: 3}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}],\n    [{readOnly: true, value: 4}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}],\n    [{readOnly: true, value: 5}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}],\n  ];\n\n  const [grid, setGrid] = useState(initialGrid);\n\n  useEffect(()=>{\n    if (input) {\n      //performcalcs doesn't happen bc we're copying from plans. Currently not needed\n    }\n  },[input])\n\n  useEffect(()=> {\n    handleAddRows(1)\n  }, [])\n\n  const performCalculations = () => {\n    grid.map((row, index) => {\n      if (index === 0 || index === 1) {\n        // nothing because we don't want to run calcs on the header array\n      } else {\n        // for every array within grid array, want to iterate over and change the values of TVD, NS, EW, SECT, & DLS\n        // note val after idx is column \n        // TVD order of args : (measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior, inclinationPrior, azimuthPrior, calculatedTVDPrior)\n        // NS order of args: (measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior, inclinationPrior, azimuthPrior, calculatedNorthingPrior)\n\n        const calculatedTVD = calculateTVD(grid[index][1].value, grid[index][2].value, grid[index][3].value, grid[index - 1][1].value, grid[index - 1][2].value, grid[index - 1][3].value, grid[index - 1][4].value)\n        const calculatedNS = calculateNS(grid[index][1].value, grid[index][2].value, grid[index][3].value, grid[index - 1][1].value, grid[index - 1][2].value, grid[index - 1][3].value, grid[index - 1][5].value)\n        const calculatedEW = calculateEW(grid[index][1].value, grid[index][2].value, grid[index][3].value, grid[index - 1][1].value, grid[index - 1][2].value, grid[index - 1][3].value, grid[index - 1][6].value)\n        const calculatedSECT = calculateSECT(grid[index][1].value, grid[index][2].value, grid[index][3].value, grid[index - 1][1].value, grid[index - 1][2].value, grid[index - 1][3].value, grid[index - 1][5].value, grid[index - 1][6].value, index, vsDirection)\n        const calculatedDLS = calculateDLS(grid[index][1].value, grid[index][2].value, grid[index][3].value, grid[index - 1][1].value, grid[index - 1][2].value, grid[index - 1][3].value)\n\n\n        grid[index][4] = {...grid[index][4], readOnly: true, value: calculatedTVD}\n        grid[index][5] = {...grid[index][5], readOnly: true, value: calculatedNS}\n        grid[index][6] = {...grid[index][6], readOnly: true, value: calculatedEW}\n        grid[index][7] = {...grid[index][7], readOnly: true, value: calculatedSECT}\n        grid[index][8] = {...grid[index][8], readOnly: true, value: calculatedDLS}\n\n        setGrid(grid)\n        setInput(false)\n\n      }\n    })\n  }\n\n  const onCellsChanged = changes => {\n    // iterate through existing grid to get a copy and not mutate current as we iterate over\n    const gridNew = grid.map(row => [...row]);\n    // iterate through the changes.  Each change is a cell, each cell is an object\n    // with cell (previousVal), row, col, currentVal\n    // add the value of the newGrid[row#][col#] to the new value \n    changes.forEach(({ cell, row, col, value }) => {\n      gridNew[row][col] = {...grid[row][col], value };\n    });\n    setGrid(gridNew)\n    setInput(true)\n  };\n\n  const handleVSDirection = (val) => {\n    setVSDirection(val)\n    setInput(true)\n  }\n\n  const handleSubmit = () => {\n    const {well, operator, rig, county, uSstate, northing, easting} = saveWellInfoToReduxStoreReducer.response\n    postPlansToJSONDb(operator, rig ,well, county, uSstate, grid, vsDirection, northing, easting)\n    savePlansToReduxStore(grid)\n\n  }\n\n  const handleRemoveRow = () => {\n    const newGrid = [...grid];\n    newGrid.pop();\n    setGrid(newGrid);\n  };\n\n  const createRows = (numberOfRowsToAdd) => {\n    let createdRows = []\n    for (let i = 0; i < numberOfRowsToAdd; i++) {\n      createdRows.push(\n        [{readOnly: true, value: grid.length + i}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}]\n      )\n    }\n    return createdRows\n  };\n\n  const handleAddRows = (rows) => {\n    const newGrid = [...grid, ...createRows(rows)]\n    setGrid(newGrid)\n  }\n\n  const renderSetRowsButtons = () => {\n    return (\n      <Row>\n        <Col xs={10} className=\"d-flex justify-content-start mt-4\">\n          <Button variant=\"success\" value={25} onClick={(event)=> handleAddRows(event.target.value)}>\n            Add 25 rows\n          </Button>\n          <Button variant=\"success\" className=\"ml-4\" value={10} onClick={(event) => handleAddRows(event.target.value)}>\n            Add 10 rows\n          </Button>\n          <Button variant=\"success\" className=\"ml-4\" value={5} onClick={(event) => handleAddRows(event.target.value)}>\n            Add 5 rows\n          </Button>\n          <Button variant=\"success\" className=\"ml-4\" value={1} onClick={(event) => handleAddRows(event.target.value)}>\n            Add a row\n          </Button>\n          <Button variant=\"danger\" className=\"ml-4\" onClick={handleRemoveRow}>\n            Remove a row\n          </Button>\n        </Col>\n        <Col xs={2}>\n          \n        </Col>\n      </Row>\n    )\n  }\n\n  const renderSubmitButton = () => {\n    return (\n      <Row>\n        <Col xs={10} className=\"my-4\">\n          <Button variant=\"info\" onClick={()=>handleSubmit()}>\n            Submit Data\n          </Button>\n        </Col>\n        <Col xs={2}>\n\n        </Col>\n      </Row>\n    )\n  }\n\n  const renderWellData = () => {\n    if (saveWellInfoToReduxStoreReducer.status === \"received\") {\n      const { well, rig, operator} = saveWellInfoToReduxStoreReducer.response\n      return <h3 className=\"hy-4\"> {operator} - {rig} - {well}</h3>\n    } else {\n      return \"No well data\"\n    }\n  }\n\n  return (\n    <Container>\n      <Row>\n        <Col xs={10}>\n          {renderWellData()}\n          <ReactDataSheet data={grid} valueRenderer={(cell)=> cell.value} onCellsChanged={onCellsChanged}/>\n        </Col>\n        <Col xs={2}>\n          <Form className=\"mt-7\">\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Control className=\"mt-3\" type=\"float\" placeholder=\"Enter VS Here\" onChange={event => handleVSDirection(event.target.value)}/>\n            </Form.Group>\n          </Form>\n        </Col>\n      </Row>\n      {renderSetRowsButtons()}\n      {renderSubmitButton()}\n      <Row>\n        <Col xs={10}>\n          {/* {renderAlert()} */}\n        </Col>\n        <Col xs={2}>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nconst mapStateToProps = ({saveWellInfoToReduxStoreReducer}) => {\n  return {\n    saveWellInfoToReduxStoreReducer\n  }\n}\n\nexport default connect(mapStateToProps, { savePlansToReduxStore, postPlansToJSONDb})(Plans)\n\n\n","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/postWellInfoToJSONDbReducer.js",["302"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getWellPlansFromJSONDb.js",["303","304","305","306","307","308"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/saveLeaseLinesToReduxStore.js",["309"],"import { SAVE_LEASE_LINES_TO_REDUX_STORE_REQUESTED,\n  SAVE_LEASE_LINES_TO_REDUX_STORE_RECEIVED,\n  SAVE_LEASE_LINES_TO_REDUX_STORE_FAILED } from \"./types\"\n\nexport default (leaseLines) => {\n  return async dispatch => {\n    dispatch({\n      type: SAVE_LEASE_LINES_TO_REDUX_STORE_REQUESTED\n    })\n    try {\n      dispatch({\n        type: SAVE_LEASE_LINES_TO_REDUX_STORE_RECEIVED,\n        payload: leaseLines\n      })\n    } catch(error) {\n      dispatch({\n        type: SAVE_LEASE_LINES_TO_REDUX_STORE_FAILED,\n        payload: error\n      })\n    }\n  }\n}\n","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/NS.js",["310"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/DLS.js",["311"],"import DLC from \"./DLC\"\n\nexport default (measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior = 1, inclinationPrior = 2, azimuthPrior = 3 ) => {\n  const converter = (Math.PI)/180;\n\n  // calculate DLC\n  const calculatedDLC = DLC(inclinationPrior, inclinationCurrent, azimuthPrior, azimuthCurrent)\n\n  const calculatedDLS = ((calculatedDLC/converter)*100/(measuredDepthCurrent-measuredDepthPrior))\n\n  return (\n    parseFloat(calculatedDLS.toFixed(2))\n  )\n\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/DLC.js",["312"],"export default (inclinationPrior, inclinationCurrent, azimuthPrior, azimuthCurrent) => {\n  const converter = Math.PI/180;\n  const converter2 = 0.00000001;\n\n  return (\n    Math.acos(\n      (\n        Math.cos(inclinationPrior*converter)*Math.cos(inclinationCurrent*converter)\n      )\n      +\n      (\n        Math.sin(inclinationPrior*converter)*Math.sin(inclinationCurrent*converter)*Math.cos((azimuthCurrent-azimuthPrior)*converter-converter2)\n      )\n    )\n  )\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getWellsFromJSONDb.js",["313"],"import wells from \"../APIs/wells\"\n\nimport { GET_WELLS_FROM_JSON_REQUESTED,\n  GET_WELLS_FROM_JSON_RECEIVED,\n  GET_WELLS_FROM_JSON_FAILED } from \"./types\"\n\n\nexport default () => {\n  return async dispatch => {\n    dispatch({\n      type: GET_WELLS_FROM_JSON_REQUESTED\n    })\n    try {\n      const response = await wells.get(\"/wells\")\n      dispatch({\n        type: GET_WELLS_FROM_JSON_RECEIVED,\n        payload: response.data\n      })\n    } catch (error) {\n      dispatch({\n        type: GET_WELLS_FROM_JSON_FAILED,\n        payload: error\n      })\n    }\n  }\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getWellsWithLeaseLinesFromJSONDbReducer.js",["314"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/index.js",[],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/postLeaseLinesToJSONDbReducer.js",["315"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getWellsWithLeaseLinesFromJSONDb.js",["316"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/Surveys.js",["317","318","319","320","321"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/postPlansToJSONDbReducer.js",["322"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/saveLeaseLinesToReduxStoreReducer.js",["323","324"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/SECT.js",["325"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getLeaseLinesFromJSONDb.js",["326"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/saveSurveysToReduxStoreReducer.js",["327"],"import { SAVE_SURVEYS_TO_REDUX_STORE_REQUESTED, \n  SAVE_SURVEYS_TO_REDUX_STORE_RECEIVED,\n  SAVE_SURVEYS_TO_REDUX_STORE_FAILED } from \"../ActionCreators/types\"\n\nconst INITIAL_STATE = {\n  response: {},\n  status: \"\"\n}\n\nexport default (state = INITIAL_STATE, {type, payload}) => {\n  switch (type) {\n    case SAVE_SURVEYS_TO_REDUX_STORE_REQUESTED:\n      return {...state, status: \"waiting\"}\n    case SAVE_SURVEYS_TO_REDUX_STORE_RECEIVED:\n      return {...state, response: payload, status: \"received\"}\n    case SAVE_SURVEYS_TO_REDUX_STORE_FAILED:\n      return {...state, response: payload, status: \"waiting\"}\n    default:\n      return state\n  }\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/postSurveysToJSONDbReducer.js",["328"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/postSurveysToJSONDb.js",["329"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getWellsWithSurveysFromJSONDbReducer.js",["330"],"import {\n  GET_WELLS_WITH_SURVEYS_FROM_JSONDB_REQUESTED,\n  GET_WELLS_WITH_SURVEYS_FROM_JSONDB_RECEIVED,\n  GET_WELLS_WITH_SURVEYS_FROM_JSONDB_FAILED\n} from \"../ActionCreators/types\"\n\nconst INITIAL_STATE = {\n  response: {},\n  status: \"\"\n}\n\nexport default (state = INITIAL_STATE, {type, payload}) => {\n  switch (type) {\n    case GET_WELLS_WITH_SURVEYS_FROM_JSONDB_REQUESTED:\n      return {...state, status: \"waiting\"}\n    case GET_WELLS_WITH_SURVEYS_FROM_JSONDB_RECEIVED:\n      return {...state, response: payload, status: \"received\"}\n    case GET_WELLS_WITH_SURVEYS_FROM_JSONDB_FAILED:\n      return {...state, response: payload, status: \"failed\"}\n    default:\n      return state\n  }\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getWellsWithSurveysFromJSONDb.js",["331"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/ExistingSurveys.js",["332","333","334","335","336","337","338","339"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getSurveysFromJSONDbReducer.js",["340"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getSurveysFromJSONDb.js",["341"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/ExistingPlans.js",["342","343","344","345","346","347","348","349","350"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/ExistingPolyLines.js",["351","352","353","354","355"],"import React, { useEffect, useState } from \"react\"\nimport { connect } from \"react-redux\"\n\nimport Container from \"react-bootstrap/esm/Container\"\nimport Form from \"react-bootstrap/Form\"\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\nimport Button from \"react-bootstrap/Button\"\n\nimport 'react-datasheet/lib/react-datasheet.css'\nimport ReactDataSheet from \"react-datasheet\"\nimport ExistingLeaseLines from \"./ExistingLeaseLines\"\nimport ExistingHardLines from \"./ExistingHardLines\"\n\nconst ExistingPolyLines = ({getLeaseLinesFromJSONDbReducer, activeWell}) => {\n  const renderWellData = () => {\n      const {operator, rig, well } = activeWell.response\n      return (\n          <h3 className=\"my-4\">{operator} - {rig} - {well}</h3>\n      )\n    }\n  \n\n  return (\n    <Container>\n      {renderWellData()}\n      <Row className=\"mt-4\">\n        <Col>\n          <h4>Lease Lines</h4>\n          <ExistingLeaseLines/>\n        </Col>\n        <Col>\n        <h4>Hard Lines</h4>\n          <ExistingHardLines/>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nconst mapStateToProps = ({activeWell, getLeaseLinesFromJSONDbReducer}) => {\n return {\n  activeWell, \n  getLeaseLinesFromJSONDbReducer\n }\n}\n\nexport default connect(mapStateToProps)(ExistingPolyLines)","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/ExistingLeaseLines.js",["356","357","358","359","360","361","362","363","364","365","366","367"],"import React, { useEffect, useState } from \"react\"\nimport { connect } from \"react-redux\"\n\nimport Container from \"react-bootstrap/esm/Container\"\nimport Form from \"react-bootstrap/Form\"\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\nimport Button from \"react-bootstrap/Button\"\n\nimport 'react-datasheet/lib/react-datasheet.css'\nimport ReactDataSheet from \"react-datasheet\"\nimport { get } from \"lodash\"\n\nconst ExistingLeaseLines = ({getLeaseLinesFromJSONDbReducer, activeWell}) => {\n  const [leaseLines, setLeaseLines] = useState([])\n  const [grid, setGrid] = useState([])\n\n  useEffect(()=>{\n    if (getLeaseLinesFromJSONDbReducer.status === \"received\") {\n      let leaseLinesFromReducerCopy = [...getLeaseLinesFromJSONDbReducer.response]\n      setLeaseLines(leaseLinesFromReducerCopy)\n    }\n  },[getLeaseLinesFromJSONDbReducer.status])\n\n  const renderMain = () => {\n    if (getLeaseLinesFromJSONDbReducer.status === \"received\") {\n      const {operator, rig, well } = activeWell.response\n      return (\n        <React.Fragment>\n          {/* <h3 className=\"my-4\">{operator} - {rig} - {well}</h3> */}\n          <ReactDataSheet data = {getLeaseLinesFromJSONDbReducer.response} valueRenderer = {cell => cell.value} width></ReactDataSheet>\n        </React.Fragment>\n      )\n    }\n  }\n\n  if (getLeaseLinesFromJSONDbReducer.status === \"received\") {\n    return (\n      <Container>\n        {renderMain()}\n      </Container>\n    )\n  } else {\n        return \"error\"\n    }\n}\n\nconst mapStateToProps = ({activeWell, getLeaseLinesFromJSONDbReducer}) => {\n return {\n  activeWell, \n  getLeaseLinesFromJSONDbReducer\n }\n}\n\nexport default connect(mapStateToProps)(ExistingLeaseLines)","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/postHardLinesToJSONDbReducer.js",["368"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getWellsWithHardLinesFromJSONDbReducer.js",["369"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/PolyLines.js",["370","371","372","373","374"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/LeaseLines.js",["375","376","377"],"import React, { useState, useEffect } from \"react\"\n//bootstrap\nimport Container from \"react-bootstrap/esm/Container\";\nimport Form from \"react-bootstrap/Form\"\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\nimport Button from \"react-bootstrap/Button\"\n\nimport 'react-datasheet/lib/react-datasheet.css';\nimport { connect } from \"react-redux\"\nimport ReactDataSheet from 'react-datasheet';\n\n// actionCreators\nimport saveLeaseLinesToReduxStore from \"../ActionCreators/saveLeaseLinesToReduxStore\"\nimport postLeaseLinesToJSONDb from \"../ActionCreators/postLeaseLinesToJSONDb\"\n\n\nconst LeaseLines = ({activeWell, saveLeaseLinesToReduxStore, postLeaseLinesToJSONDb}) => {\n  const {operator, rig, well, county, usState, northing, easting} = activeWell.response\n  // set up initial grid\n  // create local state to setGrid\n  // renderWellHeader {if (either activeWell or saveWellInfoToRedux)} then destructure out the rig, wellname, operator\n  // render out ReactData sheet data = {grid} valueRenderer={cell=> cell.value} onCellsChanged={onCellsChanged}\n  // render submit button return row col xs={10} className = \"my-4\" button variant=\"info' onClick = handleSubmit\n  // handlesubmit = postLeaseLinesToJSONDb saveHardLinesToRedux\n  // addRows: newGrid =  [...grid, addedRow] setGrid(newGrid)\n\n  const initialGrid = [\n    [{value: \"\", readOnly: true, width: \"7rem\"}, {value: \"Northing\", readOnly: true, width: \"7rem\"}, {value:\"Easting\", readOnly: true, width: \"7rem\"}],\n    [{value: 1, readOnly: true}, {value: 0}, {value: 0}],\n    [{value: 2, readOnly: true}, {value: 0}, {value: 0}],\n    [{value: 3, readOnly: true}, {value: 0}, {value: 0}],\n    [{value: 4, readOnly: true}, {value: 0}, {value: 0}],\n    [{value: 5, readOnly: true}, {value: 0}, {value: 0}],\n    [{value: 6, readOnly: true}, {value: 0}, {value: 0}],\n    [{value: 7, readOnly: true}, {value: 0}, {value: 0}],\n    [{value: 8, readOnly: true}, {value: 0}, {value: 0}],\n    [{value: 9, readOnly: true}, {value: 0}, {value: 0}],\n  ]\n  const [grid, setGrid] = useState(initialGrid)\n\n  const renderWellHeader = () => {\n    if (activeWell.status === \"received\") {\n      // const {operator, rig, well} = activeWell.response\n      return <h3 className=\"my-4\">{operator} - {rig} - {well}</h3>\n    } else {\n      return \"No Well Data\"\n    }\n  }\n\n  const onCellsChanged = changes => {\n    const gridNew = grid.map(row => [...row])\n    changes.forEach(({cell, row, col, value}) => {\n      gridNew[row][col] = {...grid[row][col], value}\n    });\n    setGrid(gridNew);\n    \n  }\n\n  const handleSubmit = () => {\n    const wellInfoAndLeaseLines = {\n      operator,\n      rig, \n      well, \n      county,\n      usState, \n      northing,\n      easting,\n      grid\n    }\n    // const activeWell\n    // saveLeaseLinesToJSON \n    checkTest()\n    postLeaseLinesToJSONDb(wellInfoAndLeaseLines)\n    saveLeaseLinesToReduxStore(wellInfoAndLeaseLines)\n\n    \n  }\n\n  const checkTest = () => {\n    console.log(\"whyyy\")\n  }\n\n  const renderRowsButtons = () => {\n    return (\n      <Row>\n        <Col xs={10} className=\"my-4\">\n          <Button variant=\"success\" className=\"my-4\" onClick={handleSubmit}> \n            Submit\n          </Button>\n          <Button variant=\"primary\" className=\"ml-4\" onClick={addRow}>\n            Add a Row\n          </Button>\n          <Button variant=\"primary\" className=\"ml-4\" onClick={removeRow}>\n            Remove a Row\n          </Button>\n\n        </Col>\n      </Row>\n    )\n  }\n\n  const addRow = () => {\n    const gridLength = grid.length\n    const newRow = [{value: gridLength, readOnly: true}, {value: 0}, {value: 0}]\n    const newGrid = [...grid, newRow]\n    setGrid(newGrid)\n  }\n\n  const removeRow = () => {\n    const newGrid = [...grid]\n    newGrid.pop()\n    setGrid(newGrid)\n  }\n  \n\n  return (\n    <Container>\n      <Row>\n        <Col xs={10}>\n          {/* {renderWellHeader()} */}\n          <ReactDataSheet data={grid} valueRenderer={(cell)=> cell.value} onCellsChanged={onCellsChanged}/>\n          {renderRowsButtons()}\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nconst mapStateToProps = ({activeWell, postLeaseLinesToJSONDbReducer}) => {\n  return {\n    activeWell,\n    postLeaseLinesToJSONDbReducer,\n  }\n}\n\nexport default connect(mapStateToProps, {saveLeaseLinesToReduxStore, postLeaseLinesToJSONDb})(LeaseLines)","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getHardLinesFromJSONDb.js",["378"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/ExistingHardLines.js",["379","380","381","382","383","384","385","386","387","388","389","390"],"import React, { useEffect, useState } from \"react\"\nimport { connect } from \"react-redux\"\n\nimport Container from \"react-bootstrap/esm/Container\"\nimport Form from \"react-bootstrap/Form\"\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\nimport Button from \"react-bootstrap/Button\"\n\nimport 'react-datasheet/lib/react-datasheet.css'\nimport ReactDataSheet from \"react-datasheet\"\nimport { get } from \"lodash\"\n\nconst ExistingHardLines = ({getHardLinesFromJSONDbReducer, activeWell}) => {\n  const [hardLines, setHardLines] = useState([])\n  const [grid, setGrid] = useState([])\n\n  useEffect(()=>{\n    if (getHardLinesFromJSONDbReducer.status === \"received\") {\n      let hardLinesFromReducerCopy = [...getHardLinesFromJSONDbReducer.response]\n      setHardLines(hardLinesFromReducerCopy)\n    }\n  },[getHardLinesFromJSONDbReducer.status])\n\n  const renderMain = () => {\n    if (getHardLinesFromJSONDbReducer.status === \"received\") {\n      const {operator, rig, well } = activeWell.response\n      return (\n        <React.Fragment>\n          {/* <h3 className=\"my-4\">{operator} - {rig} - {well}</h3> */}\n          <ReactDataSheet data = {getHardLinesFromJSONDbReducer.response} valueRenderer = {cell => cell.value} width></ReactDataSheet>\n        </React.Fragment>\n      )\n    }\n  }\n\n  if (getHardLinesFromJSONDbReducer.status === \"received\") {\n    return (\n      <Container>\n        {renderMain()}\n      </Container>\n    )\n  } else {\n        return \"error\"\n    }\n}\n\nconst mapStateToProps = ({activeWell, getHardLinesFromJSONDbReducer}) => {\n return {\n  activeWell, \n  getHardLinesFromJSONDbReducer\n }\n}\n\nexport default connect(mapStateToProps)(ExistingHardLines)","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/HardLines.js",["391","392","393"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getWellsWithHardLinesFromJSONDb.js",["394"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/saveHardLinesToReduxStoreReducer.js",["395"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/saveSurveysToReduxStore.js",["396"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/postLeaseLinesToJSONDb.js",["397"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/APIs/wells.js",[],{"ruleId":"398","severity":1,"message":"399","line":5,"column":8,"nodeType":"400","messageId":"401","endLine":5,"endColumn":9},{"ruleId":"402","severity":1,"message":"403","line":7,"column":3,"nodeType":"404","endLine":30,"endColumn":5},{"ruleId":"398","severity":1,"message":"405","line":13,"column":13,"nodeType":"400","messageId":"401","endLine":13,"endColumn":21},{"ruleId":"406","replacedBy":"407"},{"ruleId":"408","replacedBy":"409"},{"ruleId":"406","replacedBy":"410"},{"ruleId":"408","replacedBy":"411"},{"ruleId":"402","severity":1,"message":"403","line":10,"column":3,"nodeType":"404","endLine":22,"endColumn":5},{"ruleId":"402","severity":1,"message":"403","line":11,"column":1,"nodeType":"404","endLine":22,"endColumn":2},{"ruleId":"406","replacedBy":"412"},{"ruleId":"408","replacedBy":"413"},{"ruleId":"402","severity":1,"message":"403","line":10,"column":3,"nodeType":"404","endLine":21,"endColumn":4},{"ruleId":"406","replacedBy":"414"},{"ruleId":"408","replacedBy":"415"},{"ruleId":"402","severity":1,"message":"403","line":11,"column":1,"nodeType":"404","endLine":22,"endColumn":2},{"ruleId":"402","severity":1,"message":"403","line":11,"column":1,"nodeType":"404","endLine":23,"endColumn":2},{"ruleId":"402","severity":1,"message":"403","line":5,"column":3,"nodeType":"404","endLine":23,"endColumn":5},{"ruleId":"402","severity":1,"message":"403","line":9,"column":1,"nodeType":"404","endLine":39,"endColumn":2},{"ruleId":"402","severity":1,"message":"403","line":4,"column":1,"nodeType":"404","endLine":19,"endColumn":3},{"ruleId":"402","severity":1,"message":"403","line":4,"column":1,"nodeType":"404","endLine":20,"endColumn":2},{"ruleId":"402","severity":1,"message":"403","line":1,"column":1,"nodeType":"404","endLine":7,"endColumn":2},{"ruleId":"398","severity":1,"message":"416","line":1,"column":17,"nodeType":"400","messageId":"401","endLine":1,"endColumn":26},{"ruleId":"398","severity":1,"message":"417","line":1,"column":28,"nodeType":"400","messageId":"401","endLine":1,"endColumn":36},{"ruleId":"398","severity":1,"message":"418","line":5,"column":8,"nodeType":"400","messageId":"401","endLine":5,"endColumn":12},{"ruleId":"398","severity":1,"message":"419","line":6,"column":8,"nodeType":"400","messageId":"401","endLine":6,"endColumn":11},{"ruleId":"398","severity":1,"message":"420","line":7,"column":8,"nodeType":"400","messageId":"401","endLine":7,"endColumn":11},{"ruleId":"398","severity":1,"message":"421","line":8,"column":8,"nodeType":"400","messageId":"401","endLine":8,"endColumn":14},{"ruleId":"398","severity":1,"message":"422","line":11,"column":8,"nodeType":"400","messageId":"401","endLine":11,"endColumn":22},{"ruleId":"398","severity":1,"message":"423","line":13,"column":10,"nodeType":"400","messageId":"401","endLine":13,"endColumn":18},{"ruleId":"398","severity":1,"message":"424","line":14,"column":8,"nodeType":"400","messageId":"401","endLine":14,"endColumn":31},{"ruleId":"402","severity":1,"message":"403","line":10,"column":1,"nodeType":"404","endLine":21,"endColumn":2},{"ruleId":"398","severity":1,"message":"399","line":12,"column":8,"nodeType":"400","messageId":"401","endLine":12,"endColumn":9},{"ruleId":"425","severity":1,"message":"426","line":47,"column":6,"nodeType":"427","endLine":47,"endColumn":8,"suggestions":"428"},{"ruleId":"398","severity":1,"message":"429","line":51,"column":9,"nodeType":"400","messageId":"401","endLine":51,"endColumn":22},{"ruleId":"430","severity":1,"message":"431","line":58,"column":54,"nodeType":"432","endLine":58,"endColumn":90},{"ruleId":"398","severity":1,"message":"433","line":16,"column":8,"nodeType":"400","messageId":"401","endLine":16,"endColumn":18},{"ruleId":"398","severity":1,"message":"434","line":17,"column":8,"nodeType":"400","messageId":"401","endLine":17,"endColumn":26},{"ruleId":"398","severity":1,"message":"435","line":18,"column":8,"nodeType":"400","messageId":"401","endLine":18,"endColumn":29},{"ruleId":"398","severity":1,"message":"436","line":25,"column":8,"nodeType":"400","messageId":"401","endLine":25,"endColumn":30},{"ruleId":"398","severity":1,"message":"437","line":27,"column":10,"nodeType":"400","messageId":"401","endLine":27,"endColumn":18},{"ruleId":"398","severity":1,"message":"438","line":27,"column":20,"nodeType":"400","messageId":"401","endLine":27,"endColumn":31},{"ruleId":"425","severity":1,"message":"439","line":52,"column":6,"nodeType":"427","endLine":52,"endColumn":8,"suggestions":"440"},{"ruleId":"398","severity":1,"message":"441","line":54,"column":9,"nodeType":"400","messageId":"401","endLine":54,"endColumn":28},{"ruleId":"442","severity":1,"message":"443","line":55,"column":27,"nodeType":"444","messageId":"445","endLine":55,"endColumn":29},{"ruleId":"402","severity":1,"message":"403","line":10,"column":1,"nodeType":"404","endLine":21,"endColumn":2},{"ruleId":"398","severity":1,"message":"446","line":1,"column":10,"nodeType":"400","messageId":"401","endLine":1,"endColumn":13},{"ruleId":"398","severity":1,"message":"447","line":2,"column":8,"nodeType":"400","messageId":"401","endLine":2,"endColumn":13},{"ruleId":"398","severity":1,"message":"448","line":3,"column":8,"nodeType":"400","messageId":"401","endLine":3,"endColumn":26},{"ruleId":"402","severity":1,"message":"403","line":8,"column":1,"nodeType":"404","endLine":37,"endColumn":2},{"ruleId":"449","severity":1,"message":"450","line":21,"column":37,"nodeType":"451","messageId":"452","endLine":21,"endColumn":39},{"ruleId":"449","severity":1,"message":"450","line":21,"column":84,"nodeType":"451","messageId":"452","endLine":21,"endColumn":86},{"ruleId":"402","severity":1,"message":"403","line":5,"column":1,"nodeType":"404","endLine":22,"endColumn":2},{"ruleId":"402","severity":1,"message":"403","line":4,"column":1,"nodeType":"404","endLine":20,"endColumn":2},{"ruleId":"402","severity":1,"message":"403","line":3,"column":1,"nodeType":"404","endLine":15,"endColumn":2},{"ruleId":"402","severity":1,"message":"403","line":1,"column":1,"nodeType":"404","endLine":16,"endColumn":2},{"ruleId":"402","severity":1,"message":"403","line":8,"column":1,"nodeType":"404","endLine":26,"endColumn":2},{"ruleId":"402","severity":1,"message":"403","line":23,"column":1,"nodeType":"404","endLine":34,"endColumn":2},{"ruleId":"402","severity":1,"message":"403","line":10,"column":1,"nodeType":"404","endLine":21,"endColumn":2},{"ruleId":"402","severity":1,"message":"403","line":10,"column":1,"nodeType":"404","endLine":28,"endColumn":2},{"ruleId":"398","severity":1,"message":"437","line":27,"column":10,"nodeType":"400","messageId":"401","endLine":27,"endColumn":18},{"ruleId":"398","severity":1,"message":"438","line":27,"column":20,"nodeType":"400","messageId":"401","endLine":27,"endColumn":31},{"ruleId":"425","severity":1,"message":"453","line":48,"column":5,"nodeType":"427","endLine":48,"endColumn":12,"suggestions":"454"},{"ruleId":"425","severity":1,"message":"439","line":52,"column":6,"nodeType":"427","endLine":52,"endColumn":8,"suggestions":"455"},{"ruleId":"442","severity":1,"message":"443","line":55,"column":27,"nodeType":"444","messageId":"445","endLine":55,"endColumn":29},{"ruleId":"402","severity":1,"message":"403","line":9,"column":1,"nodeType":"404","endLine":20,"endColumn":2},{"ruleId":"398","severity":1,"message":"456","line":1,"column":10,"nodeType":"400","messageId":"401","endLine":1,"endColumn":17},{"ruleId":"402","severity":1,"message":"403","line":11,"column":1,"nodeType":"404","endLine":22,"endColumn":2},{"ruleId":"402","severity":1,"message":"403","line":4,"column":1,"nodeType":"404","endLine":30,"endColumn":3},{"ruleId":"402","severity":1,"message":"403","line":5,"column":3,"nodeType":"404","endLine":30,"endColumn":4},{"ruleId":"402","severity":1,"message":"403","line":10,"column":1,"nodeType":"404","endLine":21,"endColumn":2},{"ruleId":"402","severity":1,"message":"403","line":10,"column":1,"nodeType":"404","endLine":21,"endColumn":2},{"ruleId":"402","severity":1,"message":"403","line":7,"column":1,"nodeType":"404","endLine":25,"endColumn":2},{"ruleId":"402","severity":1,"message":"403","line":12,"column":1,"nodeType":"404","endLine":23,"endColumn":2},{"ruleId":"402","severity":1,"message":"403","line":8,"column":1,"nodeType":"404","endLine":26,"endColumn":2},{"ruleId":"398","severity":1,"message":"418","line":5,"column":8,"nodeType":"400","messageId":"401","endLine":5,"endColumn":12},{"ruleId":"398","severity":1,"message":"419","line":6,"column":8,"nodeType":"400","messageId":"401","endLine":6,"endColumn":11},{"ruleId":"398","severity":1,"message":"420","line":7,"column":8,"nodeType":"400","messageId":"401","endLine":7,"endColumn":11},{"ruleId":"398","severity":1,"message":"421","line":8,"column":8,"nodeType":"400","messageId":"401","endLine":8,"endColumn":14},{"ruleId":"398","severity":1,"message":"457","line":17,"column":10,"nodeType":"400","messageId":"401","endLine":17,"endColumn":14},{"ruleId":"398","severity":1,"message":"458","line":17,"column":16,"nodeType":"400","messageId":"401","endLine":17,"endColumn":23},{"ruleId":"425","severity":1,"message":"459","line":25,"column":5,"nodeType":"427","endLine":25,"endColumn":41,"suggestions":"460"},{"ruleId":"398","severity":1,"message":"461","line":27,"column":7,"nodeType":"400","messageId":"401","endLine":27,"endColumn":22},{"ruleId":"402","severity":1,"message":"403","line":12,"column":1,"nodeType":"404","endLine":23,"endColumn":2},{"ruleId":"402","severity":1,"message":"403","line":8,"column":1,"nodeType":"404","endLine":33,"endColumn":2},{"ruleId":"398","severity":1,"message":"418","line":5,"column":8,"nodeType":"400","messageId":"401","endLine":5,"endColumn":12},{"ruleId":"398","severity":1,"message":"419","line":6,"column":8,"nodeType":"400","messageId":"401","endLine":6,"endColumn":11},{"ruleId":"398","severity":1,"message":"420","line":7,"column":8,"nodeType":"400","messageId":"401","endLine":7,"endColumn":11},{"ruleId":"398","severity":1,"message":"421","line":8,"column":8,"nodeType":"400","messageId":"401","endLine":8,"endColumn":14},{"ruleId":"398","severity":1,"message":"457","line":16,"column":10,"nodeType":"400","messageId":"401","endLine":16,"endColumn":14},{"ruleId":"398","severity":1,"message":"458","line":16,"column":16,"nodeType":"400","messageId":"401","endLine":16,"endColumn":23},{"ruleId":"425","severity":1,"message":"462","line":23,"column":5,"nodeType":"427","endLine":23,"endColumn":43,"suggestions":"463"},{"ruleId":"398","severity":1,"message":"464","line":40,"column":9,"nodeType":"400","messageId":"401","endLine":40,"endColumn":18},{"ruleId":"398","severity":1,"message":"465","line":42,"column":7,"nodeType":"400","messageId":"401","endLine":42,"endColumn":20},{"ruleId":"398","severity":1,"message":"416","line":1,"column":17,"nodeType":"400","messageId":"401","endLine":1,"endColumn":26},{"ruleId":"398","severity":1,"message":"417","line":1,"column":28,"nodeType":"400","messageId":"401","endLine":1,"endColumn":36},{"ruleId":"398","severity":1,"message":"418","line":5,"column":8,"nodeType":"400","messageId":"401","endLine":5,"endColumn":12},{"ruleId":"398","severity":1,"message":"421","line":8,"column":8,"nodeType":"400","messageId":"401","endLine":8,"endColumn":14},{"ruleId":"398","severity":1,"message":"422","line":11,"column":8,"nodeType":"400","messageId":"401","endLine":11,"endColumn":22},{"ruleId":"398","severity":1,"message":"418","line":5,"column":8,"nodeType":"400","messageId":"401","endLine":5,"endColumn":12},{"ruleId":"398","severity":1,"message":"419","line":6,"column":8,"nodeType":"400","messageId":"401","endLine":6,"endColumn":11},{"ruleId":"398","severity":1,"message":"420","line":7,"column":8,"nodeType":"400","messageId":"401","endLine":7,"endColumn":11},{"ruleId":"398","severity":1,"message":"421","line":8,"column":8,"nodeType":"400","messageId":"401","endLine":8,"endColumn":14},{"ruleId":"398","severity":1,"message":"446","line":12,"column":10,"nodeType":"400","messageId":"401","endLine":12,"endColumn":13},{"ruleId":"398","severity":1,"message":"466","line":15,"column":10,"nodeType":"400","messageId":"401","endLine":15,"endColumn":20},{"ruleId":"398","severity":1,"message":"457","line":16,"column":10,"nodeType":"400","messageId":"401","endLine":16,"endColumn":14},{"ruleId":"398","severity":1,"message":"458","line":16,"column":16,"nodeType":"400","messageId":"401","endLine":16,"endColumn":23},{"ruleId":"425","severity":1,"message":"467","line":23,"column":5,"nodeType":"427","endLine":23,"endColumn":44,"suggestions":"468"},{"ruleId":"398","severity":1,"message":"469","line":27,"column":14,"nodeType":"400","messageId":"401","endLine":27,"endColumn":22},{"ruleId":"398","severity":1,"message":"470","line":27,"column":24,"nodeType":"400","messageId":"401","endLine":27,"endColumn":27},{"ruleId":"398","severity":1,"message":"471","line":27,"column":29,"nodeType":"400","messageId":"401","endLine":27,"endColumn":33},{"ruleId":"402","severity":1,"message":"403","line":10,"column":3,"nodeType":"404","endLine":21,"endColumn":4},{"ruleId":"402","severity":1,"message":"403","line":11,"column":1,"nodeType":"404","endLine":22,"endColumn":2},{"ruleId":"398","severity":1,"message":"416","line":1,"column":17,"nodeType":"400","messageId":"401","endLine":1,"endColumn":26},{"ruleId":"398","severity":1,"message":"417","line":1,"column":28,"nodeType":"400","messageId":"401","endLine":1,"endColumn":36},{"ruleId":"398","severity":1,"message":"418","line":5,"column":8,"nodeType":"400","messageId":"401","endLine":5,"endColumn":12},{"ruleId":"398","severity":1,"message":"421","line":8,"column":8,"nodeType":"400","messageId":"401","endLine":8,"endColumn":14},{"ruleId":"398","severity":1,"message":"422","line":11,"column":8,"nodeType":"400","messageId":"401","endLine":11,"endColumn":22},{"ruleId":"398","severity":1,"message":"416","line":1,"column":27,"nodeType":"400","messageId":"401","endLine":1,"endColumn":36},{"ruleId":"398","severity":1,"message":"418","line":4,"column":8,"nodeType":"400","messageId":"401","endLine":4,"endColumn":12},{"ruleId":"398","severity":1,"message":"472","line":42,"column":9,"nodeType":"400","messageId":"401","endLine":42,"endColumn":25},{"ruleId":"402","severity":1,"message":"403","line":5,"column":3,"nodeType":"404","endLine":29,"endColumn":4},{"ruleId":"398","severity":1,"message":"418","line":5,"column":8,"nodeType":"400","messageId":"401","endLine":5,"endColumn":12},{"ruleId":"398","severity":1,"message":"419","line":6,"column":8,"nodeType":"400","messageId":"401","endLine":6,"endColumn":11},{"ruleId":"398","severity":1,"message":"420","line":7,"column":8,"nodeType":"400","messageId":"401","endLine":7,"endColumn":11},{"ruleId":"398","severity":1,"message":"421","line":8,"column":8,"nodeType":"400","messageId":"401","endLine":8,"endColumn":14},{"ruleId":"398","severity":1,"message":"446","line":12,"column":10,"nodeType":"400","messageId":"401","endLine":12,"endColumn":13},{"ruleId":"398","severity":1,"message":"473","line":15,"column":10,"nodeType":"400","messageId":"401","endLine":15,"endColumn":19},{"ruleId":"398","severity":1,"message":"457","line":16,"column":10,"nodeType":"400","messageId":"401","endLine":16,"endColumn":14},{"ruleId":"398","severity":1,"message":"458","line":16,"column":16,"nodeType":"400","messageId":"401","endLine":16,"endColumn":23},{"ruleId":"425","severity":1,"message":"474","line":23,"column":5,"nodeType":"427","endLine":23,"endColumn":43,"suggestions":"475"},{"ruleId":"398","severity":1,"message":"469","line":27,"column":14,"nodeType":"400","messageId":"401","endLine":27,"endColumn":22},{"ruleId":"398","severity":1,"message":"470","line":27,"column":24,"nodeType":"400","messageId":"401","endLine":27,"endColumn":27},{"ruleId":"398","severity":1,"message":"471","line":27,"column":29,"nodeType":"400","messageId":"401","endLine":27,"endColumn":33},{"ruleId":"398","severity":1,"message":"416","line":1,"column":27,"nodeType":"400","messageId":"401","endLine":1,"endColumn":36},{"ruleId":"398","severity":1,"message":"418","line":4,"column":8,"nodeType":"400","messageId":"401","endLine":4,"endColumn":12},{"ruleId":"398","severity":1,"message":"472","line":42,"column":9,"nodeType":"400","messageId":"401","endLine":42,"endColumn":25},{"ruleId":"402","severity":1,"message":"403","line":10,"column":1,"nodeType":"404","endLine":28,"endColumn":2},{"ruleId":"402","severity":1,"message":"403","line":10,"column":3,"nodeType":"404","endLine":21,"endColumn":4},{"ruleId":"402","severity":1,"message":"403","line":6,"column":3,"nodeType":"404","endLine":23,"endColumn":4},{"ruleId":"402","severity":1,"message":"403","line":7,"column":3,"nodeType":"404","endLine":25,"endColumn":4},"no-unused-vars","'_' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'response' is assigned a value but never used.","no-native-reassign",["476"],"no-negated-in-lhs",["477"],["476"],["477"],["476"],["477"],["476"],["477"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'Form' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Button' is defined but never used.","'ReactDataSheet' is defined but never used.","'isNumber' is defined but never used.","'saveSurveysToReduxStore' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getWellsFromJSONDb', 'getWellsWithHardLinesFromJSONDb', 'getWellsWithLeaseLinesFromJSONDb', and 'getWellsWithSurveysFromJSONDb'. Either include them or remove the dependency array. If 'getWellsFromJSONDb' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["478"],"'renderedWells' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'LeaseLines' is defined but never used.","'ExistingLeaseLines' is defined but never used.","'savePlansToReduxStore' is defined but never used.","'getHardLinesFromJSONDb' is defined but never used.","'editGrid' is assigned a value but never used.","'setEditGrid' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleAddRows'. Either include it or remove the dependency array.",["479"],"'performCalculations' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'get' is defined but never used.","'wells' is defined but never used.","'getWellsFromJSONDb' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'performCalculations'. Either include it or remove the dependency array.",["480"],["481"],"'initial' is defined but never used.","'grid' is assigned a value but never used.","'setGrid' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getSurveysFromJSONDbReducer.response'. Either include it or remove the dependency array.",["482"],"'gridFromSurveys' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getWellPlansFromJSONDbReducer.response'. Either include it or remove the dependency array.",["483"],"'plansCopy' is assigned a value but never used.","'gridFromPlans' is assigned a value but never used.","'leaseLines' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getLeaseLinesFromJSONDbReducer.response'. Either include it or remove the dependency array.",["484"],"'operator' is assigned a value but never used.","'rig' is assigned a value but never used.","'well' is assigned a value but never used.","'renderWellHeader' is assigned a value but never used.","'hardLines' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getHardLinesFromJSONDbReducer.response'. Either include it or remove the dependency array.",["485"],"no-global-assign","no-unsafe-negation",{"desc":"486","fix":"487"},{"desc":"488","fix":"489"},{"desc":"490","fix":"491"},{"desc":"488","fix":"492"},{"desc":"493","fix":"494"},{"desc":"495","fix":"496"},{"desc":"497","fix":"498"},{"desc":"499","fix":"500"},"Update the dependencies array to be: [getWellsFromJSONDb, getWellsWithHardLinesFromJSONDb, getWellsWithLeaseLinesFromJSONDb, getWellsWithSurveysFromJSONDb]",{"range":"501","text":"502"},"Update the dependencies array to be: [handleAddRows]",{"range":"503","text":"504"},"Update the dependencies array to be: [input, performCalculations]",{"range":"505","text":"506"},{"range":"507","text":"504"},"Update the dependencies array to be: [getSurveysFromJSONDbReducer.response, getSurveysFromJSONDbReducer.status]",{"range":"508","text":"509"},"Update the dependencies array to be: [getWellPlansFromJSONDbReducer.response, getWellPlansFromJSONDbReducer.status]",{"range":"510","text":"511"},"Update the dependencies array to be: [getLeaseLinesFromJSONDbReducer.response, getLeaseLinesFromJSONDbReducer.status]",{"range":"512","text":"513"},"Update the dependencies array to be: [getHardLinesFromJSONDbReducer.response, getHardLinesFromJSONDbReducer.status]",{"range":"514","text":"515"},[2449,2451],"[getWellsFromJSONDb, getWellsWithHardLinesFromJSONDb, getWellsWithLeaseLinesFromJSONDb, getWellsWithSurveysFromJSONDb]",[2703,2705],"[handleAddRows]",[2813,2820],"[input, performCalculations]",[2868,2870],[920,956],"[getSurveysFromJSONDbReducer.response, getSurveysFromJSONDbReducer.status]",[838,876],"[getWellPlansFromJSONDbReducer.response, getWellPlansFromJSONDbReducer.status]",[821,860],"[getLeaseLinesFromJSONDbReducer.response, getLeaseLinesFromJSONDbReducer.status]",[812,850],"[getHardLinesFromJSONDbReducer.response, getHardLinesFromJSONDbReducer.status]"]