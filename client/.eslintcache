[{"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Components/Home.js":"1","/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/ActionCreators/types.js":"2","/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Reducers/wellsReducer.js":"3","/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Reducers/postPlansToJSONdb.js":"4","/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Reducers/selectWellFromReduxStoreReducer.js":"5","/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Components/App.js":"6","/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Components/Plans.js":"7","/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Components/ExistingWellPlans.js":"8","/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/ActionCreators/setActiveWell.js":"9","/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/ActionCreators/saveWellPlansToJSON.js":"10","/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/APIs/wells.js":"11","/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/ActionCreators/postNewWellToJSONdb.js":"12","/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/ActionCreators/saveNewWellToReduxStore.js":"13","/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Reducers/index.js":"14","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/App.js":"15","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/types.js":"16","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/Plans.js":"17","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/ExistingPlans.js":"18","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/Home.js":"19","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/saveWellInfoToReduxStore.js":"20","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/saveWellInfoToReduxStoreReducer.js":"21","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/postWellInfoToJSONDbReducer.js":"22","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/APIs/wells.js":"23","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/index.js":"24","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getWellsFromJSONDbReducer.js":"25","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getWellsFromJSONDb.js":"26","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/postWellInfoToJSONDb.js":"27","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/saveActiveWellToReduxStoreReducer.js":"28","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/saveActiveWellToReduxStore.js":"29","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/Surveys.js":"30","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/LeaseLines.js":"31","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/postPlansToJSONDbReducer.js":"32","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/postPlansToJSONDb.js":"33","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/TVD.js":"34","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/NS.js":"35","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/SECT.js":"36","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/RF.js":"37","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/savePlansToReduxStoreReducer.js":"38","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/savePlansToReduxStore.js":"39","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getWellPlansFromJSONDbReducer.js":"40","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getWellPlansFromJSONDb.js":"41","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/index.js":"42","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/DLS.js":"43","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/DLC.js":"44","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/EW.js":"45","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/saveLeaseLinesToReduxStoreReducer.js":"46"},{"size":4248,"mtime":1607360419321,"results":"47","hashOfConfig":"48"},{"size":679,"mtime":1607360175845,"results":"49","hashOfConfig":"48"},{"size":665,"mtime":1607356185886,"results":"50","hashOfConfig":"48"},{"size":335,"mtime":1607288385754,"results":"51","hashOfConfig":"48"},{"size":310,"mtime":1607346221844,"results":"52","hashOfConfig":"48"},{"size":1457,"mtime":1607356502742,"results":"53","hashOfConfig":"48"},{"size":5185,"mtime":1607357108715,"results":"54","hashOfConfig":"48"},{"size":1824,"mtime":1607285843365,"results":"55","hashOfConfig":"48"},{"size":199,"mtime":1607052260455,"results":"56","hashOfConfig":"48"},{"size":327,"mtime":1607265174112,"results":"57","hashOfConfig":"48"},{"size":94,"mtime":1606780246113,"results":"58","hashOfConfig":"48"},{"size":259,"mtime":1607355751651,"results":"59","hashOfConfig":"48"},{"size":652,"mtime":1607360107412,"results":"60","hashOfConfig":"48"},{"size":492,"mtime":1607359728450,"results":"61","hashOfConfig":"48"},{"size":1968,"mtime":1607649316190,"results":"62","hashOfConfig":"63"},{"size":2441,"mtime":1607659263513,"results":"64","hashOfConfig":"63"},{"size":8911,"mtime":1607636613369,"results":"65","hashOfConfig":"63"},{"size":5303,"mtime":1607638976140,"results":"66","hashOfConfig":"63"},{"size":5661,"mtime":1607634122208,"results":"67","hashOfConfig":"63"},{"size":622,"mtime":1607563740710,"results":"68","hashOfConfig":"63"},{"size":705,"mtime":1607563251547,"results":"69","hashOfConfig":"63"},{"size":615,"mtime":1607486694229,"results":"70","hashOfConfig":"63"},{"size":94,"mtime":1606780246113,"results":"71","hashOfConfig":"63"},{"size":872,"mtime":1607607802217,"results":"72","hashOfConfig":"63"},{"size":626,"mtime":1607538953582,"results":"73","hashOfConfig":"63"},{"size":555,"mtime":1607387052358,"results":"74","hashOfConfig":"63"},{"size":832,"mtime":1607635248677,"results":"75","hashOfConfig":"63"},{"size":664,"mtime":1607633245513,"results":"76","hashOfConfig":"63"},{"size":578,"mtime":1607633701228,"results":"77","hashOfConfig":"63"},{"size":5960,"mtime":1607485977688,"results":"78","hashOfConfig":"63"},{"size":2856,"mtime":1607660297917,"results":"79","hashOfConfig":"63"},{"size":584,"mtime":1607528546735,"results":"80","hashOfConfig":"63"},{"size":834,"mtime":1607636640928,"results":"81","hashOfConfig":"63"},{"size":627,"mtime":1607525617278,"results":"82","hashOfConfig":"63"},{"size":767,"mtime":1607526323173,"results":"83","hashOfConfig":"63"},{"size":1222,"mtime":1607526475495,"results":"84","hashOfConfig":"63"},{"size":196,"mtime":1607525301624,"results":"85","hashOfConfig":"63"},{"size":623,"mtime":1607523677659,"results":"86","hashOfConfig":"63"},{"size":523,"mtime":1607616565129,"results":"87","hashOfConfig":"63"},{"size":637,"mtime":1607636656362,"results":"88","hashOfConfig":"63"},{"size":1357,"mtime":1607620545961,"results":"89","hashOfConfig":"63"},{"size":679,"mtime":1606780516169,"results":"90","hashOfConfig":"63"},{"size":478,"mtime":1607525889497,"results":"91","hashOfConfig":"63"},{"size":462,"mtime":1607524691387,"results":"92","hashOfConfig":"63"},{"size":603,"mtime":1607526149901,"results":"93","hashOfConfig":"63"},{"size":694,"mtime":1607659948536,"results":"94","hashOfConfig":"63"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"yhp794",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5r6a9f",{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"138"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"145"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"132"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"132"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"132"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"132"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"132"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"181"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"132"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"138"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"132"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"177"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"204"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"132"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Components/Home.js",["212","213","214","215"],"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/ActionCreators/types.js",[],"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Reducers/wellsReducer.js",["216","217","218"],"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Reducers/postPlansToJSONdb.js",["219"],"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Reducers/selectWellFromReduxStoreReducer.js",["220"],"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Components/App.js",[],"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Components/Plans.js",["221","222","223","224"],"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Components/ExistingWellPlans.js",["225","226","227","228","229","230","231"],"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/ActionCreators/setActiveWell.js",["232"],"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/ActionCreators/saveWellPlansToJSON.js",["233"],"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/APIs/wells.js",[],"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/ActionCreators/postNewWellToJSONdb.js",["234","235"],"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/ActionCreators/saveNewWellToReduxStore.js",["236","237"],"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Reducers/index.js",[],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/App.js",[],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/types.js",[],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/Plans.js",["238","239","240","241","242"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/ExistingPlans.js",["243","244","245","246","247","248","249","250","251"],"import React, { useEffect, useState } from \"react\"\nimport { connect } from \"react-redux\"\n\nimport Container from \"react-bootstrap/esm/Container\"\nimport Form from \"react-bootstrap/Form\"\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\nimport Button from \"react-bootstrap/Button\"\n\nimport 'react-datasheet/lib/react-datasheet.css'\nimport ReactDataSheet from \"react-datasheet\"\nimport getWellPlansFromJSONDb from \"../ActionCreators/getWellPlansFromJSONDb\"\n\nconst ExistingWellPlans = ({getWellPlansFromJSONDbReducer, activeWell}) => {\n  const [plans, setPlans] = useState([])\n  const [grid, setGrid] = useState([])\n  \n  useEffect(()=> {\n    if (getWellPlansFromJSONDbReducer.status === \"received\") {\n      let planFromReducerCopy = [...getWellPlansFromJSONDbReducer.response]\n      setPlans(planFromReducerCopy)\n    }\n  },[getWellPlansFromJSONDbReducer.status])\n    \n  \n\n  // useEffect(()=> {\n  //   createGridFromPlans();\n  // },[plans])\n\n  // const convertSurveyNumberStringsToNumbers = () => {\n  //   let plansFromReducerCopy = [...getWellPlansFromJSONDbReducer.response]\n  //   plansFromReducerCopy.map((survey, index) => {\n  //     plansFromReducerCopy[index].\n  //   })\n  //   console.log(getWellPlansFromJSONDbReducer.response)\n  // }\n  // convertSurveyNumberStringsToNumbers()\n\n  const plansCopy = [...plans]\n  // console.log(plansCopy)\n  let gridFromPlans = [[{value: '', readOnly: true, width: '3rem'}, {value: 'Measured Depth', readOnly: true, width: '10rem'}, {value: 'Inclination', readOnly: true, width: '7rem'}, {value: 'Azimuth', readOnly: true, width: '7rem'}, {value: 'TVD', readOnly: true, width: '7rem'}, {value: 'NS', readOnly: true, width: '7rem'}, {value: 'EW', readOnly: true, width: '7rem'}, {value: 'SECT', readOnly: true, width: '7rem'}, {value: 'DLS', readOnly: true, width: '7rem'}]]\n  // plansFromGrid = plansCopy.map(row => {\n  //   row.map(cell => {\n\n  //   })\n  // })\n\n  //   plansCopy.forEach((row, index) => {\n//     console.log(row)\n//     // const convertedRow = [\n//     //   {readOnly: true, value: row[0]}, \n//     //   {readOnly: true, value: row[1]},\n//     //   {readOnly: true, value: row[2]},\n//     //   {readOnly: true, value: row[3]},\n//     //   {readOnly: true, value: row[4]},\n//     //   {readOnly: true, value: row[5]},\n//     //   {readOnly: true, value: row[6]},\n//     //   {readOnly: true, value: row[7]},\n//     //   {readOnly: true, value: row[8]},\n//     // ]\n//     // gridFromPlans.push(convertedRow)\n//   })\n// setGrid(gridFromPlans)\n\n  // const createGridFromPlans = () => {\n  //   let gridFromPlans = [[{value: '', readOnly: true, width: '3rem'}, {value: 'Measured Depth', readOnly: true, width: '10rem'}, {value: 'Inclination', readOnly: true, width: '7rem'}, {value: 'Azimuth', readOnly: true, width: '7rem'}, {value: 'TVD', readOnly: true, width: '7rem'}, {value: 'NS', readOnly: true, width: '7rem'}, {value: 'EW', readOnly: true, width: '7rem'}, {value: 'SECT', readOnly: true, width: '7rem'}, {value: 'DLS', readOnly: true, width: '7rem'}]]\n  //   const plansCopy = [...plans]  \n  //   // const plansCopy = [...plans]\n  //   plansCopy.forEach((row, index) => { \n  //     const convertedRow = [\n  //       {readOnly: true, value: row[0]}, \n  //       {readOnly: true, value: row[1]},\n  //       {readOnly: true, value: row[2]},\n  //       {readOnly: true, value: row[3]},\n  //       {readOnly: true, value: row[4]},\n  //       {readOnly: true, value: row[5]},\n  //       {readOnly: true, value: row[6]},\n  //       {readOnly: true, value: row[7]},\n  //       {readOnly: true, value: row[8]},\n  //     ]\n  //     gridFromPlans.push(convertedRow)\n  //   })\n  //   console.log(gridFromPlans)\n  //   setGrid(gridFromPlans)\n  // }\n\n\n  // createGridFromPlans()\n\n\n  const renderMain = () => {\n    if (getWellPlansFromJSONDbReducer.status === \"received\") {\n      const { operator, rig, well } = activeWell.response\n      return (\n        <React.Fragment>\n          <h3 className=\"my-4\">{operator} - {rig} - {well}</h3>\n          <ReactDataSheet data={activeWell.response.grid} valueRenderer={cell => cell.value} width/>\n        </React.Fragment>\n      )\n    }\n  }\n  if (getWellPlansFromJSONDbReducer.status === \"received\") {\n\n    return (\n      <Container>\n        {renderMain()}\n      </Container>\n    ) \n  } else {\n    return \"error\"\n  }\n  \n\n\n\n  // return (\n  //   <Container>\n  //     <Col>EXISTING PLANS</Col>\n\n  //     <ReactDataSheet\n  //       data={grid}             \n  //       valueRenderer={(cell)=> cell.value}\n  //       onCellsChanged={onCellsChanged}\n  //     ></ReactDataSheet>\n  //     <Col>\n  //   <Button variant=\"primary\" className=\"mt-4 mb-4\" onClick={()=>addNewRow()}>Add a Row</Button>\n  //   <Button variant=\"danger\" className=\"my-4 ml-4\" onClick={()=>removeRow()}>Remove a Row</Button>\n  //   <Button variant=\"info\" className=\"my-4 ml-4\" onClick={()=>editPlans()}>Edit Plans</Button>\n  //   <Button variant=\"info\" className=\"my-4 ml-4\" onClick={()=>createNewPlan()}>Create New Plan</Button>\n    \n  //     </Col>\n  //   </Container>\n  // )\n}\n\nconst mapStateToProps = ({getWellPlansFromJSONDbReducer, activeWell, getWellsFromJSONDbReducer}) => {\n  return {\n    getWellPlansFromJSONDbReducer,\n    activeWell\n  }\n}\n\nexport default connect(mapStateToProps, {getWellPlansFromJSONDb})(ExistingWellPlans)",["252","253"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/Home.js",["254","255","256","257"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/saveWellInfoToReduxStore.js",["258"],"import { SAVE_WELL_INFO_TO_REDUX_STORE_REQUESTED,\n  SAVE_WELL_INFO_TO_REDUX_STORE_RECEIVED,\n  SAVE_WELL_INFO_TO_REDUX_STORE_FAILED } from './types';\n  \n  export default (wellInfo) => {\n    return async (dispatch, getState) => {\n      dispatch({\n        type: SAVE_WELL_INFO_TO_REDUX_STORE_REQUESTED,\n      });\n      try {\n        dispatch({\n          type: SAVE_WELL_INFO_TO_REDUX_STORE_RECEIVED,\n          payload: wellInfo,\n        });\n      } catch (error) {\n        console.log(error)\n        dispatch({\n          type: SAVE_WELL_INFO_TO_REDUX_STORE_FAILED,\n          payload: error,\n        });\n      }\n    };\n  };\n  ",["259","260"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/saveWellInfoToReduxStoreReducer.js",["261"],"import { SAVE_WELL_INFO_TO_REDUX_STORE_REQUESTED,\n  SAVE_WELL_INFO_TO_REDUX_STORE_RECEIVED,\n  SAVE_WELL_INFO_TO_REDUX_STORE_FAILED } from \"../ActionCreators/types\"\n\n  const INITIAL_STATE = {\n    response: {}, \n    status: \"\"\n  };\n\n  export default (state = INITIAL_STATE, { type, payload }) => {\n    \n    switch (type) {\n      case SAVE_WELL_INFO_TO_REDUX_STORE_REQUESTED:\n        return { ...state, status: 'waiting' };\n      case SAVE_WELL_INFO_TO_REDUX_STORE_RECEIVED:\n        return { ...state, response: payload, status: 'received' };\n      case SAVE_WELL_INFO_TO_REDUX_STORE_FAILED:\n        return { ...state, response: payload, status: 'failed' };\n      default:\n        return state;\n    }\n  };\n  ","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/postWellInfoToJSONDbReducer.js",["262"],"import { POST_WELLINFO_TO_JSONDB_REQUESTED,\n  POST_WELLINFO_TO_JSONDB_RECEIVED,\n  POST_WELLINFO_TO_JSONDB_FAILED } from \"../ActionCreators/types\"\n\nconst INITIAL_STATE = {\n  response: {},\n  status: \"\"\n}\n\nexport default (state = INITIAL_STATE, {type, payload}) => {\n  switch (type) {\n    case POST_WELLINFO_TO_JSONDB_REQUESTED:\n      return {...state, status: \"waiting\"}\n    case POST_WELLINFO_TO_JSONDB_RECEIVED:\n      return {...state, response: payload, status: \"received\"}\n    case POST_WELLINFO_TO_JSONDB_FAILED:\n      return {...state, response: payload, status: \"failed\"}\n    default:\n      return state;\n  }\n}",["263","264"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/APIs/wells.js",[],["265","266"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/index.js",[],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getWellsFromJSONDbReducer.js",["267"],"import { GET_WELLS_FROM_JSON_REQUESTED,\n  GET_WELLS_FROM_JSON_RECEIVED,\n  GET_WELLS_FROM_JSON_FAILED } from \"../ActionCreators/types\"\n\n  const INITIAL_STATE = {\n    response: {},\n    status: \"\"\n  }\n\n  export default (state = INITIAL_STATE, {type, payload}) => {\n    switch (type) {\n      case GET_WELLS_FROM_JSON_REQUESTED:\n        return {...state, status: \"waiting\"}\n      case GET_WELLS_FROM_JSON_RECEIVED:\n        return {...state, response: payload, status: \"received\"}    \n      case GET_WELLS_FROM_JSON_FAILED:\n        return {...state, response: payload, status: \"failed\"}\n      default:\n        return state\n    }\n  }","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getWellsFromJSONDb.js",["268"],"import wells from \"../APIs/wells\"\n\nimport { GET_WELLS_FROM_JSON_REQUESTED,\n  GET_WELLS_FROM_JSON_RECEIVED,\n  GET_WELLS_FROM_JSON_FAILED } from \"./types\"\n\n\nexport default () => {\n  return async dispatch => {\n    dispatch({\n      type: GET_WELLS_FROM_JSON_REQUESTED\n    })\n    try {\n      const response = await wells.get(\"/wells\")\n      dispatch({\n        type: GET_WELLS_FROM_JSON_RECEIVED,\n        payload: response.data\n      })\n    } catch (error) {\n      dispatch({\n        type: GET_WELLS_FROM_JSON_FAILED,\n        payload: error\n      })\n    }\n  }\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/postWellInfoToJSONDb.js",["269","270"],"import wells from \"../APIs/wells\"\n\nimport { POST_WELLINFO_TO_JSONDB_REQUESTED,\n  POST_WELLINFO_TO_JSONDB_RECEIVED,\n  POST_WELLINFO_TO_JSONDB_FAILED } from './types';\n  \n  export default (wellInfo) => {\n\n    return async (dispatch, getState) => {\n      // let wellList = getState().getWellsFromJSONDbReducer.response\n      // console.log('should get wellList next')\n      // console.log(wellList)\n      const response = await wells.post(\"/wells\", wellInfo)\n      dispatch({\n        type: POST_WELLINFO_TO_JSONDB_REQUESTED,\n      });\n      try {\n        dispatch({\n          type: POST_WELLINFO_TO_JSONDB_RECEIVED,\n          payload: wellInfo,\n        });\n      } catch (error) {\n        console.log(error)\n        dispatch({\n          type: POST_WELLINFO_TO_JSONDB_FAILED,\n          payload: error,\n        });\n      }\n    };\n  };\n  ","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/saveActiveWellToReduxStoreReducer.js",["271"],"import { SAVE_ACTIVE_WELL_TO_REDUX_STORE_RECEIVED,\n  SAVE_ACTIVE_WELL_TO_REDUX_STORE_REQUESTED,\n  SAVE_ACTIVE_WELL_TO_REDUX_STORE_FAILED\n } from \"../ActionCreators/types\"\n\nconst INITIAL_STATE = {\n  response: {},\n  status: \"\"\n}\n\nexport default (state = INITIAL_STATE, {type, payload}) => {\n  switch (type) {\n    case SAVE_ACTIVE_WELL_TO_REDUX_STORE_REQUESTED:\n      return {...state, status: \"waiting\"}\n    case SAVE_ACTIVE_WELL_TO_REDUX_STORE_RECEIVED:\n      return {...state, response: payload, status: \"received\"}\n    case SAVE_ACTIVE_WELL_TO_REDUX_STORE_FAILED:\n      return {...state, response: payload, status: \"failed\"}\n    default:\n      return state;\n  }\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/saveActiveWellToReduxStore.js",["272"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/Surveys.js",[],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/LeaseLines.js",["273","274","275"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/postPlansToJSONDbReducer.js",["276"],"import { POST_PLANS_TO_JSON_REQUESTED,\n  POST_PLANS_TO_JSON_RECEIVED,\n  POST_PLANS_TO_JSON_FAILED } from \"../ActionCreators/types\"\n\nconst INITIAL_STATE = {\n  response: {},\n  status: \"\"\n}\nexport default (state = INITIAL_STATE, {type, payload}) => {\n  switch (type) {\n    case POST_PLANS_TO_JSON_REQUESTED:\n      return {...state, status: \"waiting\"}\n    case POST_PLANS_TO_JSON_RECEIVED:\n      return {...state, response: payload, status: \"received\"}\n    case POST_PLANS_TO_JSON_FAILED:\n      return {...state, response: payload, status: \"failed\"}\n    default:\n      return state;\n  }\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/postPlansToJSONDb.js",["277"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/TVD.js",["278"],"import DLC from \"./DLC\"\nimport RF from \"./RF\"\n\nexport default (measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior, inclinationPrior, azimuthPrior, calculatedTVDPrior) => {\n  const converter = (Math.PI)/180\n\n  const calculatedDLC = DLC(inclinationPrior, inclinationCurrent, azimuthPrior, azimuthCurrent)\n\n  const calculatedRF = RF(measuredDepthPrior, measuredDepthCurrent, calculatedDLC)\n\n  const calculatedTVDCurrent = calculatedTVDPrior + calculatedRF * (Math.cos(inclinationPrior*converter) + Math.cos(inclinationCurrent*converter));\n\n  return (\n    parseFloat(calculatedTVDCurrent.toFixed(2))\n  )\n}",["279","280"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/NS.js",["281"],"import DLC from \"./DLC\"\nimport RF from \"./RF\"\n\nexport default (measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior, inclinationPrior, azimuthPrior, calculatedNorthingPrior) => {\n  const converter = (Math.PI)/180;\n  const converter2 = 0.00000001;\n\n  const calculatedDLC = DLC(inclinationPrior, inclinationCurrent, azimuthPrior, azimuthCurrent)\n\n  const calculatedRF = RF(measuredDepthPrior, measuredDepthCurrent, calculatedDLC)\n\n  const calculatedNorthingCurrent = (calculatedNorthingPrior+converter2) + calculatedRF * (Math.sin(inclinationPrior*converter)*Math.cos(azimuthPrior*converter)+ Math.sin(inclinationCurrent * converter) * Math.cos(azimuthCurrent*converter));\n\n  return (\n    parseFloat(calculatedNorthingCurrent.toFixed(2))\n\n  )\n} ",["282","283"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/SECT.js",["284"],"import EW from './EW';\nimport NS from './NS';\n\nexport default (measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior = 1, inclinationPrior = 2, azimuthPrior = 3, calculatedNorthingPrior = 0.02, calculatedEastingPrior = 0, index, vsDirection = 0) => {\n  const converter = (Math.PI)/180;\n  const converter2 = 0.00000001;\n\n  const calculatedEastingCurrent = EW(measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior, inclinationPrior, azimuthPrior, calculatedEastingPrior)\n\n  const calculatedNorthingCurrent = NS(measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior, inclinationPrior, azimuthPrior, calculatedNorthingPrior)\n\n  const closure = Math.atan2(calculatedEastingCurrent, calculatedNorthingCurrent + converter2) / converter\n\n  const determineClosure = () => {\n    if (closure < 0) {\n      return Math.cos(((360 + closure) - vsDirection) * converter)\n    } else {\n      return Math.cos((closure - vsDirection) * converter)\n    }\n  }\n\n  const HD = Math.sqrt(Math.pow(calculatedNorthingCurrent, 2) + Math.pow(calculatedEastingCurrent, 2))\n\n  const calculatedSect = HD * determineClosure()\n\n\n  return (\n    parseFloat(calculatedSect.toFixed(2))\n  )\n};\n","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/RF.js",["285"],"export default (measuredDepthPrior, measuredDepthCurrent, calculatedDLC) => {\n  return (\n    Math.tan(calculatedDLC/2)\n    *\n    ((measuredDepthCurrent - measuredDepthPrior) / calculatedDLC)\n  )\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/savePlansToReduxStoreReducer.js",["286"],"import { SAVE_PLANS_TO_REDUX_STORE_REQUESTED,\n  SAVE_PLANS_TO_REDUX_STORE_RECEIVED,\n  SAVE_PLANS_TO_REDUX_STORE_FAILED\n} from \"../ActionCreators/types\"\n\nconst INITIAL_STATE = {\n  response: {},\n  status: \"\"\n}\n\nexport default (state=INITIAL_STATE, {type, payload}) =>{\n  switch (type) {\n    case SAVE_PLANS_TO_REDUX_STORE_REQUESTED:\n      return {...state, status: \"waiting\"}\n    case SAVE_PLANS_TO_REDUX_STORE_RECEIVED:\n      return {...state, response: payload, status: \"received\"}\n    case SAVE_PLANS_TO_REDUX_STORE_FAILED:\n      return {...state, response: payload, status: \"failed\"}\n    default:\n      return state\n  }\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/savePlansToReduxStore.js",["287"],"import { SAVE_PLANS_TO_REDUX_STORE_REQUESTED,\n  SAVE_PLANS_TO_REDUX_STORE_RECEIVED,\n  SAVE_PLANS_TO_REDUX_STORE_FAILED\n} from \"./types\"\n\nexport default (plans) => {\n  return async (dispatch, getState) => {\n    dispatch({\n      type: SAVE_PLANS_TO_REDUX_STORE_REQUESTED\n    });\n    \n    try {\n      dispatch({\n        type: SAVE_PLANS_TO_REDUX_STORE_RECEIVED,\n        payload: plans,\n      });\n    } catch (error) {\n      dispatch({\n        type: SAVE_PLANS_TO_REDUX_STORE_FAILED,\n        payload: error\n      })\n    }\n  }\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getWellPlansFromJSONDbReducer.js",["288"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getWellPlansFromJSONDb.js",["289","290","291","292","293","294"],"import { get } from \"lodash\"\nimport wells from \"../APIs/wells\"\nimport getWellsFromJSONDb from \"./getWellsFromJSONDb\"\nimport { GET_WELL_PLANS_FROM_JSONDB_REQUESTED, \n  GET_WELL_PLANS_FROM_JSONDB_RECEIVED,\n  GET_WELL_PLANS_FROM_JSONDB_FAILED} from \"./types\"\n\nexport default (selectedWell) => {\n  return async (dispatch, getState) => {\n    \n    dispatch({\n      type: GET_WELL_PLANS_FROM_JSONDB_REQUESTED\n    })\n    try {\n      let result=null;\n      const wellList = getState().getWellsFromJSONDbReducer.response\n      const selectedWellConvertedToArray = selectedWell.split(\"-\").map(word => word.trim())\n      const selectedWellOperator = selectedWellConvertedToArray[0]\n      const selectedWell_Well = selectedWellConvertedToArray[2]\n      for (let well in wellList) {\n        if (wellList[well].operator == selectedWellOperator && wellList[well].well == selectedWell_Well) {\n          result = [...wellList[well].grid]\n        }\n      }\n      dispatch({\n        \n        type: GET_WELL_PLANS_FROM_JSONDB_RECEIVED,\n        payload: result\n      }) \n    } catch (error) {\n      \n      dispatch({\n        type: GET_WELL_PLANS_FROM_JSONDB_FAILED,\n        payload: error\n      })\n    }\n  }\n} \n\n\n    // have a well, for (well in getState.getWellsFromJSONDbReducer.response) {\n        // if (getState.getWellsFromJSONDbReducer.response[well].operator )\n    // }\n\n","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/index.js",[],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/DLS.js",["295"],"import DLC from \"./DLC\"\n\nexport default (measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior = 1, inclinationPrior = 2, azimuthPrior = 3 ) => {\n  const converter = (Math.PI)/180;\n\n  // calculate DLC\n  const calculatedDLC = DLC(inclinationPrior, inclinationCurrent, azimuthPrior, azimuthCurrent)\n\n  const calculatedDLS = ((calculatedDLC/converter)*100/(measuredDepthCurrent-measuredDepthPrior))\n\n  return (\n    parseFloat(calculatedDLS.toFixed(2))\n  )\n\n}",["296","297"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/DLC.js",["298"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/EW.js",["299"],"import DLC from \"./DLC\"\nimport RF from \"./RF\"\n\nexport default (measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior, inclinationPrior, azimuthPrior, calculatedEastingPrior) => {\n  const converter = (Math.PI)/180\n\n  const calculatedDLC = DLC(inclinationPrior, inclinationCurrent, azimuthPrior, azimuthCurrent)\n\n  const calculatedRF = RF(measuredDepthPrior, measuredDepthCurrent, calculatedDLC)\n\n  const calculatedEastingCurrent = (calculatedEastingPrior + calculatedRF *(Math.sin(inclinationPrior*converter)))\n\n  return (\n    parseFloat(calculatedEastingCurrent.toFixed(2))\n  )\n\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/saveLeaseLinesToReduxStoreReducer.js",["300","301"],{"ruleId":"302","severity":1,"message":"303","line":2,"column":8,"nodeType":"304","messageId":"305","endLine":2,"endColumn":9},{"ruleId":"302","severity":1,"message":"306","line":12,"column":8,"nodeType":"304","messageId":"305","endLine":12,"endColumn":22},{"ruleId":"307","severity":1,"message":"308","line":30,"column":5,"nodeType":"309","endLine":30,"endColumn":7,"suggestions":"310"},{"ruleId":"302","severity":1,"message":"311","line":121,"column":7,"nodeType":"304","messageId":"305","endLine":121,"endColumn":15},{"ruleId":"302","severity":1,"message":"312","line":2,"column":8,"nodeType":"304","messageId":"305","endLine":2,"endColumn":16},{"ruleId":"302","severity":1,"message":"313","line":3,"column":40,"nodeType":"304","messageId":"305","endLine":3,"endColumn":55},{"ruleId":"314","severity":1,"message":"315","line":10,"column":1,"nodeType":"316","endLine":21,"endColumn":2},{"ruleId":"314","severity":1,"message":"315","line":8,"column":1,"nodeType":"316","endLine":15,"endColumn":2},{"ruleId":"314","severity":1,"message":"315","line":9,"column":1,"nodeType":"316","endLine":16,"endColumn":3},{"ruleId":"302","severity":1,"message":"317","line":1,"column":27,"nodeType":"304","messageId":"305","endLine":1,"endColumn":36},{"ruleId":"302","severity":1,"message":"318","line":4,"column":8,"nodeType":"304","messageId":"305","endLine":4,"endColumn":12},{"ruleId":"302","severity":1,"message":"319","line":5,"column":8,"nodeType":"304","messageId":"305","endLine":5,"endColumn":11},{"ruleId":"302","severity":1,"message":"320","line":14,"column":8,"nodeType":"304","messageId":"305","endLine":14,"endColumn":20},{"ruleId":"302","severity":1,"message":"318","line":5,"column":8,"nodeType":"304","messageId":"305","endLine":5,"endColumn":12},{"ruleId":"302","severity":1,"message":"319","line":6,"column":8,"nodeType":"304","messageId":"305","endLine":6,"endColumn":11},{"ruleId":"302","severity":1,"message":"321","line":8,"column":8,"nodeType":"304","messageId":"305","endLine":8,"endColumn":14},{"ruleId":"302","severity":1,"message":"322","line":12,"column":8,"nodeType":"304","messageId":"305","endLine":12,"endColumn":31},{"ruleId":"302","severity":1,"message":"323","line":13,"column":8,"nodeType":"304","messageId":"305","endLine":13,"endColumn":25},{"ruleId":"302","severity":1,"message":"320","line":14,"column":8,"nodeType":"304","messageId":"305","endLine":14,"endColumn":20},{"ruleId":"302","severity":1,"message":"324","line":23,"column":9,"nodeType":"304","messageId":"305","endLine":23,"endColumn":20},{"ruleId":"302","severity":1,"message":"325","line":1,"column":8,"nodeType":"304","messageId":"305","endLine":1,"endColumn":13},{"ruleId":"314","severity":1,"message":"315","line":4,"column":1,"nodeType":"316","endLine":12,"endColumn":2},{"ruleId":"314","severity":1,"message":"315","line":4,"column":1,"nodeType":"316","endLine":9,"endColumn":2},{"ruleId":"302","severity":1,"message":"326","line":6,"column":11,"nodeType":"304","messageId":"305","endLine":6,"endColumn":19},{"ruleId":"302","severity":1,"message":"325","line":1,"column":8,"nodeType":"304","messageId":"305","endLine":1,"endColumn":13},{"ruleId":"314","severity":1,"message":"315","line":6,"column":3,"nodeType":"316","endLine":25,"endColumn":5},{"ruleId":"302","severity":1,"message":"327","line":27,"column":10,"nodeType":"304","messageId":"305","endLine":27,"endColumn":18},{"ruleId":"302","severity":1,"message":"328","line":27,"column":20,"nodeType":"304","messageId":"305","endLine":27,"endColumn":31},{"ruleId":"307","severity":1,"message":"329","line":52,"column":6,"nodeType":"309","endLine":52,"endColumn":8,"suggestions":"330"},{"ruleId":"302","severity":1,"message":"331","line":54,"column":9,"nodeType":"304","messageId":"305","endLine":54,"endColumn":28},{"ruleId":"332","severity":1,"message":"333","line":55,"column":27,"nodeType":"334","messageId":"335","endLine":55,"endColumn":29},{"ruleId":"302","severity":1,"message":"318","line":5,"column":8,"nodeType":"304","messageId":"305","endLine":5,"endColumn":12},{"ruleId":"302","severity":1,"message":"319","line":6,"column":8,"nodeType":"304","messageId":"305","endLine":6,"endColumn":11},{"ruleId":"302","severity":1,"message":"336","line":7,"column":8,"nodeType":"304","messageId":"305","endLine":7,"endColumn":11},{"ruleId":"302","severity":1,"message":"321","line":8,"column":8,"nodeType":"304","messageId":"305","endLine":8,"endColumn":14},{"ruleId":"302","severity":1,"message":"337","line":16,"column":10,"nodeType":"304","messageId":"305","endLine":16,"endColumn":14},{"ruleId":"302","severity":1,"message":"338","line":16,"column":16,"nodeType":"304","messageId":"305","endLine":16,"endColumn":23},{"ruleId":"307","severity":1,"message":"339","line":23,"column":5,"nodeType":"309","endLine":23,"endColumn":43,"suggestions":"340"},{"ruleId":"302","severity":1,"message":"341","line":40,"column":9,"nodeType":"304","messageId":"305","endLine":40,"endColumn":18},{"ruleId":"302","severity":1,"message":"342","line":42,"column":7,"nodeType":"304","messageId":"305","endLine":42,"endColumn":20},{"ruleId":"343","replacedBy":"344"},{"ruleId":"345","replacedBy":"346"},{"ruleId":"302","severity":1,"message":"303","line":12,"column":8,"nodeType":"304","messageId":"305","endLine":12,"endColumn":9},{"ruleId":"307","severity":1,"message":"347","line":38,"column":6,"nodeType":"309","endLine":38,"endColumn":8,"suggestions":"348"},{"ruleId":"302","severity":1,"message":"349","line":42,"column":9,"nodeType":"304","messageId":"305","endLine":42,"endColumn":22},{"ruleId":"302","severity":1,"message":"350","line":126,"column":9,"nodeType":"304","messageId":"305","endLine":126,"endColumn":25},{"ruleId":"314","severity":1,"message":"315","line":5,"column":3,"nodeType":"316","endLine":23,"endColumn":5},{"ruleId":"343","replacedBy":"351"},{"ruleId":"345","replacedBy":"352"},{"ruleId":"314","severity":1,"message":"315","line":10,"column":3,"nodeType":"316","endLine":22,"endColumn":5},{"ruleId":"314","severity":1,"message":"315","line":10,"column":1,"nodeType":"316","endLine":21,"endColumn":2},{"ruleId":"343","replacedBy":"353"},{"ruleId":"345","replacedBy":"354"},{"ruleId":"343","replacedBy":"355"},{"ruleId":"345","replacedBy":"356"},{"ruleId":"314","severity":1,"message":"315","line":10,"column":3,"nodeType":"316","endLine":21,"endColumn":4},{"ruleId":"314","severity":1,"message":"315","line":8,"column":1,"nodeType":"316","endLine":26,"endColumn":2},{"ruleId":"314","severity":1,"message":"315","line":7,"column":3,"nodeType":"316","endLine":30,"endColumn":5},{"ruleId":"302","severity":1,"message":"326","line":13,"column":13,"nodeType":"304","messageId":"305","endLine":13,"endColumn":21},{"ruleId":"314","severity":1,"message":"315","line":11,"column":1,"nodeType":"316","endLine":22,"endColumn":2},{"ruleId":"314","severity":1,"message":"315","line":6,"column":1,"nodeType":"316","endLine":24,"endColumn":2},{"ruleId":"302","severity":1,"message":"317","line":1,"column":27,"nodeType":"304","messageId":"305","endLine":1,"endColumn":36},{"ruleId":"302","severity":1,"message":"318","line":4,"column":8,"nodeType":"304","messageId":"305","endLine":4,"endColumn":12},{"ruleId":"302","severity":1,"message":"338","line":40,"column":16,"nodeType":"304","messageId":"305","endLine":40,"endColumn":23},{"ruleId":"314","severity":1,"message":"315","line":9,"column":1,"nodeType":"316","endLine":20,"endColumn":2},{"ruleId":"314","severity":1,"message":"315","line":7,"column":1,"nodeType":"316","endLine":37,"endColumn":2},{"ruleId":"314","severity":1,"message":"315","line":4,"column":1,"nodeType":"316","endLine":16,"endColumn":2},{"ruleId":"343","replacedBy":"357"},{"ruleId":"345","replacedBy":"358"},{"ruleId":"314","severity":1,"message":"315","line":4,"column":1,"nodeType":"316","endLine":18,"endColumn":2},{"ruleId":"343","replacedBy":"359"},{"ruleId":"345","replacedBy":"360"},{"ruleId":"314","severity":1,"message":"315","line":4,"column":1,"nodeType":"316","endLine":30,"endColumn":3},{"ruleId":"314","severity":1,"message":"315","line":1,"column":1,"nodeType":"316","endLine":7,"endColumn":2},{"ruleId":"314","severity":1,"message":"315","line":11,"column":1,"nodeType":"316","endLine":22,"endColumn":2},{"ruleId":"314","severity":1,"message":"315","line":6,"column":1,"nodeType":"316","endLine":24,"endColumn":2},{"ruleId":"314","severity":1,"message":"315","line":11,"column":1,"nodeType":"316","endLine":23,"endColumn":2},{"ruleId":"302","severity":1,"message":"361","line":1,"column":10,"nodeType":"304","messageId":"305","endLine":1,"endColumn":13},{"ruleId":"302","severity":1,"message":"362","line":2,"column":8,"nodeType":"304","messageId":"305","endLine":2,"endColumn":13},{"ruleId":"302","severity":1,"message":"363","line":3,"column":8,"nodeType":"304","messageId":"305","endLine":3,"endColumn":26},{"ruleId":"314","severity":1,"message":"315","line":8,"column":1,"nodeType":"316","endLine":38,"endColumn":2},{"ruleId":"364","severity":1,"message":"365","line":21,"column":37,"nodeType":"366","messageId":"367","endLine":21,"endColumn":39},{"ruleId":"364","severity":1,"message":"365","line":21,"column":84,"nodeType":"366","messageId":"367","endLine":21,"endColumn":86},{"ruleId":"314","severity":1,"message":"315","line":3,"column":1,"nodeType":"316","endLine":15,"endColumn":2},{"ruleId":"343","replacedBy":"368"},{"ruleId":"345","replacedBy":"369"},{"ruleId":"314","severity":1,"message":"315","line":1,"column":1,"nodeType":"316","endLine":16,"endColumn":2},{"ruleId":"314","severity":1,"message":"315","line":4,"column":1,"nodeType":"316","endLine":17,"endColumn":2},{"ruleId":"302","severity":1,"message":"370","line":1,"column":10,"nodeType":"304","messageId":"305","endLine":1,"endColumn":17},{"ruleId":"314","severity":1,"message":"315","line":11,"column":1,"nodeType":"316","endLine":22,"endColumn":2},"no-unused-vars","'_' is defined but never used.","Identifier","unusedVar","'DropdownButton' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchWellsFromJSON'. Either include it or remove the dependency array. If 'fetchWellsFromJSON' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["371"],"'wellInfo' is assigned a value but never used.","'_default' is defined but never used.","'SET_ACTIVE_WELL' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useEffect' is defined but never used.","'Form' is defined but never used.","'Row' is defined but never used.","'wellsReducer' is defined but never used.","'Button' is defined but never used.","'saveNewPlanToReduxStore' is defined but never used.","'postPlanstoJSONdb' is defined but never used.","'initialGrid' is assigned a value but never used.","'React' is defined but never used.","'response' is assigned a value but never used.","'editGrid' is assigned a value but never used.","'setEditGrid' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleAddRows'. Either include it or remove the dependency array.",["372"],"'performCalculations' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Col' is defined but never used.","'grid' is assigned a value but never used.","'setGrid' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getWellPlansFromJSONDbReducer.response'. Either include it or remove the dependency array.",["373"],"'plansCopy' is assigned a value but never used.","'gridFromPlans' is assigned a value but never used.","no-native-reassign",["374"],"no-negated-in-lhs",["375"],"React Hook useEffect has a missing dependency: 'getWellsFromJSONDb'. Either include it or remove the dependency array.",["376"],"'renderedWells' is defined but never used.","'renderSelectWell' is assigned a value but never used.",["374"],["375"],["374"],["375"],["374"],["375"],["374"],["375"],["374"],["375"],"'get' is defined but never used.","'wells' is defined but never used.","'getWellsFromJSONDb' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["374"],["375"],"'initial' is defined but never used.",{"desc":"377","fix":"378"},{"desc":"379","fix":"380"},{"desc":"381","fix":"382"},"no-global-assign","no-unsafe-negation",{"desc":"383","fix":"384"},"Update the dependencies array to be: [fetchWellsFromJSON]",{"range":"385","text":"386"},"Update the dependencies array to be: [handleAddRows]",{"range":"387","text":"388"},"Update the dependencies array to be: [getWellPlansFromJSONDbReducer.response, getWellPlansFromJSONDbReducer.status]",{"range":"389","text":"390"},"Update the dependencies array to be: [getWellsFromJSONDb]",{"range":"391","text":"392"},[1271,1273],"[fetchWellsFromJSON]",[2703,2705],"[handleAddRows]",[842,880],"[getWellPlansFromJSONDbReducer.response, getWellPlansFromJSONDbReducer.status]",[1670,1672],"[getWellsFromJSONDb]"]