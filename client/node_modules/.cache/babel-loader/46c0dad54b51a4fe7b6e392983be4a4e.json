{"ast":null,"code":"// import React, { useEffect, useState } from \"react\"\n// import { connect } from \"react-redux\"\n// import Container from \"react-bootstrap/esm/Container\"\n// import Form from \"react-bootstrap/Form\"\n// import Row from \"react-bootstrap/Row\"\n// import Col from \"react-bootstrap/Col\"\n// import Button from \"react-bootstrap/Button\"\n// import 'react-datasheet/lib/react-datasheet.css'\n// import ReactDataSheet from \"react-datasheet\"\n// import ExistingLeaseLines from \"./ExistingLeaseLines\"\n// import ExistingHardLines from \"./ExistingHardLines\"\n// import LeaseLines from \"./LeaseLines\"\n// import HardLines from \"./HardLines\"\n// const ExistingPolyLines = ({getLeaseLinesFromDynamoDbReducer, getHardLinesFromDynamoDbReducer, activeWell}) => {\n//   const renderWellData = () => {\n//     if (saveWellInfoToReduxStoreReducer.status === \"received\") {\n//       const { well, rig, operator} = saveWellInfoToReduxStoreReducer.response\n//       return <h3 className=\"hy-4\"> {operator} - {rig} - {well}</h3>\n//     }\n//     else if (activeWell.status === \"received\") {\n//       const { Well_Name, Rig, Operator} = activeWell.response\n//       return <h3 className=\"hy-4\"> {Operator.S} - {Rig.S} - {Well_Name.S}</h3>\n//     } else {\n//       return \"No well data\"\n//     }\n//   }\n//   if (getLeaseLinesFromDynamoDbReducer.status === \"received\" && getHardLinesFromDynamoDbReducer.status === \"received\") {\n//     return (\n//       <Container>\n//         {renderWellData()}\n//         <Row className=\"mt-4\">\n//           <Col>\n//             <h4>Lease Lines</h4>\n//             <ExistingLeaseLines/>\n//           </Col>\n//           <Col>\n//           <h4>Hard Lines</h4>\n//             <ExistingHardLines/>\n//           </Col>\n//         </Row>\n//       </Container>\n//     )\n//   } else if (getLeaseLinesFromDynamoDbReducer.status === \"received\") {\n//     return (\n//       <Container>\n//         {renderWellData()}\n//         <Row className=\"mt-4\">\n//           <Col>\n//             <h4>Lease Lines</h4>\n//             <ExistingLeaseLines/>\n//           </Col>\n//           <Col>\n//           <h4>Hard Lines</h4>\n//             <HardLines/>\n//           </Col>\n//         </Row>\n//       </Container>\n//     )\n//   } else if (getHardLinesFromDynamoDbReducer.status === \"received\") {\n//     <Container>\n//       {renderWellData()}\n//       <Row className=\"mt-4\">\n//         <Col>\n//           <h4>Lease Lines</h4>\n//           <LeaseLines/>\n//         </Col>\n//         <Col>\n//           <h4>Hard Lines</h4>\n//           <ExistingHardLines/>\n//         </Col>\n//       </Row>\n//   </Container>\n//   } else {\n//     return (\n//       <Container>\n//         {renderWellData()}\n//         <Row className=\"mt-4\">\n//           <Col>\n//             <h4>Lease Lines</h4>\n//             <LeaseLines/>\n//           </Col>\n//           <Col>\n//           <h4>Hard Lines</h4>\n//             <HardLines/>\n//           </Col>\n//         </Row>\n//       </Container>\n//     )\n//   }\n// }\n// const mapStateToProps = ({activeWell, getLeaseLinesFromDynamoDbReducer}) => {\n//  return {\n//   activeWell, \n//   getLeaseLinesFromDynamoDbReducer\n//  }\n// }\n// export default connect(mapStateToProps)(ExistingPolyLines)","map":{"version":3,"sources":["/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Components/ExistingPolyLines.js"],"names":[],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { useEffect, useState } from \"react\"\n// import { connect } from \"react-redux\"\n\n// import Container from \"react-bootstrap/esm/Container\"\n// import Form from \"react-bootstrap/Form\"\n// import Row from \"react-bootstrap/Row\"\n// import Col from \"react-bootstrap/Col\"\n// import Button from \"react-bootstrap/Button\"\n\n// import 'react-datasheet/lib/react-datasheet.css'\n// import ReactDataSheet from \"react-datasheet\"\n// import ExistingLeaseLines from \"./ExistingLeaseLines\"\n// import ExistingHardLines from \"./ExistingHardLines\"\n// import LeaseLines from \"./LeaseLines\"\n// import HardLines from \"./HardLines\"\n\n\n// const ExistingPolyLines = ({getLeaseLinesFromDynamoDbReducer, getHardLinesFromDynamoDbReducer, activeWell}) => {\n//   const renderWellData = () => {\n//     if (saveWellInfoToReduxStoreReducer.status === \"received\") {\n//       const { well, rig, operator} = saveWellInfoToReduxStoreReducer.response\n//       return <h3 className=\"hy-4\"> {operator} - {rig} - {well}</h3>\n//     }\n//     else if (activeWell.status === \"received\") {\n//       const { Well_Name, Rig, Operator} = activeWell.response\n//       return <h3 className=\"hy-4\"> {Operator.S} - {Rig.S} - {Well_Name.S}</h3>\n//     } else {\n//       return \"No well data\"\n//     }\n//   }\n//   if (getLeaseLinesFromDynamoDbReducer.status === \"received\" && getHardLinesFromDynamoDbReducer.status === \"received\") {\n//     return (\n//       <Container>\n//         {renderWellData()}\n//         <Row className=\"mt-4\">\n//           <Col>\n//             <h4>Lease Lines</h4>\n//             <ExistingLeaseLines/>\n//           </Col>\n//           <Col>\n//           <h4>Hard Lines</h4>\n//             <ExistingHardLines/>\n//           </Col>\n//         </Row>\n//       </Container>\n//     )\n//   } else if (getLeaseLinesFromDynamoDbReducer.status === \"received\") {\n//     return (\n//       <Container>\n//         {renderWellData()}\n//         <Row className=\"mt-4\">\n//           <Col>\n//             <h4>Lease Lines</h4>\n//             <ExistingLeaseLines/>\n//           </Col>\n//           <Col>\n//           <h4>Hard Lines</h4>\n//             <HardLines/>\n//           </Col>\n//         </Row>\n//       </Container>\n//     )\n//   } else if (getHardLinesFromDynamoDbReducer.status === \"received\") {\n//     <Container>\n//       {renderWellData()}\n//       <Row className=\"mt-4\">\n//         <Col>\n//           <h4>Lease Lines</h4>\n//           <LeaseLines/>\n//         </Col>\n//         <Col>\n//           <h4>Hard Lines</h4>\n//           <ExistingHardLines/>\n//         </Col>\n//       </Row>\n//   </Container>\n//   } else {\n//     return (\n//       <Container>\n//         {renderWellData()}\n//         <Row className=\"mt-4\">\n//           <Col>\n//             <h4>Lease Lines</h4>\n//             <LeaseLines/>\n//           </Col>\n//           <Col>\n//           <h4>Hard Lines</h4>\n//             <HardLines/>\n//           </Col>\n//         </Row>\n//       </Container>\n//     )\n//   }\n\n\n// }\n\n// const mapStateToProps = ({activeWell, getLeaseLinesFromDynamoDbReducer}) => {\n//  return {\n//   activeWell, \n//   getLeaseLinesFromDynamoDbReducer\n//  }\n// }\n\n// export default connect(mapStateToProps)(ExistingPolyLines)"]},"metadata":{},"sourceType":"module"}