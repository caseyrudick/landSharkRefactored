{"ast":null,"code":"/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar Registry = require('../../registry');\n\nvar Lib = require('../../lib');\n\nvar getTraceColor = require('../scatter/get_trace_color');\n\nfunction hoverPoints(pointData, xval, yval, hovermode) {\n  var cd = pointData.cd;\n  var stash = cd[0].t;\n  var trace = cd[0].trace;\n  var xa = pointData.xa;\n  var ya = pointData.ya;\n  var x = stash.x;\n  var y = stash.y;\n  var xpx = xa.c2p(xval);\n  var ypx = ya.c2p(yval);\n  var maxDistance = pointData.distance;\n  var ids; // FIXME: make sure this is a proper way to calc search radius\n\n  if (stash.tree) {\n    var xl = xa.p2c(xpx - maxDistance);\n    var xr = xa.p2c(xpx + maxDistance);\n    var yl = ya.p2c(ypx - maxDistance);\n    var yr = ya.p2c(ypx + maxDistance);\n\n    if (hovermode === 'x') {\n      ids = stash.tree.range(Math.min(xl, xr), Math.min(ya._rl[0], ya._rl[1]), Math.max(xl, xr), Math.max(ya._rl[0], ya._rl[1]));\n    } else {\n      ids = stash.tree.range(Math.min(xl, xr), Math.min(yl, yr), Math.max(xl, xr), Math.max(yl, yr));\n    }\n  } else {\n    ids = stash.ids;\n  } // pick the id closest to the point\n  // note that point possibly may not be found\n\n\n  var id, ptx, pty, i, dx, dy, dist, dxy;\n  var minDist = maxDistance;\n\n  if (hovermode === 'x') {\n    for (i = 0; i < ids.length; i++) {\n      ptx = x[ids[i]];\n      dx = Math.abs(xa.c2p(ptx) - xpx);\n\n      if (dx < minDist) {\n        minDist = dx;\n        dy = ya.c2p(y[ids[i]]) - ypx;\n        dxy = Math.sqrt(dx * dx + dy * dy);\n        id = ids[i];\n      }\n    }\n  } else {\n    for (i = ids.length - 1; i > -1; i--) {\n      ptx = x[ids[i]];\n      pty = y[ids[i]];\n      dx = xa.c2p(ptx) - xpx;\n      dy = ya.c2p(pty) - ypx;\n      dist = Math.sqrt(dx * dx + dy * dy);\n\n      if (dist < minDist) {\n        minDist = dxy = dist;\n        id = ids[i];\n      }\n    }\n  }\n\n  pointData.index = id;\n  pointData.distance = minDist;\n  pointData.dxy = dxy;\n  if (id === undefined) return [pointData];\n  return [calcHover(pointData, x, y, trace)];\n}\n\nfunction calcHover(pointData, x, y, trace) {\n  var xa = pointData.xa;\n  var ya = pointData.ya;\n  var minDist = pointData.distance;\n  var dxy = pointData.dxy;\n  var id = pointData.index; // the closest data point\n\n  var di = {\n    pointNumber: id,\n    x: x[id],\n    y: y[id]\n  }; // that is single-item arrays_to_calcdata excerpt, since we are doing it for a single point and we don't have to do it beforehead for 1e6 points\n\n  di.tx = Array.isArray(trace.text) ? trace.text[id] : trace.text;\n  di.htx = Array.isArray(trace.hovertext) ? trace.hovertext[id] : trace.hovertext;\n  di.data = Array.isArray(trace.customdata) ? trace.customdata[id] : trace.customdata;\n  di.tp = Array.isArray(trace.textposition) ? trace.textposition[id] : trace.textposition;\n  var font = trace.textfont;\n\n  if (font) {\n    di.ts = Lib.isArrayOrTypedArray(font.size) ? font.size[id] : font.size;\n    di.tc = Array.isArray(font.color) ? font.color[id] : font.color;\n    di.tf = Array.isArray(font.family) ? font.family[id] : font.family;\n  }\n\n  var marker = trace.marker;\n\n  if (marker) {\n    di.ms = Lib.isArrayOrTypedArray(marker.size) ? marker.size[id] : marker.size;\n    di.mo = Lib.isArrayOrTypedArray(marker.opacity) ? marker.opacity[id] : marker.opacity;\n    di.mx = Lib.isArrayOrTypedArray(marker.symbol) ? marker.symbol[id] : marker.symbol;\n    di.mc = Lib.isArrayOrTypedArray(marker.color) ? marker.color[id] : marker.color;\n  }\n\n  var line = marker && marker.line;\n\n  if (line) {\n    di.mlc = Array.isArray(line.color) ? line.color[id] : line.color;\n    di.mlw = Lib.isArrayOrTypedArray(line.width) ? line.width[id] : line.width;\n  }\n\n  var grad = marker && marker.gradient;\n\n  if (grad && grad.type !== 'none') {\n    di.mgt = Array.isArray(grad.type) ? grad.type[id] : grad.type;\n    di.mgc = Array.isArray(grad.color) ? grad.color[id] : grad.color;\n  }\n\n  var xp = xa.c2p(di.x, true);\n  var yp = ya.c2p(di.y, true);\n  var rad = di.mrc || 1;\n  var hoverlabel = trace.hoverlabel;\n\n  if (hoverlabel) {\n    di.hbg = Array.isArray(hoverlabel.bgcolor) ? hoverlabel.bgcolor[id] : hoverlabel.bgcolor;\n    di.hbc = Array.isArray(hoverlabel.bordercolor) ? hoverlabel.bordercolor[id] : hoverlabel.bordercolor;\n    di.hts = Lib.isArrayOrTypedArray(hoverlabel.font.size) ? hoverlabel.font.size[id] : hoverlabel.font.size;\n    di.htc = Array.isArray(hoverlabel.font.color) ? hoverlabel.font.color[id] : hoverlabel.font.color;\n    di.htf = Array.isArray(hoverlabel.font.family) ? hoverlabel.font.family[id] : hoverlabel.font.family;\n    di.hnl = Lib.isArrayOrTypedArray(hoverlabel.namelength) ? hoverlabel.namelength[id] : hoverlabel.namelength;\n  }\n\n  var hoverinfo = trace.hoverinfo;\n\n  if (hoverinfo) {\n    di.hi = Array.isArray(hoverinfo) ? hoverinfo[id] : hoverinfo;\n  }\n\n  var hovertemplate = trace.hovertemplate;\n\n  if (hovertemplate) {\n    di.ht = Array.isArray(hovertemplate) ? hovertemplate[id] : hovertemplate;\n  }\n\n  var fakeCd = {};\n  fakeCd[pointData.index] = di;\n  var origX = trace._origX;\n  var origY = trace._origY;\n  var pointData2 = Lib.extendFlat({}, pointData, {\n    color: getTraceColor(trace, di),\n    x0: xp - rad,\n    x1: xp + rad,\n    xLabelVal: origX ? origX[id] : di.x,\n    y0: yp - rad,\n    y1: yp + rad,\n    yLabelVal: origY ? origY[id] : di.y,\n    cd: fakeCd,\n    distance: minDist,\n    spikeDistance: dxy,\n    hovertemplate: di.ht\n  });\n  if (di.htx) pointData2.text = di.htx;else if (di.tx) pointData2.text = di.tx;else if (trace.text) pointData2.text = trace.text;\n  Lib.fillText(di, trace, pointData2);\n  Registry.getComponentMethod('errorbars', 'hoverInfo')(di, trace, pointData2);\n  return pointData2;\n}\n\nmodule.exports = {\n  hoverPoints: hoverPoints,\n  calcHover: calcHover\n};","map":{"version":3,"sources":["/Users/caseyrudick/Documents/landsharkrefactored-copy/client/node_modules/plotly.js/src/traces/scattergl/hover.js"],"names":["Registry","require","Lib","getTraceColor","hoverPoints","pointData","xval","yval","hovermode","cd","stash","t","trace","xa","ya","x","y","xpx","c2p","ypx","maxDistance","distance","ids","tree","xl","p2c","xr","yl","yr","range","Math","min","_rl","max","id","ptx","pty","i","dx","dy","dist","dxy","minDist","length","abs","sqrt","index","undefined","calcHover","di","pointNumber","tx","Array","isArray","text","htx","hovertext","data","customdata","tp","textposition","font","textfont","ts","isArrayOrTypedArray","size","tc","color","tf","family","marker","ms","mo","opacity","mx","symbol","mc","line","mlc","mlw","width","grad","gradient","type","mgt","mgc","xp","yp","rad","mrc","hoverlabel","hbg","bgcolor","hbc","bordercolor","hts","htc","htf","hnl","namelength","hoverinfo","hi","hovertemplate","ht","fakeCd","origX","_origX","origY","_origY","pointData2","extendFlat","x0","x1","xLabelVal","y0","y1","yLabelVal","spikeDistance","fillText","getComponentMethod","module","exports"],"mappings":"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","sourcesContent":["/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\nvar getTraceColor = require('../scatter/get_trace_color');\n\nfunction hoverPoints(pointData, xval, yval, hovermode) {\n    var cd = pointData.cd;\n    var stash = cd[0].t;\n    var trace = cd[0].trace;\n    var xa = pointData.xa;\n    var ya = pointData.ya;\n    var x = stash.x;\n    var y = stash.y;\n    var xpx = xa.c2p(xval);\n    var ypx = ya.c2p(yval);\n    var maxDistance = pointData.distance;\n    var ids;\n\n    // FIXME: make sure this is a proper way to calc search radius\n    if(stash.tree) {\n        var xl = xa.p2c(xpx - maxDistance);\n        var xr = xa.p2c(xpx + maxDistance);\n        var yl = ya.p2c(ypx - maxDistance);\n        var yr = ya.p2c(ypx + maxDistance);\n\n        if(hovermode === 'x') {\n            ids = stash.tree.range(\n                Math.min(xl, xr), Math.min(ya._rl[0], ya._rl[1]),\n                Math.max(xl, xr), Math.max(ya._rl[0], ya._rl[1])\n            );\n        } else {\n            ids = stash.tree.range(\n                Math.min(xl, xr), Math.min(yl, yr),\n                Math.max(xl, xr), Math.max(yl, yr)\n            );\n        }\n    } else {\n        ids = stash.ids;\n    }\n\n    // pick the id closest to the point\n    // note that point possibly may not be found\n    var id, ptx, pty, i, dx, dy, dist, dxy;\n\n    var minDist = maxDistance;\n    if(hovermode === 'x') {\n        for(i = 0; i < ids.length; i++) {\n            ptx = x[ids[i]];\n            dx = Math.abs(xa.c2p(ptx) - xpx);\n            if(dx < minDist) {\n                minDist = dx;\n                dy = ya.c2p(y[ids[i]]) - ypx;\n                dxy = Math.sqrt(dx * dx + dy * dy);\n                id = ids[i];\n            }\n        }\n    } else {\n        for(i = ids.length - 1; i > -1; i--) {\n            ptx = x[ids[i]];\n            pty = y[ids[i]];\n            dx = xa.c2p(ptx) - xpx;\n            dy = ya.c2p(pty) - ypx;\n\n            dist = Math.sqrt(dx * dx + dy * dy);\n            if(dist < minDist) {\n                minDist = dxy = dist;\n                id = ids[i];\n            }\n        }\n    }\n\n    pointData.index = id;\n    pointData.distance = minDist;\n    pointData.dxy = dxy;\n\n    if(id === undefined) return [pointData];\n\n    return [calcHover(pointData, x, y, trace)];\n}\n\nfunction calcHover(pointData, x, y, trace) {\n    var xa = pointData.xa;\n    var ya = pointData.ya;\n    var minDist = pointData.distance;\n    var dxy = pointData.dxy;\n    var id = pointData.index;\n\n    // the closest data point\n    var di = {\n        pointNumber: id,\n        x: x[id],\n        y: y[id]\n    };\n\n    // that is single-item arrays_to_calcdata excerpt, since we are doing it for a single point and we don't have to do it beforehead for 1e6 points\n    di.tx = Array.isArray(trace.text) ? trace.text[id] : trace.text;\n    di.htx = Array.isArray(trace.hovertext) ? trace.hovertext[id] : trace.hovertext;\n    di.data = Array.isArray(trace.customdata) ? trace.customdata[id] : trace.customdata;\n    di.tp = Array.isArray(trace.textposition) ? trace.textposition[id] : trace.textposition;\n\n    var font = trace.textfont;\n    if(font) {\n        di.ts = Lib.isArrayOrTypedArray(font.size) ? font.size[id] : font.size;\n        di.tc = Array.isArray(font.color) ? font.color[id] : font.color;\n        di.tf = Array.isArray(font.family) ? font.family[id] : font.family;\n    }\n\n    var marker = trace.marker;\n    if(marker) {\n        di.ms = Lib.isArrayOrTypedArray(marker.size) ? marker.size[id] : marker.size;\n        di.mo = Lib.isArrayOrTypedArray(marker.opacity) ? marker.opacity[id] : marker.opacity;\n        di.mx = Lib.isArrayOrTypedArray(marker.symbol) ? marker.symbol[id] : marker.symbol;\n        di.mc = Lib.isArrayOrTypedArray(marker.color) ? marker.color[id] : marker.color;\n    }\n\n    var line = marker && marker.line;\n    if(line) {\n        di.mlc = Array.isArray(line.color) ? line.color[id] : line.color;\n        di.mlw = Lib.isArrayOrTypedArray(line.width) ? line.width[id] : line.width;\n    }\n\n    var grad = marker && marker.gradient;\n    if(grad && grad.type !== 'none') {\n        di.mgt = Array.isArray(grad.type) ? grad.type[id] : grad.type;\n        di.mgc = Array.isArray(grad.color) ? grad.color[id] : grad.color;\n    }\n\n    var xp = xa.c2p(di.x, true);\n    var yp = ya.c2p(di.y, true);\n    var rad = di.mrc || 1;\n\n    var hoverlabel = trace.hoverlabel;\n\n    if(hoverlabel) {\n        di.hbg = Array.isArray(hoverlabel.bgcolor) ? hoverlabel.bgcolor[id] : hoverlabel.bgcolor;\n        di.hbc = Array.isArray(hoverlabel.bordercolor) ? hoverlabel.bordercolor[id] : hoverlabel.bordercolor;\n        di.hts = Lib.isArrayOrTypedArray(hoverlabel.font.size) ? hoverlabel.font.size[id] : hoverlabel.font.size;\n        di.htc = Array.isArray(hoverlabel.font.color) ? hoverlabel.font.color[id] : hoverlabel.font.color;\n        di.htf = Array.isArray(hoverlabel.font.family) ? hoverlabel.font.family[id] : hoverlabel.font.family;\n        di.hnl = Lib.isArrayOrTypedArray(hoverlabel.namelength) ? hoverlabel.namelength[id] : hoverlabel.namelength;\n    }\n    var hoverinfo = trace.hoverinfo;\n    if(hoverinfo) {\n        di.hi = Array.isArray(hoverinfo) ? hoverinfo[id] : hoverinfo;\n    }\n\n    var hovertemplate = trace.hovertemplate;\n    if(hovertemplate) {\n        di.ht = Array.isArray(hovertemplate) ? hovertemplate[id] : hovertemplate;\n    }\n\n    var fakeCd = {};\n    fakeCd[pointData.index] = di;\n\n    var origX = trace._origX;\n    var origY = trace._origY;\n\n    var pointData2 = Lib.extendFlat({}, pointData, {\n        color: getTraceColor(trace, di),\n\n        x0: xp - rad,\n        x1: xp + rad,\n        xLabelVal: origX ? origX[id] : di.x,\n\n        y0: yp - rad,\n        y1: yp + rad,\n        yLabelVal: origY ? origY[id] : di.y,\n\n        cd: fakeCd,\n        distance: minDist,\n        spikeDistance: dxy,\n\n        hovertemplate: di.ht\n    });\n\n    if(di.htx) pointData2.text = di.htx;\n    else if(di.tx) pointData2.text = di.tx;\n    else if(trace.text) pointData2.text = trace.text;\n\n    Lib.fillText(di, trace, pointData2);\n    Registry.getComponentMethod('errorbars', 'hoverInfo')(di, trace, pointData2);\n\n    return pointData2;\n}\n\nmodule.exports = {\n    hoverPoints: hoverPoints,\n    calcHover: calcHover\n};\n"]},"metadata":{},"sourceType":"script"}