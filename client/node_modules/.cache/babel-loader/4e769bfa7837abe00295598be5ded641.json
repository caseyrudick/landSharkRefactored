{"ast":null,"code":"import wells from \"../APIs/wells\";\nimport { SAVE_WELL_PLANS_TO_JSON_REQUESTED, SAVE_WELL_PLANS_TO_JSON_RECEIVED, SAVE_WELL_PLANS_TO_JSON_FAILED } from \"./types\";\nexport default (wellInfo => {\n  return async (dispatch, getState) => {\n    dispatch({\n      type: SAVE_WELL_PLANS_TO_JSON_REQUESTED\n    });\n\n    try {\n      // let listOfWells = getState().getWellsFromJSONDbReducer \n      const response = await wells.put(`wells/${wellInfo.id}`, wellInfo);\n      console.log(\"should get well\");\n      console.log(response);\n      dispatch({\n        type: SAVE_WELL_PLANS_TO_JSON_RECEIVED,\n        payload: response\n      });\n    } catch (error) {\n      dispatch({\n        type: SAVE_WELL_PLANS_TO_JSON_FAILED,\n        payload: error\n      });\n    }\n  };\n});","map":{"version":3,"sources":["/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/saveWellPlansToJSONDb.js"],"names":["wells","SAVE_WELL_PLANS_TO_JSON_REQUESTED","SAVE_WELL_PLANS_TO_JSON_RECEIVED","SAVE_WELL_PLANS_TO_JSON_FAILED","wellInfo","dispatch","getState","type","response","put","id","console","log","payload","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,eAAlB;AACA,SAASC,iCAAT,EACEC,gCADF,EAEEC,8BAFF,QAEwC,SAFxC;AAIA,gBAAgBC,QAAD,IAAc;AAC3B,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAEnCD,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEN;AADC,KAAD,CAAR;;AAGA,QAAI;AACF;AACA,YAAMO,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAW,SAAQL,QAAQ,CAACM,EAAG,EAA/B,EAAkCN,QAAlC,CAAvB;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACAH,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEL,gCADC;AAEPW,QAAAA,OAAO,EAAEL;AAFF,OAAD,CAAR;AAID,KATD,CASE,OAAOM,KAAP,EAAc;AACdT,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEJ,8BADC;AAEPU,QAAAA,OAAO,EAAEC;AAFF,OAAD,CAAR;AAID;AACF,GApBD;AAqBD,CAtBD","sourcesContent":["import wells from \"../APIs/wells\"\nimport { SAVE_WELL_PLANS_TO_JSON_REQUESTED,\n  SAVE_WELL_PLANS_TO_JSON_RECEIVED,\n  SAVE_WELL_PLANS_TO_JSON_FAILED } from \"./types\"\n\nexport default (wellInfo) => {\n  return async (dispatch, getState) => {\n\n    dispatch({\n      type: SAVE_WELL_PLANS_TO_JSON_REQUESTED\n    })\n    try {\n      // let listOfWells = getState().getWellsFromJSONDbReducer \n      const response = await wells.put(`wells/${wellInfo.id}`, wellInfo)\n      console.log(\"should get well\")\n      console.log(response)\n      dispatch({\n        type: SAVE_WELL_PLANS_TO_JSON_RECEIVED,\n        payload: response\n      })\n    } catch (error) {\n      dispatch({\n        type: SAVE_WELL_PLANS_TO_JSON_FAILED,\n        payload: error\n      })\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}