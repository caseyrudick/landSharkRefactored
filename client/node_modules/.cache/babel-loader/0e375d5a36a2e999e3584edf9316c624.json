{"ast":null,"code":"/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar scatterAttrs = require('../scatter/attributes');\n\nvar hovertemplateAttrs = require('../../plots/template_attributes').hovertemplateAttrs;\n\nvar texttemplateAttrs = require('../../plots/template_attributes').texttemplateAttrs;\n\nvar colorScaleAttrs = require('../../components/colorscale/attributes');\n\nvar fontAttrs = require('../../plots/font_attributes');\n\nvar constants = require('./constants');\n\nvar extendFlat = require('../../lib/extend').extendFlat;\n\nvar textFontAttrs = fontAttrs({\n  editType: 'calc',\n  arrayOk: true,\n  colorEditType: 'style',\n  description: ''\n});\nvar scatterMarkerAttrs = scatterAttrs.marker;\nvar scatterMarkerLineAttrs = scatterMarkerAttrs.line;\nvar markerLineWidth = extendFlat({}, scatterMarkerLineAttrs.width, {\n  dflt: 0\n});\nvar markerLine = extendFlat({\n  width: markerLineWidth,\n  editType: 'calc'\n}, colorScaleAttrs('marker.line'));\nvar marker = extendFlat({\n  line: markerLine,\n  editType: 'calc'\n}, colorScaleAttrs('marker'), {\n  opacity: {\n    valType: 'number',\n    arrayOk: true,\n    dflt: 1,\n    min: 0,\n    max: 1,\n    role: 'style',\n    editType: 'style',\n    description: 'Sets the opacity of the bars.'\n  }\n});\nmodule.exports = {\n  x: scatterAttrs.x,\n  x0: scatterAttrs.x0,\n  dx: scatterAttrs.dx,\n  y: scatterAttrs.y,\n  y0: scatterAttrs.y0,\n  dy: scatterAttrs.dy,\n  xperiod: scatterAttrs.xperiod,\n  yperiod: scatterAttrs.yperiod,\n  xperiod0: scatterAttrs.xperiod0,\n  yperiod0: scatterAttrs.yperiod0,\n  xperiodalignment: scatterAttrs.xperiodalignment,\n  yperiodalignment: scatterAttrs.yperiodalignment,\n  text: scatterAttrs.text,\n  texttemplate: texttemplateAttrs({\n    editType: 'plot'\n  }, {\n    keys: constants.eventDataKeys\n  }),\n  hovertext: scatterAttrs.hovertext,\n  hovertemplate: hovertemplateAttrs({}, {\n    keys: constants.eventDataKeys\n  }),\n  textposition: {\n    valType: 'enumerated',\n    role: 'info',\n    values: ['inside', 'outside', 'auto', 'none'],\n    dflt: 'none',\n    arrayOk: true,\n    editType: 'calc',\n    description: ['Specifies the location of the `text`.', '*inside* positions `text` inside, next to the bar end', '(rotated and scaled if needed).', '*outside* positions `text` outside, next to the bar end', '(scaled if needed), unless there is another bar stacked on', 'this one, then the text gets pushed inside.', '*auto* tries to position `text` inside the bar, but if', 'the bar is too small and no bar is stacked on this one', 'the text is moved outside.'].join(' ')\n  },\n  insidetextanchor: {\n    valType: 'enumerated',\n    values: ['end', 'middle', 'start'],\n    dflt: 'end',\n    role: 'info',\n    editType: 'plot',\n    description: ['Determines if texts are kept at center or start/end points in `textposition` *inside* mode.'].join(' ')\n  },\n  textangle: {\n    valType: 'angle',\n    dflt: 'auto',\n    role: 'info',\n    editType: 'plot',\n    description: ['Sets the angle of the tick labels with respect to the bar.', 'For example, a `tickangle` of -90 draws the tick labels', 'vertically. With *auto* the texts may automatically be', 'rotated to fit with the maximum size in bars.'].join(' ')\n  },\n  textfont: extendFlat({}, textFontAttrs, {\n    description: 'Sets the font used for `text`.'\n  }),\n  insidetextfont: extendFlat({}, textFontAttrs, {\n    description: 'Sets the font used for `text` lying inside the bar.'\n  }),\n  outsidetextfont: extendFlat({}, textFontAttrs, {\n    description: 'Sets the font used for `text` lying outside the bar.'\n  }),\n  constraintext: {\n    valType: 'enumerated',\n    values: ['inside', 'outside', 'both', 'none'],\n    role: 'info',\n    dflt: 'both',\n    editType: 'calc',\n    description: ['Constrain the size of text inside or outside a bar to be no', 'larger than the bar itself.'].join(' ')\n  },\n  cliponaxis: extendFlat({}, scatterAttrs.cliponaxis, {\n    description: ['Determines whether the text nodes', 'are clipped about the subplot axes.', 'To show the text nodes above axis lines and tick labels,', 'make sure to set `xaxis.layer` and `yaxis.layer` to *below traces*.'].join(' ')\n  }),\n  orientation: {\n    valType: 'enumerated',\n    role: 'info',\n    values: ['v', 'h'],\n    editType: 'calc+clearAxisTypes',\n    description: ['Sets the orientation of the bars.', 'With *v* (*h*), the value of the each bar spans', 'along the vertical (horizontal).'].join(' ')\n  },\n  base: {\n    valType: 'any',\n    dflt: null,\n    arrayOk: true,\n    role: 'info',\n    editType: 'calc',\n    description: ['Sets where the bar base is drawn (in position axis units).', 'In *stack* or *relative* barmode,', 'traces that set *base* will be excluded', 'and drawn in *overlay* mode instead.'].join(' ')\n  },\n  offset: {\n    valType: 'number',\n    dflt: null,\n    arrayOk: true,\n    role: 'info',\n    editType: 'calc',\n    description: ['Shifts the position where the bar is drawn', '(in position axis units).', 'In *group* barmode,', 'traces that set *offset* will be excluded', 'and drawn in *overlay* mode instead.'].join(' ')\n  },\n  width: {\n    valType: 'number',\n    dflt: null,\n    min: 0,\n    arrayOk: true,\n    role: 'info',\n    editType: 'calc',\n    description: ['Sets the bar width (in position axis units).'].join(' ')\n  },\n  marker: marker,\n  offsetgroup: {\n    valType: 'string',\n    role: 'info',\n    dflt: '',\n    editType: 'calc',\n    description: ['Set several traces linked to the same position axis', 'or matching axes to the same', 'offsetgroup where bars of the same position coordinate will line up.'].join(' ')\n  },\n  alignmentgroup: {\n    valType: 'string',\n    role: 'info',\n    dflt: '',\n    editType: 'calc',\n    description: ['Set several traces linked to the same position axis', 'or matching axes to the same', 'alignmentgroup. This controls whether bars compute their positional', 'range dependently or independently.'].join(' ')\n  },\n  selected: {\n    marker: {\n      opacity: scatterAttrs.selected.marker.opacity,\n      color: scatterAttrs.selected.marker.color,\n      editType: 'style'\n    },\n    textfont: scatterAttrs.selected.textfont,\n    editType: 'style'\n  },\n  unselected: {\n    marker: {\n      opacity: scatterAttrs.unselected.marker.opacity,\n      color: scatterAttrs.unselected.marker.color,\n      editType: 'style'\n    },\n    textfont: scatterAttrs.unselected.textfont,\n    editType: 'style'\n  },\n  r: scatterAttrs.r,\n  t: scatterAttrs.t,\n  _deprecated: {\n    bardir: {\n      valType: 'enumerated',\n      role: 'info',\n      editType: 'calc',\n      values: ['v', 'h'],\n      description: 'Renamed to `orientation`.'\n    }\n  }\n};","map":{"version":3,"sources":["/Users/caseyrudick/Documents/landsharkrefactored-copy/client/node_modules/plotly.js/src/traces/bar/attributes.js"],"names":["scatterAttrs","require","hovertemplateAttrs","texttemplateAttrs","colorScaleAttrs","fontAttrs","constants","extendFlat","textFontAttrs","editType","arrayOk","colorEditType","description","scatterMarkerAttrs","marker","scatterMarkerLineAttrs","line","markerLineWidth","width","dflt","markerLine","opacity","valType","min","max","role","module","exports","x","x0","dx","y","y0","dy","xperiod","yperiod","xperiod0","yperiod0","xperiodalignment","yperiodalignment","text","texttemplate","keys","eventDataKeys","hovertext","hovertemplate","textposition","values","join","insidetextanchor","textangle","textfont","insidetextfont","outsidetextfont","constraintext","cliponaxis","orientation","base","offset","offsetgroup","alignmentgroup","selected","color","unselected","r","t","_deprecated","bardir"],"mappings":"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","sourcesContent":["/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar scatterAttrs = require('../scatter/attributes');\nvar hovertemplateAttrs = require('../../plots/template_attributes').hovertemplateAttrs;\nvar texttemplateAttrs = require('../../plots/template_attributes').texttemplateAttrs;\nvar colorScaleAttrs = require('../../components/colorscale/attributes');\nvar fontAttrs = require('../../plots/font_attributes');\nvar constants = require('./constants');\n\nvar extendFlat = require('../../lib/extend').extendFlat;\n\nvar textFontAttrs = fontAttrs({\n    editType: 'calc',\n    arrayOk: true,\n    colorEditType: 'style',\n    description: ''\n});\n\nvar scatterMarkerAttrs = scatterAttrs.marker;\nvar scatterMarkerLineAttrs = scatterMarkerAttrs.line;\n\nvar markerLineWidth = extendFlat({},\n    scatterMarkerLineAttrs.width, { dflt: 0 });\n\nvar markerLine = extendFlat({\n    width: markerLineWidth,\n    editType: 'calc'\n}, colorScaleAttrs('marker.line'));\n\nvar marker = extendFlat({\n    line: markerLine,\n    editType: 'calc'\n}, colorScaleAttrs('marker'), {\n    opacity: {\n        valType: 'number',\n        arrayOk: true,\n        dflt: 1,\n        min: 0,\n        max: 1,\n        role: 'style',\n        editType: 'style',\n        description: 'Sets the opacity of the bars.'\n    }\n});\n\nmodule.exports = {\n    x: scatterAttrs.x,\n    x0: scatterAttrs.x0,\n    dx: scatterAttrs.dx,\n    y: scatterAttrs.y,\n    y0: scatterAttrs.y0,\n    dy: scatterAttrs.dy,\n\n    xperiod: scatterAttrs.xperiod,\n    yperiod: scatterAttrs.yperiod,\n    xperiod0: scatterAttrs.xperiod0,\n    yperiod0: scatterAttrs.yperiod0,\n    xperiodalignment: scatterAttrs.xperiodalignment,\n    yperiodalignment: scatterAttrs.yperiodalignment,\n\n    text: scatterAttrs.text,\n    texttemplate: texttemplateAttrs({editType: 'plot'}, {\n        keys: constants.eventDataKeys\n    }),\n    hovertext: scatterAttrs.hovertext,\n    hovertemplate: hovertemplateAttrs({}, {\n        keys: constants.eventDataKeys\n    }),\n\n    textposition: {\n        valType: 'enumerated',\n        role: 'info',\n        values: ['inside', 'outside', 'auto', 'none'],\n        dflt: 'none',\n        arrayOk: true,\n        editType: 'calc',\n        description: [\n            'Specifies the location of the `text`.',\n            '*inside* positions `text` inside, next to the bar end',\n            '(rotated and scaled if needed).',\n            '*outside* positions `text` outside, next to the bar end',\n            '(scaled if needed), unless there is another bar stacked on',\n            'this one, then the text gets pushed inside.',\n            '*auto* tries to position `text` inside the bar, but if',\n            'the bar is too small and no bar is stacked on this one',\n            'the text is moved outside.'\n        ].join(' ')\n    },\n\n    insidetextanchor: {\n        valType: 'enumerated',\n        values: ['end', 'middle', 'start'],\n        dflt: 'end',\n        role: 'info',\n        editType: 'plot',\n        description: [\n            'Determines if texts are kept at center or start/end points in `textposition` *inside* mode.'\n        ].join(' ')\n    },\n\n    textangle: {\n        valType: 'angle',\n        dflt: 'auto',\n        role: 'info',\n        editType: 'plot',\n        description: [\n            'Sets the angle of the tick labels with respect to the bar.',\n            'For example, a `tickangle` of -90 draws the tick labels',\n            'vertically. With *auto* the texts may automatically be',\n            'rotated to fit with the maximum size in bars.'\n        ].join(' ')\n    },\n\n    textfont: extendFlat({}, textFontAttrs, {\n        description: 'Sets the font used for `text`.'\n    }),\n\n    insidetextfont: extendFlat({}, textFontAttrs, {\n        description: 'Sets the font used for `text` lying inside the bar.'\n    }),\n\n    outsidetextfont: extendFlat({}, textFontAttrs, {\n        description: 'Sets the font used for `text` lying outside the bar.'\n    }),\n\n    constraintext: {\n        valType: 'enumerated',\n        values: ['inside', 'outside', 'both', 'none'],\n        role: 'info',\n        dflt: 'both',\n        editType: 'calc',\n        description: [\n            'Constrain the size of text inside or outside a bar to be no',\n            'larger than the bar itself.'\n        ].join(' ')\n    },\n\n    cliponaxis: extendFlat({}, scatterAttrs.cliponaxis, {\n        description: [\n            'Determines whether the text nodes',\n            'are clipped about the subplot axes.',\n            'To show the text nodes above axis lines and tick labels,',\n            'make sure to set `xaxis.layer` and `yaxis.layer` to *below traces*.'\n        ].join(' ')\n    }),\n\n    orientation: {\n        valType: 'enumerated',\n        role: 'info',\n        values: ['v', 'h'],\n        editType: 'calc+clearAxisTypes',\n        description: [\n            'Sets the orientation of the bars.',\n            'With *v* (*h*), the value of the each bar spans',\n            'along the vertical (horizontal).'\n        ].join(' ')\n    },\n\n    base: {\n        valType: 'any',\n        dflt: null,\n        arrayOk: true,\n        role: 'info',\n        editType: 'calc',\n        description: [\n            'Sets where the bar base is drawn (in position axis units).',\n            'In *stack* or *relative* barmode,',\n            'traces that set *base* will be excluded',\n            'and drawn in *overlay* mode instead.'\n        ].join(' ')\n    },\n\n    offset: {\n        valType: 'number',\n        dflt: null,\n        arrayOk: true,\n        role: 'info',\n        editType: 'calc',\n        description: [\n            'Shifts the position where the bar is drawn',\n            '(in position axis units).',\n            'In *group* barmode,',\n            'traces that set *offset* will be excluded',\n            'and drawn in *overlay* mode instead.'\n        ].join(' ')\n    },\n\n    width: {\n        valType: 'number',\n        dflt: null,\n        min: 0,\n        arrayOk: true,\n        role: 'info',\n        editType: 'calc',\n        description: [\n            'Sets the bar width (in position axis units).'\n        ].join(' ')\n    },\n\n    marker: marker,\n\n    offsetgroup: {\n        valType: 'string',\n        role: 'info',\n        dflt: '',\n        editType: 'calc',\n        description: [\n            'Set several traces linked to the same position axis',\n            'or matching axes to the same',\n            'offsetgroup where bars of the same position coordinate will line up.'\n        ].join(' ')\n    },\n    alignmentgroup: {\n        valType: 'string',\n        role: 'info',\n        dflt: '',\n        editType: 'calc',\n        description: [\n            'Set several traces linked to the same position axis',\n            'or matching axes to the same',\n            'alignmentgroup. This controls whether bars compute their positional',\n            'range dependently or independently.'\n        ].join(' ')\n    },\n\n    selected: {\n        marker: {\n            opacity: scatterAttrs.selected.marker.opacity,\n            color: scatterAttrs.selected.marker.color,\n            editType: 'style'\n        },\n        textfont: scatterAttrs.selected.textfont,\n        editType: 'style'\n    },\n    unselected: {\n        marker: {\n            opacity: scatterAttrs.unselected.marker.opacity,\n            color: scatterAttrs.unselected.marker.color,\n            editType: 'style'\n        },\n        textfont: scatterAttrs.unselected.textfont,\n        editType: 'style'\n    },\n\n    r: scatterAttrs.r,\n    t: scatterAttrs.t,\n\n    _deprecated: {\n        bardir: {\n            valType: 'enumerated',\n            role: 'info',\n            editType: 'calc',\n            values: ['v', 'h'],\n            description: 'Renamed to `orientation`.'\n        }\n    }\n};\n"]},"metadata":{},"sourceType":"script"}