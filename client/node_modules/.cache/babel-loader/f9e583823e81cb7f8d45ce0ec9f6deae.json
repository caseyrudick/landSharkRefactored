{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from\"react\";import Container from\"react-bootstrap/Container\";import Plot from'react-plotly.js';import{connect}from\"react-redux\";import _ from\"lodash\";import savePlansToReduxStore from\"../ActionCreators/savePlansToReduxStore\";import saveLeaseLinesToReduxStore from\"../ActionCreators/saveLeaseLinesToReduxStore\";import saveWellInfoToReduxStore from\"../ActionCreators/saveWellInfoToReduxStore\";var PVA=function PVA(_ref){var saveSurveysToReduxStoreReducer=_ref.saveSurveysToReduxStoreReducer,saveHardLinesToReduxStoreReducer=_ref.saveHardLinesToReduxStoreReducer,savePlansToReduxStoreReducer=_ref.savePlansToReduxStoreReducer,saveLeaseLinesToReduxStoreReducer=_ref.saveLeaseLinesToReduxStoreReducer,getWellPlansFromDynamoDbReducer=_ref.getWellPlansFromDynamoDbReducer,getLeaseLinesFromDynamoDbReducer=_ref.getLeaseLinesFromDynamoDbReducer,getHardLinesFromDynamoDbReducer=_ref.getHardLinesFromDynamoDbReducer,getSurveysFromDynamoDbReducer=_ref.getSurveysFromDynamoDbReducer,activeWell=_ref.activeWell;var createEastingCoordinates=function createEastingCoordinates(data){var polyLine=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;if(polyLine){// if (Object.keys(data).length === 0) {\n//   console.log(\"nada\")\n//   return []\n// } else {\n//   let result = data.map((row, index) => data[index][2].value).slice(1)\n//   // console.log(\"easting\" + result)\n//   return result\nreturn data.map(function(row,index){return data[index][2].value;}).slice(1)||[];// }\n}else{// if (Object.keys(data).length === 0) {\n//   console.log(\"nada\")\n//   return []\n// } else {\n//   let result = data.map((row, index) => data[index][6].value).slice(1)\n//   // console.log(\"easting\" + result)\n//   return result\nreturn data.map(function(row,index){return data[index][6].value;}).slice(1)||[];}};var createNorthingCoordinates=function createNorthingCoordinates(data){var polyLine=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;if(polyLine){// if (Object.keys(data).length === 0) {\n//   return []\n// } else {\n//   let result = data.map((row, index) => data[index][1].value).slice(1)\n//   // console.log(\"northing:\" + result)\n//   return result\nreturn data.map(function(row,index){return data[index][1].value;}).slice(1)||[];// }\n}else{// if (Object.keys(data).length === 0) {\n//   console.log(\"nada\")\n//   return []\n// } else {\n// let result = data.map((row, index) => data[index][5].value).slice(1)\n// console.log(\"northing\" + result)\n// return result\n// }\nreturn data.map(function(row,index){return data[index][5].value;}).slice(1)||[];}};var createTVDCoordinates=function createTVDCoordinates(data){console.log(data);if(data.length===0){return[];}else{return data.map(function(row,index){return data[index][4].value*-1;}).slice(1);}};var createSectCoordinates=function createSectCoordinates(data){if(data.length===0){return[];}else{return data.map(function(row,index){return data[index][7].value;}).slice(1);}};var renderSectionView=function renderSectionView(){return/*#__PURE__*/_jsx(Plot,{data:[{x:createTVDCoordinates(savePlansToReduxStoreReducer.response),y:createSectCoordinates(savePlansToReduxStoreReducer.response),type:\"scatter\",mode:\"lines+markers\",marker:{color:\"blue\"},name:\"Plan\"},{x:createTVDCoordinates(saveSurveysToReduxStoreReducer.response),y:createSectCoordinates(saveSurveysToReduxStoreReducer.response),type:\"scatter\",mode:\"lines+markers\",marker:{color:\"Red\"},name:\"Surveys\"}],layout:{width:1000,height:800,title:'Section View'}});};var renderPlanView=function renderPlanView(){// if (\n//   Object.keys(savePlansToReduxStoreReducer.response).length === 0 && Object.keys(save)\n// )\nreturn/*#__PURE__*/_jsx(Plot,{data:[{x:createEastingCoordinates(savePlansToReduxStoreReducer.response),y:createNorthingCoordinates(savePlansToReduxStoreReducer.response),type:\"scatter\",mode:\"lines+markers\",marker:{color:\"blue\"},name:\"Plan\"},{x:createEastingCoordinates(saveSurveysToReduxStoreReducer.response),y:createNorthingCoordinates(saveSurveysToReduxStoreReducer.response),type:\"scatter\",mode:\"lines+markers\",marker:{color:\"red\"},name:\"Surveys\"},{x:createEastingCoordinates(saveLeaseLinesToReduxStoreReducer.response.grid,true),y:createNorthingCoordinates(saveLeaseLinesToReduxStoreReducer.response.grid,true),type:\"scatter\",mode:\"lines+markers\",marker:{color:\"black\"},name:\"Lease Lines\"},{x:createEastingCoordinates(saveHardLinesToReduxStoreReducer.response.grid,true),y:createNorthingCoordinates(saveHardLinesToReduxStoreReducer.response.grid,true),type:\"scatter\",mode:\"lines+markers\",marker:{color:\"red\"},name:\"Lease Lines\"}],layout:{width:1000,height:800,title:'Plan View'}});};return/*#__PURE__*/_jsxs(Container,{children:[renderSectionView(),renderPlanView()]});};var mapStateToProps=function mapStateToProps(_ref2){var saveHardLinesToReduxStoreReducer=_ref2.saveHardLinesToReduxStoreReducer,saveSurveysToReduxStoreReducer=_ref2.saveSurveysToReduxStoreReducer,savePlansToReduxStoreReducer=_ref2.savePlansToReduxStoreReducer,saveLeaseLinesToReduxStoreReducer=_ref2.saveLeaseLinesToReduxStoreReducer,getWellPlansFromDynamoDbReducer=_ref2.getWellPlansFromDynamoDbReducer,getLeaseLinesFromDynamoDbReducer=_ref2.getLeaseLinesFromDynamoDbReducer,getHardLinesFromDynamoDbReducer=_ref2.getHardLinesFromDynamoDbReducer,getSurveysFromDynamoDbReducer=_ref2.getSurveysFromDynamoDbReducer,activeWell=_ref2.activeWell;return{savePlansToReduxStoreReducer:savePlansToReduxStoreReducer,saveLeaseLinesToReduxStoreReducer:saveLeaseLinesToReduxStoreReducer,activeWell:activeWell,saveHardLinesToReduxStoreReducer:saveHardLinesToReduxStoreReducer,saveSurveysToReduxStoreReducer:saveSurveysToReduxStoreReducer,getWellPlansFromDynamoDbReducer:getWellPlansFromDynamoDbReducer,getLeaseLinesFromDynamoDbReducer:getLeaseLinesFromDynamoDbReducer,getHardLinesFromDynamoDbReducer:getHardLinesFromDynamoDbReducer,getSurveysFromDynamoDbReducer:getSurveysFromDynamoDbReducer};};export default connect(mapStateToProps,{savePlansToReduxStore:savePlansToReduxStore,saveLeaseLinesToReduxStore:saveLeaseLinesToReduxStore,saveWellInfoToReduxStore:saveWellInfoToReduxStore})(PVA);","map":{"version":3,"sources":["/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Components/PVA.js"],"names":["React","Container","Plot","connect","_","savePlansToReduxStore","saveLeaseLinesToReduxStore","saveWellInfoToReduxStore","PVA","saveSurveysToReduxStoreReducer","saveHardLinesToReduxStoreReducer","savePlansToReduxStoreReducer","saveLeaseLinesToReduxStoreReducer","getWellPlansFromDynamoDbReducer","getLeaseLinesFromDynamoDbReducer","getHardLinesFromDynamoDbReducer","getSurveysFromDynamoDbReducer","activeWell","createEastingCoordinates","data","polyLine","map","row","index","value","slice","createNorthingCoordinates","createTVDCoordinates","console","log","length","createSectCoordinates","renderSectionView","x","response","y","type","mode","marker","color","name","width","height","title","renderPlanView","grid","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport Container from \"react-bootstrap/Container\"\nimport Plot from 'react-plotly.js';\nimport { connect } from \"react-redux\"\nimport _ from \"lodash\"\nimport savePlansToReduxStore from \"../ActionCreators/savePlansToReduxStore\"\nimport saveLeaseLinesToReduxStore from \"../ActionCreators/saveLeaseLinesToReduxStore\"\nimport saveWellInfoToReduxStore from \"../ActionCreators/saveWellInfoToReduxStore\"\n\n\nconst PVA = ({\n  saveSurveysToReduxStoreReducer, \n  saveHardLinesToReduxStoreReducer, \n  savePlansToReduxStoreReducer, \n  saveLeaseLinesToReduxStoreReducer, \n  getWellPlansFromDynamoDbReducer, \n  getLeaseLinesFromDynamoDbReducer,\n  getHardLinesFromDynamoDbReducer,\n  getSurveysFromDynamoDbReducer,\n  activeWell\n}) => {\n  const createEastingCoordinates = (data, polyLine = false) => {\n    if (polyLine) {\n      // if (Object.keys(data).length === 0) {\n      //   console.log(\"nada\")\n      //   return []\n      // } else {\n      //   let result = data.map((row, index) => data[index][2].value).slice(1)\n      //   // console.log(\"easting\" + result)\n      //   return result\n      return data.map((row, index) => data[index][2].value).slice(1) || []\n      // }\n    } else {\n      // if (Object.keys(data).length === 0) {\n      //   console.log(\"nada\")\n      //   return []\n      // } else {\n      //   let result = data.map((row, index) => data[index][6].value).slice(1)\n      //   // console.log(\"easting\" + result)\n      //   return result\n      return data.map((row, index) => data[index][6].value).slice(1) || []\n      }\n    }\n\n  \n  const createNorthingCoordinates = (data, polyLine = false) => {\n    if (polyLine) {\n      // if (Object.keys(data).length === 0) {\n      //   return []\n      // } else {\n      //   let result = data.map((row, index) => data[index][1].value).slice(1)\n      //   // console.log(\"northing:\" + result)\n      //   return result\n      return data.map((row, index) => data[index][1].value).slice(1) || []\n      // }\n    } else {\n      // if (Object.keys(data).length === 0) {\n      //   console.log(\"nada\")\n      //   return []\n      // } else {\n        // let result = data.map((row, index) => data[index][5].value).slice(1)\n        // console.log(\"northing\" + result)\n        // return result\n      // }\n      return data.map((row, index) => data[index][5].value).slice(1) || []\n    }\n  }\n\n  const createTVDCoordinates = (data) => {\n    console.log(data)\n    if (data.length === 0) {\n      return []\n    } else {\n      return data.map((row, index) => data[index][4].value * -1 ).slice(1)\n    }\n  } \n\n  const createSectCoordinates = (data) => {\n\n    if (data.length === 0) {\n      return []\n    } else {\n      return data.map((row, index) => data[index][7].value).slice(1)\n    }\n  }\n  \n\n  \n\n  const renderSectionView = () => {\n    return (\n      <Plot\n      data={[\n        {\n          x: createTVDCoordinates(savePlansToReduxStoreReducer.response),\n          y: createSectCoordinates(savePlansToReduxStoreReducer.response),\n          type: \"scatter\",\n          mode: \"lines+markers\",\n          marker: {color: \"blue\"},\n          name: \"Plan\"\n        },\n        {\n          x: createTVDCoordinates(saveSurveysToReduxStoreReducer.response),\n          y: createSectCoordinates(saveSurveysToReduxStoreReducer.response),\n          type: \"scatter\",\n          mode: \"lines+markers\",\n          marker: {color: \"Red\"},\n          name: \"Surveys\"\n        },\n      ]}\n      layout = { {width: 1000, height: 800, title: 'Section View'} }\n      />\n    )\n  }\n  const renderPlanView = () => {\n    // if (\n    //   Object.keys(savePlansToReduxStoreReducer.response).length === 0 && Object.keys(save)\n    // )\n    return (\n      <Plot\n        data={[\n          {\n            x: createEastingCoordinates(savePlansToReduxStoreReducer.response),\n            y: createNorthingCoordinates(savePlansToReduxStoreReducer.response),\n            type: \"scatter\",\n            mode: \"lines+markers\",\n            marker: {color: \"blue\"},\n            name: \"Plan\"\n          },\n          {\n            x: createEastingCoordinates(saveSurveysToReduxStoreReducer.response),\n            y: createNorthingCoordinates(saveSurveysToReduxStoreReducer.response),\n            type: \"scatter\",\n            mode: \"lines+markers\",\n            marker: {color: \"red\"},\n            name: \"Surveys\"\n          },\n          {\n            x: createEastingCoordinates(saveLeaseLinesToReduxStoreReducer.response.grid, true),\n            y: createNorthingCoordinates(saveLeaseLinesToReduxStoreReducer.response.grid, true),\n            type: \"scatter\",\n            mode: \"lines+markers\",\n            marker: {color: \"black\"},\n            name: \"Lease Lines\"\n          },\n          {\n            x: createEastingCoordinates(saveHardLinesToReduxStoreReducer.response.grid, true),\n            y: createNorthingCoordinates(saveHardLinesToReduxStoreReducer.response.grid, true),\n            type: \"scatter\",\n            mode: \"lines+markers\",\n            marker: {color: \"red\"},\n            name: \"Lease Lines\"\n          },\n        ]}\n        layout = { {width: 1000, height: 800, title: 'Plan View'} }\n        />\n    )\n  }\n\n  return (\n    <Container>\n      {renderSectionView()}\n      {renderPlanView()}\n    </Container>\n  )\n\n}\n\nconst mapStateToProps = ({\n  saveHardLinesToReduxStoreReducer, \n  saveSurveysToReduxStoreReducer, \n  savePlansToReduxStoreReducer, \n  saveLeaseLinesToReduxStoreReducer,\n  getWellPlansFromDynamoDbReducer, \n  getLeaseLinesFromDynamoDbReducer,\n  getHardLinesFromDynamoDbReducer,\n  getSurveysFromDynamoDbReducer, \n  activeWell\n}) => {\n  return {\n    savePlansToReduxStoreReducer, \n    saveLeaseLinesToReduxStoreReducer, \n    activeWell,\n    saveHardLinesToReduxStoreReducer,\n    saveSurveysToReduxStoreReducer,\n    getWellPlansFromDynamoDbReducer, \n    getLeaseLinesFromDynamoDbReducer,\n    getHardLinesFromDynamoDbReducer,\n    getSurveysFromDynamoDbReducer, \n  }\n}\n\nexport default connect(mapStateToProps, { savePlansToReduxStore, saveLeaseLinesToReduxStore, saveWellInfoToReduxStore })(PVA)"]},"metadata":{},"sourceType":"module"}