{"ast":null,"code":"import { GET_LEASE_LINES_FROM_JSONDB_REQUESTED, GET_LEASE_LINES_FROM_JSONDB_RECEIVED, GET_LEASE_LINES_FROM_JSONDB_FAILED } from \"./types\";\nimport wells from \"../APIs/wells\";\nexport default ((selectedWell, getState) => {\n  console.log(selectedWell);\n  return async dispatch => {\n    // dispatch({\n    //   type: GET_LEASE_LINES_FROM_JSONDB_REQUESTED\n    // })\n    // try {\n    let result = null;\n    const response = await wells.get(\"LeaseLines\");\n    const listOfWells = response.data;\n    console.log(listOfWells);\n    const selectedWellConvertedToArray = selectedWell.split(\"-\").map(word => word.trim());\n    const selectedWellOperator = selectedWellConvertedToArray[0];\n    const selectedWell_Well = selectedWellConvertedToArray[2];\n\n    for (let well in listOfWells) {\n      if (listOfWells[well].operator === selectedWellOperator && listOfWells[well].well === selectedWell_Well) {\n        result = [...listOfWells[well].grid];\n      }\n    }\n\n    dispatch({\n      type: GET_LEASE_LINES_FROM_JSONDB_RECEIVED,\n      payload: result\n    });\n  }; // catch (error) {\n  //   dispatch({\n  //     type: GET_LEASE_LINES_FROM_JSONDB_FAILED,\n  //     payload: error\n  //   })\n  // }\n  // }\n});","map":{"version":3,"sources":["/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getLeaseLinesFromJSONDb.js"],"names":["GET_LEASE_LINES_FROM_JSONDB_REQUESTED","GET_LEASE_LINES_FROM_JSONDB_RECEIVED","GET_LEASE_LINES_FROM_JSONDB_FAILED","wells","selectedWell","getState","console","log","dispatch","result","response","get","listOfWells","data","selectedWellConvertedToArray","split","map","word","trim","selectedWellOperator","selectedWell_Well","well","operator","grid","type","payload"],"mappings":"AAAA,SAASA,qCAAT,EACEC,oCADF,EAEEC,kCAFF,QAE4C,SAF5C;AAGA,OAAOC,KAAP,MAAkB,eAAlB;AACE,gBAAe,CAACC,YAAD,EAAeC,QAAf,KAA4B;AACzCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;AACA,SAAO,MAAMI,QAAN,IAAkB;AACvB;AACA;AACA;AACA;AACE,QAAIC,MAAM,GAAG,IAAb;AACA,UAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAU,YAAV,CAAvB;AACA,UAAMC,WAAW,GAAGF,QAAQ,CAACG,IAA7B;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYK,WAAZ;AACA,UAAME,4BAA4B,GAAGV,YAAY,CAACW,KAAb,CAAmB,GAAnB,EAAwBC,GAAxB,CAA4BC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAApC,CAArC;AACA,UAAMC,oBAAoB,GAAGL,4BAA4B,CAAC,CAAD,CAAzD;AACA,UAAMM,iBAAiB,GAAGN,4BAA4B,CAAC,CAAD,CAAtD;;AACA,SAAK,IAAIO,IAAT,IAAiBT,WAAjB,EAA8B;AAC5B,UAAIA,WAAW,CAACS,IAAD,CAAX,CAAkBC,QAAlB,KAA+BH,oBAA/B,IAAuDP,WAAW,CAACS,IAAD,CAAX,CAAkBA,IAAlB,KAA2BD,iBAAtF,EAAyG;AACvGX,QAAAA,MAAM,GAAG,CAAC,GAAGG,WAAW,CAACS,IAAD,CAAX,CAAkBE,IAAtB,CAAT;AACD;AACF;;AACDf,IAAAA,QAAQ,CAAC;AACPgB,MAAAA,IAAI,EAAEvB,oCADC;AAEPwB,MAAAA,OAAO,EAAEhB;AAFF,KAAD,CAAR;AAID,GArBH,CAFyC,CAwBvC;AACA;AACA;AACA;AACA;AACA;AACF;AACA,CA/BF","sourcesContent":["import { GET_LEASE_LINES_FROM_JSONDB_REQUESTED,\n  GET_LEASE_LINES_FROM_JSONDB_RECEIVED,\n  GET_LEASE_LINES_FROM_JSONDB_FAILED } from \"./types\"\nimport wells from \"../APIs/wells\"\n  export default (selectedWell, getState) => {\n    console.log(selectedWell)\n    return async dispatch => {\n      // dispatch({\n      //   type: GET_LEASE_LINES_FROM_JSONDB_REQUESTED\n      // })\n      // try {\n        let result = null;\n        const response = await wells.get(\"LeaseLines\")\n        const listOfWells = response.data\n        console.log(listOfWells)\n        const selectedWellConvertedToArray = selectedWell.split(\"-\").map(word => word.trim())\n        const selectedWellOperator = selectedWellConvertedToArray[0]\n        const selectedWell_Well = selectedWellConvertedToArray[2]\n        for (let well in listOfWells) {\n          if (listOfWells[well].operator === selectedWellOperator && listOfWells[well].well === selectedWell_Well) {\n            result = [...listOfWells[well].grid]\n          }\n        }\n        dispatch({\n          type: GET_LEASE_LINES_FROM_JSONDB_RECEIVED,\n          payload: result\n        })\n      } \n      // catch (error) {\n      //   dispatch({\n      //     type: GET_LEASE_LINES_FROM_JSONDB_FAILED,\n      //     payload: error\n      //   })\n      // }\n    // }\n   }"]},"metadata":{},"sourceType":"module"}