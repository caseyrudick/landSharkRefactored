{"ast":null,"code":"/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar extendFlat = require('../../lib').extendFlat;\n\nvar OHLCattrs = require('../ohlc/attributes');\n\nvar boxAttrs = require('../box/attributes');\n\nfunction directionAttrs(lineColorDefault) {\n  return {\n    line: {\n      color: extendFlat({}, boxAttrs.line.color, {\n        dflt: lineColorDefault\n      }),\n      width: boxAttrs.line.width,\n      editType: 'style'\n    },\n    fillcolor: boxAttrs.fillcolor,\n    editType: 'style'\n  };\n}\n\nmodule.exports = {\n  xperiod: OHLCattrs.xperiod,\n  xperiod0: OHLCattrs.xperiod0,\n  xperiodalignment: OHLCattrs.xperiodalignment,\n  x: OHLCattrs.x,\n  open: OHLCattrs.open,\n  high: OHLCattrs.high,\n  low: OHLCattrs.low,\n  close: OHLCattrs.close,\n  line: {\n    width: extendFlat({}, boxAttrs.line.width, {\n      description: [boxAttrs.line.width.description, 'Note that this style setting can also be set per', 'direction via `increasing.line.width` and', '`decreasing.line.width`.'].join(' ')\n    }),\n    editType: 'style'\n  },\n  increasing: directionAttrs(OHLCattrs.increasing.line.color.dflt),\n  decreasing: directionAttrs(OHLCattrs.decreasing.line.color.dflt),\n  text: OHLCattrs.text,\n  hovertext: OHLCattrs.hovertext,\n  whiskerwidth: extendFlat({}, boxAttrs.whiskerwidth, {\n    dflt: 0\n  }),\n  hoverlabel: OHLCattrs.hoverlabel\n};","map":{"version":3,"sources":["/Users/caseyrudick/Documents/landsharkrefactored-copy/client/node_modules/plotly.js/src/traces/candlestick/attributes.js"],"names":["extendFlat","require","OHLCattrs","boxAttrs","directionAttrs","lineColorDefault","line","color","dflt","width","editType","fillcolor","module","exports","xperiod","xperiod0","xperiodalignment","x","open","high","low","close","description","join","increasing","decreasing","text","hovertext","whiskerwidth","hoverlabel"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AAEA,IAAIA,UAAU,GAAGC,OAAO,CAAC,WAAD,CAAP,CAAqBD,UAAtC;;AACA,IAAIE,SAAS,GAAGD,OAAO,CAAC,oBAAD,CAAvB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,mBAAD,CAAtB;;AAEA,SAASG,cAAT,CAAwBC,gBAAxB,EAA0C;AACtC,SAAO;AACHC,IAAAA,IAAI,EAAE;AACFC,MAAAA,KAAK,EAAEP,UAAU,CAAC,EAAD,EAAKG,QAAQ,CAACG,IAAT,CAAcC,KAAnB,EAA0B;AAACC,QAAAA,IAAI,EAAEH;AAAP,OAA1B,CADf;AAEFI,MAAAA,KAAK,EAAEN,QAAQ,CAACG,IAAT,CAAcG,KAFnB;AAGFC,MAAAA,QAAQ,EAAE;AAHR,KADH;AAOHC,IAAAA,SAAS,EAAER,QAAQ,CAACQ,SAPjB;AAQHD,IAAAA,QAAQ,EAAE;AARP,GAAP;AAUH;;AAEDE,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,OAAO,EAAEZ,SAAS,CAACY,OADN;AAEbC,EAAAA,QAAQ,EAAEb,SAAS,CAACa,QAFP;AAGbC,EAAAA,gBAAgB,EAAEd,SAAS,CAACc,gBAHf;AAKbC,EAAAA,CAAC,EAAEf,SAAS,CAACe,CALA;AAMbC,EAAAA,IAAI,EAAEhB,SAAS,CAACgB,IANH;AAObC,EAAAA,IAAI,EAAEjB,SAAS,CAACiB,IAPH;AAQbC,EAAAA,GAAG,EAAElB,SAAS,CAACkB,GARF;AASbC,EAAAA,KAAK,EAAEnB,SAAS,CAACmB,KATJ;AAWbf,EAAAA,IAAI,EAAE;AACFG,IAAAA,KAAK,EAAET,UAAU,CAAC,EAAD,EAAKG,QAAQ,CAACG,IAAT,CAAcG,KAAnB,EAA0B;AACvCa,MAAAA,WAAW,EAAE,CACTnB,QAAQ,CAACG,IAAT,CAAcG,KAAd,CAAoBa,WADX,EAET,kDAFS,EAGT,2CAHS,EAIT,0BAJS,EAKXC,IALW,CAKN,GALM;AAD0B,KAA1B,CADf;AASFb,IAAAA,QAAQ,EAAE;AATR,GAXO;AAuBbc,EAAAA,UAAU,EAAEpB,cAAc,CAACF,SAAS,CAACsB,UAAV,CAAqBlB,IAArB,CAA0BC,KAA1B,CAAgCC,IAAjC,CAvBb;AAyBbiB,EAAAA,UAAU,EAAErB,cAAc,CAACF,SAAS,CAACuB,UAAV,CAAqBnB,IAArB,CAA0BC,KAA1B,CAAgCC,IAAjC,CAzBb;AA2BbkB,EAAAA,IAAI,EAAExB,SAAS,CAACwB,IA3BH;AA4BbC,EAAAA,SAAS,EAAEzB,SAAS,CAACyB,SA5BR;AA6BbC,EAAAA,YAAY,EAAE5B,UAAU,CAAC,EAAD,EAAKG,QAAQ,CAACyB,YAAd,EAA4B;AAAEpB,IAAAA,IAAI,EAAE;AAAR,GAA5B,CA7BX;AA+BbqB,EAAAA,UAAU,EAAE3B,SAAS,CAAC2B;AA/BT,CAAjB","sourcesContent":["/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar extendFlat = require('../../lib').extendFlat;\nvar OHLCattrs = require('../ohlc/attributes');\nvar boxAttrs = require('../box/attributes');\n\nfunction directionAttrs(lineColorDefault) {\n    return {\n        line: {\n            color: extendFlat({}, boxAttrs.line.color, {dflt: lineColorDefault}),\n            width: boxAttrs.line.width,\n            editType: 'style'\n        },\n\n        fillcolor: boxAttrs.fillcolor,\n        editType: 'style'\n    };\n}\n\nmodule.exports = {\n    xperiod: OHLCattrs.xperiod,\n    xperiod0: OHLCattrs.xperiod0,\n    xperiodalignment: OHLCattrs.xperiodalignment,\n\n    x: OHLCattrs.x,\n    open: OHLCattrs.open,\n    high: OHLCattrs.high,\n    low: OHLCattrs.low,\n    close: OHLCattrs.close,\n\n    line: {\n        width: extendFlat({}, boxAttrs.line.width, {\n            description: [\n                boxAttrs.line.width.description,\n                'Note that this style setting can also be set per',\n                'direction via `increasing.line.width` and',\n                '`decreasing.line.width`.'\n            ].join(' ')\n        }),\n        editType: 'style'\n    },\n\n    increasing: directionAttrs(OHLCattrs.increasing.line.color.dflt),\n\n    decreasing: directionAttrs(OHLCattrs.decreasing.line.color.dflt),\n\n    text: OHLCattrs.text,\n    hovertext: OHLCattrs.hovertext,\n    whiskerwidth: extendFlat({}, boxAttrs.whiskerwidth, { dflt: 0 }),\n\n    hoverlabel: OHLCattrs.hoverlabel,\n};\n"]},"metadata":{},"sourceType":"script"}