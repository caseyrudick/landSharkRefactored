{"ast":null,"code":"/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar d3 = require('d3');\n\nvar isNumeric = require('fast-isnumeric');\n\nvar tinycolor = require('tinycolor2');\n\nvar Lib = require('../../lib');\n\nvar strTranslate = Lib.strTranslate;\nvar strRotate = Lib.strRotate;\n\nvar Events = require('../../lib/events');\n\nvar svgTextUtils = require('../../lib/svg_text_utils');\n\nvar overrideCursor = require('../../lib/override_cursor');\n\nvar Drawing = require('../drawing');\n\nvar Color = require('../color');\n\nvar dragElement = require('../dragelement');\n\nvar Axes = require('../../plots/cartesian/axes');\n\nvar Registry = require('../../registry');\n\nvar helpers = require('./helpers');\n\nvar constants = require('./constants');\n\nvar legendSupplyDefaults = require('../legend/defaults');\n\nvar legendDraw = require('../legend/draw'); // hover labels for multiple horizontal bars get tilted by some angle,\n// then need to be offset differently if they overlap\n\n\nvar YANGLE = constants.YANGLE;\nvar YA_RADIANS = Math.PI * YANGLE / 180; // expansion of projected height\n\nvar YFACTOR = 1 / Math.sin(YA_RADIANS); // to make the appropriate post-rotation x offset,\n// you need both x and y offsets\n\nvar YSHIFTX = Math.cos(YA_RADIANS);\nvar YSHIFTY = Math.sin(YA_RADIANS); // size and display constants for hover text\n\nvar HOVERARROWSIZE = constants.HOVERARROWSIZE;\nvar HOVERTEXTPAD = constants.HOVERTEXTPAD; // fx.hover: highlight data on hover\n// evt can be a mousemove event, or an object with data about what points\n//   to hover on\n//      {xpx,ypx[,hovermode]} - pixel locations from top left\n//          (with optional overriding hovermode)\n//      {xval,yval[,hovermode]} - data values\n//      [{curveNumber,(pointNumber|xval and/or yval)}] -\n//              array of specific points to highlight\n//          pointNumber is a single integer if gd.data[curveNumber] is 1D,\n//              or a two-element array if it's 2D\n//          xval and yval are data values,\n//              1D data may specify either or both,\n//              2D data must specify both\n// subplot is an id string (default \"xy\")\n// makes use of gl.hovermode, which can be:\n//      x (find the points with the closest x values, ie a column),\n//      closest (find the single closest point)\n//    internally there are two more that occasionally get used:\n//      y (pick out a row - only used for multiple horizontal bar charts)\n//      array (used when the user specifies an explicit\n//          array of points to hover on)\n//\n// We wrap the hovers in a timer, to limit their frequency.\n// The actual rendering is done by private function _hover.\n\nexports.hover = function hover(gd, evt, subplot, noHoverEvent) {\n  gd = Lib.getGraphDiv(gd);\n  Lib.throttle(gd._fullLayout._uid + constants.HOVERID, constants.HOVERMINTIME, function () {\n    _hover(gd, evt, subplot, noHoverEvent);\n  });\n};\n/*\n * Draw a single hover item or an array of hover item in a pre-existing svg container somewhere\n * hoverItem should have keys:\n *    - x and y (or x0, x1, y0, and y1):\n *      the pixel position to mark, relative to opts.container\n *    - xLabel, yLabel, zLabel, text, and name:\n *      info to go in the label\n *    - color:\n *      the background color for the label.\n *    - idealAlign (optional):\n *      'left' or 'right' for which side of the x/y box to try to put this on first\n *    - borderColor (optional):\n *      color for the border, defaults to strongest contrast with color\n *    - fontFamily (optional):\n *      string, the font for this label, defaults to constants.HOVERFONT\n *    - fontSize (optional):\n *      the label font size, defaults to constants.HOVERFONTSIZE\n *    - fontColor (optional):\n *      defaults to borderColor\n * opts should have keys:\n *    - bgColor:\n *      the background color this is against, used if the trace is\n *      non-opaque, and for the name, which goes outside the box\n *    - container:\n *      a <svg> or <g> element to add the hover label to\n *    - outerContainer:\n *      normally a parent of `container`, sets the bounding box to use to\n *      constrain the hover label and determine whether to show it on the left or right\n * opts can have optional keys:\n *    - anchorIndex:\n        the index of the hover item used as an anchor for positioning.\n        The other hover items will be pushed up or down to prevent overlap.\n */\n\n\nexports.loneHover = function loneHover(hoverItems, opts) {\n  var multiHover = true;\n\n  if (!Array.isArray(hoverItems)) {\n    multiHover = false;\n    hoverItems = [hoverItems];\n  }\n\n  var pointsData = hoverItems.map(function (hoverItem) {\n    return {\n      color: hoverItem.color || Color.defaultLine,\n      x0: hoverItem.x0 || hoverItem.x || 0,\n      x1: hoverItem.x1 || hoverItem.x || 0,\n      y0: hoverItem.y0 || hoverItem.y || 0,\n      y1: hoverItem.y1 || hoverItem.y || 0,\n      xLabel: hoverItem.xLabel,\n      yLabel: hoverItem.yLabel,\n      zLabel: hoverItem.zLabel,\n      text: hoverItem.text,\n      name: hoverItem.name,\n      idealAlign: hoverItem.idealAlign,\n      // optional extra bits of styling\n      borderColor: hoverItem.borderColor,\n      fontFamily: hoverItem.fontFamily,\n      fontSize: hoverItem.fontSize,\n      fontColor: hoverItem.fontColor,\n      nameLength: hoverItem.nameLength,\n      textAlign: hoverItem.textAlign,\n      // filler to make createHoverText happy\n      trace: hoverItem.trace || {\n        index: 0,\n        hoverinfo: ''\n      },\n      xa: {\n        _offset: 0\n      },\n      ya: {\n        _offset: 0\n      },\n      index: 0,\n      hovertemplate: hoverItem.hovertemplate || false,\n      eventData: hoverItem.eventData || false,\n      hovertemplateLabels: hoverItem.hovertemplateLabels || false\n    };\n  });\n  var container3 = d3.select(opts.container);\n  var outerContainer3 = opts.outerContainer ? d3.select(opts.outerContainer) : container3;\n  var fullOpts = {\n    hovermode: 'closest',\n    rotateLabels: false,\n    bgColor: opts.bgColor || Color.background,\n    container: container3,\n    outerContainer: outerContainer3\n  };\n  var hoverLabel = createHoverText(pointsData, fullOpts, opts.gd); // Fix vertical overlap\n\n  var tooltipSpacing = 5;\n  var lastBottomY = 0;\n  var anchor = 0;\n  hoverLabel.sort(function (a, b) {\n    return a.y0 - b.y0;\n  }).each(function (d, i) {\n    var topY = d.y0 - d.by / 2;\n\n    if (topY - tooltipSpacing < lastBottomY) {\n      d.offset = lastBottomY - topY + tooltipSpacing;\n    } else {\n      d.offset = 0;\n    }\n\n    lastBottomY = topY + d.by + d.offset;\n    if (i === opts.anchorIndex || 0) anchor = d.offset;\n  }).each(function (d) {\n    d.offset -= anchor;\n  });\n  var scaleX = opts.gd._fullLayout._invScaleX;\n  var scaleY = opts.gd._fullLayout._invScaleY;\n  alignHoverText(hoverLabel, fullOpts.rotateLabels, scaleX, scaleY);\n  return multiHover ? hoverLabel : hoverLabel.node();\n}; // The actual implementation is here:\n\n\nfunction _hover(gd, evt, subplot, noHoverEvent) {\n  if (!subplot) subplot = 'xy'; // if the user passed in an array of subplots,\n  // use those instead of finding overlayed plots\n\n  var subplots = Array.isArray(subplot) ? subplot : [subplot];\n  var fullLayout = gd._fullLayout;\n  var plots = fullLayout._plots || [];\n  var plotinfo = plots[subplot];\n\n  var hasCartesian = fullLayout._has('cartesian'); // list of all overlaid subplots to look at\n\n\n  if (plotinfo) {\n    var overlayedSubplots = plotinfo.overlays.map(function (pi) {\n      return pi.id;\n    });\n    subplots = subplots.concat(overlayedSubplots);\n  }\n\n  var len = subplots.length;\n  var xaArray = new Array(len);\n  var yaArray = new Array(len);\n  var supportsCompare = false;\n\n  for (var i = 0; i < len; i++) {\n    var spId = subplots[i];\n\n    if (plots[spId]) {\n      // 'cartesian' case\n      supportsCompare = true;\n      xaArray[i] = plots[spId].xaxis;\n      yaArray[i] = plots[spId].yaxis;\n    } else if (fullLayout[spId] && fullLayout[spId]._subplot) {\n      // other subplot types\n      var _subplot = fullLayout[spId]._subplot;\n      xaArray[i] = _subplot.xaxis;\n      yaArray[i] = _subplot.yaxis;\n    } else {\n      Lib.warn('Unrecognized subplot: ' + spId);\n      return;\n    }\n  }\n\n  var hovermode = evt.hovermode || fullLayout.hovermode;\n  if (hovermode && !supportsCompare) hovermode = 'closest';\n\n  if (['x', 'y', 'closest', 'x unified', 'y unified'].indexOf(hovermode) === -1 || !gd.calcdata || gd.querySelector('.zoombox') || gd._dragging) {\n    return dragElement.unhoverRaw(gd, evt);\n  }\n\n  var hoverdistance = fullLayout.hoverdistance === -1 ? Infinity : fullLayout.hoverdistance;\n  var spikedistance = fullLayout.spikedistance === -1 ? Infinity : fullLayout.spikedistance; // hoverData: the set of candidate points we've found to highlight\n\n  var hoverData = []; // searchData: the data to search in. Mostly this is just a copy of\n  // gd.calcdata, filtered to the subplot and overlays we're on\n  // but if a point array is supplied it will be a mapping\n  // of indicated curves\n\n  var searchData = []; // [x|y]valArray: the axis values of the hover event\n  // mapped onto each of the currently selected overlaid subplots\n\n  var xvalArray, yvalArray;\n  var itemnum, curvenum, cd, trace, subplotId, subploti, mode, xval, yval, pointData, closedataPreviousLength; // spikePoints: the set of candidate points we've found to draw spikes to\n\n  var spikePoints = {\n    hLinePoint: null,\n    vLinePoint: null\n  }; // does subplot have one (or more) horizontal traces?\n  // This is used to determine whether we rotate the labels or not\n\n  var hasOneHorizontalTrace = false; // Figure out what we're hovering on:\n  // mouse location or user-supplied data\n\n  if (Array.isArray(evt)) {\n    // user specified an array of points to highlight\n    hovermode = 'array';\n\n    for (itemnum = 0; itemnum < evt.length; itemnum++) {\n      cd = gd.calcdata[evt[itemnum].curveNumber || 0];\n\n      if (cd) {\n        trace = cd[0].trace;\n\n        if (cd[0].trace.hoverinfo !== 'skip') {\n          searchData.push(cd);\n\n          if (trace.orientation === 'h') {\n            hasOneHorizontalTrace = true;\n          }\n        }\n      }\n    }\n  } else {\n    for (curvenum = 0; curvenum < gd.calcdata.length; curvenum++) {\n      cd = gd.calcdata[curvenum];\n      trace = cd[0].trace;\n\n      if (trace.hoverinfo !== 'skip' && helpers.isTraceInSubplots(trace, subplots)) {\n        searchData.push(cd);\n\n        if (trace.orientation === 'h') {\n          hasOneHorizontalTrace = true;\n        }\n      }\n    } // [x|y]px: the pixels (from top left) of the mouse location\n    // on the currently selected plot area\n    // add pointerX|Y property for drawing the spikes in spikesnap 'cursor' situation\n\n\n    var hasUserCalledHover = !evt.target;\n    var xpx, ypx;\n\n    if (hasUserCalledHover) {\n      if ('xpx' in evt) xpx = evt.xpx;else xpx = xaArray[0]._length / 2;\n      if ('ypx' in evt) ypx = evt.ypx;else ypx = yaArray[0]._length / 2;\n    } else {\n      // fire the beforehover event and quit if it returns false\n      // note that we're only calling this on real mouse events, so\n      // manual calls to fx.hover will always run.\n      if (Events.triggerHandler(gd, 'plotly_beforehover', evt) === false) {\n        return;\n      }\n\n      var dbb = evt.target.getBoundingClientRect();\n      xpx = evt.clientX - dbb.left;\n      ypx = evt.clientY - dbb.top;\n\n      fullLayout._calcInverseTransform(gd);\n\n      var transformedCoords = Lib.apply3DTransform(fullLayout._invTransform)(xpx, ypx);\n      xpx = transformedCoords[0];\n      ypx = transformedCoords[1]; // in case hover was called from mouseout into hovertext,\n      // it's possible you're not actually over the plot anymore\n\n      if (xpx < 0 || xpx > xaArray[0]._length || ypx < 0 || ypx > yaArray[0]._length) {\n        return dragElement.unhoverRaw(gd, evt);\n      }\n    }\n\n    evt.pointerX = xpx + xaArray[0]._offset;\n    evt.pointerY = ypx + yaArray[0]._offset;\n    if ('xval' in evt) xvalArray = helpers.flat(subplots, evt.xval);else xvalArray = helpers.p2c(xaArray, xpx);\n    if ('yval' in evt) yvalArray = helpers.flat(subplots, evt.yval);else yvalArray = helpers.p2c(yaArray, ypx);\n\n    if (!isNumeric(xvalArray[0]) || !isNumeric(yvalArray[0])) {\n      Lib.warn('Fx.hover failed', evt, gd);\n      return dragElement.unhoverRaw(gd, evt);\n    }\n  } // the pixel distance to beat as a matching point\n  // in 'x' or 'y' mode this resets for each trace\n\n\n  var distance = Infinity; // find the closest point in each trace\n  // this is minimum dx and/or dy, depending on mode\n  // and the pixel position for the label (labelXpx, labelYpx)\n\n  function findHoverPoints(customXVal, customYVal) {\n    for (curvenum = 0; curvenum < searchData.length; curvenum++) {\n      cd = searchData[curvenum]; // filter out invisible or broken data\n\n      if (!cd || !cd[0] || !cd[0].trace) continue;\n      trace = cd[0].trace;\n      if (trace.visible !== true || trace._length === 0) continue; // Explicitly bail out for these two. I don't know how to otherwise prevent\n      // the rest of this function from running and failing\n\n      if (['carpet', 'contourcarpet'].indexOf(trace._module.name) !== -1) continue;\n\n      if (trace.type === 'splom') {\n        // splom traces do not generate overlay subplots,\n        // it is safe to assume here splom traces correspond to the 0th subplot\n        subploti = 0;\n        subplotId = subplots[subploti];\n      } else {\n        subplotId = helpers.getSubplot(trace);\n        subploti = subplots.indexOf(subplotId);\n      } // within one trace mode can sometimes be overridden\n\n\n      mode = hovermode;\n\n      if (helpers.isUnifiedHover(mode)) {\n        mode = mode.charAt(0);\n      } // container for new point, also used to pass info into module.hoverPoints\n\n\n      pointData = {\n        // trace properties\n        cd: cd,\n        trace: trace,\n        xa: xaArray[subploti],\n        ya: yaArray[subploti],\n        // max distances for hover and spikes - for points that want to show but do not\n        // want to override other points, set distance/spikeDistance equal to max*Distance\n        // and it will not get filtered out but it will be guaranteed to have a greater\n        // distance than any point that calculated a real distance.\n        maxHoverDistance: hoverdistance,\n        maxSpikeDistance: spikedistance,\n        // point properties - override all of these\n        index: false,\n        // point index in trace - only used by plotly.js hoverdata consumers\n        distance: Math.min(distance, hoverdistance),\n        // pixel distance or pseudo-distance\n        // distance/pseudo-distance for spikes. This distance should always be calculated\n        // as if in \"closest\" mode, and should only be set if this point should\n        // generate a spike.\n        spikeDistance: Infinity,\n        // in some cases the spikes have different positioning from the hover label\n        // they don't need x0/x1, just one position\n        xSpike: undefined,\n        ySpike: undefined,\n        // where and how to display the hover label\n        color: Color.defaultLine,\n        // trace color\n        name: trace.name,\n        x0: undefined,\n        x1: undefined,\n        y0: undefined,\n        y1: undefined,\n        xLabelVal: undefined,\n        yLabelVal: undefined,\n        zLabelVal: undefined,\n        text: undefined\n      }; // add ref to subplot object (non-cartesian case)\n\n      if (fullLayout[subplotId]) {\n        pointData.subplot = fullLayout[subplotId]._subplot;\n      } // add ref to splom scene\n\n\n      if (fullLayout._splomScenes && fullLayout._splomScenes[trace.uid]) {\n        pointData.scene = fullLayout._splomScenes[trace.uid];\n      }\n\n      closedataPreviousLength = hoverData.length; // for a highlighting array, figure out what\n      // we're searching for with this element\n\n      if (mode === 'array') {\n        var selection = evt[curvenum];\n\n        if ('pointNumber' in selection) {\n          pointData.index = selection.pointNumber;\n          mode = 'closest';\n        } else {\n          mode = '';\n\n          if ('xval' in selection) {\n            xval = selection.xval;\n            mode = 'x';\n          }\n\n          if ('yval' in selection) {\n            yval = selection.yval;\n            mode = mode ? 'closest' : 'y';\n          }\n        }\n      } else if (customXVal !== undefined && customYVal !== undefined) {\n        xval = customXVal;\n        yval = customYVal;\n      } else {\n        xval = xvalArray[subploti];\n        yval = yvalArray[subploti];\n      } // Now if there is range to look in, find the points to hover.\n\n\n      if (hoverdistance !== 0) {\n        if (trace._module && trace._module.hoverPoints) {\n          var newPoints = trace._module.hoverPoints(pointData, xval, yval, mode, fullLayout._hoverlayer);\n\n          if (newPoints) {\n            var newPoint;\n\n            for (var newPointNum = 0; newPointNum < newPoints.length; newPointNum++) {\n              newPoint = newPoints[newPointNum];\n\n              if (isNumeric(newPoint.x0) && isNumeric(newPoint.y0)) {\n                hoverData.push(cleanPoint(newPoint, hovermode));\n              }\n            }\n          }\n        } else {\n          Lib.log('Unrecognized trace type in hover:', trace);\n        }\n      } // in closest mode, remove any existing (farther) points\n      // and don't look any farther than this latest point (or points, some\n      // traces like box & violin make multiple hover labels at once)\n\n\n      if (hovermode === 'closest' && hoverData.length > closedataPreviousLength) {\n        hoverData.splice(0, closedataPreviousLength);\n        distance = hoverData[0].distance;\n      } // Now if there is range to look in, find the points to draw the spikelines\n      // Do it only if there is no hoverData\n\n\n      if (hasCartesian && spikedistance !== 0) {\n        if (hoverData.length === 0) {\n          pointData.distance = spikedistance;\n          pointData.index = false;\n\n          var closestPoints = trace._module.hoverPoints(pointData, xval, yval, 'closest', fullLayout._hoverlayer);\n\n          if (closestPoints) {\n            closestPoints = closestPoints.filter(function (point) {\n              // some hover points, like scatter fills, do not allow spikes,\n              // so will generate a hover point but without a valid spikeDistance\n              return point.spikeDistance <= spikedistance;\n            });\n          }\n\n          if (closestPoints && closestPoints.length) {\n            var tmpPoint;\n            var closestVPoints = closestPoints.filter(function (point) {\n              return point.xa.showspikes && point.xa.spikesnap !== 'hovered data';\n            });\n\n            if (closestVPoints.length) {\n              var closestVPt = closestVPoints[0];\n\n              if (isNumeric(closestVPt.x0) && isNumeric(closestVPt.y0)) {\n                tmpPoint = fillSpikePoint(closestVPt);\n\n                if (!spikePoints.vLinePoint || spikePoints.vLinePoint.spikeDistance > tmpPoint.spikeDistance) {\n                  spikePoints.vLinePoint = tmpPoint;\n                }\n              }\n            }\n\n            var closestHPoints = closestPoints.filter(function (point) {\n              return point.ya.showspikes && point.ya.spikesnap !== 'hovered data';\n            });\n\n            if (closestHPoints.length) {\n              var closestHPt = closestHPoints[0];\n\n              if (isNumeric(closestHPt.x0) && isNumeric(closestHPt.y0)) {\n                tmpPoint = fillSpikePoint(closestHPt);\n\n                if (!spikePoints.hLinePoint || spikePoints.hLinePoint.spikeDistance > tmpPoint.spikeDistance) {\n                  spikePoints.hLinePoint = tmpPoint;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  findHoverPoints();\n\n  function selectClosestPoint(pointsData, spikedistance) {\n    var resultPoint = null;\n    var minDistance = Infinity;\n    var thisSpikeDistance;\n\n    for (var i = 0; i < pointsData.length; i++) {\n      thisSpikeDistance = pointsData[i].spikeDistance;\n\n      if (thisSpikeDistance <= minDistance && thisSpikeDistance <= spikedistance) {\n        resultPoint = pointsData[i];\n        minDistance = thisSpikeDistance;\n      }\n    }\n\n    return resultPoint;\n  }\n\n  function fillSpikePoint(point) {\n    if (!point) return null;\n    return {\n      xa: point.xa,\n      ya: point.ya,\n      x: point.xSpike !== undefined ? point.xSpike : (point.x0 + point.x1) / 2,\n      y: point.ySpike !== undefined ? point.ySpike : (point.y0 + point.y1) / 2,\n      distance: point.distance,\n      spikeDistance: point.spikeDistance,\n      curveNumber: point.trace.index,\n      color: point.color,\n      pointNumber: point.index\n    };\n  }\n\n  var spikelineOpts = {\n    fullLayout: fullLayout,\n    container: fullLayout._hoverlayer,\n    outerContainer: fullLayout._paperdiv,\n    event: evt\n  };\n  var oldspikepoints = gd._spikepoints;\n  var newspikepoints = {\n    vLinePoint: spikePoints.vLinePoint,\n    hLinePoint: spikePoints.hLinePoint\n  };\n  gd._spikepoints = newspikepoints; // Now if it is not restricted by spikedistance option, set the points to draw the spikelines\n\n  if (hasCartesian && spikedistance !== 0) {\n    if (hoverData.length !== 0) {\n      var tmpHPointData = hoverData.filter(function (point) {\n        return point.ya.showspikes;\n      });\n      var tmpHPoint = selectClosestPoint(tmpHPointData, spikedistance);\n      spikePoints.hLinePoint = fillSpikePoint(tmpHPoint);\n      var tmpVPointData = hoverData.filter(function (point) {\n        return point.xa.showspikes;\n      });\n      var tmpVPoint = selectClosestPoint(tmpVPointData, spikedistance);\n      spikePoints.vLinePoint = fillSpikePoint(tmpVPoint);\n    }\n  } // if hoverData is empty check for the spikes to draw and quit if there are none\n\n\n  if (hoverData.length === 0) {\n    var result = dragElement.unhoverRaw(gd, evt);\n\n    if (hasCartesian && (spikePoints.hLinePoint !== null || spikePoints.vLinePoint !== null)) {\n      if (spikesChanged(oldspikepoints)) {\n        createSpikelines(gd, spikePoints, spikelineOpts);\n      }\n    }\n\n    return result;\n  }\n\n  if (hasCartesian) {\n    if (spikesChanged(oldspikepoints)) {\n      createSpikelines(gd, spikePoints, spikelineOpts);\n    }\n  }\n\n  hoverData.sort(function (d1, d2) {\n    return d1.distance - d2.distance;\n  }); // If in compare mode, select every point at position\n\n  if (helpers.isXYhover(mode) && hoverData[0].length !== 0 && hoverData[0].trace.type !== 'splom' // TODO: add support for splom\n  ) {\n      var hd = hoverData[0];\n      var cd0 = hd.cd[hd.index];\n      var isGrouped = fullLayout.boxmode === 'group' || fullLayout.violinmode === 'group';\n      var xVal = hd.xVal;\n      var ax = hd.xa;\n      if (ax.type === 'category') xVal = ax._categoriesMap[xVal];\n      if (ax.type === 'date') xVal = ax.d2c(xVal);\n\n      if (cd0 && cd0.t && cd0.t.posLetter === ax._id && isGrouped) {\n        xVal += cd0.t.dPos;\n      }\n\n      var yVal = hd.yVal;\n      ax = hd.ya;\n      if (ax.type === 'category') yVal = ax._categoriesMap[yVal];\n      if (ax.type === 'date') yVal = ax.d2c(yVal);\n\n      if (cd0 && cd0.t && cd0.t.posLetter === ax._id && isGrouped) {\n        yVal += cd0.t.dPos;\n      }\n\n      findHoverPoints(xVal, yVal); // Remove duplicated hoverData points\n      // note that d3 also filters identical points in the rendering steps\n\n      var repeated = {};\n      hoverData = hoverData.filter(function (hd) {\n        var key = hoverDataKey(hd);\n\n        if (!repeated[key]) {\n          repeated[key] = true;\n          return repeated[key];\n        }\n      });\n    } // lastly, emit custom hover/unhover events\n\n\n  var oldhoverdata = gd._hoverdata;\n  var newhoverdata = []; // pull out just the data that's useful to\n  // other people and send it to the event\n\n  for (itemnum = 0; itemnum < hoverData.length; itemnum++) {\n    var pt = hoverData[itemnum];\n    var eventData = helpers.makeEventData(pt, pt.trace, pt.cd);\n\n    if (pt.hovertemplate !== false) {\n      var ht = false;\n\n      if (pt.cd[pt.index] && pt.cd[pt.index].ht) {\n        ht = pt.cd[pt.index].ht;\n      }\n\n      pt.hovertemplate = ht || pt.trace.hovertemplate || false;\n    }\n\n    pt.eventData = [eventData];\n    newhoverdata.push(eventData);\n  }\n\n  gd._hoverdata = newhoverdata;\n  var rotateLabels = hovermode === 'y' && (searchData.length > 1 || hoverData.length > 1) || hovermode === 'closest' && hasOneHorizontalTrace && hoverData.length > 1;\n  var bgColor = Color.combine(fullLayout.plot_bgcolor || Color.background, fullLayout.paper_bgcolor);\n  var labelOpts = {\n    hovermode: hovermode,\n    rotateLabels: rotateLabels,\n    bgColor: bgColor,\n    container: fullLayout._hoverlayer,\n    outerContainer: fullLayout._paperdiv,\n    commonLabelOpts: fullLayout.hoverlabel,\n    hoverdistance: fullLayout.hoverdistance\n  };\n  var hoverLabels = createHoverText(hoverData, labelOpts, gd);\n\n  if (!helpers.isUnifiedHover(hovermode)) {\n    hoverAvoidOverlaps(hoverLabels, rotateLabels ? 'xa' : 'ya', fullLayout);\n    alignHoverText(hoverLabels, rotateLabels, fullLayout._invScaleX, fullLayout._invScaleY);\n  } // TODO: tagName hack is needed to appease geo.js's hack of using evt.target=true\n  // we should improve the \"fx\" API so other plots can use it without these hack.\n\n\n  if (evt.target && evt.target.tagName) {\n    var hasClickToShow = Registry.getComponentMethod('annotations', 'hasClickToShow')(gd, newhoverdata);\n    overrideCursor(d3.select(evt.target), hasClickToShow ? 'pointer' : '');\n  } // don't emit events if called manually\n\n\n  if (!evt.target || noHoverEvent || !hoverChanged(gd, evt, oldhoverdata)) return;\n\n  if (oldhoverdata) {\n    gd.emit('plotly_unhover', {\n      event: evt,\n      points: oldhoverdata\n    });\n  }\n\n  gd.emit('plotly_hover', {\n    event: evt,\n    points: gd._hoverdata,\n    xaxes: xaArray,\n    yaxes: yaArray,\n    xvals: xvalArray,\n    yvals: yvalArray\n  });\n}\n\nfunction hoverDataKey(d) {\n  return [d.trace.index, d.index, d.x0, d.y0, d.name, d.attr, d.xa, d.ya || ''].join(',');\n}\n\nvar EXTRA_STRING_REGEX = /<extra>([\\s\\S]*)<\\/extra>/;\n\nfunction createHoverText(hoverData, opts, gd) {\n  var fullLayout = gd._fullLayout;\n  var hovermode = opts.hovermode;\n  var rotateLabels = opts.rotateLabels;\n  var bgColor = opts.bgColor;\n  var container = opts.container;\n  var outerContainer = opts.outerContainer;\n  var commonLabelOpts = opts.commonLabelOpts || {}; // opts.fontFamily/Size are used for the common label\n  // and as defaults for each hover label, though the individual labels\n  // can override this.\n\n  var fontFamily = opts.fontFamily || constants.HOVERFONT;\n  var fontSize = opts.fontSize || constants.HOVERFONTSIZE;\n  var c0 = hoverData[0];\n  var xa = c0.xa;\n  var ya = c0.ya;\n  var commonAttr = hovermode.charAt(0) === 'y' ? 'yLabel' : 'xLabel';\n  var t0 = c0[commonAttr];\n  var t00 = (String(t0) || '').split(' ')[0];\n  var outerContainerBB = outerContainer.node().getBoundingClientRect();\n  var outerTop = outerContainerBB.top;\n  var outerWidth = outerContainerBB.width;\n  var outerHeight = outerContainerBB.height; // show the common label, if any, on the axis\n  // never show a common label in array mode,\n  // even if sometimes there could be one\n\n  var showCommonLabel = t0 !== undefined && c0.distance <= opts.hoverdistance && (hovermode === 'x' || hovermode === 'y'); // all hover traces hoverinfo must contain the hovermode\n  // to have common labels\n\n  if (showCommonLabel) {\n    var allHaveZ = true;\n    var i, traceHoverinfo;\n\n    for (i = 0; i < hoverData.length; i++) {\n      if (allHaveZ && hoverData[i].zLabel === undefined) allHaveZ = false;\n      traceHoverinfo = hoverData[i].hoverinfo || hoverData[i].trace.hoverinfo;\n\n      if (traceHoverinfo) {\n        var parts = Array.isArray(traceHoverinfo) ? traceHoverinfo : traceHoverinfo.split('+');\n\n        if (parts.indexOf('all') === -1 && parts.indexOf(hovermode) === -1) {\n          showCommonLabel = false;\n          break;\n        }\n      }\n    } // xyz labels put all info in their main label, so have no need of a common label\n\n\n    if (allHaveZ) showCommonLabel = false;\n  }\n\n  var commonLabel = container.selectAll('g.axistext').data(showCommonLabel ? [0] : []);\n  commonLabel.enter().append('g').classed('axistext', true);\n  commonLabel.exit().remove();\n  commonLabel.each(function () {\n    var label = d3.select(this);\n    var lpath = Lib.ensureSingle(label, 'path', '', function (s) {\n      s.style({\n        'stroke-width': '1px'\n      });\n    });\n    var ltext = Lib.ensureSingle(label, 'text', '', function (s) {\n      // prohibit tex interpretation until we can handle\n      // tex and regular text together\n      s.attr('data-notex', 1);\n    });\n    var commonBgColor = commonLabelOpts.bgcolor || Color.defaultLine;\n    var commonStroke = commonLabelOpts.bordercolor || Color.contrast(commonBgColor);\n    var contrastColor = Color.contrast(commonBgColor);\n    var commonLabelFont = {\n      family: commonLabelOpts.font.family || fontFamily,\n      size: commonLabelOpts.font.size || fontSize,\n      color: commonLabelOpts.font.color || contrastColor\n    };\n    lpath.style({\n      fill: commonBgColor,\n      stroke: commonStroke\n    });\n    ltext.text(t0).call(Drawing.font, commonLabelFont).call(svgTextUtils.positionText, 0, 0).call(svgTextUtils.convertToTspans, gd);\n    label.attr('transform', '');\n    var tbb = ltext.node().getBoundingClientRect();\n    var lx, ly;\n\n    if (hovermode === 'x') {\n      var topsign = xa.side === 'top' ? '-' : '';\n      ltext.attr('text-anchor', 'middle').call(svgTextUtils.positionText, 0, xa.side === 'top' ? outerTop - tbb.bottom - HOVERARROWSIZE - HOVERTEXTPAD : outerTop - tbb.top + HOVERARROWSIZE + HOVERTEXTPAD);\n      lx = xa._offset + (c0.x0 + c0.x1) / 2;\n      ly = ya._offset + (xa.side === 'top' ? 0 : ya._length);\n      var halfWidth = tbb.width / 2 + HOVERTEXTPAD;\n\n      if (lx < halfWidth) {\n        lx = halfWidth;\n        lpath.attr('d', 'M-' + (halfWidth - HOVERARROWSIZE) + ',0' + 'L-' + (halfWidth - HOVERARROWSIZE * 2) + ',' + topsign + HOVERARROWSIZE + 'H' + (HOVERTEXTPAD + tbb.width / 2) + 'v' + topsign + (HOVERTEXTPAD * 2 + tbb.height) + 'H-' + halfWidth + 'V' + topsign + HOVERARROWSIZE + 'Z');\n      } else if (lx > fullLayout.width - halfWidth) {\n        lx = fullLayout.width - halfWidth;\n        lpath.attr('d', 'M' + (halfWidth - HOVERARROWSIZE) + ',0' + 'L' + halfWidth + ',' + topsign + HOVERARROWSIZE + 'v' + topsign + (HOVERTEXTPAD * 2 + tbb.height) + 'H-' + halfWidth + 'V' + topsign + HOVERARROWSIZE + 'H' + (halfWidth - HOVERARROWSIZE * 2) + 'Z');\n      } else {\n        lpath.attr('d', 'M0,0' + 'L' + HOVERARROWSIZE + ',' + topsign + HOVERARROWSIZE + 'H' + (HOVERTEXTPAD + tbb.width / 2) + 'v' + topsign + (HOVERTEXTPAD * 2 + tbb.height) + 'H-' + (HOVERTEXTPAD + tbb.width / 2) + 'V' + topsign + HOVERARROWSIZE + 'H-' + HOVERARROWSIZE + 'Z');\n      }\n    } else {\n      var anchor;\n      var sgn;\n      var leftsign;\n\n      if (ya.side === 'right') {\n        anchor = 'start';\n        sgn = 1;\n        leftsign = '';\n        lx = xa._offset + xa._length;\n      } else {\n        anchor = 'end';\n        sgn = -1;\n        leftsign = '-';\n        lx = xa._offset;\n      }\n\n      ly = ya._offset + (c0.y0 + c0.y1) / 2;\n      ltext.attr('text-anchor', anchor);\n      lpath.attr('d', 'M0,0' + 'L' + leftsign + HOVERARROWSIZE + ',' + HOVERARROWSIZE + 'V' + (HOVERTEXTPAD + tbb.height / 2) + 'h' + leftsign + (HOVERTEXTPAD * 2 + tbb.width) + 'V-' + (HOVERTEXTPAD + tbb.height / 2) + 'H' + leftsign + HOVERARROWSIZE + 'V-' + HOVERARROWSIZE + 'Z');\n      var halfHeight = tbb.height / 2;\n      var lty = outerTop - tbb.top - halfHeight;\n      var clipId = 'clip' + fullLayout._uid + 'commonlabel' + ya._id;\n      var clipPath;\n\n      if (lx < tbb.width + 2 * HOVERTEXTPAD + HOVERARROWSIZE) {\n        clipPath = 'M-' + (HOVERARROWSIZE + HOVERTEXTPAD) + '-' + halfHeight + 'h-' + (tbb.width - HOVERTEXTPAD) + 'V' + halfHeight + 'h' + (tbb.width - HOVERTEXTPAD) + 'Z';\n        var ltx = tbb.width - lx + HOVERTEXTPAD;\n        svgTextUtils.positionText(ltext, ltx, lty); // shift each line (except the longest) so that start-of-line\n        // is always visible\n\n        if (anchor === 'end') {\n          ltext.selectAll('tspan').each(function () {\n            var s = d3.select(this);\n            var dummy = Drawing.tester.append('text').text(s.text()).call(Drawing.font, commonLabelFont);\n            var dummyBB = dummy.node().getBoundingClientRect();\n\n            if (Math.round(dummyBB.width) < Math.round(tbb.width)) {\n              s.attr('x', ltx - dummyBB.width);\n            }\n\n            dummy.remove();\n          });\n        }\n      } else {\n        svgTextUtils.positionText(ltext, sgn * (HOVERTEXTPAD + HOVERARROWSIZE), lty);\n        clipPath = null;\n      }\n\n      var textClip = fullLayout._topclips.selectAll('#' + clipId).data(clipPath ? [0] : []);\n\n      textClip.enter().append('clipPath').attr('id', clipId).append('path');\n      textClip.exit().remove();\n      textClip.select('path').attr('d', clipPath);\n      Drawing.setClipUrl(ltext, clipPath ? clipId : null, gd);\n    }\n\n    label.attr('transform', strTranslate(lx, ly)); // remove the \"close but not quite\" points\n    // because of error bars, only take up to a space\n\n    hoverData = filterClosePoints(hoverData);\n  });\n\n  function filterClosePoints(hoverData) {\n    return hoverData.filter(function (d) {\n      return d.zLabelVal !== undefined || (d[commonAttr] || '').split(' ')[0] === t00;\n    });\n  } // Show a single hover label\n\n\n  if (helpers.isUnifiedHover(hovermode)) {\n    // Delete leftover hover labels from other hovermodes\n    container.selectAll('g.hovertext').remove(); // similarly to compare mode, we remove the \"close but not quite together\" points\n\n    if (t0 !== undefined && c0.distance <= opts.hoverdistance) hoverData = filterClosePoints(hoverData); // Return early if nothing is hovered on\n\n    if (hoverData.length === 0) return; // mock legend\n\n    var mockLayoutIn = {\n      showlegend: true,\n      legend: {\n        title: {\n          text: t0,\n          font: fullLayout.hoverlabel.font\n        },\n        font: fullLayout.hoverlabel.font,\n        bgcolor: fullLayout.hoverlabel.bgcolor,\n        bordercolor: fullLayout.hoverlabel.bordercolor,\n        borderwidth: 1,\n        tracegroupgap: 7,\n        traceorder: fullLayout.legend ? fullLayout.legend.traceorder : undefined,\n        orientation: 'v'\n      }\n    };\n    var mockLayoutOut = {};\n    legendSupplyDefaults(mockLayoutIn, mockLayoutOut, gd._fullData);\n    var legendOpts = mockLayoutOut.legend; // prepare items for the legend\n\n    legendOpts.entries = [];\n\n    for (var j = 0; j < hoverData.length; j++) {\n      var texts = getHoverLabelText(hoverData[j], true, hovermode, fullLayout, t0);\n      var text = texts[0];\n      var name = texts[1];\n      var pt = hoverData[j];\n      pt.name = name;\n\n      if (name !== '') {\n        pt.text = name + ' : ' + text;\n      } else {\n        pt.text = text;\n      } // pass through marker's calcdata to style legend items\n\n\n      var cd = pt.cd[pt.index];\n\n      if (cd) {\n        if (cd.mc) pt.mc = cd.mc;\n        if (cd.mcc) pt.mc = cd.mcc;\n        if (cd.mlc) pt.mlc = cd.mlc;\n        if (cd.mlcc) pt.mlc = cd.mlcc;\n        if (cd.mlw) pt.mlw = cd.mlw;\n        if (cd.mrc) pt.mrc = cd.mrc;\n        if (cd.dir) pt.dir = cd.dir;\n      }\n\n      pt._distinct = true;\n      legendOpts.entries.push([pt]);\n    }\n\n    legendOpts.entries.sort(function (a, b) {\n      return a[0].trace.index - b[0].trace.index;\n    });\n    legendOpts.layer = container; // Draw unified hover label\n\n    legendDraw(gd, legendOpts); // Position the hover\n\n    var ly = Lib.mean(hoverData.map(function (c) {\n      return (c.y0 + c.y1) / 2;\n    }));\n    var lx = Lib.mean(hoverData.map(function (c) {\n      return (c.x0 + c.x1) / 2;\n    }));\n    var legendContainer = container.select('g.legend');\n    var tbb = legendContainer.node().getBoundingClientRect();\n    lx += xa._offset;\n    ly += ya._offset - tbb.height / 2; // Change horizontal alignment to end up on screen\n\n    var txWidth = tbb.width + 2 * HOVERTEXTPAD;\n    var anchorStartOK = lx + txWidth <= outerWidth;\n    var anchorEndOK = lx - txWidth >= 0;\n\n    if (!anchorStartOK && anchorEndOK) {\n      lx -= txWidth;\n    } else {\n      lx += 2 * HOVERTEXTPAD;\n    } // Change vertical alignement to end up on screen\n\n\n    var txHeight = tbb.height + 2 * HOVERTEXTPAD;\n    var overflowTop = ly <= outerTop;\n    var overflowBottom = ly + txHeight >= outerHeight;\n    var canFit = txHeight <= outerHeight;\n\n    if (canFit) {\n      if (overflowTop) {\n        ly = ya._offset + 2 * HOVERTEXTPAD;\n      } else if (overflowBottom) {\n        ly = outerHeight - txHeight;\n      }\n    }\n\n    legendContainer.attr('transform', strTranslate(lx, ly));\n    return legendContainer;\n  } // show all the individual labels\n  // first create the objects\n\n\n  var hoverLabels = container.selectAll('g.hovertext').data(hoverData, function (d) {\n    // N.B. when multiple items have the same result key-function value,\n    // only the first of those items in hoverData gets rendered\n    return hoverDataKey(d);\n  });\n  hoverLabels.enter().append('g').classed('hovertext', true).each(function () {\n    var g = d3.select(this); // trace name label (rect and text.name)\n\n    g.append('rect').call(Color.fill, Color.addOpacity(bgColor, 0.8));\n    g.append('text').classed('name', true); // trace data label (path and text.nums)\n\n    g.append('path').style('stroke-width', '1px');\n    g.append('text').classed('nums', true).call(Drawing.font, fontFamily, fontSize);\n  });\n  hoverLabels.exit().remove(); // then put the text in, position the pointer to the data,\n  // and figure out sizes\n\n  hoverLabels.each(function (d) {\n    var g = d3.select(this).attr('transform', '');\n    var dColor = d.color;\n\n    if (Array.isArray(dColor)) {\n      dColor = dColor[d.eventData[0].pointNumber];\n    } // combine possible non-opaque trace color with bgColor\n\n\n    var color0 = d.bgcolor || dColor; // color for 'nums' part of the label\n\n    var numsColor = Color.combine(Color.opacity(color0) ? color0 : Color.defaultLine, bgColor); // color for 'name' part of the label\n\n    var nameColor = Color.combine(Color.opacity(dColor) ? dColor : Color.defaultLine, bgColor); // find a contrasting color for border and text\n\n    var contrastColor = d.borderColor || Color.contrast(numsColor);\n    var texts = getHoverLabelText(d, showCommonLabel, hovermode, fullLayout, t0, g);\n    var text = texts[0];\n    var name = texts[1]; // main label\n\n    var tx = g.select('text.nums').call(Drawing.font, d.fontFamily || fontFamily, d.fontSize || fontSize, d.fontColor || contrastColor).text(text).attr('data-notex', 1).call(svgTextUtils.positionText, 0, 0).call(svgTextUtils.convertToTspans, gd);\n    var tx2 = g.select('text.name');\n    var tx2width = 0;\n    var tx2height = 0; // secondary label for non-empty 'name'\n\n    if (name && name !== text) {\n      tx2.call(Drawing.font, d.fontFamily || fontFamily, d.fontSize || fontSize, nameColor).text(name).attr('data-notex', 1).call(svgTextUtils.positionText, 0, 0).call(svgTextUtils.convertToTspans, gd);\n      var t2bb = tx2.node().getBoundingClientRect();\n      tx2width = t2bb.width + 2 * HOVERTEXTPAD;\n      tx2height = t2bb.height + 2 * HOVERTEXTPAD;\n    } else {\n      tx2.remove();\n      g.select('rect').remove();\n    }\n\n    g.select('path').style({\n      fill: numsColor,\n      stroke: contrastColor\n    });\n    var tbb = tx.node().getBoundingClientRect();\n    var htx = d.xa._offset + (d.x0 + d.x1) / 2;\n    var hty = d.ya._offset + (d.y0 + d.y1) / 2;\n    var dx = Math.abs(d.x1 - d.x0);\n    var dy = Math.abs(d.y1 - d.y0);\n    var txTotalWidth = tbb.width + HOVERARROWSIZE + HOVERTEXTPAD + tx2width;\n    var anchorStartOK, anchorEndOK;\n    d.ty0 = outerTop - tbb.top;\n    d.bx = tbb.width + 2 * HOVERTEXTPAD;\n    d.by = Math.max(tbb.height + 2 * HOVERTEXTPAD, tx2height);\n    d.anchor = 'start';\n    d.txwidth = tbb.width;\n    d.tx2width = tx2width;\n    d.offset = 0;\n\n    if (rotateLabels) {\n      d.pos = htx;\n      anchorStartOK = hty + dy / 2 + txTotalWidth <= outerHeight;\n      anchorEndOK = hty - dy / 2 - txTotalWidth >= 0;\n\n      if ((d.idealAlign === 'top' || !anchorStartOK) && anchorEndOK) {\n        hty -= dy / 2;\n        d.anchor = 'end';\n      } else if (anchorStartOK) {\n        hty += dy / 2;\n        d.anchor = 'start';\n      } else d.anchor = 'middle';\n    } else {\n      d.pos = hty;\n      anchorStartOK = htx + dx / 2 + txTotalWidth <= outerWidth;\n      anchorEndOK = htx - dx / 2 - txTotalWidth >= 0;\n\n      if ((d.idealAlign === 'left' || !anchorStartOK) && anchorEndOK) {\n        htx -= dx / 2;\n        d.anchor = 'end';\n      } else if (anchorStartOK) {\n        htx += dx / 2;\n        d.anchor = 'start';\n      } else {\n        d.anchor = 'middle';\n        var txHalfWidth = txTotalWidth / 2;\n        var overflowR = htx + txHalfWidth - outerWidth;\n        var overflowL = htx - txHalfWidth;\n        if (overflowR > 0) htx -= overflowR;\n        if (overflowL < 0) htx += -overflowL;\n      }\n    }\n\n    tx.attr('text-anchor', d.anchor);\n    if (tx2width) tx2.attr('text-anchor', d.anchor);\n    g.attr('transform', strTranslate(htx, hty) + (rotateLabels ? strRotate(YANGLE) : ''));\n  });\n  return hoverLabels;\n}\n\nfunction getHoverLabelText(d, showCommonLabel, hovermode, fullLayout, t0, g) {\n  var name = '';\n  var text = ''; // to get custom 'name' labels pass cleanPoint\n\n  if (d.nameOverride !== undefined) d.name = d.nameOverride;\n\n  if (d.name) {\n    if (d.trace._meta) {\n      d.name = Lib.templateString(d.name, d.trace._meta);\n    }\n\n    name = plainText(d.name, d.nameLength);\n  }\n\n  if (d.zLabel !== undefined) {\n    if (d.xLabel !== undefined) text += 'x: ' + d.xLabel + '<br>';\n    if (d.yLabel !== undefined) text += 'y: ' + d.yLabel + '<br>';\n\n    if (d.trace.type !== 'choropleth' && d.trace.type !== 'choroplethmapbox') {\n      text += (text ? 'z: ' : '') + d.zLabel;\n    }\n  } else if (showCommonLabel && d[hovermode.charAt(0) + 'Label'] === t0) {\n    text = d[(hovermode.charAt(0) === 'x' ? 'y' : 'x') + 'Label'] || '';\n  } else if (d.xLabel === undefined) {\n    if (d.yLabel !== undefined && d.trace.type !== 'scattercarpet') {\n      text = d.yLabel;\n    }\n  } else if (d.yLabel === undefined) text = d.xLabel;else text = '(' + d.xLabel + ', ' + d.yLabel + ')';\n\n  if ((d.text || d.text === 0) && !Array.isArray(d.text)) {\n    text += (text ? '<br>' : '') + d.text;\n  } // used by other modules (initially just ternary) that\n  // manage their own hoverinfo independent of cleanPoint\n  // the rest of this will still apply, so such modules\n  // can still put things in (x|y|z)Label, text, and name\n  // and hoverinfo will still determine their visibility\n\n\n  if (d.extraText !== undefined) text += (text ? '<br>' : '') + d.extraText; // if 'text' is empty at this point,\n  // and hovertemplate is not defined,\n  // put 'name' in main label and don't show secondary label\n\n  if (g && text === '' && !d.hovertemplate) {\n    // if 'name' is also empty, remove entire label\n    if (name === '') g.remove();\n    text = name;\n  } // hovertemplate\n\n\n  var d3locale = fullLayout._d3locale;\n  var hovertemplate = d.hovertemplate || false;\n  var hovertemplateLabels = d.hovertemplateLabels || d;\n  var eventData = d.eventData[0] || {};\n\n  if (hovertemplate) {\n    text = Lib.hovertemplateString(hovertemplate, hovertemplateLabels, d3locale, eventData, d.trace._meta);\n    text = text.replace(EXTRA_STRING_REGEX, function (match, extra) {\n      // assign name for secondary text label\n      name = plainText(extra, d.nameLength); // remove from main text label\n\n      return '';\n    });\n  }\n\n  return [text, name];\n} // Make groups of touching points, and within each group\n// move each point so that no labels overlap, but the average\n// label position is the same as it was before moving. Indicentally,\n// this is equivalent to saying all the labels are on equal linear\n// springs about their initial position. Initially, each point is\n// its own group, but as we find overlaps we will clump the points.\n//\n// Also, there are hard constraints at the edges of the graphs,\n// that push all groups to the middle so they are visible. I don't\n// know what happens if the group spans all the way from one edge to\n// the other, though it hardly matters - there's just too much\n// information then.\n\n\nfunction hoverAvoidOverlaps(hoverLabels, axKey, fullLayout) {\n  var nummoves = 0;\n  var axSign = 1;\n  var nLabels = hoverLabels.size(); // make groups of touching points\n\n  var pointgroups = new Array(nLabels);\n  var k = 0;\n  hoverLabels.each(function (d) {\n    var ax = d[axKey];\n    var axIsX = ax._id.charAt(0) === 'x';\n    var rng = ax.range;\n\n    if (k === 0 && rng && rng[0] > rng[1] !== axIsX) {\n      axSign = -1;\n    }\n\n    pointgroups[k++] = [{\n      datum: d,\n      traceIndex: d.trace.index,\n      dp: 0,\n      pos: d.pos,\n      posref: d.posref,\n      size: d.by * (axIsX ? YFACTOR : 1) / 2,\n      pmin: 0,\n      pmax: axIsX ? fullLayout.width : fullLayout.height\n    }];\n  });\n  pointgroups.sort(function (a, b) {\n    return a[0].posref - b[0].posref || // for equal positions, sort trace indices increasing or decreasing\n    // depending on whether the axis is reversed or not... so stacked\n    // traces will generally keep their order even if one trace adds\n    // nothing to the stack.\n    axSign * (b[0].traceIndex - a[0].traceIndex);\n  });\n  var donepositioning, topOverlap, bottomOverlap, i, j, pti, sumdp;\n\n  function constrainGroup(grp) {\n    var minPt = grp[0];\n    var maxPt = grp[grp.length - 1]; // overlap with the top - positive vals are overlaps\n\n    topOverlap = minPt.pmin - minPt.pos - minPt.dp + minPt.size; // overlap with the bottom - positive vals are overlaps\n\n    bottomOverlap = maxPt.pos + maxPt.dp + maxPt.size - minPt.pmax; // check for min overlap first, so that we always\n    // see the largest labels\n    // allow for .01px overlap, so we don't get an\n    // infinite loop from rounding errors\n\n    if (topOverlap > 0.01) {\n      for (j = grp.length - 1; j >= 0; j--) grp[j].dp += topOverlap;\n\n      donepositioning = false;\n    }\n\n    if (bottomOverlap < 0.01) return;\n\n    if (topOverlap < -0.01) {\n      // make sure we're not pushing back and forth\n      for (j = grp.length - 1; j >= 0; j--) grp[j].dp -= bottomOverlap;\n\n      donepositioning = false;\n    }\n\n    if (!donepositioning) return; // no room to fix positioning, delete off-screen points\n    // first see how many points we need to delete\n\n    var deleteCount = 0;\n\n    for (i = 0; i < grp.length; i++) {\n      pti = grp[i];\n      if (pti.pos + pti.dp + pti.size > minPt.pmax) deleteCount++;\n    } // start by deleting points whose data is off screen\n\n\n    for (i = grp.length - 1; i >= 0; i--) {\n      if (deleteCount <= 0) break;\n      pti = grp[i]; // pos has already been constrained to [pmin,pmax]\n      // so look for points close to that to delete\n\n      if (pti.pos > minPt.pmax - 1) {\n        pti.del = true;\n        deleteCount--;\n      }\n    }\n\n    for (i = 0; i < grp.length; i++) {\n      if (deleteCount <= 0) break;\n      pti = grp[i]; // pos has already been constrained to [pmin,pmax]\n      // so look for points close to that to delete\n\n      if (pti.pos < minPt.pmin + 1) {\n        pti.del = true;\n        deleteCount--; // shift the whole group minus into this new space\n\n        bottomOverlap = pti.size * 2;\n\n        for (j = grp.length - 1; j >= 0; j--) grp[j].dp -= bottomOverlap;\n      }\n    } // then delete points that go off the bottom\n\n\n    for (i = grp.length - 1; i >= 0; i--) {\n      if (deleteCount <= 0) break;\n      pti = grp[i];\n\n      if (pti.pos + pti.dp + pti.size > minPt.pmax) {\n        pti.del = true;\n        deleteCount--;\n      }\n    }\n  } // loop through groups, combining them if they overlap,\n  // until nothing moves\n\n\n  while (!donepositioning && nummoves <= nLabels) {\n    // to avoid infinite loops, don't move more times\n    // than there are traces\n    nummoves++; // assume nothing will move in this iteration,\n    // reverse this if it does\n\n    donepositioning = true;\n    i = 0;\n\n    while (i < pointgroups.length - 1) {\n      // the higher (g0) and lower (g1) point group\n      var g0 = pointgroups[i];\n      var g1 = pointgroups[i + 1]; // the lowest point in the higher group (p0)\n      // the highest point in the lower group (p1)\n\n      var p0 = g0[g0.length - 1];\n      var p1 = g1[0];\n      topOverlap = p0.pos + p0.dp + p0.size - p1.pos - p1.dp + p1.size; // Only group points that lie on the same axes\n\n      if (topOverlap > 0.01 && p0.pmin === p1.pmin && p0.pmax === p1.pmax) {\n        // push the new point(s) added to this group out of the way\n        for (j = g1.length - 1; j >= 0; j--) g1[j].dp += topOverlap; // add them to the group\n\n\n        g0.push.apply(g0, g1);\n        pointgroups.splice(i + 1, 1); // adjust for minimum average movement\n\n        sumdp = 0;\n\n        for (j = g0.length - 1; j >= 0; j--) sumdp += g0[j].dp;\n\n        bottomOverlap = sumdp / g0.length;\n\n        for (j = g0.length - 1; j >= 0; j--) g0[j].dp -= bottomOverlap;\n\n        donepositioning = false;\n      } else i++;\n    } // check if we're going off the plot on either side and fix\n\n\n    pointgroups.forEach(constrainGroup);\n  } // now put these offsets into hoverData\n\n\n  for (i = pointgroups.length - 1; i >= 0; i--) {\n    var grp = pointgroups[i];\n\n    for (j = grp.length - 1; j >= 0; j--) {\n      var pt = grp[j];\n      var hoverPt = pt.datum;\n      hoverPt.offset = pt.dp;\n      hoverPt.del = pt.del;\n    }\n  }\n}\n\nfunction alignHoverText(hoverLabels, rotateLabels, scaleX, scaleY) {\n  var pX = function (x) {\n    return x * scaleX;\n  };\n\n  var pY = function (y) {\n    return y * scaleY;\n  }; // finally set the text positioning relative to the data and draw the\n  // box around it\n\n\n  hoverLabels.each(function (d) {\n    var g = d3.select(this);\n    if (d.del) return g.remove();\n    var tx = g.select('text.nums');\n    var anchor = d.anchor;\n    var horzSign = anchor === 'end' ? -1 : 1;\n    var alignShift = {\n      start: 1,\n      end: -1,\n      middle: 0\n    }[anchor];\n    var txx = alignShift * (HOVERARROWSIZE + HOVERTEXTPAD);\n    var tx2x = txx + alignShift * (d.txwidth + HOVERTEXTPAD);\n    var offsetX = 0;\n    var offsetY = d.offset;\n    var isMiddle = anchor === 'middle';\n\n    if (isMiddle) {\n      txx -= d.tx2width / 2;\n      tx2x += d.txwidth / 2 + HOVERTEXTPAD;\n    }\n\n    if (rotateLabels) {\n      offsetY *= -YSHIFTY;\n      offsetX = d.offset * YSHIFTX;\n    }\n\n    g.select('path').attr('d', isMiddle ? // middle aligned: rect centered on data\n    'M-' + pX(d.bx / 2 + d.tx2width / 2) + ',' + pY(offsetY - d.by / 2) + 'h' + pX(d.bx) + 'v' + pY(d.by) + 'h-' + pX(d.bx) + 'Z' : // left or right aligned: side rect with arrow to data\n    'M0,0L' + pX(horzSign * HOVERARROWSIZE + offsetX) + ',' + pY(HOVERARROWSIZE + offsetY) + 'v' + pY(d.by / 2 - HOVERARROWSIZE) + 'h' + pX(horzSign * d.bx) + 'v-' + pY(d.by) + 'H' + pX(horzSign * HOVERARROWSIZE + offsetX) + 'V' + pY(offsetY - HOVERARROWSIZE) + 'Z');\n    var posX = offsetX + txx;\n    var posY = offsetY + d.ty0 - d.by / 2 + HOVERTEXTPAD;\n    var textAlign = d.textAlign || 'auto';\n\n    if (textAlign !== 'auto') {\n      if (textAlign === 'left' && anchor !== 'start') {\n        tx.attr('text-anchor', 'start');\n        posX = isMiddle ? -d.bx / 2 - d.tx2width / 2 + HOVERTEXTPAD : -d.bx - HOVERTEXTPAD;\n      } else if (textAlign === 'right' && anchor !== 'end') {\n        tx.attr('text-anchor', 'end');\n        posX = isMiddle ? d.bx / 2 - d.tx2width / 2 - HOVERTEXTPAD : d.bx + HOVERTEXTPAD;\n      }\n    }\n\n    tx.call(svgTextUtils.positionText, pX(posX), pY(posY));\n\n    if (d.tx2width) {\n      g.select('text.name').call(svgTextUtils.positionText, pX(tx2x + alignShift * HOVERTEXTPAD + offsetX), pY(offsetY + d.ty0 - d.by / 2 + HOVERTEXTPAD));\n      g.select('rect').call(Drawing.setRect, pX(tx2x + (alignShift - 1) * d.tx2width / 2 + offsetX), pY(offsetY - d.by / 2 - 1), pX(d.tx2width), pY(d.by + 2));\n    }\n  });\n}\n\nfunction cleanPoint(d, hovermode) {\n  var index = d.index;\n  var trace = d.trace || {};\n  var cd0 = d.cd[0];\n  var cd = d.cd[index] || {};\n\n  function pass(v) {\n    return v || isNumeric(v) && v === 0;\n  }\n\n  var getVal = Array.isArray(index) ? function (calcKey, traceKey) {\n    var v = Lib.castOption(cd0, index, calcKey);\n    return pass(v) ? v : Lib.extractOption({}, trace, '', traceKey);\n  } : function (calcKey, traceKey) {\n    return Lib.extractOption(cd, trace, calcKey, traceKey);\n  };\n\n  function fill(key, calcKey, traceKey) {\n    var val = getVal(calcKey, traceKey);\n    if (pass(val)) d[key] = val;\n  }\n\n  fill('hoverinfo', 'hi', 'hoverinfo');\n  fill('bgcolor', 'hbg', 'hoverlabel.bgcolor');\n  fill('borderColor', 'hbc', 'hoverlabel.bordercolor');\n  fill('fontFamily', 'htf', 'hoverlabel.font.family');\n  fill('fontSize', 'hts', 'hoverlabel.font.size');\n  fill('fontColor', 'htc', 'hoverlabel.font.color');\n  fill('nameLength', 'hnl', 'hoverlabel.namelength');\n  fill('textAlign', 'hta', 'hoverlabel.align');\n  d.posref = hovermode === 'y' || hovermode === 'closest' && trace.orientation === 'h' ? d.xa._offset + (d.x0 + d.x1) / 2 : d.ya._offset + (d.y0 + d.y1) / 2; // then constrain all the positions to be on the plot\n\n  d.x0 = Lib.constrain(d.x0, 0, d.xa._length);\n  d.x1 = Lib.constrain(d.x1, 0, d.xa._length);\n  d.y0 = Lib.constrain(d.y0, 0, d.ya._length);\n  d.y1 = Lib.constrain(d.y1, 0, d.ya._length); // and convert the x and y label values into formatted text\n\n  if (d.xLabelVal !== undefined) {\n    d.xLabel = 'xLabel' in d ? d.xLabel : Axes.hoverLabelText(d.xa, d.xLabelVal);\n    d.xVal = d.xa.c2d(d.xLabelVal);\n  }\n\n  if (d.yLabelVal !== undefined) {\n    d.yLabel = 'yLabel' in d ? d.yLabel : Axes.hoverLabelText(d.ya, d.yLabelVal);\n    d.yVal = d.ya.c2d(d.yLabelVal);\n  } // Traces like heatmaps generate the zLabel in their hoverPoints function\n\n\n  if (d.zLabelVal !== undefined && d.zLabel === undefined) {\n    d.zLabel = String(d.zLabelVal);\n  } // for box means and error bars, add the range to the label\n\n\n  if (!isNaN(d.xerr) && !(d.xa.type === 'log' && d.xerr <= 0)) {\n    var xeText = Axes.tickText(d.xa, d.xa.c2l(d.xerr), 'hover').text;\n\n    if (d.xerrneg !== undefined) {\n      d.xLabel += ' +' + xeText + ' / -' + Axes.tickText(d.xa, d.xa.c2l(d.xerrneg), 'hover').text;\n    } else d.xLabel += ' ± ' + xeText; // small distance penalty for error bars, so that if there are\n    // traces with errors and some without, the error bar label will\n    // hoist up to the point\n\n\n    if (hovermode === 'x') d.distance += 1;\n  }\n\n  if (!isNaN(d.yerr) && !(d.ya.type === 'log' && d.yerr <= 0)) {\n    var yeText = Axes.tickText(d.ya, d.ya.c2l(d.yerr), 'hover').text;\n\n    if (d.yerrneg !== undefined) {\n      d.yLabel += ' +' + yeText + ' / -' + Axes.tickText(d.ya, d.ya.c2l(d.yerrneg), 'hover').text;\n    } else d.yLabel += ' ± ' + yeText;\n\n    if (hovermode === 'y') d.distance += 1;\n  }\n\n  var infomode = d.hoverinfo || d.trace.hoverinfo;\n\n  if (infomode && infomode !== 'all') {\n    infomode = Array.isArray(infomode) ? infomode : infomode.split('+');\n    if (infomode.indexOf('x') === -1) d.xLabel = undefined;\n    if (infomode.indexOf('y') === -1) d.yLabel = undefined;\n    if (infomode.indexOf('z') === -1) d.zLabel = undefined;\n    if (infomode.indexOf('text') === -1) d.text = undefined;\n    if (infomode.indexOf('name') === -1) d.name = undefined;\n  }\n\n  return d;\n}\n\nfunction createSpikelines(gd, closestPoints, opts) {\n  var container = opts.container;\n  var fullLayout = opts.fullLayout;\n  var gs = fullLayout._size;\n  var evt = opts.event;\n  var showY = !!closestPoints.hLinePoint;\n  var showX = !!closestPoints.vLinePoint;\n  var xa, ya; // Remove old spikeline items\n\n  container.selectAll('.spikeline').remove();\n  if (!(showX || showY)) return;\n  var contrastColor = Color.combine(fullLayout.plot_bgcolor, fullLayout.paper_bgcolor); // Horizontal line (to y-axis)\n\n  if (showY) {\n    var hLinePoint = closestPoints.hLinePoint;\n    var hLinePointX, hLinePointY;\n    xa = hLinePoint && hLinePoint.xa;\n    ya = hLinePoint && hLinePoint.ya;\n    var ySnap = ya.spikesnap;\n\n    if (ySnap === 'cursor') {\n      hLinePointX = evt.pointerX;\n      hLinePointY = evt.pointerY;\n    } else {\n      hLinePointX = xa._offset + hLinePoint.x;\n      hLinePointY = ya._offset + hLinePoint.y;\n    }\n\n    var dfltHLineColor = tinycolor.readability(hLinePoint.color, contrastColor) < 1.5 ? Color.contrast(contrastColor) : hLinePoint.color;\n    var yMode = ya.spikemode;\n    var yThickness = ya.spikethickness;\n    var yColor = ya.spikecolor || dfltHLineColor;\n    var xEdge = Axes.getPxPosition(gd, ya);\n    var xBase, xEndSpike;\n\n    if (yMode.indexOf('toaxis') !== -1 || yMode.indexOf('across') !== -1) {\n      if (yMode.indexOf('toaxis') !== -1) {\n        xBase = xEdge;\n        xEndSpike = hLinePointX;\n      }\n\n      if (yMode.indexOf('across') !== -1) {\n        var xAcross0 = ya._counterDomainMin;\n        var xAcross1 = ya._counterDomainMax;\n\n        if (ya.anchor === 'free') {\n          xAcross0 = Math.min(xAcross0, ya.position);\n          xAcross1 = Math.max(xAcross1, ya.position);\n        }\n\n        xBase = gs.l + xAcross0 * gs.w;\n        xEndSpike = gs.l + xAcross1 * gs.w;\n      } // Foreground horizontal line (to y-axis)\n\n\n      container.insert('line', ':first-child').attr({\n        x1: xBase,\n        x2: xEndSpike,\n        y1: hLinePointY,\n        y2: hLinePointY,\n        'stroke-width': yThickness,\n        stroke: yColor,\n        'stroke-dasharray': Drawing.dashStyle(ya.spikedash, yThickness)\n      }).classed('spikeline', true).classed('crisp', true); // Background horizontal Line (to y-axis)\n\n      container.insert('line', ':first-child').attr({\n        x1: xBase,\n        x2: xEndSpike,\n        y1: hLinePointY,\n        y2: hLinePointY,\n        'stroke-width': yThickness + 2,\n        stroke: contrastColor\n      }).classed('spikeline', true).classed('crisp', true);\n    } // Y axis marker\n\n\n    if (yMode.indexOf('marker') !== -1) {\n      container.insert('circle', ':first-child').attr({\n        cx: xEdge + (ya.side !== 'right' ? yThickness : -yThickness),\n        cy: hLinePointY,\n        r: yThickness,\n        fill: yColor\n      }).classed('spikeline', true);\n    }\n  }\n\n  if (showX) {\n    var vLinePoint = closestPoints.vLinePoint;\n    var vLinePointX, vLinePointY;\n    xa = vLinePoint && vLinePoint.xa;\n    ya = vLinePoint && vLinePoint.ya;\n    var xSnap = xa.spikesnap;\n\n    if (xSnap === 'cursor') {\n      vLinePointX = evt.pointerX;\n      vLinePointY = evt.pointerY;\n    } else {\n      vLinePointX = xa._offset + vLinePoint.x;\n      vLinePointY = ya._offset + vLinePoint.y;\n    }\n\n    var dfltVLineColor = tinycolor.readability(vLinePoint.color, contrastColor) < 1.5 ? Color.contrast(contrastColor) : vLinePoint.color;\n    var xMode = xa.spikemode;\n    var xThickness = xa.spikethickness;\n    var xColor = xa.spikecolor || dfltVLineColor;\n    var yEdge = Axes.getPxPosition(gd, xa);\n    var yBase, yEndSpike;\n\n    if (xMode.indexOf('toaxis') !== -1 || xMode.indexOf('across') !== -1) {\n      if (xMode.indexOf('toaxis') !== -1) {\n        yBase = yEdge;\n        yEndSpike = vLinePointY;\n      }\n\n      if (xMode.indexOf('across') !== -1) {\n        var yAcross0 = xa._counterDomainMin;\n        var yAcross1 = xa._counterDomainMax;\n\n        if (xa.anchor === 'free') {\n          yAcross0 = Math.min(yAcross0, xa.position);\n          yAcross1 = Math.max(yAcross1, xa.position);\n        }\n\n        yBase = gs.t + (1 - yAcross1) * gs.h;\n        yEndSpike = gs.t + (1 - yAcross0) * gs.h;\n      } // Foreground vertical line (to x-axis)\n\n\n      container.insert('line', ':first-child').attr({\n        x1: vLinePointX,\n        x2: vLinePointX,\n        y1: yBase,\n        y2: yEndSpike,\n        'stroke-width': xThickness,\n        stroke: xColor,\n        'stroke-dasharray': Drawing.dashStyle(xa.spikedash, xThickness)\n      }).classed('spikeline', true).classed('crisp', true); // Background vertical line (to x-axis)\n\n      container.insert('line', ':first-child').attr({\n        x1: vLinePointX,\n        x2: vLinePointX,\n        y1: yBase,\n        y2: yEndSpike,\n        'stroke-width': xThickness + 2,\n        stroke: contrastColor\n      }).classed('spikeline', true).classed('crisp', true);\n    } // X axis marker\n\n\n    if (xMode.indexOf('marker') !== -1) {\n      container.insert('circle', ':first-child').attr({\n        cx: vLinePointX,\n        cy: yEdge - (xa.side !== 'top' ? xThickness : -xThickness),\n        r: xThickness,\n        fill: xColor\n      }).classed('spikeline', true);\n    }\n  }\n}\n\nfunction hoverChanged(gd, evt, oldhoverdata) {\n  // don't emit any events if nothing changed\n  if (!oldhoverdata || oldhoverdata.length !== gd._hoverdata.length) return true;\n\n  for (var i = oldhoverdata.length - 1; i >= 0; i--) {\n    var oldPt = oldhoverdata[i];\n    var newPt = gd._hoverdata[i];\n\n    if (oldPt.curveNumber !== newPt.curveNumber || String(oldPt.pointNumber) !== String(newPt.pointNumber) || String(oldPt.pointNumbers) !== String(newPt.pointNumbers)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction spikesChanged(gd, oldspikepoints) {\n  // don't relayout the plot because of new spikelines if spikelines points didn't change\n  if (!oldspikepoints) return true;\n  if (oldspikepoints.vLinePoint !== gd._spikepoints.vLinePoint || oldspikepoints.hLinePoint !== gd._spikepoints.hLinePoint) return true;\n  return false;\n}\n\nfunction plainText(s, len) {\n  return svgTextUtils.plainText(s || '', {\n    len: len,\n    allowedTags: ['br', 'sub', 'sup', 'b', 'i', 'em']\n  });\n}","map":{"version":3,"sources":["/Users/caseyrudick/Documents/landsharkrefactored-copy/client/node_modules/plotly.js/src/components/fx/hover.js"],"names":["d3","require","isNumeric","tinycolor","Lib","strTranslate","strRotate","Events","svgTextUtils","overrideCursor","Drawing","Color","dragElement","Axes","Registry","helpers","constants","legendSupplyDefaults","legendDraw","YANGLE","YA_RADIANS","Math","PI","YFACTOR","sin","YSHIFTX","cos","YSHIFTY","HOVERARROWSIZE","HOVERTEXTPAD","exports","hover","gd","evt","subplot","noHoverEvent","getGraphDiv","throttle","_fullLayout","_uid","HOVERID","HOVERMINTIME","_hover","loneHover","hoverItems","opts","multiHover","Array","isArray","pointsData","map","hoverItem","color","defaultLine","x0","x","x1","y0","y","y1","xLabel","yLabel","zLabel","text","name","idealAlign","borderColor","fontFamily","fontSize","fontColor","nameLength","textAlign","trace","index","hoverinfo","xa","_offset","ya","hovertemplate","eventData","hovertemplateLabels","container3","select","container","outerContainer3","outerContainer","fullOpts","hovermode","rotateLabels","bgColor","background","hoverLabel","createHoverText","tooltipSpacing","lastBottomY","anchor","sort","a","b","each","d","i","topY","by","offset","anchorIndex","scaleX","_invScaleX","scaleY","_invScaleY","alignHoverText","node","subplots","fullLayout","plots","_plots","plotinfo","hasCartesian","_has","overlayedSubplots","overlays","pi","id","concat","len","length","xaArray","yaArray","supportsCompare","spId","xaxis","yaxis","_subplot","warn","indexOf","calcdata","querySelector","_dragging","unhoverRaw","hoverdistance","Infinity","spikedistance","hoverData","searchData","xvalArray","yvalArray","itemnum","curvenum","cd","subplotId","subploti","mode","xval","yval","pointData","closedataPreviousLength","spikePoints","hLinePoint","vLinePoint","hasOneHorizontalTrace","curveNumber","push","orientation","isTraceInSubplots","hasUserCalledHover","target","xpx","ypx","_length","triggerHandler","dbb","getBoundingClientRect","clientX","left","clientY","top","_calcInverseTransform","transformedCoords","apply3DTransform","_invTransform","pointerX","pointerY","flat","p2c","distance","findHoverPoints","customXVal","customYVal","visible","_module","type","getSubplot","isUnifiedHover","charAt","maxHoverDistance","maxSpikeDistance","min","spikeDistance","xSpike","undefined","ySpike","xLabelVal","yLabelVal","zLabelVal","_splomScenes","uid","scene","selection","pointNumber","hoverPoints","newPoints","_hoverlayer","newPoint","newPointNum","cleanPoint","log","splice","closestPoints","filter","point","tmpPoint","closestVPoints","showspikes","spikesnap","closestVPt","fillSpikePoint","closestHPoints","closestHPt","selectClosestPoint","resultPoint","minDistance","thisSpikeDistance","spikelineOpts","_paperdiv","event","oldspikepoints","_spikepoints","newspikepoints","tmpHPointData","tmpHPoint","tmpVPointData","tmpVPoint","result","spikesChanged","createSpikelines","d1","d2","isXYhover","hd","cd0","isGrouped","boxmode","violinmode","xVal","ax","_categoriesMap","d2c","t","posLetter","_id","dPos","yVal","repeated","key","hoverDataKey","oldhoverdata","_hoverdata","newhoverdata","pt","makeEventData","ht","combine","plot_bgcolor","paper_bgcolor","labelOpts","commonLabelOpts","hoverlabel","hoverLabels","hoverAvoidOverlaps","tagName","hasClickToShow","getComponentMethod","hoverChanged","emit","points","xaxes","yaxes","xvals","yvals","attr","join","EXTRA_STRING_REGEX","HOVERFONT","HOVERFONTSIZE","c0","commonAttr","t0","t00","String","split","outerContainerBB","outerTop","outerWidth","width","outerHeight","height","showCommonLabel","allHaveZ","traceHoverinfo","parts","commonLabel","selectAll","data","enter","append","classed","exit","remove","label","lpath","ensureSingle","s","style","ltext","commonBgColor","bgcolor","commonStroke","bordercolor","contrast","contrastColor","commonLabelFont","family","font","size","fill","stroke","call","positionText","convertToTspans","tbb","lx","ly","topsign","side","bottom","halfWidth","sgn","leftsign","halfHeight","lty","clipId","clipPath","ltx","dummy","tester","dummyBB","round","textClip","_topclips","setClipUrl","filterClosePoints","mockLayoutIn","showlegend","legend","title","borderwidth","tracegroupgap","traceorder","mockLayoutOut","_fullData","legendOpts","entries","j","texts","getHoverLabelText","mc","mcc","mlc","mlcc","mlw","mrc","dir","_distinct","layer","mean","c","legendContainer","txWidth","anchorStartOK","anchorEndOK","txHeight","overflowTop","overflowBottom","canFit","g","addOpacity","dColor","color0","numsColor","opacity","nameColor","tx","tx2","tx2width","tx2height","t2bb","htx","hty","dx","abs","dy","txTotalWidth","ty0","bx","max","txwidth","pos","txHalfWidth","overflowR","overflowL","nameOverride","_meta","templateString","plainText","extraText","d3locale","_d3locale","hovertemplateString","replace","match","extra","axKey","nummoves","axSign","nLabels","pointgroups","k","axIsX","rng","range","datum","traceIndex","dp","posref","pmin","pmax","donepositioning","topOverlap","bottomOverlap","pti","sumdp","constrainGroup","grp","minPt","maxPt","deleteCount","del","g0","g1","p0","p1","apply","forEach","hoverPt","pX","pY","horzSign","alignShift","start","end","middle","txx","tx2x","offsetX","offsetY","isMiddle","posX","posY","setRect","pass","v","getVal","calcKey","traceKey","castOption","extractOption","val","constrain","hoverLabelText","c2d","isNaN","xerr","xeText","tickText","c2l","xerrneg","yerr","yeText","yerrneg","infomode","gs","_size","showY","showX","hLinePointX","hLinePointY","ySnap","dfltHLineColor","readability","yMode","spikemode","yThickness","spikethickness","yColor","spikecolor","xEdge","getPxPosition","xBase","xEndSpike","xAcross0","_counterDomainMin","xAcross1","_counterDomainMax","position","l","w","insert","x2","y2","dashStyle","spikedash","cx","cy","r","vLinePointX","vLinePointY","xSnap","dfltVLineColor","xMode","xThickness","xColor","yEdge","yBase","yEndSpike","yAcross0","yAcross1","h","oldPt","newPt","pointNumbers","allowedTags"],"mappings":"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","sourcesContent":["/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar d3 = require('d3');\nvar isNumeric = require('fast-isnumeric');\nvar tinycolor = require('tinycolor2');\n\nvar Lib = require('../../lib');\nvar strTranslate = Lib.strTranslate;\nvar strRotate = Lib.strRotate;\nvar Events = require('../../lib/events');\nvar svgTextUtils = require('../../lib/svg_text_utils');\nvar overrideCursor = require('../../lib/override_cursor');\nvar Drawing = require('../drawing');\nvar Color = require('../color');\nvar dragElement = require('../dragelement');\nvar Axes = require('../../plots/cartesian/axes');\nvar Registry = require('../../registry');\n\nvar helpers = require('./helpers');\nvar constants = require('./constants');\n\nvar legendSupplyDefaults = require('../legend/defaults');\nvar legendDraw = require('../legend/draw');\n\n// hover labels for multiple horizontal bars get tilted by some angle,\n// then need to be offset differently if they overlap\nvar YANGLE = constants.YANGLE;\nvar YA_RADIANS = Math.PI * YANGLE / 180;\n\n// expansion of projected height\nvar YFACTOR = 1 / Math.sin(YA_RADIANS);\n\n// to make the appropriate post-rotation x offset,\n// you need both x and y offsets\nvar YSHIFTX = Math.cos(YA_RADIANS);\nvar YSHIFTY = Math.sin(YA_RADIANS);\n\n// size and display constants for hover text\nvar HOVERARROWSIZE = constants.HOVERARROWSIZE;\nvar HOVERTEXTPAD = constants.HOVERTEXTPAD;\n\n// fx.hover: highlight data on hover\n// evt can be a mousemove event, or an object with data about what points\n//   to hover on\n//      {xpx,ypx[,hovermode]} - pixel locations from top left\n//          (with optional overriding hovermode)\n//      {xval,yval[,hovermode]} - data values\n//      [{curveNumber,(pointNumber|xval and/or yval)}] -\n//              array of specific points to highlight\n//          pointNumber is a single integer if gd.data[curveNumber] is 1D,\n//              or a two-element array if it's 2D\n//          xval and yval are data values,\n//              1D data may specify either or both,\n//              2D data must specify both\n// subplot is an id string (default \"xy\")\n// makes use of gl.hovermode, which can be:\n//      x (find the points with the closest x values, ie a column),\n//      closest (find the single closest point)\n//    internally there are two more that occasionally get used:\n//      y (pick out a row - only used for multiple horizontal bar charts)\n//      array (used when the user specifies an explicit\n//          array of points to hover on)\n//\n// We wrap the hovers in a timer, to limit their frequency.\n// The actual rendering is done by private function _hover.\nexports.hover = function hover(gd, evt, subplot, noHoverEvent) {\n    gd = Lib.getGraphDiv(gd);\n\n    Lib.throttle(\n        gd._fullLayout._uid + constants.HOVERID,\n        constants.HOVERMINTIME,\n        function() { _hover(gd, evt, subplot, noHoverEvent); }\n    );\n};\n\n/*\n * Draw a single hover item or an array of hover item in a pre-existing svg container somewhere\n * hoverItem should have keys:\n *    - x and y (or x0, x1, y0, and y1):\n *      the pixel position to mark, relative to opts.container\n *    - xLabel, yLabel, zLabel, text, and name:\n *      info to go in the label\n *    - color:\n *      the background color for the label.\n *    - idealAlign (optional):\n *      'left' or 'right' for which side of the x/y box to try to put this on first\n *    - borderColor (optional):\n *      color for the border, defaults to strongest contrast with color\n *    - fontFamily (optional):\n *      string, the font for this label, defaults to constants.HOVERFONT\n *    - fontSize (optional):\n *      the label font size, defaults to constants.HOVERFONTSIZE\n *    - fontColor (optional):\n *      defaults to borderColor\n * opts should have keys:\n *    - bgColor:\n *      the background color this is against, used if the trace is\n *      non-opaque, and for the name, which goes outside the box\n *    - container:\n *      a <svg> or <g> element to add the hover label to\n *    - outerContainer:\n *      normally a parent of `container`, sets the bounding box to use to\n *      constrain the hover label and determine whether to show it on the left or right\n * opts can have optional keys:\n *    - anchorIndex:\n        the index of the hover item used as an anchor for positioning.\n        The other hover items will be pushed up or down to prevent overlap.\n */\nexports.loneHover = function loneHover(hoverItems, opts) {\n    var multiHover = true;\n    if(!Array.isArray(hoverItems)) {\n        multiHover = false;\n        hoverItems = [hoverItems];\n    }\n\n    var pointsData = hoverItems.map(function(hoverItem) {\n        return {\n            color: hoverItem.color || Color.defaultLine,\n            x0: hoverItem.x0 || hoverItem.x || 0,\n            x1: hoverItem.x1 || hoverItem.x || 0,\n            y0: hoverItem.y0 || hoverItem.y || 0,\n            y1: hoverItem.y1 || hoverItem.y || 0,\n            xLabel: hoverItem.xLabel,\n            yLabel: hoverItem.yLabel,\n            zLabel: hoverItem.zLabel,\n            text: hoverItem.text,\n            name: hoverItem.name,\n            idealAlign: hoverItem.idealAlign,\n\n            // optional extra bits of styling\n            borderColor: hoverItem.borderColor,\n            fontFamily: hoverItem.fontFamily,\n            fontSize: hoverItem.fontSize,\n            fontColor: hoverItem.fontColor,\n            nameLength: hoverItem.nameLength,\n            textAlign: hoverItem.textAlign,\n\n            // filler to make createHoverText happy\n            trace: hoverItem.trace || {\n                index: 0,\n                hoverinfo: ''\n            },\n            xa: {_offset: 0},\n            ya: {_offset: 0},\n            index: 0,\n\n            hovertemplate: hoverItem.hovertemplate || false,\n            eventData: hoverItem.eventData || false,\n            hovertemplateLabels: hoverItem.hovertemplateLabels || false,\n        };\n    });\n\n    var container3 = d3.select(opts.container);\n    var outerContainer3 = opts.outerContainer ? d3.select(opts.outerContainer) : container3;\n\n    var fullOpts = {\n        hovermode: 'closest',\n        rotateLabels: false,\n        bgColor: opts.bgColor || Color.background,\n        container: container3,\n        outerContainer: outerContainer3\n    };\n\n    var hoverLabel = createHoverText(pointsData, fullOpts, opts.gd);\n\n    // Fix vertical overlap\n    var tooltipSpacing = 5;\n    var lastBottomY = 0;\n    var anchor = 0;\n    hoverLabel\n        .sort(function(a, b) {return a.y0 - b.y0;})\n        .each(function(d, i) {\n            var topY = d.y0 - d.by / 2;\n\n            if((topY - tooltipSpacing) < lastBottomY) {\n                d.offset = (lastBottomY - topY) + tooltipSpacing;\n            } else {\n                d.offset = 0;\n            }\n\n            lastBottomY = topY + d.by + d.offset;\n\n            if(i === opts.anchorIndex || 0) anchor = d.offset;\n        })\n        .each(function(d) {\n            d.offset -= anchor;\n        });\n\n    var scaleX = opts.gd._fullLayout._invScaleX;\n    var scaleY = opts.gd._fullLayout._invScaleY;\n    alignHoverText(hoverLabel, fullOpts.rotateLabels, scaleX, scaleY);\n\n    return multiHover ? hoverLabel : hoverLabel.node();\n};\n\n// The actual implementation is here:\nfunction _hover(gd, evt, subplot, noHoverEvent) {\n    if(!subplot) subplot = 'xy';\n\n    // if the user passed in an array of subplots,\n    // use those instead of finding overlayed plots\n    var subplots = Array.isArray(subplot) ? subplot : [subplot];\n\n    var fullLayout = gd._fullLayout;\n    var plots = fullLayout._plots || [];\n    var plotinfo = plots[subplot];\n    var hasCartesian = fullLayout._has('cartesian');\n\n    // list of all overlaid subplots to look at\n    if(plotinfo) {\n        var overlayedSubplots = plotinfo.overlays.map(function(pi) {\n            return pi.id;\n        });\n\n        subplots = subplots.concat(overlayedSubplots);\n    }\n\n    var len = subplots.length;\n    var xaArray = new Array(len);\n    var yaArray = new Array(len);\n    var supportsCompare = false;\n\n    for(var i = 0; i < len; i++) {\n        var spId = subplots[i];\n\n        if(plots[spId]) {\n            // 'cartesian' case\n            supportsCompare = true;\n            xaArray[i] = plots[spId].xaxis;\n            yaArray[i] = plots[spId].yaxis;\n        } else if(fullLayout[spId] && fullLayout[spId]._subplot) {\n            // other subplot types\n            var _subplot = fullLayout[spId]._subplot;\n            xaArray[i] = _subplot.xaxis;\n            yaArray[i] = _subplot.yaxis;\n        } else {\n            Lib.warn('Unrecognized subplot: ' + spId);\n            return;\n        }\n    }\n\n    var hovermode = evt.hovermode || fullLayout.hovermode;\n\n    if(hovermode && !supportsCompare) hovermode = 'closest';\n\n    if(['x', 'y', 'closest', 'x unified', 'y unified'].indexOf(hovermode) === -1 || !gd.calcdata ||\n            gd.querySelector('.zoombox') || gd._dragging) {\n        return dragElement.unhoverRaw(gd, evt);\n    }\n\n    var hoverdistance = fullLayout.hoverdistance === -1 ? Infinity : fullLayout.hoverdistance;\n    var spikedistance = fullLayout.spikedistance === -1 ? Infinity : fullLayout.spikedistance;\n\n    // hoverData: the set of candidate points we've found to highlight\n    var hoverData = [];\n\n    // searchData: the data to search in. Mostly this is just a copy of\n    // gd.calcdata, filtered to the subplot and overlays we're on\n    // but if a point array is supplied it will be a mapping\n    // of indicated curves\n    var searchData = [];\n\n    // [x|y]valArray: the axis values of the hover event\n    // mapped onto each of the currently selected overlaid subplots\n    var xvalArray, yvalArray;\n\n    var itemnum, curvenum, cd, trace, subplotId, subploti, mode,\n        xval, yval, pointData, closedataPreviousLength;\n\n    // spikePoints: the set of candidate points we've found to draw spikes to\n    var spikePoints = {\n        hLinePoint: null,\n        vLinePoint: null\n    };\n\n    // does subplot have one (or more) horizontal traces?\n    // This is used to determine whether we rotate the labels or not\n    var hasOneHorizontalTrace = false;\n\n    // Figure out what we're hovering on:\n    // mouse location or user-supplied data\n\n    if(Array.isArray(evt)) {\n        // user specified an array of points to highlight\n        hovermode = 'array';\n        for(itemnum = 0; itemnum < evt.length; itemnum++) {\n            cd = gd.calcdata[evt[itemnum].curveNumber || 0];\n            if(cd) {\n                trace = cd[0].trace;\n                if(cd[0].trace.hoverinfo !== 'skip') {\n                    searchData.push(cd);\n                    if(trace.orientation === 'h') {\n                        hasOneHorizontalTrace = true;\n                    }\n                }\n            }\n        }\n    } else {\n        for(curvenum = 0; curvenum < gd.calcdata.length; curvenum++) {\n            cd = gd.calcdata[curvenum];\n            trace = cd[0].trace;\n            if(trace.hoverinfo !== 'skip' && helpers.isTraceInSubplots(trace, subplots)) {\n                searchData.push(cd);\n                if(trace.orientation === 'h') {\n                    hasOneHorizontalTrace = true;\n                }\n            }\n        }\n\n        // [x|y]px: the pixels (from top left) of the mouse location\n        // on the currently selected plot area\n        // add pointerX|Y property for drawing the spikes in spikesnap 'cursor' situation\n        var hasUserCalledHover = !evt.target;\n        var xpx, ypx;\n\n        if(hasUserCalledHover) {\n            if('xpx' in evt) xpx = evt.xpx;\n            else xpx = xaArray[0]._length / 2;\n\n            if('ypx' in evt) ypx = evt.ypx;\n            else ypx = yaArray[0]._length / 2;\n        } else {\n            // fire the beforehover event and quit if it returns false\n            // note that we're only calling this on real mouse events, so\n            // manual calls to fx.hover will always run.\n            if(Events.triggerHandler(gd, 'plotly_beforehover', evt) === false) {\n                return;\n            }\n\n            var dbb = evt.target.getBoundingClientRect();\n\n            xpx = evt.clientX - dbb.left;\n            ypx = evt.clientY - dbb.top;\n\n            fullLayout._calcInverseTransform(gd);\n            var transformedCoords = Lib.apply3DTransform(fullLayout._invTransform)(xpx, ypx);\n\n            xpx = transformedCoords[0];\n            ypx = transformedCoords[1];\n\n            // in case hover was called from mouseout into hovertext,\n            // it's possible you're not actually over the plot anymore\n            if(xpx < 0 || xpx > xaArray[0]._length || ypx < 0 || ypx > yaArray[0]._length) {\n                return dragElement.unhoverRaw(gd, evt);\n            }\n        }\n\n        evt.pointerX = xpx + xaArray[0]._offset;\n        evt.pointerY = ypx + yaArray[0]._offset;\n\n        if('xval' in evt) xvalArray = helpers.flat(subplots, evt.xval);\n        else xvalArray = helpers.p2c(xaArray, xpx);\n\n        if('yval' in evt) yvalArray = helpers.flat(subplots, evt.yval);\n        else yvalArray = helpers.p2c(yaArray, ypx);\n\n        if(!isNumeric(xvalArray[0]) || !isNumeric(yvalArray[0])) {\n            Lib.warn('Fx.hover failed', evt, gd);\n            return dragElement.unhoverRaw(gd, evt);\n        }\n    }\n\n    // the pixel distance to beat as a matching point\n    // in 'x' or 'y' mode this resets for each trace\n    var distance = Infinity;\n\n    // find the closest point in each trace\n    // this is minimum dx and/or dy, depending on mode\n    // and the pixel position for the label (labelXpx, labelYpx)\n    function findHoverPoints(customXVal, customYVal) {\n        for(curvenum = 0; curvenum < searchData.length; curvenum++) {\n            cd = searchData[curvenum];\n\n            // filter out invisible or broken data\n            if(!cd || !cd[0] || !cd[0].trace) continue;\n\n            trace = cd[0].trace;\n\n            if(trace.visible !== true || trace._length === 0) continue;\n\n            // Explicitly bail out for these two. I don't know how to otherwise prevent\n            // the rest of this function from running and failing\n            if(['carpet', 'contourcarpet'].indexOf(trace._module.name) !== -1) continue;\n\n            if(trace.type === 'splom') {\n                // splom traces do not generate overlay subplots,\n                // it is safe to assume here splom traces correspond to the 0th subplot\n                subploti = 0;\n                subplotId = subplots[subploti];\n            } else {\n                subplotId = helpers.getSubplot(trace);\n                subploti = subplots.indexOf(subplotId);\n            }\n\n            // within one trace mode can sometimes be overridden\n            mode = hovermode;\n            if(helpers.isUnifiedHover(mode)) {\n                mode = mode.charAt(0);\n            }\n\n            // container for new point, also used to pass info into module.hoverPoints\n            pointData = {\n                // trace properties\n                cd: cd,\n                trace: trace,\n                xa: xaArray[subploti],\n                ya: yaArray[subploti],\n\n                // max distances for hover and spikes - for points that want to show but do not\n                // want to override other points, set distance/spikeDistance equal to max*Distance\n                // and it will not get filtered out but it will be guaranteed to have a greater\n                // distance than any point that calculated a real distance.\n                maxHoverDistance: hoverdistance,\n                maxSpikeDistance: spikedistance,\n\n                // point properties - override all of these\n                index: false, // point index in trace - only used by plotly.js hoverdata consumers\n                distance: Math.min(distance, hoverdistance), // pixel distance or pseudo-distance\n\n                // distance/pseudo-distance for spikes. This distance should always be calculated\n                // as if in \"closest\" mode, and should only be set if this point should\n                // generate a spike.\n                spikeDistance: Infinity,\n\n                // in some cases the spikes have different positioning from the hover label\n                // they don't need x0/x1, just one position\n                xSpike: undefined,\n                ySpike: undefined,\n\n                // where and how to display the hover label\n                color: Color.defaultLine, // trace color\n                name: trace.name,\n                x0: undefined,\n                x1: undefined,\n                y0: undefined,\n                y1: undefined,\n                xLabelVal: undefined,\n                yLabelVal: undefined,\n                zLabelVal: undefined,\n                text: undefined\n            };\n\n            // add ref to subplot object (non-cartesian case)\n            if(fullLayout[subplotId]) {\n                pointData.subplot = fullLayout[subplotId]._subplot;\n            }\n            // add ref to splom scene\n            if(fullLayout._splomScenes && fullLayout._splomScenes[trace.uid]) {\n                pointData.scene = fullLayout._splomScenes[trace.uid];\n            }\n\n            closedataPreviousLength = hoverData.length;\n\n            // for a highlighting array, figure out what\n            // we're searching for with this element\n            if(mode === 'array') {\n                var selection = evt[curvenum];\n                if('pointNumber' in selection) {\n                    pointData.index = selection.pointNumber;\n                    mode = 'closest';\n                } else {\n                    mode = '';\n                    if('xval' in selection) {\n                        xval = selection.xval;\n                        mode = 'x';\n                    }\n                    if('yval' in selection) {\n                        yval = selection.yval;\n                        mode = mode ? 'closest' : 'y';\n                    }\n                }\n            } else if(customXVal !== undefined && customYVal !== undefined) {\n                xval = customXVal;\n                yval = customYVal;\n            } else {\n                xval = xvalArray[subploti];\n                yval = yvalArray[subploti];\n            }\n\n            // Now if there is range to look in, find the points to hover.\n            if(hoverdistance !== 0) {\n                if(trace._module && trace._module.hoverPoints) {\n                    var newPoints = trace._module.hoverPoints(pointData, xval, yval, mode, fullLayout._hoverlayer);\n                    if(newPoints) {\n                        var newPoint;\n                        for(var newPointNum = 0; newPointNum < newPoints.length; newPointNum++) {\n                            newPoint = newPoints[newPointNum];\n                            if(isNumeric(newPoint.x0) && isNumeric(newPoint.y0)) {\n                                hoverData.push(cleanPoint(newPoint, hovermode));\n                            }\n                        }\n                    }\n                } else {\n                    Lib.log('Unrecognized trace type in hover:', trace);\n                }\n            }\n\n            // in closest mode, remove any existing (farther) points\n            // and don't look any farther than this latest point (or points, some\n            // traces like box & violin make multiple hover labels at once)\n            if(hovermode === 'closest' && hoverData.length > closedataPreviousLength) {\n                hoverData.splice(0, closedataPreviousLength);\n                distance = hoverData[0].distance;\n            }\n\n            // Now if there is range to look in, find the points to draw the spikelines\n            // Do it only if there is no hoverData\n            if(hasCartesian && (spikedistance !== 0)) {\n                if(hoverData.length === 0) {\n                    pointData.distance = spikedistance;\n                    pointData.index = false;\n                    var closestPoints = trace._module.hoverPoints(pointData, xval, yval, 'closest', fullLayout._hoverlayer);\n                    if(closestPoints) {\n                        closestPoints = closestPoints.filter(function(point) {\n                            // some hover points, like scatter fills, do not allow spikes,\n                            // so will generate a hover point but without a valid spikeDistance\n                            return point.spikeDistance <= spikedistance;\n                        });\n                    }\n                    if(closestPoints && closestPoints.length) {\n                        var tmpPoint;\n                        var closestVPoints = closestPoints.filter(function(point) {\n                            return point.xa.showspikes && point.xa.spikesnap !== 'hovered data';\n                        });\n                        if(closestVPoints.length) {\n                            var closestVPt = closestVPoints[0];\n                            if(isNumeric(closestVPt.x0) && isNumeric(closestVPt.y0)) {\n                                tmpPoint = fillSpikePoint(closestVPt);\n                                if(!spikePoints.vLinePoint || (spikePoints.vLinePoint.spikeDistance > tmpPoint.spikeDistance)) {\n                                    spikePoints.vLinePoint = tmpPoint;\n                                }\n                            }\n                        }\n\n                        var closestHPoints = closestPoints.filter(function(point) {\n                            return point.ya.showspikes && point.ya.spikesnap !== 'hovered data';\n                        });\n                        if(closestHPoints.length) {\n                            var closestHPt = closestHPoints[0];\n                            if(isNumeric(closestHPt.x0) && isNumeric(closestHPt.y0)) {\n                                tmpPoint = fillSpikePoint(closestHPt);\n                                if(!spikePoints.hLinePoint || (spikePoints.hLinePoint.spikeDistance > tmpPoint.spikeDistance)) {\n                                    spikePoints.hLinePoint = tmpPoint;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    findHoverPoints();\n\n    function selectClosestPoint(pointsData, spikedistance) {\n        var resultPoint = null;\n        var minDistance = Infinity;\n        var thisSpikeDistance;\n        for(var i = 0; i < pointsData.length; i++) {\n            thisSpikeDistance = pointsData[i].spikeDistance;\n            if(thisSpikeDistance <= minDistance && thisSpikeDistance <= spikedistance) {\n                resultPoint = pointsData[i];\n                minDistance = thisSpikeDistance;\n            }\n        }\n        return resultPoint;\n    }\n\n    function fillSpikePoint(point) {\n        if(!point) return null;\n        return {\n            xa: point.xa,\n            ya: point.ya,\n            x: point.xSpike !== undefined ? point.xSpike : (point.x0 + point.x1) / 2,\n            y: point.ySpike !== undefined ? point.ySpike : (point.y0 + point.y1) / 2,\n            distance: point.distance,\n            spikeDistance: point.spikeDistance,\n            curveNumber: point.trace.index,\n            color: point.color,\n            pointNumber: point.index\n        };\n    }\n\n    var spikelineOpts = {\n        fullLayout: fullLayout,\n        container: fullLayout._hoverlayer,\n        outerContainer: fullLayout._paperdiv,\n        event: evt\n    };\n    var oldspikepoints = gd._spikepoints;\n    var newspikepoints = {\n        vLinePoint: spikePoints.vLinePoint,\n        hLinePoint: spikePoints.hLinePoint\n    };\n    gd._spikepoints = newspikepoints;\n\n    // Now if it is not restricted by spikedistance option, set the points to draw the spikelines\n    if(hasCartesian && (spikedistance !== 0)) {\n        if(hoverData.length !== 0) {\n            var tmpHPointData = hoverData.filter(function(point) {\n                return point.ya.showspikes;\n            });\n            var tmpHPoint = selectClosestPoint(tmpHPointData, spikedistance);\n            spikePoints.hLinePoint = fillSpikePoint(tmpHPoint);\n\n            var tmpVPointData = hoverData.filter(function(point) {\n                return point.xa.showspikes;\n            });\n            var tmpVPoint = selectClosestPoint(tmpVPointData, spikedistance);\n            spikePoints.vLinePoint = fillSpikePoint(tmpVPoint);\n        }\n    }\n\n    // if hoverData is empty check for the spikes to draw and quit if there are none\n    if(hoverData.length === 0) {\n        var result = dragElement.unhoverRaw(gd, evt);\n        if(hasCartesian && ((spikePoints.hLinePoint !== null) || (spikePoints.vLinePoint !== null))) {\n            if(spikesChanged(oldspikepoints)) {\n                createSpikelines(gd, spikePoints, spikelineOpts);\n            }\n        }\n        return result;\n    }\n\n    if(hasCartesian) {\n        if(spikesChanged(oldspikepoints)) {\n            createSpikelines(gd, spikePoints, spikelineOpts);\n        }\n    }\n\n    hoverData.sort(function(d1, d2) { return d1.distance - d2.distance; });\n\n    // If in compare mode, select every point at position\n    if(\n        helpers.isXYhover(mode) &&\n        hoverData[0].length !== 0 &&\n        hoverData[0].trace.type !== 'splom' // TODO: add support for splom\n    ) {\n        var hd = hoverData[0];\n        var cd0 = hd.cd[hd.index];\n        var isGrouped = (fullLayout.boxmode === 'group' || fullLayout.violinmode === 'group');\n\n        var xVal = hd.xVal;\n        var ax = hd.xa;\n        if(ax.type === 'category') xVal = ax._categoriesMap[xVal];\n        if(ax.type === 'date') xVal = ax.d2c(xVal);\n        if(cd0 && cd0.t && cd0.t.posLetter === ax._id && isGrouped) {\n            xVal += cd0.t.dPos;\n        }\n\n        var yVal = hd.yVal;\n        ax = hd.ya;\n        if(ax.type === 'category') yVal = ax._categoriesMap[yVal];\n        if(ax.type === 'date') yVal = ax.d2c(yVal);\n        if(cd0 && cd0.t && cd0.t.posLetter === ax._id && isGrouped) {\n            yVal += cd0.t.dPos;\n        }\n\n        findHoverPoints(xVal, yVal);\n\n        // Remove duplicated hoverData points\n        // note that d3 also filters identical points in the rendering steps\n        var repeated = {};\n        hoverData = hoverData.filter(function(hd) {\n            var key = hoverDataKey(hd);\n            if(!repeated[key]) {\n                repeated[key] = true;\n                return repeated[key];\n            }\n        });\n    }\n\n    // lastly, emit custom hover/unhover events\n    var oldhoverdata = gd._hoverdata;\n    var newhoverdata = [];\n\n    // pull out just the data that's useful to\n    // other people and send it to the event\n    for(itemnum = 0; itemnum < hoverData.length; itemnum++) {\n        var pt = hoverData[itemnum];\n        var eventData = helpers.makeEventData(pt, pt.trace, pt.cd);\n\n        if(pt.hovertemplate !== false) {\n            var ht = false;\n            if(pt.cd[pt.index] && pt.cd[pt.index].ht) {\n                ht = pt.cd[pt.index].ht;\n            }\n            pt.hovertemplate = ht || pt.trace.hovertemplate || false;\n        }\n\n        pt.eventData = [eventData];\n        newhoverdata.push(eventData);\n    }\n\n    gd._hoverdata = newhoverdata;\n\n    var rotateLabels = (\n        (hovermode === 'y' && (searchData.length > 1 || hoverData.length > 1)) ||\n        (hovermode === 'closest' && hasOneHorizontalTrace && hoverData.length > 1)\n    );\n\n    var bgColor = Color.combine(\n        fullLayout.plot_bgcolor || Color.background,\n        fullLayout.paper_bgcolor\n    );\n\n    var labelOpts = {\n        hovermode: hovermode,\n        rotateLabels: rotateLabels,\n        bgColor: bgColor,\n        container: fullLayout._hoverlayer,\n        outerContainer: fullLayout._paperdiv,\n        commonLabelOpts: fullLayout.hoverlabel,\n        hoverdistance: fullLayout.hoverdistance\n    };\n\n    var hoverLabels = createHoverText(hoverData, labelOpts, gd);\n\n    if(!helpers.isUnifiedHover(hovermode)) {\n        hoverAvoidOverlaps(hoverLabels, rotateLabels ? 'xa' : 'ya', fullLayout);\n        alignHoverText(hoverLabels, rotateLabels, fullLayout._invScaleX, fullLayout._invScaleY);\n    }    // TODO: tagName hack is needed to appease geo.js's hack of using evt.target=true\n    // we should improve the \"fx\" API so other plots can use it without these hack.\n    if(evt.target && evt.target.tagName) {\n        var hasClickToShow = Registry.getComponentMethod('annotations', 'hasClickToShow')(gd, newhoverdata);\n        overrideCursor(d3.select(evt.target), hasClickToShow ? 'pointer' : '');\n    }\n\n    // don't emit events if called manually\n    if(!evt.target || noHoverEvent || !hoverChanged(gd, evt, oldhoverdata)) return;\n\n    if(oldhoverdata) {\n        gd.emit('plotly_unhover', {\n            event: evt,\n            points: oldhoverdata\n        });\n    }\n\n    gd.emit('plotly_hover', {\n        event: evt,\n        points: gd._hoverdata,\n        xaxes: xaArray,\n        yaxes: yaArray,\n        xvals: xvalArray,\n        yvals: yvalArray\n    });\n}\n\nfunction hoverDataKey(d) {\n    return [d.trace.index, d.index, d.x0, d.y0, d.name, d.attr, d.xa, d.ya || ''].join(',');\n}\n\nvar EXTRA_STRING_REGEX = /<extra>([\\s\\S]*)<\\/extra>/;\n\nfunction createHoverText(hoverData, opts, gd) {\n    var fullLayout = gd._fullLayout;\n    var hovermode = opts.hovermode;\n    var rotateLabels = opts.rotateLabels;\n    var bgColor = opts.bgColor;\n    var container = opts.container;\n    var outerContainer = opts.outerContainer;\n    var commonLabelOpts = opts.commonLabelOpts || {};\n\n    // opts.fontFamily/Size are used for the common label\n    // and as defaults for each hover label, though the individual labels\n    // can override this.\n    var fontFamily = opts.fontFamily || constants.HOVERFONT;\n    var fontSize = opts.fontSize || constants.HOVERFONTSIZE;\n\n    var c0 = hoverData[0];\n    var xa = c0.xa;\n    var ya = c0.ya;\n    var commonAttr = hovermode.charAt(0) === 'y' ? 'yLabel' : 'xLabel';\n    var t0 = c0[commonAttr];\n    var t00 = (String(t0) || '').split(' ')[0];\n    var outerContainerBB = outerContainer.node().getBoundingClientRect();\n    var outerTop = outerContainerBB.top;\n    var outerWidth = outerContainerBB.width;\n    var outerHeight = outerContainerBB.height;\n\n    // show the common label, if any, on the axis\n    // never show a common label in array mode,\n    // even if sometimes there could be one\n    var showCommonLabel = (\n        (t0 !== undefined) &&\n        (c0.distance <= opts.hoverdistance) &&\n        (hovermode === 'x' || hovermode === 'y')\n    );\n\n    // all hover traces hoverinfo must contain the hovermode\n    // to have common labels\n    if(showCommonLabel) {\n        var allHaveZ = true;\n        var i, traceHoverinfo;\n        for(i = 0; i < hoverData.length; i++) {\n            if(allHaveZ && hoverData[i].zLabel === undefined) allHaveZ = false;\n\n            traceHoverinfo = hoverData[i].hoverinfo || hoverData[i].trace.hoverinfo;\n            if(traceHoverinfo) {\n                var parts = Array.isArray(traceHoverinfo) ? traceHoverinfo : traceHoverinfo.split('+');\n                if(parts.indexOf('all') === -1 &&\n                    parts.indexOf(hovermode) === -1) {\n                    showCommonLabel = false;\n                    break;\n                }\n            }\n        }\n\n        // xyz labels put all info in their main label, so have no need of a common label\n        if(allHaveZ) showCommonLabel = false;\n    }\n\n    var commonLabel = container.selectAll('g.axistext')\n        .data(showCommonLabel ? [0] : []);\n    commonLabel.enter().append('g')\n        .classed('axistext', true);\n    commonLabel.exit().remove();\n\n    commonLabel.each(function() {\n        var label = d3.select(this);\n        var lpath = Lib.ensureSingle(label, 'path', '', function(s) {\n            s.style({'stroke-width': '1px'});\n        });\n        var ltext = Lib.ensureSingle(label, 'text', '', function(s) {\n            // prohibit tex interpretation until we can handle\n            // tex and regular text together\n            s.attr('data-notex', 1);\n        });\n\n        var commonBgColor = commonLabelOpts.bgcolor || Color.defaultLine;\n        var commonStroke = commonLabelOpts.bordercolor || Color.contrast(commonBgColor);\n        var contrastColor = Color.contrast(commonBgColor);\n        var commonLabelFont = {\n            family: commonLabelOpts.font.family || fontFamily,\n            size: commonLabelOpts.font.size || fontSize,\n            color: commonLabelOpts.font.color || contrastColor\n        };\n\n        lpath.style({\n            fill: commonBgColor,\n            stroke: commonStroke\n        });\n\n        ltext.text(t0)\n            .call(Drawing.font, commonLabelFont)\n            .call(svgTextUtils.positionText, 0, 0)\n            .call(svgTextUtils.convertToTspans, gd);\n\n        label.attr('transform', '');\n\n        var tbb = ltext.node().getBoundingClientRect();\n        var lx, ly;\n\n        if(hovermode === 'x') {\n            var topsign = xa.side === 'top' ? '-' : '';\n\n            ltext.attr('text-anchor', 'middle')\n                .call(svgTextUtils.positionText, 0, (xa.side === 'top' ?\n                    (outerTop - tbb.bottom - HOVERARROWSIZE - HOVERTEXTPAD) :\n                    (outerTop - tbb.top + HOVERARROWSIZE + HOVERTEXTPAD)));\n\n            lx = xa._offset + (c0.x0 + c0.x1) / 2;\n            ly = ya._offset + (xa.side === 'top' ? 0 : ya._length);\n\n            var halfWidth = tbb.width / 2 + HOVERTEXTPAD;\n\n            if(lx < halfWidth) {\n                lx = halfWidth;\n\n                lpath.attr('d', 'M-' + (halfWidth - HOVERARROWSIZE) + ',0' +\n                    'L-' + (halfWidth - HOVERARROWSIZE * 2) + ',' + topsign + HOVERARROWSIZE +\n                    'H' + (HOVERTEXTPAD + tbb.width / 2) +\n                    'v' + topsign + (HOVERTEXTPAD * 2 + tbb.height) +\n                    'H-' + halfWidth +\n                    'V' + topsign + HOVERARROWSIZE +\n                    'Z');\n            } else if(lx > (fullLayout.width - halfWidth)) {\n                lx = fullLayout.width - halfWidth;\n\n                lpath.attr('d', 'M' + (halfWidth - HOVERARROWSIZE) + ',0' +\n                    'L' + halfWidth + ',' + topsign + HOVERARROWSIZE +\n                    'v' + topsign + (HOVERTEXTPAD * 2 + tbb.height) +\n                    'H-' + halfWidth +\n                    'V' + topsign + HOVERARROWSIZE +\n                    'H' + (halfWidth - HOVERARROWSIZE * 2) + 'Z');\n            } else {\n                lpath.attr('d', 'M0,0' +\n                    'L' + HOVERARROWSIZE + ',' + topsign + HOVERARROWSIZE +\n                    'H' + (HOVERTEXTPAD + tbb.width / 2) +\n                    'v' + topsign + (HOVERTEXTPAD * 2 + tbb.height) +\n                    'H-' + (HOVERTEXTPAD + tbb.width / 2) +\n                    'V' + topsign + HOVERARROWSIZE +\n                    'H-' + HOVERARROWSIZE + 'Z');\n            }\n        } else {\n            var anchor;\n            var sgn;\n            var leftsign;\n            if(ya.side === 'right') {\n                anchor = 'start';\n                sgn = 1;\n                leftsign = '';\n                lx = xa._offset + xa._length;\n            } else {\n                anchor = 'end';\n                sgn = -1;\n                leftsign = '-';\n                lx = xa._offset;\n            }\n\n            ly = ya._offset + (c0.y0 + c0.y1) / 2;\n\n            ltext.attr('text-anchor', anchor);\n\n            lpath.attr('d', 'M0,0' +\n                'L' + leftsign + HOVERARROWSIZE + ',' + HOVERARROWSIZE +\n                'V' + (HOVERTEXTPAD + tbb.height / 2) +\n                'h' + leftsign + (HOVERTEXTPAD * 2 + tbb.width) +\n                'V-' + (HOVERTEXTPAD + tbb.height / 2) +\n                'H' + leftsign + HOVERARROWSIZE + 'V-' + HOVERARROWSIZE + 'Z');\n\n            var halfHeight = tbb.height / 2;\n            var lty = outerTop - tbb.top - halfHeight;\n            var clipId = 'clip' + fullLayout._uid + 'commonlabel' + ya._id;\n            var clipPath;\n\n            if(lx < (tbb.width + 2 * HOVERTEXTPAD + HOVERARROWSIZE)) {\n                clipPath = 'M-' + (HOVERARROWSIZE + HOVERTEXTPAD) + '-' + halfHeight +\n                    'h-' + (tbb.width - HOVERTEXTPAD) +\n                    'V' + halfHeight +\n                    'h' + (tbb.width - HOVERTEXTPAD) + 'Z';\n\n                var ltx = tbb.width - lx + HOVERTEXTPAD;\n                svgTextUtils.positionText(ltext, ltx, lty);\n\n                // shift each line (except the longest) so that start-of-line\n                // is always visible\n                if(anchor === 'end') {\n                    ltext.selectAll('tspan').each(function() {\n                        var s = d3.select(this);\n                        var dummy = Drawing.tester.append('text')\n                            .text(s.text())\n                            .call(Drawing.font, commonLabelFont);\n                        var dummyBB = dummy.node().getBoundingClientRect();\n                        if(Math.round(dummyBB.width) < Math.round(tbb.width)) {\n                            s.attr('x', ltx - dummyBB.width);\n                        }\n                        dummy.remove();\n                    });\n                }\n            } else {\n                svgTextUtils.positionText(ltext, sgn * (HOVERTEXTPAD + HOVERARROWSIZE), lty);\n                clipPath = null;\n            }\n\n            var textClip = fullLayout._topclips.selectAll('#' + clipId).data(clipPath ? [0] : []);\n            textClip.enter().append('clipPath').attr('id', clipId).append('path');\n            textClip.exit().remove();\n            textClip.select('path').attr('d', clipPath);\n            Drawing.setClipUrl(ltext, clipPath ? clipId : null, gd);\n        }\n\n        label.attr('transform', strTranslate(lx, ly));\n\n        // remove the \"close but not quite\" points\n        // because of error bars, only take up to a space\n        hoverData = filterClosePoints(hoverData);\n    });\n\n    function filterClosePoints(hoverData) {\n        return hoverData.filter(function(d) {\n            return (d.zLabelVal !== undefined) ||\n                (d[commonAttr] || '').split(' ')[0] === t00;\n        });\n    }\n\n    // Show a single hover label\n    if(helpers.isUnifiedHover(hovermode)) {\n        // Delete leftover hover labels from other hovermodes\n        container.selectAll('g.hovertext').remove();\n\n        // similarly to compare mode, we remove the \"close but not quite together\" points\n        if((t0 !== undefined) && (c0.distance <= opts.hoverdistance)) hoverData = filterClosePoints(hoverData);\n\n        // Return early if nothing is hovered on\n        if(hoverData.length === 0) return;\n\n        // mock legend\n        var mockLayoutIn = {\n            showlegend: true,\n            legend: {\n                title: {text: t0, font: fullLayout.hoverlabel.font},\n                font: fullLayout.hoverlabel.font,\n                bgcolor: fullLayout.hoverlabel.bgcolor,\n                bordercolor: fullLayout.hoverlabel.bordercolor,\n                borderwidth: 1,\n                tracegroupgap: 7,\n                traceorder: fullLayout.legend ? fullLayout.legend.traceorder : undefined,\n                orientation: 'v'\n            }\n        };\n        var mockLayoutOut = {};\n        legendSupplyDefaults(mockLayoutIn, mockLayoutOut, gd._fullData);\n        var legendOpts = mockLayoutOut.legend;\n\n        // prepare items for the legend\n        legendOpts.entries = [];\n        for(var j = 0; j < hoverData.length; j++) {\n            var texts = getHoverLabelText(hoverData[j], true, hovermode, fullLayout, t0);\n            var text = texts[0];\n            var name = texts[1];\n            var pt = hoverData[j];\n            pt.name = name;\n            if(name !== '') {\n                pt.text = name + ' : ' + text;\n            } else {\n                pt.text = text;\n            }\n\n            // pass through marker's calcdata to style legend items\n            var cd = pt.cd[pt.index];\n            if(cd) {\n                if(cd.mc) pt.mc = cd.mc;\n                if(cd.mcc) pt.mc = cd.mcc;\n                if(cd.mlc) pt.mlc = cd.mlc;\n                if(cd.mlcc) pt.mlc = cd.mlcc;\n                if(cd.mlw) pt.mlw = cd.mlw;\n                if(cd.mrc) pt.mrc = cd.mrc;\n                if(cd.dir) pt.dir = cd.dir;\n            }\n            pt._distinct = true;\n\n            legendOpts.entries.push([pt]);\n        }\n        legendOpts.entries.sort(function(a, b) { return a[0].trace.index - b[0].trace.index;});\n        legendOpts.layer = container;\n\n        // Draw unified hover label\n        legendDraw(gd, legendOpts);\n\n        // Position the hover\n        var ly = Lib.mean(hoverData.map(function(c) {return (c.y0 + c.y1) / 2;}));\n        var lx = Lib.mean(hoverData.map(function(c) {return (c.x0 + c.x1) / 2;}));\n        var legendContainer = container.select('g.legend');\n        var tbb = legendContainer.node().getBoundingClientRect();\n        lx += xa._offset;\n        ly += ya._offset - tbb.height / 2;\n\n        // Change horizontal alignment to end up on screen\n        var txWidth = tbb.width + 2 * HOVERTEXTPAD;\n        var anchorStartOK = lx + txWidth <= outerWidth;\n        var anchorEndOK = lx - txWidth >= 0;\n        if(!anchorStartOK && anchorEndOK) {\n            lx -= txWidth;\n        } else {\n            lx += 2 * HOVERTEXTPAD;\n        }\n\n        // Change vertical alignement to end up on screen\n        var txHeight = tbb.height + 2 * HOVERTEXTPAD;\n        var overflowTop = ly <= outerTop;\n        var overflowBottom = ly + txHeight >= outerHeight;\n        var canFit = txHeight <= outerHeight;\n        if(canFit) {\n            if(overflowTop) {\n                ly = ya._offset + 2 * HOVERTEXTPAD;\n            } else if(overflowBottom) {\n                ly = outerHeight - txHeight;\n            }\n        }\n        legendContainer.attr('transform', strTranslate(lx, ly));\n\n        return legendContainer;\n    }\n\n    // show all the individual labels\n\n    // first create the objects\n    var hoverLabels = container.selectAll('g.hovertext')\n        .data(hoverData, function(d) {\n            // N.B. when multiple items have the same result key-function value,\n            // only the first of those items in hoverData gets rendered\n            return hoverDataKey(d);\n        });\n    hoverLabels.enter().append('g')\n        .classed('hovertext', true)\n        .each(function() {\n            var g = d3.select(this);\n            // trace name label (rect and text.name)\n            g.append('rect')\n                .call(Color.fill, Color.addOpacity(bgColor, 0.8));\n            g.append('text').classed('name', true);\n            // trace data label (path and text.nums)\n            g.append('path')\n                .style('stroke-width', '1px');\n            g.append('text').classed('nums', true)\n                .call(Drawing.font, fontFamily, fontSize);\n        });\n    hoverLabels.exit().remove();\n\n    // then put the text in, position the pointer to the data,\n    // and figure out sizes\n    hoverLabels.each(function(d) {\n        var g = d3.select(this).attr('transform', '');\n\n        var dColor = d.color;\n        if(Array.isArray(dColor)) {\n            dColor = dColor[d.eventData[0].pointNumber];\n        }\n\n        // combine possible non-opaque trace color with bgColor\n        var color0 = d.bgcolor || dColor;\n        // color for 'nums' part of the label\n        var numsColor = Color.combine(\n            Color.opacity(color0) ? color0 : Color.defaultLine,\n            bgColor\n        );\n        // color for 'name' part of the label\n        var nameColor = Color.combine(\n            Color.opacity(dColor) ? dColor : Color.defaultLine,\n            bgColor\n        );\n        // find a contrasting color for border and text\n        var contrastColor = d.borderColor || Color.contrast(numsColor);\n\n        var texts = getHoverLabelText(d, showCommonLabel, hovermode, fullLayout, t0, g);\n        var text = texts[0];\n        var name = texts[1];\n\n        // main label\n        var tx = g.select('text.nums')\n            .call(Drawing.font,\n                d.fontFamily || fontFamily,\n                d.fontSize || fontSize,\n                d.fontColor || contrastColor)\n            .text(text)\n            .attr('data-notex', 1)\n            .call(svgTextUtils.positionText, 0, 0)\n            .call(svgTextUtils.convertToTspans, gd);\n\n        var tx2 = g.select('text.name');\n        var tx2width = 0;\n        var tx2height = 0;\n\n        // secondary label for non-empty 'name'\n        if(name && name !== text) {\n            tx2.call(Drawing.font,\n                    d.fontFamily || fontFamily,\n                    d.fontSize || fontSize,\n                    nameColor)\n                .text(name)\n                .attr('data-notex', 1)\n                .call(svgTextUtils.positionText, 0, 0)\n                .call(svgTextUtils.convertToTspans, gd);\n\n            var t2bb = tx2.node().getBoundingClientRect();\n            tx2width = t2bb.width + 2 * HOVERTEXTPAD;\n            tx2height = t2bb.height + 2 * HOVERTEXTPAD;\n        } else {\n            tx2.remove();\n            g.select('rect').remove();\n        }\n\n        g.select('path').style({\n            fill: numsColor,\n            stroke: contrastColor\n        });\n\n        var tbb = tx.node().getBoundingClientRect();\n        var htx = d.xa._offset + (d.x0 + d.x1) / 2;\n        var hty = d.ya._offset + (d.y0 + d.y1) / 2;\n        var dx = Math.abs(d.x1 - d.x0);\n        var dy = Math.abs(d.y1 - d.y0);\n        var txTotalWidth = tbb.width + HOVERARROWSIZE + HOVERTEXTPAD + tx2width;\n        var anchorStartOK, anchorEndOK;\n\n        d.ty0 = outerTop - tbb.top;\n        d.bx = tbb.width + 2 * HOVERTEXTPAD;\n        d.by = Math.max(tbb.height + 2 * HOVERTEXTPAD, tx2height);\n        d.anchor = 'start';\n        d.txwidth = tbb.width;\n        d.tx2width = tx2width;\n        d.offset = 0;\n\n        if(rotateLabels) {\n            d.pos = htx;\n            anchorStartOK = hty + dy / 2 + txTotalWidth <= outerHeight;\n            anchorEndOK = hty - dy / 2 - txTotalWidth >= 0;\n            if((d.idealAlign === 'top' || !anchorStartOK) && anchorEndOK) {\n                hty -= dy / 2;\n                d.anchor = 'end';\n            } else if(anchorStartOK) {\n                hty += dy / 2;\n                d.anchor = 'start';\n            } else d.anchor = 'middle';\n        } else {\n            d.pos = hty;\n            anchorStartOK = htx + dx / 2 + txTotalWidth <= outerWidth;\n            anchorEndOK = htx - dx / 2 - txTotalWidth >= 0;\n\n            if((d.idealAlign === 'left' || !anchorStartOK) && anchorEndOK) {\n                htx -= dx / 2;\n                d.anchor = 'end';\n            } else if(anchorStartOK) {\n                htx += dx / 2;\n                d.anchor = 'start';\n            } else {\n                d.anchor = 'middle';\n\n                var txHalfWidth = txTotalWidth / 2;\n                var overflowR = htx + txHalfWidth - outerWidth;\n                var overflowL = htx - txHalfWidth;\n                if(overflowR > 0) htx -= overflowR;\n                if(overflowL < 0) htx += -overflowL;\n            }\n        }\n\n        tx.attr('text-anchor', d.anchor);\n        if(tx2width) tx2.attr('text-anchor', d.anchor);\n        g.attr('transform', strTranslate(htx, hty) +\n            (rotateLabels ? strRotate(YANGLE) : ''));\n    });\n\n    return hoverLabels;\n}\n\nfunction getHoverLabelText(d, showCommonLabel, hovermode, fullLayout, t0, g) {\n    var name = '';\n    var text = '';\n    // to get custom 'name' labels pass cleanPoint\n    if(d.nameOverride !== undefined) d.name = d.nameOverride;\n\n    if(d.name) {\n        if(d.trace._meta) {\n            d.name = Lib.templateString(d.name, d.trace._meta);\n        }\n        name = plainText(d.name, d.nameLength);\n    }\n\n    if(d.zLabel !== undefined) {\n        if(d.xLabel !== undefined) text += 'x: ' + d.xLabel + '<br>';\n        if(d.yLabel !== undefined) text += 'y: ' + d.yLabel + '<br>';\n        if(d.trace.type !== 'choropleth' && d.trace.type !== 'choroplethmapbox') {\n            text += (text ? 'z: ' : '') + d.zLabel;\n        }\n    } else if(showCommonLabel && d[hovermode.charAt(0) + 'Label'] === t0) {\n        text = d[(hovermode.charAt(0) === 'x' ? 'y' : 'x') + 'Label'] || '';\n    } else if(d.xLabel === undefined) {\n        if(d.yLabel !== undefined && d.trace.type !== 'scattercarpet') {\n            text = d.yLabel;\n        }\n    } else if(d.yLabel === undefined) text = d.xLabel;\n    else text = '(' + d.xLabel + ', ' + d.yLabel + ')';\n\n    if((d.text || d.text === 0) && !Array.isArray(d.text)) {\n        text += (text ? '<br>' : '') + d.text;\n    }\n\n    // used by other modules (initially just ternary) that\n    // manage their own hoverinfo independent of cleanPoint\n    // the rest of this will still apply, so such modules\n    // can still put things in (x|y|z)Label, text, and name\n    // and hoverinfo will still determine their visibility\n    if(d.extraText !== undefined) text += (text ? '<br>' : '') + d.extraText;\n\n    // if 'text' is empty at this point,\n    // and hovertemplate is not defined,\n    // put 'name' in main label and don't show secondary label\n    if(g && text === '' && !d.hovertemplate) {\n        // if 'name' is also empty, remove entire label\n        if(name === '') g.remove();\n        text = name;\n    }\n\n    // hovertemplate\n    var d3locale = fullLayout._d3locale;\n    var hovertemplate = d.hovertemplate || false;\n    var hovertemplateLabels = d.hovertemplateLabels || d;\n    var eventData = d.eventData[0] || {};\n    if(hovertemplate) {\n        text = Lib.hovertemplateString(\n            hovertemplate,\n            hovertemplateLabels,\n            d3locale,\n            eventData,\n            d.trace._meta\n        );\n\n        text = text.replace(EXTRA_STRING_REGEX, function(match, extra) {\n            // assign name for secondary text label\n            name = plainText(extra, d.nameLength);\n            // remove from main text label\n            return '';\n        });\n    }\n    return [text, name];\n}\n\n// Make groups of touching points, and within each group\n// move each point so that no labels overlap, but the average\n// label position is the same as it was before moving. Indicentally,\n// this is equivalent to saying all the labels are on equal linear\n// springs about their initial position. Initially, each point is\n// its own group, but as we find overlaps we will clump the points.\n//\n// Also, there are hard constraints at the edges of the graphs,\n// that push all groups to the middle so they are visible. I don't\n// know what happens if the group spans all the way from one edge to\n// the other, though it hardly matters - there's just too much\n// information then.\nfunction hoverAvoidOverlaps(hoverLabels, axKey, fullLayout) {\n    var nummoves = 0;\n    var axSign = 1;\n    var nLabels = hoverLabels.size();\n\n    // make groups of touching points\n    var pointgroups = new Array(nLabels);\n    var k = 0;\n\n    hoverLabels.each(function(d) {\n        var ax = d[axKey];\n        var axIsX = ax._id.charAt(0) === 'x';\n        var rng = ax.range;\n\n        if(k === 0 && rng && ((rng[0] > rng[1]) !== axIsX)) {\n            axSign = -1;\n        }\n        pointgroups[k++] = [{\n            datum: d,\n            traceIndex: d.trace.index,\n            dp: 0,\n            pos: d.pos,\n            posref: d.posref,\n            size: d.by * (axIsX ? YFACTOR : 1) / 2,\n            pmin: 0,\n            pmax: (axIsX ? fullLayout.width : fullLayout.height)\n        }];\n    });\n\n    pointgroups.sort(function(a, b) {\n        return (a[0].posref - b[0].posref) ||\n            // for equal positions, sort trace indices increasing or decreasing\n            // depending on whether the axis is reversed or not... so stacked\n            // traces will generally keep their order even if one trace adds\n            // nothing to the stack.\n            (axSign * (b[0].traceIndex - a[0].traceIndex));\n    });\n\n    var donepositioning, topOverlap, bottomOverlap, i, j, pti, sumdp;\n\n    function constrainGroup(grp) {\n        var minPt = grp[0];\n        var maxPt = grp[grp.length - 1];\n\n        // overlap with the top - positive vals are overlaps\n        topOverlap = minPt.pmin - minPt.pos - minPt.dp + minPt.size;\n\n        // overlap with the bottom - positive vals are overlaps\n        bottomOverlap = maxPt.pos + maxPt.dp + maxPt.size - minPt.pmax;\n\n        // check for min overlap first, so that we always\n        // see the largest labels\n        // allow for .01px overlap, so we don't get an\n        // infinite loop from rounding errors\n        if(topOverlap > 0.01) {\n            for(j = grp.length - 1; j >= 0; j--) grp[j].dp += topOverlap;\n            donepositioning = false;\n        }\n        if(bottomOverlap < 0.01) return;\n        if(topOverlap < -0.01) {\n            // make sure we're not pushing back and forth\n            for(j = grp.length - 1; j >= 0; j--) grp[j].dp -= bottomOverlap;\n            donepositioning = false;\n        }\n        if(!donepositioning) return;\n\n        // no room to fix positioning, delete off-screen points\n\n        // first see how many points we need to delete\n        var deleteCount = 0;\n        for(i = 0; i < grp.length; i++) {\n            pti = grp[i];\n            if(pti.pos + pti.dp + pti.size > minPt.pmax) deleteCount++;\n        }\n\n        // start by deleting points whose data is off screen\n        for(i = grp.length - 1; i >= 0; i--) {\n            if(deleteCount <= 0) break;\n            pti = grp[i];\n\n            // pos has already been constrained to [pmin,pmax]\n            // so look for points close to that to delete\n            if(pti.pos > minPt.pmax - 1) {\n                pti.del = true;\n                deleteCount--;\n            }\n        }\n        for(i = 0; i < grp.length; i++) {\n            if(deleteCount <= 0) break;\n            pti = grp[i];\n\n            // pos has already been constrained to [pmin,pmax]\n            // so look for points close to that to delete\n            if(pti.pos < minPt.pmin + 1) {\n                pti.del = true;\n                deleteCount--;\n\n                // shift the whole group minus into this new space\n                bottomOverlap = pti.size * 2;\n                for(j = grp.length - 1; j >= 0; j--) grp[j].dp -= bottomOverlap;\n            }\n        }\n        // then delete points that go off the bottom\n        for(i = grp.length - 1; i >= 0; i--) {\n            if(deleteCount <= 0) break;\n            pti = grp[i];\n            if(pti.pos + pti.dp + pti.size > minPt.pmax) {\n                pti.del = true;\n                deleteCount--;\n            }\n        }\n    }\n\n    // loop through groups, combining them if they overlap,\n    // until nothing moves\n    while(!donepositioning && nummoves <= nLabels) {\n        // to avoid infinite loops, don't move more times\n        // than there are traces\n        nummoves++;\n\n        // assume nothing will move in this iteration,\n        // reverse this if it does\n        donepositioning = true;\n        i = 0;\n        while(i < pointgroups.length - 1) {\n            // the higher (g0) and lower (g1) point group\n            var g0 = pointgroups[i];\n            var g1 = pointgroups[i + 1];\n\n            // the lowest point in the higher group (p0)\n            // the highest point in the lower group (p1)\n            var p0 = g0[g0.length - 1];\n            var p1 = g1[0];\n            topOverlap = p0.pos + p0.dp + p0.size - p1.pos - p1.dp + p1.size;\n\n            // Only group points that lie on the same axes\n            if(topOverlap > 0.01 && (p0.pmin === p1.pmin) && (p0.pmax === p1.pmax)) {\n                // push the new point(s) added to this group out of the way\n                for(j = g1.length - 1; j >= 0; j--) g1[j].dp += topOverlap;\n\n                // add them to the group\n                g0.push.apply(g0, g1);\n                pointgroups.splice(i + 1, 1);\n\n                // adjust for minimum average movement\n                sumdp = 0;\n                for(j = g0.length - 1; j >= 0; j--) sumdp += g0[j].dp;\n                bottomOverlap = sumdp / g0.length;\n                for(j = g0.length - 1; j >= 0; j--) g0[j].dp -= bottomOverlap;\n                donepositioning = false;\n            } else i++;\n        }\n\n        // check if we're going off the plot on either side and fix\n        pointgroups.forEach(constrainGroup);\n    }\n\n    // now put these offsets into hoverData\n    for(i = pointgroups.length - 1; i >= 0; i--) {\n        var grp = pointgroups[i];\n        for(j = grp.length - 1; j >= 0; j--) {\n            var pt = grp[j];\n            var hoverPt = pt.datum;\n            hoverPt.offset = pt.dp;\n            hoverPt.del = pt.del;\n        }\n    }\n}\n\nfunction alignHoverText(hoverLabels, rotateLabels, scaleX, scaleY) {\n    var pX = function(x) { return x * scaleX; };\n    var pY = function(y) { return y * scaleY; };\n\n    // finally set the text positioning relative to the data and draw the\n    // box around it\n    hoverLabels.each(function(d) {\n        var g = d3.select(this);\n        if(d.del) return g.remove();\n\n        var tx = g.select('text.nums');\n        var anchor = d.anchor;\n        var horzSign = anchor === 'end' ? -1 : 1;\n        var alignShift = {start: 1, end: -1, middle: 0}[anchor];\n        var txx = alignShift * (HOVERARROWSIZE + HOVERTEXTPAD);\n        var tx2x = txx + alignShift * (d.txwidth + HOVERTEXTPAD);\n        var offsetX = 0;\n        var offsetY = d.offset;\n\n        var isMiddle = anchor === 'middle';\n        if(isMiddle) {\n            txx -= d.tx2width / 2;\n            tx2x += d.txwidth / 2 + HOVERTEXTPAD;\n        }\n        if(rotateLabels) {\n            offsetY *= -YSHIFTY;\n            offsetX = d.offset * YSHIFTX;\n        }\n\n        g.select('path')\n            .attr('d', isMiddle ?\n            // middle aligned: rect centered on data\n            ('M-' + pX(d.bx / 2 + d.tx2width / 2) + ',' + pY(offsetY - d.by / 2) +\n              'h' + pX(d.bx) + 'v' + pY(d.by) + 'h-' + pX(d.bx) + 'Z') :\n            // left or right aligned: side rect with arrow to data\n            ('M0,0L' + pX(horzSign * HOVERARROWSIZE + offsetX) + ',' + pY(HOVERARROWSIZE + offsetY) +\n                'v' + pY(d.by / 2 - HOVERARROWSIZE) +\n                'h' + pX(horzSign * d.bx) +\n                'v-' + pY(d.by) +\n                'H' + pX(horzSign * HOVERARROWSIZE + offsetX) +\n                'V' + pY(offsetY - HOVERARROWSIZE) +\n                'Z'));\n\n        var posX = offsetX + txx;\n        var posY = offsetY + d.ty0 - d.by / 2 + HOVERTEXTPAD;\n        var textAlign = d.textAlign || 'auto';\n\n        if(textAlign !== 'auto') {\n            if(textAlign === 'left' && anchor !== 'start') {\n                tx.attr('text-anchor', 'start');\n                posX = isMiddle ?\n                    -d.bx / 2 - d.tx2width / 2 + HOVERTEXTPAD :\n                    -d.bx - HOVERTEXTPAD;\n            } else if(textAlign === 'right' && anchor !== 'end') {\n                tx.attr('text-anchor', 'end');\n                posX = isMiddle ?\n                    d.bx / 2 - d.tx2width / 2 - HOVERTEXTPAD :\n                    d.bx + HOVERTEXTPAD;\n            }\n        }\n\n        tx.call(svgTextUtils.positionText, pX(posX), pY(posY));\n\n        if(d.tx2width) {\n            g.select('text.name')\n                .call(svgTextUtils.positionText,\n                    pX(tx2x + alignShift * HOVERTEXTPAD + offsetX),\n                    pY(offsetY + d.ty0 - d.by / 2 + HOVERTEXTPAD));\n            g.select('rect')\n                .call(Drawing.setRect,\n                    pX(tx2x + (alignShift - 1) * d.tx2width / 2 + offsetX),\n                    pY(offsetY - d.by / 2 - 1),\n                    pX(d.tx2width), pY(d.by + 2));\n        }\n    });\n}\n\nfunction cleanPoint(d, hovermode) {\n    var index = d.index;\n    var trace = d.trace || {};\n    var cd0 = d.cd[0];\n    var cd = d.cd[index] || {};\n\n    function pass(v) {\n        return v || (isNumeric(v) && v === 0);\n    }\n\n    var getVal = Array.isArray(index) ?\n        function(calcKey, traceKey) {\n            var v = Lib.castOption(cd0, index, calcKey);\n            return pass(v) ? v : Lib.extractOption({}, trace, '', traceKey);\n        } :\n        function(calcKey, traceKey) {\n            return Lib.extractOption(cd, trace, calcKey, traceKey);\n        };\n\n    function fill(key, calcKey, traceKey) {\n        var val = getVal(calcKey, traceKey);\n        if(pass(val)) d[key] = val;\n    }\n\n    fill('hoverinfo', 'hi', 'hoverinfo');\n    fill('bgcolor', 'hbg', 'hoverlabel.bgcolor');\n    fill('borderColor', 'hbc', 'hoverlabel.bordercolor');\n    fill('fontFamily', 'htf', 'hoverlabel.font.family');\n    fill('fontSize', 'hts', 'hoverlabel.font.size');\n    fill('fontColor', 'htc', 'hoverlabel.font.color');\n    fill('nameLength', 'hnl', 'hoverlabel.namelength');\n    fill('textAlign', 'hta', 'hoverlabel.align');\n\n    d.posref = (hovermode === 'y' || (hovermode === 'closest' && trace.orientation === 'h')) ?\n        (d.xa._offset + (d.x0 + d.x1) / 2) :\n        (d.ya._offset + (d.y0 + d.y1) / 2);\n\n    // then constrain all the positions to be on the plot\n    d.x0 = Lib.constrain(d.x0, 0, d.xa._length);\n    d.x1 = Lib.constrain(d.x1, 0, d.xa._length);\n    d.y0 = Lib.constrain(d.y0, 0, d.ya._length);\n    d.y1 = Lib.constrain(d.y1, 0, d.ya._length);\n\n    // and convert the x and y label values into formatted text\n    if(d.xLabelVal !== undefined) {\n        d.xLabel = ('xLabel' in d) ? d.xLabel : Axes.hoverLabelText(d.xa, d.xLabelVal);\n        d.xVal = d.xa.c2d(d.xLabelVal);\n    }\n    if(d.yLabelVal !== undefined) {\n        d.yLabel = ('yLabel' in d) ? d.yLabel : Axes.hoverLabelText(d.ya, d.yLabelVal);\n        d.yVal = d.ya.c2d(d.yLabelVal);\n    }\n\n    // Traces like heatmaps generate the zLabel in their hoverPoints function\n    if(d.zLabelVal !== undefined && d.zLabel === undefined) {\n        d.zLabel = String(d.zLabelVal);\n    }\n\n    // for box means and error bars, add the range to the label\n    if(!isNaN(d.xerr) && !(d.xa.type === 'log' && d.xerr <= 0)) {\n        var xeText = Axes.tickText(d.xa, d.xa.c2l(d.xerr), 'hover').text;\n        if(d.xerrneg !== undefined) {\n            d.xLabel += ' +' + xeText + ' / -' +\n                Axes.tickText(d.xa, d.xa.c2l(d.xerrneg), 'hover').text;\n        } else d.xLabel += ' ± ' + xeText;\n\n        // small distance penalty for error bars, so that if there are\n        // traces with errors and some without, the error bar label will\n        // hoist up to the point\n        if(hovermode === 'x') d.distance += 1;\n    }\n    if(!isNaN(d.yerr) && !(d.ya.type === 'log' && d.yerr <= 0)) {\n        var yeText = Axes.tickText(d.ya, d.ya.c2l(d.yerr), 'hover').text;\n        if(d.yerrneg !== undefined) {\n            d.yLabel += ' +' + yeText + ' / -' +\n                Axes.tickText(d.ya, d.ya.c2l(d.yerrneg), 'hover').text;\n        } else d.yLabel += ' ± ' + yeText;\n\n        if(hovermode === 'y') d.distance += 1;\n    }\n\n    var infomode = d.hoverinfo || d.trace.hoverinfo;\n\n    if(infomode && infomode !== 'all') {\n        infomode = Array.isArray(infomode) ? infomode : infomode.split('+');\n        if(infomode.indexOf('x') === -1) d.xLabel = undefined;\n        if(infomode.indexOf('y') === -1) d.yLabel = undefined;\n        if(infomode.indexOf('z') === -1) d.zLabel = undefined;\n        if(infomode.indexOf('text') === -1) d.text = undefined;\n        if(infomode.indexOf('name') === -1) d.name = undefined;\n    }\n\n    return d;\n}\n\nfunction createSpikelines(gd, closestPoints, opts) {\n    var container = opts.container;\n    var fullLayout = opts.fullLayout;\n    var gs = fullLayout._size;\n    var evt = opts.event;\n    var showY = !!closestPoints.hLinePoint;\n    var showX = !!closestPoints.vLinePoint;\n\n    var xa, ya;\n\n    // Remove old spikeline items\n    container.selectAll('.spikeline').remove();\n\n    if(!(showX || showY)) return;\n\n    var contrastColor = Color.combine(fullLayout.plot_bgcolor, fullLayout.paper_bgcolor);\n\n    // Horizontal line (to y-axis)\n    if(showY) {\n        var hLinePoint = closestPoints.hLinePoint;\n        var hLinePointX, hLinePointY;\n\n        xa = hLinePoint && hLinePoint.xa;\n        ya = hLinePoint && hLinePoint.ya;\n        var ySnap = ya.spikesnap;\n\n        if(ySnap === 'cursor') {\n            hLinePointX = evt.pointerX;\n            hLinePointY = evt.pointerY;\n        } else {\n            hLinePointX = xa._offset + hLinePoint.x;\n            hLinePointY = ya._offset + hLinePoint.y;\n        }\n        var dfltHLineColor = tinycolor.readability(hLinePoint.color, contrastColor) < 1.5 ?\n            Color.contrast(contrastColor) : hLinePoint.color;\n        var yMode = ya.spikemode;\n        var yThickness = ya.spikethickness;\n        var yColor = ya.spikecolor || dfltHLineColor;\n        var xEdge = Axes.getPxPosition(gd, ya);\n        var xBase, xEndSpike;\n\n        if(yMode.indexOf('toaxis') !== -1 || yMode.indexOf('across') !== -1) {\n            if(yMode.indexOf('toaxis') !== -1) {\n                xBase = xEdge;\n                xEndSpike = hLinePointX;\n            }\n            if(yMode.indexOf('across') !== -1) {\n                var xAcross0 = ya._counterDomainMin;\n                var xAcross1 = ya._counterDomainMax;\n                if(ya.anchor === 'free') {\n                    xAcross0 = Math.min(xAcross0, ya.position);\n                    xAcross1 = Math.max(xAcross1, ya.position);\n                }\n                xBase = gs.l + xAcross0 * gs.w;\n                xEndSpike = gs.l + xAcross1 * gs.w;\n            }\n\n            // Foreground horizontal line (to y-axis)\n            container.insert('line', ':first-child')\n                .attr({\n                    x1: xBase,\n                    x2: xEndSpike,\n                    y1: hLinePointY,\n                    y2: hLinePointY,\n                    'stroke-width': yThickness,\n                    stroke: yColor,\n                    'stroke-dasharray': Drawing.dashStyle(ya.spikedash, yThickness)\n                })\n                .classed('spikeline', true)\n                .classed('crisp', true);\n\n            // Background horizontal Line (to y-axis)\n            container.insert('line', ':first-child')\n                .attr({\n                    x1: xBase,\n                    x2: xEndSpike,\n                    y1: hLinePointY,\n                    y2: hLinePointY,\n                    'stroke-width': yThickness + 2,\n                    stroke: contrastColor\n                })\n                .classed('spikeline', true)\n                .classed('crisp', true);\n        }\n        // Y axis marker\n        if(yMode.indexOf('marker') !== -1) {\n            container.insert('circle', ':first-child')\n                .attr({\n                    cx: xEdge + (ya.side !== 'right' ? yThickness : -yThickness),\n                    cy: hLinePointY,\n                    r: yThickness,\n                    fill: yColor\n                })\n                .classed('spikeline', true);\n        }\n    }\n\n    if(showX) {\n        var vLinePoint = closestPoints.vLinePoint;\n        var vLinePointX, vLinePointY;\n\n        xa = vLinePoint && vLinePoint.xa;\n        ya = vLinePoint && vLinePoint.ya;\n        var xSnap = xa.spikesnap;\n\n        if(xSnap === 'cursor') {\n            vLinePointX = evt.pointerX;\n            vLinePointY = evt.pointerY;\n        } else {\n            vLinePointX = xa._offset + vLinePoint.x;\n            vLinePointY = ya._offset + vLinePoint.y;\n        }\n        var dfltVLineColor = tinycolor.readability(vLinePoint.color, contrastColor) < 1.5 ?\n            Color.contrast(contrastColor) : vLinePoint.color;\n        var xMode = xa.spikemode;\n        var xThickness = xa.spikethickness;\n        var xColor = xa.spikecolor || dfltVLineColor;\n        var yEdge = Axes.getPxPosition(gd, xa);\n        var yBase, yEndSpike;\n\n        if(xMode.indexOf('toaxis') !== -1 || xMode.indexOf('across') !== -1) {\n            if(xMode.indexOf('toaxis') !== -1) {\n                yBase = yEdge;\n                yEndSpike = vLinePointY;\n            }\n            if(xMode.indexOf('across') !== -1) {\n                var yAcross0 = xa._counterDomainMin;\n                var yAcross1 = xa._counterDomainMax;\n                if(xa.anchor === 'free') {\n                    yAcross0 = Math.min(yAcross0, xa.position);\n                    yAcross1 = Math.max(yAcross1, xa.position);\n                }\n                yBase = gs.t + (1 - yAcross1) * gs.h;\n                yEndSpike = gs.t + (1 - yAcross0) * gs.h;\n            }\n\n            // Foreground vertical line (to x-axis)\n            container.insert('line', ':first-child')\n                .attr({\n                    x1: vLinePointX,\n                    x2: vLinePointX,\n                    y1: yBase,\n                    y2: yEndSpike,\n                    'stroke-width': xThickness,\n                    stroke: xColor,\n                    'stroke-dasharray': Drawing.dashStyle(xa.spikedash, xThickness)\n                })\n                .classed('spikeline', true)\n                .classed('crisp', true);\n\n            // Background vertical line (to x-axis)\n            container.insert('line', ':first-child')\n                .attr({\n                    x1: vLinePointX,\n                    x2: vLinePointX,\n                    y1: yBase,\n                    y2: yEndSpike,\n                    'stroke-width': xThickness + 2,\n                    stroke: contrastColor\n                })\n                .classed('spikeline', true)\n                .classed('crisp', true);\n        }\n\n        // X axis marker\n        if(xMode.indexOf('marker') !== -1) {\n            container.insert('circle', ':first-child')\n                .attr({\n                    cx: vLinePointX,\n                    cy: yEdge - (xa.side !== 'top' ? xThickness : -xThickness),\n                    r: xThickness,\n                    fill: xColor\n                })\n                .classed('spikeline', true);\n        }\n    }\n}\n\nfunction hoverChanged(gd, evt, oldhoverdata) {\n    // don't emit any events if nothing changed\n    if(!oldhoverdata || oldhoverdata.length !== gd._hoverdata.length) return true;\n\n    for(var i = oldhoverdata.length - 1; i >= 0; i--) {\n        var oldPt = oldhoverdata[i];\n        var newPt = gd._hoverdata[i];\n\n        if(oldPt.curveNumber !== newPt.curveNumber ||\n            String(oldPt.pointNumber) !== String(newPt.pointNumber) ||\n            String(oldPt.pointNumbers) !== String(newPt.pointNumbers)\n        ) {\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction spikesChanged(gd, oldspikepoints) {\n    // don't relayout the plot because of new spikelines if spikelines points didn't change\n    if(!oldspikepoints) return true;\n    if(oldspikepoints.vLinePoint !== gd._spikepoints.vLinePoint ||\n        oldspikepoints.hLinePoint !== gd._spikepoints.hLinePoint\n    ) return true;\n    return false;\n}\n\nfunction plainText(s, len) {\n    return svgTextUtils.plainText(s || '', {\n        len: len,\n        allowedTags: ['br', 'sub', 'sup', 'b', 'i', 'em']\n    });\n}\n"]},"metadata":{},"sourceType":"script"}