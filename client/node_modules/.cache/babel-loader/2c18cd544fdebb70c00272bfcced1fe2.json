{"ast":null,"code":"/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar Events = require('../../lib/events');\n\nvar throttle = require('../../lib/throttle');\n\nvar getGraphDiv = require('../../lib/dom').getGraphDiv;\n\nvar hoverConstants = require('../fx/constants');\n\nvar unhover = module.exports = {};\n\nunhover.wrapped = function (gd, evt, subplot) {\n  gd = getGraphDiv(gd); // Important, clear any queued hovers\n\n  if (gd._fullLayout) {\n    throttle.clear(gd._fullLayout._uid + hoverConstants.HOVERID);\n  }\n\n  unhover.raw(gd, evt, subplot);\n}; // remove hover effects on mouse out, and emit unhover event\n\n\nunhover.raw = function raw(gd, evt) {\n  var fullLayout = gd._fullLayout;\n  var oldhoverdata = gd._hoverdata;\n  if (!evt) evt = {};\n\n  if (evt.target && Events.triggerHandler(gd, 'plotly_beforehover', evt) === false) {\n    return;\n  }\n\n  fullLayout._hoverlayer.selectAll('g').remove();\n\n  fullLayout._hoverlayer.selectAll('line').remove();\n\n  fullLayout._hoverlayer.selectAll('circle').remove();\n\n  gd._hoverdata = undefined;\n\n  if (evt.target && oldhoverdata) {\n    gd.emit('plotly_unhover', {\n      event: evt,\n      points: oldhoverdata\n    });\n  }\n};","map":{"version":3,"sources":["/Users/caseyrudick/Documents/landsharkrefactored-copy/client/node_modules/plotly.js/src/components/dragelement/unhover.js"],"names":["Events","require","throttle","getGraphDiv","hoverConstants","unhover","module","exports","wrapped","gd","evt","subplot","_fullLayout","clear","_uid","HOVERID","raw","fullLayout","oldhoverdata","_hoverdata","target","triggerHandler","_hoverlayer","selectAll","remove","undefined","emit","event","points"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAApB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,oBAAD,CAAtB;;AACA,IAAIE,WAAW,GAAGF,OAAO,CAAC,eAAD,CAAP,CAAyBE,WAA3C;;AAEA,IAAIC,cAAc,GAAGH,OAAO,CAAC,iBAAD,CAA5B;;AAEA,IAAII,OAAO,GAAGC,MAAM,CAACC,OAAP,GAAiB,EAA/B;;AAEAF,OAAO,CAACG,OAAR,GAAkB,UAASC,EAAT,EAAaC,GAAb,EAAkBC,OAAlB,EAA2B;AACzCF,EAAAA,EAAE,GAAGN,WAAW,CAACM,EAAD,CAAhB,CADyC,CAGzC;;AACA,MAAGA,EAAE,CAACG,WAAN,EAAmB;AACfV,IAAAA,QAAQ,CAACW,KAAT,CAAeJ,EAAE,CAACG,WAAH,CAAeE,IAAf,GAAsBV,cAAc,CAACW,OAApD;AACH;;AAEDV,EAAAA,OAAO,CAACW,GAAR,CAAYP,EAAZ,EAAgBC,GAAhB,EAAqBC,OAArB;AACH,CATD,C,CAYA;;;AACAN,OAAO,CAACW,GAAR,GAAc,SAASA,GAAT,CAAaP,EAAb,EAAiBC,GAAjB,EAAsB;AAChC,MAAIO,UAAU,GAAGR,EAAE,CAACG,WAApB;AACA,MAAIM,YAAY,GAAGT,EAAE,CAACU,UAAtB;AAEA,MAAG,CAACT,GAAJ,EAASA,GAAG,GAAG,EAAN;;AACT,MAAGA,GAAG,CAACU,MAAJ,IACApB,MAAM,CAACqB,cAAP,CAAsBZ,EAAtB,EAA0B,oBAA1B,EAAgDC,GAAhD,MAAyD,KAD5D,EACmE;AAC/D;AACH;;AAEDO,EAAAA,UAAU,CAACK,WAAX,CAAuBC,SAAvB,CAAiC,GAAjC,EAAsCC,MAAtC;;AACAP,EAAAA,UAAU,CAACK,WAAX,CAAuBC,SAAvB,CAAiC,MAAjC,EAAyCC,MAAzC;;AACAP,EAAAA,UAAU,CAACK,WAAX,CAAuBC,SAAvB,CAAiC,QAAjC,EAA2CC,MAA3C;;AACAf,EAAAA,EAAE,CAACU,UAAH,GAAgBM,SAAhB;;AAEA,MAAGf,GAAG,CAACU,MAAJ,IAAcF,YAAjB,EAA+B;AAC3BT,IAAAA,EAAE,CAACiB,IAAH,CAAQ,gBAAR,EAA0B;AACtBC,MAAAA,KAAK,EAAEjB,GADe;AAEtBkB,MAAAA,MAAM,EAAEV;AAFc,KAA1B;AAIH;AACJ,CArBD","sourcesContent":["/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Events = require('../../lib/events');\nvar throttle = require('../../lib/throttle');\nvar getGraphDiv = require('../../lib/dom').getGraphDiv;\n\nvar hoverConstants = require('../fx/constants');\n\nvar unhover = module.exports = {};\n\nunhover.wrapped = function(gd, evt, subplot) {\n    gd = getGraphDiv(gd);\n\n    // Important, clear any queued hovers\n    if(gd._fullLayout) {\n        throttle.clear(gd._fullLayout._uid + hoverConstants.HOVERID);\n    }\n\n    unhover.raw(gd, evt, subplot);\n};\n\n\n// remove hover effects on mouse out, and emit unhover event\nunhover.raw = function raw(gd, evt) {\n    var fullLayout = gd._fullLayout;\n    var oldhoverdata = gd._hoverdata;\n\n    if(!evt) evt = {};\n    if(evt.target &&\n       Events.triggerHandler(gd, 'plotly_beforehover', evt) === false) {\n        return;\n    }\n\n    fullLayout._hoverlayer.selectAll('g').remove();\n    fullLayout._hoverlayer.selectAll('line').remove();\n    fullLayout._hoverlayer.selectAll('circle').remove();\n    gd._hoverdata = undefined;\n\n    if(evt.target && oldhoverdata) {\n        gd.emit('plotly_unhover', {\n            event: evt,\n            points: oldhoverdata\n        });\n    }\n};\n"]},"metadata":{},"sourceType":"script"}