{"ast":null,"code":"/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n/*\n * Generated by https://github.com/etpinard/d3-geo-projection-picker\n *\n * which is hand-picks projection from https://github.com/d3/d3-geo-projection\n *\n * into a CommonJS require-able module.\n */\n'use strict';\n/* eslint-disable */\n\nfunction addProjectionsToD3(d3) {\n  d3.geo.project = function (object, projection) {\n    var stream = projection.stream;\n    if (!stream) throw new Error(\"not yet supported\");\n    return (object && d3_geo_projectObjectType.hasOwnProperty(object.type) ? d3_geo_projectObjectType[object.type] : d3_geo_projectGeometry)(object, stream);\n  };\n\n  function d3_geo_projectFeature(object, stream) {\n    return {\n      type: \"Feature\",\n      id: object.id,\n      properties: object.properties,\n      geometry: d3_geo_projectGeometry(object.geometry, stream)\n    };\n  }\n\n  function d3_geo_projectGeometry(geometry, stream) {\n    if (!geometry) return null;\n    if (geometry.type === \"GeometryCollection\") return {\n      type: \"GeometryCollection\",\n      geometries: object.geometries.map(function (geometry) {\n        return d3_geo_projectGeometry(geometry, stream);\n      })\n    };\n    if (!d3_geo_projectGeometryType.hasOwnProperty(geometry.type)) return null;\n    var sink = d3_geo_projectGeometryType[geometry.type];\n    d3.geo.stream(geometry, stream(sink));\n    return sink.result();\n  }\n\n  var d3_geo_projectObjectType = {\n    Feature: d3_geo_projectFeature,\n    FeatureCollection: function (object, stream) {\n      return {\n        type: \"FeatureCollection\",\n        features: object.features.map(function (feature) {\n          return d3_geo_projectFeature(feature, stream);\n        })\n      };\n    }\n  };\n  var d3_geo_projectPoints = [],\n      d3_geo_projectLines = [];\n  var d3_geo_projectPoint = {\n    point: function (x, y) {\n      d3_geo_projectPoints.push([x, y]);\n    },\n    result: function () {\n      var result = !d3_geo_projectPoints.length ? null : d3_geo_projectPoints.length < 2 ? {\n        type: \"Point\",\n        coordinates: d3_geo_projectPoints[0]\n      } : {\n        type: \"MultiPoint\",\n        coordinates: d3_geo_projectPoints\n      };\n      d3_geo_projectPoints = [];\n      return result;\n    }\n  };\n  var d3_geo_projectLine = {\n    lineStart: d3_geo_projectNoop,\n    point: function (x, y) {\n      d3_geo_projectPoints.push([x, y]);\n    },\n    lineEnd: function () {\n      if (d3_geo_projectPoints.length) d3_geo_projectLines.push(d3_geo_projectPoints), d3_geo_projectPoints = [];\n    },\n    result: function () {\n      var result = !d3_geo_projectLines.length ? null : d3_geo_projectLines.length < 2 ? {\n        type: \"LineString\",\n        coordinates: d3_geo_projectLines[0]\n      } : {\n        type: \"MultiLineString\",\n        coordinates: d3_geo_projectLines\n      };\n      d3_geo_projectLines = [];\n      return result;\n    }\n  };\n  var d3_geo_projectPolygon = {\n    polygonStart: d3_geo_projectNoop,\n    lineStart: d3_geo_projectNoop,\n    point: function (x, y) {\n      d3_geo_projectPoints.push([x, y]);\n    },\n    lineEnd: function () {\n      var n = d3_geo_projectPoints.length;\n\n      if (n) {\n        do d3_geo_projectPoints.push(d3_geo_projectPoints[0].slice()); while (++n < 4);\n\n        d3_geo_projectLines.push(d3_geo_projectPoints), d3_geo_projectPoints = [];\n      }\n    },\n    polygonEnd: d3_geo_projectNoop,\n    result: function () {\n      if (!d3_geo_projectLines.length) return null;\n      var polygons = [],\n          holes = [];\n      d3_geo_projectLines.forEach(function (ring) {\n        if (d3_geo_projectClockwise(ring)) polygons.push([ring]);else holes.push(ring);\n      });\n      holes.forEach(function (hole) {\n        var point = hole[0];\n        polygons.some(function (polygon) {\n          if (d3_geo_projectContains(polygon[0], point)) {\n            polygon.push(hole);\n            return true;\n          }\n        }) || polygons.push([hole]);\n      });\n      d3_geo_projectLines = [];\n      return !polygons.length ? null : polygons.length > 1 ? {\n        type: \"MultiPolygon\",\n        coordinates: polygons\n      } : {\n        type: \"Polygon\",\n        coordinates: polygons[0]\n      };\n    }\n  };\n  var d3_geo_projectGeometryType = {\n    Point: d3_geo_projectPoint,\n    MultiPoint: d3_geo_projectPoint,\n    LineString: d3_geo_projectLine,\n    MultiLineString: d3_geo_projectLine,\n    Polygon: d3_geo_projectPolygon,\n    MultiPolygon: d3_geo_projectPolygon,\n    Sphere: d3_geo_projectPolygon\n  };\n\n  function d3_geo_projectNoop() {}\n\n  function d3_geo_projectClockwise(ring) {\n    if ((n = ring.length) < 4) return false;\n    var i = 0,\n        n,\n        area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\n\n    while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\n\n    return area <= 0;\n  }\n\n  function d3_geo_projectContains(ring, point) {\n    var x = point[0],\n        y = point[1],\n        contains = false;\n\n    for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n      var pi = ring[i],\n          xi = pi[0],\n          yi = pi[1],\n          pj = ring[j],\n          xj = pj[0],\n          yj = pj[1];\n      if (yi > y ^ yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi) contains = !contains;\n    }\n\n    return contains;\n  }\n\n  var ε = 1e-6,\n      ε2 = ε * ε,\n      π = Math.PI,\n      halfπ = π / 2,\n      sqrtπ = Math.sqrt(π),\n      radians = π / 180,\n      degrees = 180 / π;\n\n  function sinci(x) {\n    return x ? x / Math.sin(x) : 1;\n  }\n\n  function sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n\n  function asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n\n  function acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n\n  function asqrt(x) {\n    return x > 0 ? Math.sqrt(x) : 0;\n  }\n\n  var projection = d3.geo.projection,\n      projectionMutator = d3.geo.projectionMutator;\n\n  d3.geo.interrupt = function (project) {\n    var lobes = [[[[-π, 0], [0, halfπ], [π, 0]]], [[[-π, 0], [0, -halfπ], [π, 0]]]];\n    var bounds;\n\n    function forward(λ, φ) {\n      var sign = φ < 0 ? -1 : +1,\n          hemilobes = lobes[+(φ < 0)];\n\n      for (var i = 0, n = hemilobes.length - 1; i < n && λ > hemilobes[i][2][0]; ++i);\n\n      var coordinates = project(λ - hemilobes[i][1][0], φ);\n      coordinates[0] += project(hemilobes[i][1][0], sign * φ > sign * hemilobes[i][0][1] ? hemilobes[i][0][1] : φ)[0];\n      return coordinates;\n    }\n\n    function reset() {\n      bounds = lobes.map(function (hemilobes) {\n        return hemilobes.map(function (lobe) {\n          var x0 = project(lobe[0][0], lobe[0][1])[0],\n              x1 = project(lobe[2][0], lobe[2][1])[0],\n              y0 = project(lobe[1][0], lobe[0][1])[1],\n              y1 = project(lobe[1][0], lobe[1][1])[1],\n              t;\n          if (y0 > y1) t = y0, y0 = y1, y1 = t;\n          return [[x0, y0], [x1, y1]];\n        });\n      });\n    }\n\n    if (project.invert) forward.invert = function (x, y) {\n      var hemibounds = bounds[+(y < 0)],\n          hemilobes = lobes[+(y < 0)];\n\n      for (var i = 0, n = hemibounds.length; i < n; ++i) {\n        var b = hemibounds[i];\n\n        if (b[0][0] <= x && x < b[1][0] && b[0][1] <= y && y < b[1][1]) {\n          var coordinates = project.invert(x - project(hemilobes[i][1][0], 0)[0], y);\n          coordinates[0] += hemilobes[i][1][0];\n          return pointEqual(forward(coordinates[0], coordinates[1]), [x, y]) ? coordinates : null;\n        }\n      }\n    };\n    var projection = d3.geo.projection(forward),\n        stream_ = projection.stream;\n\n    projection.stream = function (stream) {\n      var rotate = projection.rotate(),\n          rotateStream = stream_(stream),\n          sphereStream = (projection.rotate([0, 0]), stream_(stream));\n      projection.rotate(rotate);\n\n      rotateStream.sphere = function () {\n        d3.geo.stream(sphere(), sphereStream);\n      };\n\n      return rotateStream;\n    };\n\n    projection.lobes = function (_) {\n      if (!arguments.length) return lobes.map(function (lobes) {\n        return lobes.map(function (lobe) {\n          return [[lobe[0][0] * 180 / π, lobe[0][1] * 180 / π], [lobe[1][0] * 180 / π, lobe[1][1] * 180 / π], [lobe[2][0] * 180 / π, lobe[2][1] * 180 / π]];\n        });\n      });\n      lobes = _.map(function (lobes) {\n        return lobes.map(function (lobe) {\n          return [[lobe[0][0] * π / 180, lobe[0][1] * π / 180], [lobe[1][0] * π / 180, lobe[1][1] * π / 180], [lobe[2][0] * π / 180, lobe[2][1] * π / 180]];\n        });\n      });\n      reset();\n      return projection;\n    };\n\n    function sphere() {\n      var ε = 1e-6,\n          coordinates = [];\n\n      for (var i = 0, n = lobes[0].length; i < n; ++i) {\n        var lobe = lobes[0][i],\n            λ0 = lobe[0][0] * 180 / π,\n            φ0 = lobe[0][1] * 180 / π,\n            φ1 = lobe[1][1] * 180 / π,\n            λ2 = lobe[2][0] * 180 / π,\n            φ2 = lobe[2][1] * 180 / π;\n        coordinates.push(resample([[λ0 + ε, φ0 + ε], [λ0 + ε, φ1 - ε], [λ2 - ε, φ1 - ε], [λ2 - ε, φ2 + ε]], 30));\n      }\n\n      for (var i = lobes[1].length - 1; i >= 0; --i) {\n        var lobe = lobes[1][i],\n            λ0 = lobe[0][0] * 180 / π,\n            φ0 = lobe[0][1] * 180 / π,\n            φ1 = lobe[1][1] * 180 / π,\n            λ2 = lobe[2][0] * 180 / π,\n            φ2 = lobe[2][1] * 180 / π;\n        coordinates.push(resample([[λ2 - ε, φ2 - ε], [λ2 - ε, φ1 + ε], [λ0 + ε, φ1 + ε], [λ0 + ε, φ0 - ε]], 30));\n      }\n\n      return {\n        type: \"Polygon\",\n        coordinates: [d3.merge(coordinates)]\n      };\n    }\n\n    function resample(coordinates, m) {\n      var i = -1,\n          n = coordinates.length,\n          p0 = coordinates[0],\n          p1,\n          dx,\n          dy,\n          resampled = [];\n\n      while (++i < n) {\n        p1 = coordinates[i];\n        dx = (p1[0] - p0[0]) / m;\n        dy = (p1[1] - p0[1]) / m;\n\n        for (var j = 0; j < m; ++j) resampled.push([p0[0] + j * dx, p0[1] + j * dy]);\n\n        p0 = p1;\n      }\n\n      resampled.push(p1);\n      return resampled;\n    }\n\n    function pointEqual(a, b) {\n      return Math.abs(a[0] - b[0]) < ε && Math.abs(a[1] - b[1]) < ε;\n    }\n\n    return projection;\n  };\n\n  function eckert4(λ, φ) {\n    var k = (2 + halfπ) * Math.sin(φ);\n    φ /= 2;\n\n    for (var i = 0, δ = Infinity; i < 10 && Math.abs(δ) > ε; i++) {\n      var cosφ = Math.cos(φ);\n      φ -= δ = (φ + Math.sin(φ) * (cosφ + 2) - k) / (2 * cosφ * (1 + cosφ));\n    }\n\n    return [2 / Math.sqrt(π * (4 + π)) * λ * (1 + Math.cos(φ)), 2 * Math.sqrt(π / (4 + π)) * Math.sin(φ)];\n  }\n\n  eckert4.invert = function (x, y) {\n    var A = .5 * y * Math.sqrt((4 + π) / π),\n        k = asin(A),\n        c = Math.cos(k);\n    return [x / (2 / Math.sqrt(π * (4 + π)) * (1 + c)), asin((k + A * (c + 2)) / (2 + halfπ))];\n  };\n\n  (d3.geo.eckert4 = function () {\n    return projection(eckert4);\n  }).raw = eckert4;\n  var hammerAzimuthalEqualArea = d3.geo.azimuthalEqualArea.raw;\n\n  function hammer(A, B) {\n    if (arguments.length < 2) B = A;\n    if (B === 1) return hammerAzimuthalEqualArea;\n    if (B === Infinity) return hammerQuarticAuthalic;\n\n    function forward(λ, φ) {\n      var coordinates = hammerAzimuthalEqualArea(λ / B, φ);\n      coordinates[0] *= A;\n      return coordinates;\n    }\n\n    forward.invert = function (x, y) {\n      var coordinates = hammerAzimuthalEqualArea.invert(x / A, y);\n      coordinates[0] *= B;\n      return coordinates;\n    };\n\n    return forward;\n  }\n\n  function hammerProjection() {\n    var B = 2,\n        m = projectionMutator(hammer),\n        p = m(B);\n\n    p.coefficient = function (_) {\n      if (!arguments.length) return B;\n      return m(B = +_);\n    };\n\n    return p;\n  }\n\n  function hammerQuarticAuthalic(λ, φ) {\n    return [λ * Math.cos(φ) / Math.cos(φ /= 2), 2 * Math.sin(φ)];\n  }\n\n  hammerQuarticAuthalic.invert = function (x, y) {\n    var φ = 2 * asin(y / 2);\n    return [x * Math.cos(φ / 2) / Math.cos(φ), φ];\n  };\n\n  (d3.geo.hammer = hammerProjection).raw = hammer;\n\n  function kavrayskiy7(λ, φ) {\n    return [3 * λ / (2 * π) * Math.sqrt(π * π / 3 - φ * φ), φ];\n  }\n\n  kavrayskiy7.invert = function (x, y) {\n    return [2 / 3 * π * x / Math.sqrt(π * π / 3 - y * y), y];\n  };\n\n  (d3.geo.kavrayskiy7 = function () {\n    return projection(kavrayskiy7);\n  }).raw = kavrayskiy7;\n\n  function miller(λ, φ) {\n    return [λ, 1.25 * Math.log(Math.tan(π / 4 + .4 * φ))];\n  }\n\n  miller.invert = function (x, y) {\n    return [x, 2.5 * Math.atan(Math.exp(.8 * y)) - .625 * π];\n  };\n\n  (d3.geo.miller = function () {\n    return projection(miller);\n  }).raw = miller;\n\n  function mollweideBromleyθ(Cp) {\n    return function (θ) {\n      var Cpsinθ = Cp * Math.sin(θ),\n          i = 30,\n          δ;\n\n      do θ -= δ = (θ + Math.sin(θ) - Cpsinθ) / (1 + Math.cos(θ)); while (Math.abs(δ) > ε && --i > 0);\n\n      return θ / 2;\n    };\n  }\n\n  function mollweideBromley(Cx, Cy, Cp) {\n    var θ = mollweideBromleyθ(Cp);\n\n    function forward(λ, φ) {\n      return [Cx * λ * Math.cos(φ = θ(φ)), Cy * Math.sin(φ)];\n    }\n\n    forward.invert = function (x, y) {\n      var θ = asin(y / Cy);\n      return [x / (Cx * Math.cos(θ)), asin((2 * θ + Math.sin(2 * θ)) / Cp)];\n    };\n\n    return forward;\n  }\n\n  var mollweideθ = mollweideBromleyθ(π),\n      mollweide = mollweideBromley(Math.SQRT2 / halfπ, Math.SQRT2, π);\n  (d3.geo.mollweide = function () {\n    return projection(mollweide);\n  }).raw = mollweide;\n\n  function naturalEarth(λ, φ) {\n    var φ2 = φ * φ,\n        φ4 = φ2 * φ2;\n    return [λ * (.8707 - .131979 * φ2 + φ4 * (-.013791 + φ4 * (.003971 * φ2 - .001529 * φ4))), φ * (1.007226 + φ2 * (.015085 + φ4 * (-.044475 + .028874 * φ2 - .005916 * φ4)))];\n  }\n\n  naturalEarth.invert = function (x, y) {\n    var φ = y,\n        i = 25,\n        δ;\n\n    do {\n      var φ2 = φ * φ,\n          φ4 = φ2 * φ2;\n      φ -= δ = (φ * (1.007226 + φ2 * (.015085 + φ4 * (-.044475 + .028874 * φ2 - .005916 * φ4))) - y) / (1.007226 + φ2 * (.015085 * 3 + φ4 * (-.044475 * 7 + .028874 * 9 * φ2 - .005916 * 11 * φ4)));\n    } while (Math.abs(δ) > ε && --i > 0);\n\n    return [x / (.8707 + (φ2 = φ * φ) * (-.131979 + φ2 * (-.013791 + φ2 * φ2 * φ2 * (.003971 - .001529 * φ2)))), φ];\n  };\n\n  (d3.geo.naturalEarth = function () {\n    return projection(naturalEarth);\n  }).raw = naturalEarth;\n  var robinsonConstants = [[.9986, -.062], [1, 0], [.9986, .062], [.9954, .124], [.99, .186], [.9822, .248], [.973, .31], [.96, .372], [.9427, .434], [.9216, .4958], [.8962, .5571], [.8679, .6176], [.835, .6769], [.7986, .7346], [.7597, .7903], [.7186, .8435], [.6732, .8936], [.6213, .9394], [.5722, .9761], [.5322, 1]];\n  robinsonConstants.forEach(function (d) {\n    d[1] *= 1.0144;\n  });\n\n  function robinson(λ, φ) {\n    var i = Math.min(18, Math.abs(φ) * 36 / π),\n        i0 = Math.floor(i),\n        di = i - i0,\n        ax = (k = robinsonConstants[i0])[0],\n        ay = k[1],\n        bx = (k = robinsonConstants[++i0])[0],\n        by = k[1],\n        cx = (k = robinsonConstants[Math.min(19, ++i0)])[0],\n        cy = k[1],\n        k;\n    return [λ * (bx + di * (cx - ax) / 2 + di * di * (cx - 2 * bx + ax) / 2), (φ > 0 ? halfπ : -halfπ) * (by + di * (cy - ay) / 2 + di * di * (cy - 2 * by + ay) / 2)];\n  }\n\n  robinson.invert = function (x, y) {\n    var yy = y / halfπ,\n        φ = yy * 90,\n        i = Math.min(18, Math.abs(φ / 5)),\n        i0 = Math.max(0, Math.floor(i));\n\n    do {\n      var ay = robinsonConstants[i0][1],\n          by = robinsonConstants[i0 + 1][1],\n          cy = robinsonConstants[Math.min(19, i0 + 2)][1],\n          u = cy - ay,\n          v = cy - 2 * by + ay,\n          t = 2 * (Math.abs(yy) - by) / u,\n          c = v / u,\n          di = t * (1 - c * t * (1 - 2 * c * t));\n\n      if (di >= 0 || i0 === 1) {\n        φ = (y >= 0 ? 5 : -5) * (di + i);\n        var j = 50,\n            δ;\n\n        do {\n          i = Math.min(18, Math.abs(φ) / 5);\n          i0 = Math.floor(i);\n          di = i - i0;\n          ay = robinsonConstants[i0][1];\n          by = robinsonConstants[i0 + 1][1];\n          cy = robinsonConstants[Math.min(19, i0 + 2)][1];\n          φ -= (δ = (y >= 0 ? halfπ : -halfπ) * (by + di * (cy - ay) / 2 + di * di * (cy - 2 * by + ay) / 2) - y) * degrees;\n        } while (Math.abs(δ) > ε2 && --j > 0);\n\n        break;\n      }\n    } while (--i0 >= 0);\n\n    var ax = robinsonConstants[i0][0],\n        bx = robinsonConstants[i0 + 1][0],\n        cx = robinsonConstants[Math.min(19, i0 + 2)][0];\n    return [x / (bx + di * (cx - ax) / 2 + di * di * (cx - 2 * bx + ax) / 2), φ * radians];\n  };\n\n  (d3.geo.robinson = function () {\n    return projection(robinson);\n  }).raw = robinson;\n\n  function sinusoidal(λ, φ) {\n    return [λ * Math.cos(φ), φ];\n  }\n\n  sinusoidal.invert = function (x, y) {\n    return [x / Math.cos(y), y];\n  };\n\n  (d3.geo.sinusoidal = function () {\n    return projection(sinusoidal);\n  }).raw = sinusoidal;\n\n  function aitoff(λ, φ) {\n    var cosφ = Math.cos(φ),\n        sinciα = sinci(acos(cosφ * Math.cos(λ /= 2)));\n    return [2 * cosφ * Math.sin(λ) * sinciα, Math.sin(φ) * sinciα];\n  }\n\n  aitoff.invert = function (x, y) {\n    if (x * x + 4 * y * y > π * π + ε) return;\n    var λ = x,\n        φ = y,\n        i = 25;\n\n    do {\n      var sinλ = Math.sin(λ),\n          sinλ_2 = Math.sin(λ / 2),\n          cosλ_2 = Math.cos(λ / 2),\n          sinφ = Math.sin(φ),\n          cosφ = Math.cos(φ),\n          sin_2φ = Math.sin(2 * φ),\n          sin2φ = sinφ * sinφ,\n          cos2φ = cosφ * cosφ,\n          sin2λ_2 = sinλ_2 * sinλ_2,\n          C = 1 - cos2φ * cosλ_2 * cosλ_2,\n          E = C ? acos(cosφ * cosλ_2) * Math.sqrt(F = 1 / C) : F = 0,\n          F,\n          fx = 2 * E * cosφ * sinλ_2 - x,\n          fy = E * sinφ - y,\n          δxδλ = F * (cos2φ * sin2λ_2 + E * cosφ * cosλ_2 * sin2φ),\n          δxδφ = F * (.5 * sinλ * sin_2φ - E * 2 * sinφ * sinλ_2),\n          δyδλ = F * .25 * (sin_2φ * sinλ_2 - E * sinφ * cos2φ * sinλ),\n          δyδφ = F * (sin2φ * cosλ_2 + E * sin2λ_2 * cosφ),\n          denominator = δxδφ * δyδλ - δyδφ * δxδλ;\n      if (!denominator) break;\n      var δλ = (fy * δxδφ - fx * δyδφ) / denominator,\n          δφ = (fx * δyδλ - fy * δxδλ) / denominator;\n      λ -= δλ, φ -= δφ;\n    } while ((Math.abs(δλ) > ε || Math.abs(δφ) > ε) && --i > 0);\n\n    return [λ, φ];\n  };\n\n  (d3.geo.aitoff = function () {\n    return projection(aitoff);\n  }).raw = aitoff;\n\n  function winkel3(λ, φ) {\n    var coordinates = aitoff(λ, φ);\n    return [(coordinates[0] + λ / halfπ) / 2, (coordinates[1] + φ) / 2];\n  }\n\n  winkel3.invert = function (x, y) {\n    var λ = x,\n        φ = y,\n        i = 25;\n\n    do {\n      var cosφ = Math.cos(φ),\n          sinφ = Math.sin(φ),\n          sin_2φ = Math.sin(2 * φ),\n          sin2φ = sinφ * sinφ,\n          cos2φ = cosφ * cosφ,\n          sinλ = Math.sin(λ),\n          cosλ_2 = Math.cos(λ / 2),\n          sinλ_2 = Math.sin(λ / 2),\n          sin2λ_2 = sinλ_2 * sinλ_2,\n          C = 1 - cos2φ * cosλ_2 * cosλ_2,\n          E = C ? acos(cosφ * cosλ_2) * Math.sqrt(F = 1 / C) : F = 0,\n          F,\n          fx = .5 * (2 * E * cosφ * sinλ_2 + λ / halfπ) - x,\n          fy = .5 * (E * sinφ + φ) - y,\n          δxδλ = .5 * F * (cos2φ * sin2λ_2 + E * cosφ * cosλ_2 * sin2φ) + .5 / halfπ,\n          δxδφ = F * (sinλ * sin_2φ / 4 - E * sinφ * sinλ_2),\n          δyδλ = .125 * F * (sin_2φ * sinλ_2 - E * sinφ * cos2φ * sinλ),\n          δyδφ = .5 * F * (sin2φ * cosλ_2 + E * sin2λ_2 * cosφ) + .5,\n          denominator = δxδφ * δyδλ - δyδφ * δxδλ,\n          δλ = (fy * δxδφ - fx * δyδφ) / denominator,\n          δφ = (fx * δyδλ - fy * δxδλ) / denominator;\n      λ -= δλ, φ -= δφ;\n    } while ((Math.abs(δλ) > ε || Math.abs(δφ) > ε) && --i > 0);\n\n    return [λ, φ];\n  };\n\n  (d3.geo.winkel3 = function () {\n    return projection(winkel3);\n  }).raw = winkel3;\n}\n\nmodule.exports = addProjectionsToD3;","map":{"version":3,"sources":["/Users/caseyrudick/Documents/landsharkrefactored-copy/client/node_modules/plotly.js/src/plots/geo/projections.js"],"names":["addProjectionsToD3","d3","geo","project","object","projection","stream","Error","d3_geo_projectObjectType","hasOwnProperty","type","d3_geo_projectGeometry","d3_geo_projectFeature","id","properties","geometry","geometries","map","d3_geo_projectGeometryType","sink","result","Feature","FeatureCollection","features","feature","d3_geo_projectPoints","d3_geo_projectLines","d3_geo_projectPoint","point","x","y","push","length","coordinates","d3_geo_projectLine","lineStart","d3_geo_projectNoop","lineEnd","d3_geo_projectPolygon","polygonStart","n","slice","polygonEnd","polygons","holes","forEach","ring","d3_geo_projectClockwise","hole","some","polygon","d3_geo_projectContains","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","Sphere","i","area","contains","j","pi","xi","yi","pj","xj","yj","ε","ε2","π","Math","PI","halfπ","sqrtπ","sqrt","radians","degrees","sinci","sin","sgn","asin","acos","asqrt","projectionMutator","interrupt","lobes","bounds","forward","λ","φ","sign","hemilobes","reset","lobe","x0","x1","y0","y1","t","invert","hemibounds","b","pointEqual","stream_","rotate","rotateStream","sphereStream","sphere","_","arguments","λ0","φ0","φ1","λ2","φ2","resample","merge","m","p0","p1","dx","dy","resampled","a","abs","eckert4","k","δ","Infinity","cosφ","cos","A","c","raw","hammerAzimuthalEqualArea","azimuthalEqualArea","hammer","B","hammerQuarticAuthalic","hammerProjection","p","coefficient","kavrayskiy7","miller","log","tan","atan","exp","mollweideBromleyθ","Cp","θ","Cpsinθ","mollweideBromley","Cx","Cy","mollweideθ","mollweide","SQRT2","naturalEarth","φ4","robinsonConstants","d","robinson","min","i0","floor","di","ax","ay","bx","by","cx","cy","yy","max","u","v","sinusoidal","aitoff","sinciα","sinλ","sinλ_2","cosλ_2","sinφ","sin_2φ","sin2φ","cos2φ","sin2λ_2","C","E","F","fx","fy","δxδλ","δxδφ","δyδλ","δyδφ","denominator","δλ","δφ","winkel3","module","exports"],"mappings":"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","sourcesContent":["/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n/*\n * Generated by https://github.com/etpinard/d3-geo-projection-picker\n *\n * which is hand-picks projection from https://github.com/d3/d3-geo-projection\n *\n * into a CommonJS require-able module.\n */\n\n'use strict';\n\n/* eslint-disable */\n\nfunction addProjectionsToD3(d3) {\n  d3.geo.project = function(object, projection) {\n    var stream = projection.stream;\n    if (!stream) throw new Error(\"not yet supported\");\n    return (object && d3_geo_projectObjectType.hasOwnProperty(object.type) ? d3_geo_projectObjectType[object.type] : d3_geo_projectGeometry)(object, stream);\n  };\n  function d3_geo_projectFeature(object, stream) {\n    return {\n      type: \"Feature\",\n      id: object.id,\n      properties: object.properties,\n      geometry: d3_geo_projectGeometry(object.geometry, stream)\n    };\n  }\n  function d3_geo_projectGeometry(geometry, stream) {\n    if (!geometry) return null;\n    if (geometry.type === \"GeometryCollection\") return {\n      type: \"GeometryCollection\",\n      geometries: object.geometries.map(function(geometry) {\n        return d3_geo_projectGeometry(geometry, stream);\n      })\n    };\n    if (!d3_geo_projectGeometryType.hasOwnProperty(geometry.type)) return null;\n    var sink = d3_geo_projectGeometryType[geometry.type];\n    d3.geo.stream(geometry, stream(sink));\n    return sink.result();\n  }\n  var d3_geo_projectObjectType = {\n    Feature: d3_geo_projectFeature,\n    FeatureCollection: function(object, stream) {\n      return {\n        type: \"FeatureCollection\",\n        features: object.features.map(function(feature) {\n          return d3_geo_projectFeature(feature, stream);\n        })\n      };\n    }\n  };\n  var d3_geo_projectPoints = [], d3_geo_projectLines = [];\n  var d3_geo_projectPoint = {\n    point: function(x, y) {\n      d3_geo_projectPoints.push([ x, y ]);\n    },\n    result: function() {\n      var result = !d3_geo_projectPoints.length ? null : d3_geo_projectPoints.length < 2 ? {\n        type: \"Point\",\n        coordinates: d3_geo_projectPoints[0]\n      } : {\n        type: \"MultiPoint\",\n        coordinates: d3_geo_projectPoints\n      };\n      d3_geo_projectPoints = [];\n      return result;\n    }\n  };\n  var d3_geo_projectLine = {\n    lineStart: d3_geo_projectNoop,\n    point: function(x, y) {\n      d3_geo_projectPoints.push([ x, y ]);\n    },\n    lineEnd: function() {\n      if (d3_geo_projectPoints.length) d3_geo_projectLines.push(d3_geo_projectPoints),\n      d3_geo_projectPoints = [];\n    },\n    result: function() {\n      var result = !d3_geo_projectLines.length ? null : d3_geo_projectLines.length < 2 ? {\n        type: \"LineString\",\n        coordinates: d3_geo_projectLines[0]\n      } : {\n        type: \"MultiLineString\",\n        coordinates: d3_geo_projectLines\n      };\n      d3_geo_projectLines = [];\n      return result;\n    }\n  };\n  var d3_geo_projectPolygon = {\n    polygonStart: d3_geo_projectNoop,\n    lineStart: d3_geo_projectNoop,\n    point: function(x, y) {\n      d3_geo_projectPoints.push([ x, y ]);\n    },\n    lineEnd: function() {\n      var n = d3_geo_projectPoints.length;\n      if (n) {\n        do d3_geo_projectPoints.push(d3_geo_projectPoints[0].slice()); while (++n < 4);\n        d3_geo_projectLines.push(d3_geo_projectPoints), d3_geo_projectPoints = [];\n      }\n    },\n    polygonEnd: d3_geo_projectNoop,\n    result: function() {\n      if (!d3_geo_projectLines.length) return null;\n      var polygons = [], holes = [];\n      d3_geo_projectLines.forEach(function(ring) {\n        if (d3_geo_projectClockwise(ring)) polygons.push([ ring ]); else holes.push(ring);\n      });\n      holes.forEach(function(hole) {\n        var point = hole[0];\n        polygons.some(function(polygon) {\n          if (d3_geo_projectContains(polygon[0], point)) {\n            polygon.push(hole);\n            return true;\n          }\n        }) || polygons.push([ hole ]);\n      });\n      d3_geo_projectLines = [];\n      return !polygons.length ? null : polygons.length > 1 ? {\n        type: \"MultiPolygon\",\n        coordinates: polygons\n      } : {\n        type: \"Polygon\",\n        coordinates: polygons[0]\n      };\n    }\n  };\n  var d3_geo_projectGeometryType = {\n    Point: d3_geo_projectPoint,\n    MultiPoint: d3_geo_projectPoint,\n    LineString: d3_geo_projectLine,\n    MultiLineString: d3_geo_projectLine,\n    Polygon: d3_geo_projectPolygon,\n    MultiPolygon: d3_geo_projectPolygon,\n    Sphere: d3_geo_projectPolygon\n  };\n  function d3_geo_projectNoop() {}\n  function d3_geo_projectClockwise(ring) {\n    if ((n = ring.length) < 4) return false;\n    var i = 0, n, area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\n    while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\n    return area <= 0;\n  }\n  function d3_geo_projectContains(ring, point) {\n    var x = point[0], y = point[1], contains = false;\n    for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n      var pi = ring[i], xi = pi[0], yi = pi[1], pj = ring[j], xj = pj[0], yj = pj[1];\n      if (yi > y ^ yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi) contains = !contains;\n    }\n    return contains;\n  }\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, halfπ = π / 2, sqrtπ = Math.sqrt(π), radians = π / 180, degrees = 180 / π;\n  function sinci(x) {\n    return x ? x / Math.sin(x) : 1;\n  }\n  function sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function asqrt(x) {\n    return x > 0 ? Math.sqrt(x) : 0;\n  }\n  var projection = d3.geo.projection, projectionMutator = d3.geo.projectionMutator;\n  d3.geo.interrupt = function(project) {\n    var lobes = [ [ [ [ -π, 0 ], [ 0, halfπ ], [ π, 0 ] ] ], [ [ [ -π, 0 ], [ 0, -halfπ ], [ π, 0 ] ] ] ];\n    var bounds;\n    function forward(λ, φ) {\n      var sign = φ < 0 ? -1 : +1, hemilobes = lobes[+(φ < 0)];\n      for (var i = 0, n = hemilobes.length - 1; i < n && λ > hemilobes[i][2][0]; ++i) ;\n      var coordinates = project(λ - hemilobes[i][1][0], φ);\n      coordinates[0] += project(hemilobes[i][1][0], sign * φ > sign * hemilobes[i][0][1] ? hemilobes[i][0][1] : φ)[0];\n      return coordinates;\n    }\n    function reset() {\n      bounds = lobes.map(function(hemilobes) {\n        return hemilobes.map(function(lobe) {\n          var x0 = project(lobe[0][0], lobe[0][1])[0], x1 = project(lobe[2][0], lobe[2][1])[0], y0 = project(lobe[1][0], lobe[0][1])[1], y1 = project(lobe[1][0], lobe[1][1])[1], t;\n          if (y0 > y1) t = y0, y0 = y1, y1 = t;\n          return [ [ x0, y0 ], [ x1, y1 ] ];\n        });\n      });\n    }\n    if (project.invert) forward.invert = function(x, y) {\n      var hemibounds = bounds[+(y < 0)], hemilobes = lobes[+(y < 0)];\n      for (var i = 0, n = hemibounds.length; i < n; ++i) {\n        var b = hemibounds[i];\n        if (b[0][0] <= x && x < b[1][0] && b[0][1] <= y && y < b[1][1]) {\n          var coordinates = project.invert(x - project(hemilobes[i][1][0], 0)[0], y);\n          coordinates[0] += hemilobes[i][1][0];\n          return pointEqual(forward(coordinates[0], coordinates[1]), [ x, y ]) ? coordinates : null;\n        }\n      }\n    };\n    var projection = d3.geo.projection(forward), stream_ = projection.stream;\n    projection.stream = function(stream) {\n      var rotate = projection.rotate(), rotateStream = stream_(stream), sphereStream = (projection.rotate([ 0, 0 ]),\n      stream_(stream));\n      projection.rotate(rotate);\n      rotateStream.sphere = function() {\n        d3.geo.stream(sphere(), sphereStream);\n      };\n      return rotateStream;\n    };\n    projection.lobes = function(_) {\n      if (!arguments.length) return lobes.map(function(lobes) {\n        return lobes.map(function(lobe) {\n          return [ [ lobe[0][0] * 180 / π, lobe[0][1] * 180 / π ], [ lobe[1][0] * 180 / π, lobe[1][1] * 180 / π ], [ lobe[2][0] * 180 / π, lobe[2][1] * 180 / π ] ];\n        });\n      });\n      lobes = _.map(function(lobes) {\n        return lobes.map(function(lobe) {\n          return [ [ lobe[0][0] * π / 180, lobe[0][1] * π / 180 ], [ lobe[1][0] * π / 180, lobe[1][1] * π / 180 ], [ lobe[2][0] * π / 180, lobe[2][1] * π / 180 ] ];\n        });\n      });\n      reset();\n      return projection;\n    };\n    function sphere() {\n      var ε = 1e-6, coordinates = [];\n      for (var i = 0, n = lobes[0].length; i < n; ++i) {\n        var lobe = lobes[0][i], λ0 = lobe[0][0] * 180 / π, φ0 = lobe[0][1] * 180 / π, φ1 = lobe[1][1] * 180 / π, λ2 = lobe[2][0] * 180 / π, φ2 = lobe[2][1] * 180 / π;\n        coordinates.push(resample([ [ λ0 + ε, φ0 + ε ], [ λ0 + ε, φ1 - ε ], [ λ2 - ε, φ1 - ε ], [ λ2 - ε, φ2 + ε ] ], 30));\n      }\n      for (var i = lobes[1].length - 1; i >= 0; --i) {\n        var lobe = lobes[1][i], λ0 = lobe[0][0] * 180 / π, φ0 = lobe[0][1] * 180 / π, φ1 = lobe[1][1] * 180 / π, λ2 = lobe[2][0] * 180 / π, φ2 = lobe[2][1] * 180 / π;\n        coordinates.push(resample([ [ λ2 - ε, φ2 - ε ], [ λ2 - ε, φ1 + ε ], [ λ0 + ε, φ1 + ε ], [ λ0 + ε, φ0 - ε ] ], 30));\n      }\n      return {\n        type: \"Polygon\",\n        coordinates: [ d3.merge(coordinates) ]\n      };\n    }\n    function resample(coordinates, m) {\n      var i = -1, n = coordinates.length, p0 = coordinates[0], p1, dx, dy, resampled = [];\n      while (++i < n) {\n        p1 = coordinates[i];\n        dx = (p1[0] - p0[0]) / m;\n        dy = (p1[1] - p0[1]) / m;\n        for (var j = 0; j < m; ++j) resampled.push([ p0[0] + j * dx, p0[1] + j * dy ]);\n        p0 = p1;\n      }\n      resampled.push(p1);\n      return resampled;\n    }\n    function pointEqual(a, b) {\n      return Math.abs(a[0] - b[0]) < ε && Math.abs(a[1] - b[1]) < ε;\n    }\n    return projection;\n  };\n  function eckert4(λ, φ) {\n    var k = (2 + halfπ) * Math.sin(φ);\n    φ /= 2;\n    for (var i = 0, δ = Infinity; i < 10 && Math.abs(δ) > ε; i++) {\n      var cosφ = Math.cos(φ);\n      φ -= δ = (φ + Math.sin(φ) * (cosφ + 2) - k) / (2 * cosφ * (1 + cosφ));\n    }\n    return [ 2 / Math.sqrt(π * (4 + π)) * λ * (1 + Math.cos(φ)), 2 * Math.sqrt(π / (4 + π)) * Math.sin(φ) ];\n  }\n  eckert4.invert = function(x, y) {\n    var A = .5 * y * Math.sqrt((4 + π) / π), k = asin(A), c = Math.cos(k);\n    return [ x / (2 / Math.sqrt(π * (4 + π)) * (1 + c)), asin((k + A * (c + 2)) / (2 + halfπ)) ];\n  };\n  (d3.geo.eckert4 = function() {\n    return projection(eckert4);\n  }).raw = eckert4;\n  var hammerAzimuthalEqualArea = d3.geo.azimuthalEqualArea.raw;\n  function hammer(A, B) {\n    if (arguments.length < 2) B = A;\n    if (B === 1) return hammerAzimuthalEqualArea;\n    if (B === Infinity) return hammerQuarticAuthalic;\n    function forward(λ, φ) {\n      var coordinates = hammerAzimuthalEqualArea(λ / B, φ);\n      coordinates[0] *= A;\n      return coordinates;\n    }\n    forward.invert = function(x, y) {\n      var coordinates = hammerAzimuthalEqualArea.invert(x / A, y);\n      coordinates[0] *= B;\n      return coordinates;\n    };\n    return forward;\n  }\n  function hammerProjection() {\n    var B = 2, m = projectionMutator(hammer), p = m(B);\n    p.coefficient = function(_) {\n      if (!arguments.length) return B;\n      return m(B = +_);\n    };\n    return p;\n  }\n  function hammerQuarticAuthalic(λ, φ) {\n    return [ λ * Math.cos(φ) / Math.cos(φ /= 2), 2 * Math.sin(φ) ];\n  }\n  hammerQuarticAuthalic.invert = function(x, y) {\n    var φ = 2 * asin(y / 2);\n    return [ x * Math.cos(φ / 2) / Math.cos(φ), φ ];\n  };\n  (d3.geo.hammer = hammerProjection).raw = hammer;\n  function kavrayskiy7(λ, φ) {\n    return [ 3 * λ / (2 * π) * Math.sqrt(π * π / 3 - φ * φ), φ ];\n  }\n  kavrayskiy7.invert = function(x, y) {\n    return [ 2 / 3 * π * x / Math.sqrt(π * π / 3 - y * y), y ];\n  };\n  (d3.geo.kavrayskiy7 = function() {\n    return projection(kavrayskiy7);\n  }).raw = kavrayskiy7;\n  function miller(λ, φ) {\n    return [ λ, 1.25 * Math.log(Math.tan(π / 4 + .4 * φ)) ];\n  }\n  miller.invert = function(x, y) {\n    return [ x, 2.5 * Math.atan(Math.exp(.8 * y)) - .625 * π ];\n  };\n  (d3.geo.miller = function() {\n    return projection(miller);\n  }).raw = miller;\n  function mollweideBromleyθ(Cp) {\n    return function(θ) {\n      var Cpsinθ = Cp * Math.sin(θ), i = 30, δ;\n      do θ -= δ = (θ + Math.sin(θ) - Cpsinθ) / (1 + Math.cos(θ)); while (Math.abs(δ) > ε && --i > 0);\n      return θ / 2;\n    };\n  }\n  function mollweideBromley(Cx, Cy, Cp) {\n    var θ = mollweideBromleyθ(Cp);\n    function forward(λ, φ) {\n      return [ Cx * λ * Math.cos(φ = θ(φ)), Cy * Math.sin(φ) ];\n    }\n    forward.invert = function(x, y) {\n      var θ = asin(y / Cy);\n      return [ x / (Cx * Math.cos(θ)), asin((2 * θ + Math.sin(2 * θ)) / Cp) ];\n    };\n    return forward;\n  }\n  var mollweideθ = mollweideBromleyθ(π), mollweide = mollweideBromley(Math.SQRT2 / halfπ, Math.SQRT2, π);\n  (d3.geo.mollweide = function() {\n    return projection(mollweide);\n  }).raw = mollweide;\n  function naturalEarth(λ, φ) {\n    var φ2 = φ * φ, φ4 = φ2 * φ2;\n    return [ λ * (.8707 - .131979 * φ2 + φ4 * (-.013791 + φ4 * (.003971 * φ2 - .001529 * φ4))), φ * (1.007226 + φ2 * (.015085 + φ4 * (-.044475 + .028874 * φ2 - .005916 * φ4))) ];\n  }\n  naturalEarth.invert = function(x, y) {\n    var φ = y, i = 25, δ;\n    do {\n      var φ2 = φ * φ, φ4 = φ2 * φ2;\n      φ -= δ = (φ * (1.007226 + φ2 * (.015085 + φ4 * (-.044475 + .028874 * φ2 - .005916 * φ4))) - y) / (1.007226 + φ2 * (.015085 * 3 + φ4 * (-.044475 * 7 + .028874 * 9 * φ2 - .005916 * 11 * φ4)));\n    } while (Math.abs(δ) > ε && --i > 0);\n    return [ x / (.8707 + (φ2 = φ * φ) * (-.131979 + φ2 * (-.013791 + φ2 * φ2 * φ2 * (.003971 - .001529 * φ2)))), φ ];\n  };\n  (d3.geo.naturalEarth = function() {\n    return projection(naturalEarth);\n  }).raw = naturalEarth;\n  var robinsonConstants = [ [ .9986, -.062 ], [ 1, 0 ], [ .9986, .062 ], [ .9954, .124 ], [ .99, .186 ], [ .9822, .248 ], [ .973, .31 ], [ .96, .372 ], [ .9427, .434 ], [ .9216, .4958 ], [ .8962, .5571 ], [ .8679, .6176 ], [ .835, .6769 ], [ .7986, .7346 ], [ .7597, .7903 ], [ .7186, .8435 ], [ .6732, .8936 ], [ .6213, .9394 ], [ .5722, .9761 ], [ .5322, 1 ] ];\n  robinsonConstants.forEach(function(d) {\n    d[1] *= 1.0144;\n  });\n  function robinson(λ, φ) {\n    var i = Math.min(18, Math.abs(φ) * 36 / π), i0 = Math.floor(i), di = i - i0, ax = (k = robinsonConstants[i0])[0], ay = k[1], bx = (k = robinsonConstants[++i0])[0], by = k[1], cx = (k = robinsonConstants[Math.min(19, ++i0)])[0], cy = k[1], k;\n    return [ λ * (bx + di * (cx - ax) / 2 + di * di * (cx - 2 * bx + ax) / 2), (φ > 0 ? halfπ : -halfπ) * (by + di * (cy - ay) / 2 + di * di * (cy - 2 * by + ay) / 2) ];\n  }\n  robinson.invert = function(x, y) {\n    var yy = y / halfπ, φ = yy * 90, i = Math.min(18, Math.abs(φ / 5)), i0 = Math.max(0, Math.floor(i));\n    do {\n      var ay = robinsonConstants[i0][1], by = robinsonConstants[i0 + 1][1], cy = robinsonConstants[Math.min(19, i0 + 2)][1], u = cy - ay, v = cy - 2 * by + ay, t = 2 * (Math.abs(yy) - by) / u, c = v / u, di = t * (1 - c * t * (1 - 2 * c * t));\n      if (di >= 0 || i0 === 1) {\n        φ = (y >= 0 ? 5 : -5) * (di + i);\n        var j = 50, δ;\n        do {\n          i = Math.min(18, Math.abs(φ) / 5);\n          i0 = Math.floor(i);\n          di = i - i0;\n          ay = robinsonConstants[i0][1];\n          by = robinsonConstants[i0 + 1][1];\n          cy = robinsonConstants[Math.min(19, i0 + 2)][1];\n          φ -= (δ = (y >= 0 ? halfπ : -halfπ) * (by + di * (cy - ay) / 2 + di * di * (cy - 2 * by + ay) / 2) - y) * degrees;\n        } while (Math.abs(δ) > ε2 && --j > 0);\n        break;\n      }\n    } while (--i0 >= 0);\n    var ax = robinsonConstants[i0][0], bx = robinsonConstants[i0 + 1][0], cx = robinsonConstants[Math.min(19, i0 + 2)][0];\n    return [ x / (bx + di * (cx - ax) / 2 + di * di * (cx - 2 * bx + ax) / 2), φ * radians ];\n  };\n  (d3.geo.robinson = function() {\n    return projection(robinson);\n  }).raw = robinson;\n  function sinusoidal(λ, φ) {\n    return [ λ * Math.cos(φ), φ ];\n  }\n  sinusoidal.invert = function(x, y) {\n    return [ x / Math.cos(y), y ];\n  };\n  (d3.geo.sinusoidal = function() {\n    return projection(sinusoidal);\n  }).raw = sinusoidal;\n  function aitoff(λ, φ) {\n    var cosφ = Math.cos(φ), sinciα = sinci(acos(cosφ * Math.cos(λ /= 2)));\n    return [ 2 * cosφ * Math.sin(λ) * sinciα, Math.sin(φ) * sinciα ];\n  }\n  aitoff.invert = function(x, y) {\n    if (x * x + 4 * y * y > π * π + ε) return;\n    var λ = x, φ = y, i = 25;\n    do {\n      var sinλ = Math.sin(λ), sinλ_2 = Math.sin(λ / 2), cosλ_2 = Math.cos(λ / 2), sinφ = Math.sin(φ), cosφ = Math.cos(φ), sin_2φ = Math.sin(2 * φ), sin2φ = sinφ * sinφ, cos2φ = cosφ * cosφ, sin2λ_2 = sinλ_2 * sinλ_2, C = 1 - cos2φ * cosλ_2 * cosλ_2, E = C ? acos(cosφ * cosλ_2) * Math.sqrt(F = 1 / C) : F = 0, F, fx = 2 * E * cosφ * sinλ_2 - x, fy = E * sinφ - y, δxδλ = F * (cos2φ * sin2λ_2 + E * cosφ * cosλ_2 * sin2φ), δxδφ = F * (.5 * sinλ * sin_2φ - E * 2 * sinφ * sinλ_2), δyδλ = F * .25 * (sin_2φ * sinλ_2 - E * sinφ * cos2φ * sinλ), δyδφ = F * (sin2φ * cosλ_2 + E * sin2λ_2 * cosφ), denominator = δxδφ * δyδλ - δyδφ * δxδλ;\n      if (!denominator) break;\n      var δλ = (fy * δxδφ - fx * δyδφ) / denominator, δφ = (fx * δyδλ - fy * δxδλ) / denominator;\n      λ -= δλ, φ -= δφ;\n    } while ((Math.abs(δλ) > ε || Math.abs(δφ) > ε) && --i > 0);\n    return [ λ, φ ];\n  };\n  (d3.geo.aitoff = function() {\n    return projection(aitoff);\n  }).raw = aitoff;\n  function winkel3(λ, φ) {\n    var coordinates = aitoff(λ, φ);\n    return [ (coordinates[0] + λ / halfπ) / 2, (coordinates[1] + φ) / 2 ];\n  }\n  winkel3.invert = function(x, y) {\n    var λ = x, φ = y, i = 25;\n    do {\n      var cosφ = Math.cos(φ), sinφ = Math.sin(φ), sin_2φ = Math.sin(2 * φ), sin2φ = sinφ * sinφ, cos2φ = cosφ * cosφ, sinλ = Math.sin(λ), cosλ_2 = Math.cos(λ / 2), sinλ_2 = Math.sin(λ / 2), sin2λ_2 = sinλ_2 * sinλ_2, C = 1 - cos2φ * cosλ_2 * cosλ_2, E = C ? acos(cosφ * cosλ_2) * Math.sqrt(F = 1 / C) : F = 0, F, fx = .5 * (2 * E * cosφ * sinλ_2 + λ / halfπ) - x, fy = .5 * (E * sinφ + φ) - y, δxδλ = .5 * F * (cos2φ * sin2λ_2 + E * cosφ * cosλ_2 * sin2φ) + .5 / halfπ, δxδφ = F * (sinλ * sin_2φ / 4 - E * sinφ * sinλ_2), δyδλ = .125 * F * (sin_2φ * sinλ_2 - E * sinφ * cos2φ * sinλ), δyδφ = .5 * F * (sin2φ * cosλ_2 + E * sin2λ_2 * cosφ) + .5, denominator = δxδφ * δyδλ - δyδφ * δxδλ, δλ = (fy * δxδφ - fx * δyδφ) / denominator, δφ = (fx * δyδλ - fy * δxδλ) / denominator;\n      λ -= δλ, φ -= δφ;\n    } while ((Math.abs(δλ) > ε || Math.abs(δφ) > ε) && --i > 0);\n    return [ λ, φ ];\n  };\n  (d3.geo.winkel3 = function() {\n    return projection(winkel3);\n  }).raw = winkel3;\n}\n\nmodule.exports = addProjectionsToD3;\n"]},"metadata":{},"sourceType":"script"}