{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Components/App.js\";\nimport React from 'react'; // react-boostrap\n\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from \"react-bootstrap/Tab\";\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Container from 'react-bootstrap/Container'; // redux\n\nimport { connect } from 'react-redux'; // styling \n\nimport 'bootstrap/dist/css/bootstrap.min.css'; //import 'custom.scss'\n// components\n\nimport Home from \"./Home\";\nimport Plans from \"./Plans\";\nimport ExistingWellPlans from './ExistingWellPlans';\n\nconst App = ({\n  wells,\n  selectedWell\n}) => {\n  const PlansTabHandler = () => {\n    if (selectedWell.status === \"received\" && !wells.response) {\n      return true;\n    }\n\n    console.log(`wells response: ${wells.response === undefined}`);\n\n    if (wells.response) {\n      return false;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Jumbotron, {\n      fluid: true,\n      className: \"bg-dark text-white\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"LandShark App (Employee Portal)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        eventKey: \"Home\",\n        title: \"Home\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        eventKey: \"Plans\",\n        title: \"Plans\",\n        disabled: PlansTabHandler(),\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Plans, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        eventKey: \"ExistingWellPlans\",\n        title: \"ExistingWellPlans\",\n        disabled: selectedWell.status === \"received\" ? false : true,\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(ExistingWellPlans, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\n\nconst mapStateToProps = ({\n  wells,\n  selectedWell\n}) => {\n  return {\n    wells,\n    selectedWell\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Components/App.js"],"names":["React","Tabs","Tab","Jumbotron","Container","connect","Home","Plans","ExistingWellPlans","App","wells","selectedWell","PlansTabHandler","status","response","console","log","undefined","mapStateToProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,SAAP,MAAsB,2BAAtB,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,OAAO,sCAAP,C,CACA;AACA;;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAGA,MAAMC,GAAG,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KAA2B;AACrC,QAAMC,eAAe,GAAG,MAAM;AAC5B,QAAID,YAAY,CAACE,MAAb,KAAwB,UAAxB,IAAsC,CAACH,KAAK,CAACI,QAAjD,EAA2D;AACzD,aAAO,IAAP;AACD;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAa,mBAAkBN,KAAK,CAACI,QAAN,KAAmBG,SAAU,EAA5D;;AACA,QAAIP,KAAK,CAACI,QAAV,EAAoB;AAClB,aAAO,KAAP;AACD;AACF,GARD;;AAUA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAiB,MAAA,SAAS,EAAC,oBAA3B;AAAA,6BACE,QAAC,SAAD;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,IAAD;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,QAAQ,EAAC,MAAd;AAAqB,QAAA,KAAK,EAAC,MAA3B;AAAA,+BACE,QAAC,SAAD;AAAA,iCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,GAAD;AAAK,QAAA,QAAQ,EAAC,OAAd;AAAsB,QAAA,KAAK,EAAC,OAA5B;AAAoC,QAAA,QAAQ,EAAEF,eAAe,EAA7D;AAAA,+BACE,QAAC,SAAD;AAAA,iCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF,eAWE,QAAC,GAAD;AAAK,QAAA,QAAQ,EAAC,mBAAd;AAAkC,QAAA,KAAK,EAAC,mBAAxC;AAA4D,QAAA,QAAQ,EAAED,YAAY,CAACE,MAAb,KAAwB,UAAxB,GAAqC,KAArC,GAA6C,IAAnH;AAAA,+BACE,QAAC,SAAD;AAAA,iCACE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CAtCD;;KAAMJ,G;;AAwCN,MAAMS,eAAe,GAAG,CAAC;AAACR,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KAA2B;AACjD,SAAO;AAACD,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAP;AACD,CAFD;;AAIA,eAAeN,OAAO,CAACa,eAAD,CAAP,CAAyBT,GAAzB,CAAf","sourcesContent":["import React from 'react'\n// react-boostrap\nimport Tabs from 'react-bootstrap/Tabs'\nimport Tab from \"react-bootstrap/Tab\"\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Container from 'react-bootstrap/Container'\n// redux\nimport { connect } from 'react-redux'\n// styling \nimport 'bootstrap/dist/css/bootstrap.min.css';\n//import 'custom.scss'\n// components\nimport Home from \"./Home\"\nimport Plans from \"./Plans\"\nimport ExistingWellPlans from './ExistingWellPlans'\n\n\nconst App = ({wells, selectedWell}) => {\n  const PlansTabHandler = () => {\n    if (selectedWell.status === \"received\" && !wells.response) {\n      return true\n    }\n    console.log(`wells response: ${wells.response === undefined}`)\n    if (wells.response) {\n      return false\n    }\n  }\n  \n  return (\n    <React.Fragment>\n      <Jumbotron fluid className=\"bg-dark text-white\">\n        <Container>\n          <h1>LandShark App (Employee Portal)</h1>\n        </Container>\n      </Jumbotron>\n      <Tabs>\n        <Tab eventKey=\"Home\" title=\"Home\">\n          <Container>\n            <Home/>\n          </Container>\n        </Tab>\n        <Tab eventKey=\"Plans\" title=\"Plans\" disabled={PlansTabHandler()}>\n          <Container>\n            <Plans/>\n          </Container>\n        </Tab>\n        <Tab eventKey=\"ExistingWellPlans\" title=\"ExistingWellPlans\" disabled={selectedWell.status === \"received\" ? false : true}>\n          <Container>\n            <ExistingWellPlans/>\n          </Container>\n        </Tab>\n\n      </Tabs>\n    </React.Fragment>\n  );\n}\n\nconst mapStateToProps = ({wells, selectedWell}) => {\n  return {wells, selectedWell}\n}\n\nexport default connect(mapStateToProps)(App);\n\n"]},"metadata":{},"sourceType":"module"}