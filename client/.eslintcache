[{"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/LeaseLines.js":"1","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/postLeaseLinesToJSONDb.js":"2","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/saveLeaseLinesToReduxStore.js":"3","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/index.js":"4","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/ExistingPlans.js":"5","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/savePlansToReduxStoreReducer.js":"6","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/postLeaseLinesToJSONDbReducer.js":"7","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/saveLeaseLinesToReduxStoreReducer.js":"8","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/savePlansToReduxStore.js":"9","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/saveWellInfoToReduxStore.js":"10","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getWellsFromJSONDb.js":"11","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/SECT.js":"12","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/DLS.js":"13","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/types.js":"14","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/APIs/wells.js":"15","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/Home.js":"16","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/Plans.js":"17","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/saveWellInfoToReduxStoreReducer.js":"18","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/postPlansToJSONDbReducer.js":"19","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/saveActiveWellToReduxStoreReducer.js":"20","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/saveActiveWellToReduxStore.js":"21","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getWellPlansFromJSONDb.js":"22","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/EW.js":"23","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/RF.js":"24","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/postWellInfoToJSONDb.js":"25","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/postPlansToJSONDb.js":"26","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getWellsFromJSONDbReducer.js":"27","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/index.js":"28","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/postWellInfoToJSONDbReducer.js":"29","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getWellPlansFromJSONDbReducer.js":"30","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/DLC.js":"31","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/APIs/LeaseLines.js":"32","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/NS.js":"33","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/App.js":"34","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/TVD.js":"35","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getLeaseLinesFromJSONDbReducer.js":"36","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/ExistingLeaseLines.js":"37","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getLeaseLinesFromJSONDb.js":"38","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/PVA.js":"39","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/ExistingPVA.js":"40"},{"size":4304,"mtime":1607718805940,"results":"41","hashOfConfig":"42"},{"size":652,"mtime":1607878537714,"results":"43","hashOfConfig":"42"},{"size":549,"mtime":1607702894653,"results":"44","hashOfConfig":"42"},{"size":679,"mtime":1606780516169,"results":"45","hashOfConfig":"42"},{"size":5295,"mtime":1607962763751,"results":"46","hashOfConfig":"42"},{"size":623,"mtime":1607523677659,"results":"47","hashOfConfig":"42"},{"size":632,"mtime":1607877919616,"results":"48","hashOfConfig":"42"},{"size":694,"mtime":1607659948536,"results":"49","hashOfConfig":"42"},{"size":523,"mtime":1607616565129,"results":"50","hashOfConfig":"42"},{"size":622,"mtime":1607563740710,"results":"51","hashOfConfig":"42"},{"size":555,"mtime":1607387052358,"results":"52","hashOfConfig":"42"},{"size":1222,"mtime":1607526475495,"results":"53","hashOfConfig":"42"},{"size":478,"mtime":1607525889497,"results":"54","hashOfConfig":"42"},{"size":2980,"mtime":1607879938358,"results":"55","hashOfConfig":"42"},{"size":94,"mtime":1606780246113,"results":"56","hashOfConfig":"42"},{"size":5451,"mtime":1607992490784,"results":"57","hashOfConfig":"42"},{"size":8948,"mtime":1607698076754,"results":"58","hashOfConfig":"42"},{"size":705,"mtime":1607563251547,"results":"59","hashOfConfig":"42"},{"size":584,"mtime":1607528546735,"results":"60","hashOfConfig":"42"},{"size":664,"mtime":1607633245513,"results":"61","hashOfConfig":"42"},{"size":578,"mtime":1607633701228,"results":"62","hashOfConfig":"42"},{"size":1350,"mtime":1607882728534,"results":"63","hashOfConfig":"42"},{"size":603,"mtime":1607526149901,"results":"64","hashOfConfig":"42"},{"size":196,"mtime":1607525301624,"results":"65","hashOfConfig":"42"},{"size":832,"mtime":1607635248677,"results":"66","hashOfConfig":"42"},{"size":838,"mtime":1607703856457,"results":"67","hashOfConfig":"42"},{"size":626,"mtime":1607538953582,"results":"68","hashOfConfig":"42"},{"size":1360,"mtime":1607882337550,"results":"69","hashOfConfig":"42"},{"size":615,"mtime":1607486694229,"results":"70","hashOfConfig":"42"},{"size":637,"mtime":1607636656362,"results":"71","hashOfConfig":"42"},{"size":462,"mtime":1607524691387,"results":"72","hashOfConfig":"42"},{"size":94,"mtime":1607704657721,"results":"73","hashOfConfig":"42"},{"size":767,"mtime":1607526323173,"results":"74","hashOfConfig":"42"},{"size":3343,"mtime":1607992504878,"results":"75","hashOfConfig":"42"},{"size":627,"mtime":1607525617278,"results":"76","hashOfConfig":"42"},{"size":638,"mtime":1607882301923,"results":"77","hashOfConfig":"42"},{"size":1681,"mtime":1607884069734,"results":"78","hashOfConfig":"42"},{"size":1244,"mtime":1607883482862,"results":"79","hashOfConfig":"42"},{"size":4310,"mtime":1607967060715,"results":"80","hashOfConfig":"42"},{"size":2823,"mtime":1607991637552,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},"5r6a9f",{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"85"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"92"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"85"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"85"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"85"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"95"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"85"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"118"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"104"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"85"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"104"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"118"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"95"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"85"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"92"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"111"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"176"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"95"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"92"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"85"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"92"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"85"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/LeaseLines.js",["201","202"],"import React, { useState, useEffect } from \"react\"\n//bootstrap\nimport Container from \"react-bootstrap/esm/Container\";\nimport Form from \"react-bootstrap/Form\"\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\nimport Button from \"react-bootstrap/Button\"\n\nimport 'react-datasheet/lib/react-datasheet.css';\nimport { connect } from \"react-redux\"\nimport ReactDataSheet from 'react-datasheet';\n\n// actionCreators\nimport saveLeaseLinesToReduxStore from \"../ActionCreators/saveLeaseLinesToReduxStore\"\nimport postLeaseLinesToJSONDb from \"../ActionCreators/postLeaseLinesToJSONDb\"\n\n\nconst LeaseLines = ({activeWell, saveLeaseLinesToReduxStore, postLeaseLinesToJSONDb}) => {\n  const {operator, rig, well, county, usState, northing, easting} = activeWell.response\n  // set up initial grid\n  // create local state to setGrid\n  // renderWellHeader {if (either activeWell or saveWellInfoToRedux)} then destructure out the rig, wellname, operator\n  // render out ReactData sheet data = {grid} valueRenderer={cell=> cell.value} onCellsChanged={onCellsChanged}\n  // render submit button return row col xs={10} className = \"my-4\" button variant=\"info' onClick = handleSubmit\n  // handlesubmit = postLeaseLinesToJSONDb saveHardLinesToRedux\n  // addRows: newGrid =  [...grid, addedRow] setGrid(newGrid)\n\n  const initialGrid = [\n    [{value: \"\", readOnly: true, width: \"7rem\"}, {value: \"Northing\", readOnly: true, width: \"7rem\"}, {value:\"Easting\", readOnly: true, width: \"7rem\"}],\n    [{value: 1, readOnly: true}, {value: 0}, {value: 0}],\n    [{value: 2, readOnly: true}, {value: 0}, {value: 0}],\n    [{value: 3, readOnly: true}, {value: 0}, {value: 0}],\n    [{value: 4, readOnly: true}, {value: 0}, {value: 0}],\n    [{value: 5, readOnly: true}, {value: 0}, {value: 0}],\n    [{value: 6, readOnly: true}, {value: 0}, {value: 0}],\n    [{value: 7, readOnly: true}, {value: 0}, {value: 0}],\n    [{value: 8, readOnly: true}, {value: 0}, {value: 0}],\n    [{value: 9, readOnly: true}, {value: 0}, {value: 0}],\n  ]\n  const [grid, setGrid] = useState(initialGrid)\n\n  const renderWellHeader = () => {\n    if (activeWell.status === \"received\") {\n      // const {operator, rig, well} = activeWell.response\n      return <h3 className=\"my-4\">{operator} - {rig} - {well}</h3>\n    } else {\n      return \"No Well Data\"\n    }\n  }\n\n  const onCellsChanged = changes => {\n    const gridNew = grid.map(row => [...row])\n    changes.forEach(({cell, row, col, value}) => {\n      gridNew[row][col] = {...grid[row][col], value}\n    });\n    setGrid(gridNew);\n    \n  }\n\n  const handleSubmit = () => {\n    const wellInfoAndLeaseLines = {\n      operator,\n      rig, \n      well, \n      county,\n      usState, \n      northing,\n      easting,\n      grid\n    }\n    // const activeWell\n    // saveLeaseLinesToJSON \n    checkTest()\n    postLeaseLinesToJSONDb(wellInfoAndLeaseLines)\n    saveLeaseLinesToReduxStore(wellInfoAndLeaseLines)\n\n    \n  }\n\n  const checkTest = () => {\n    console.log(\"whyyy\")\n  }\n\n  const renderRowsButtons = () => {\n    return (\n      <Row>\n        <Col xs={10} className=\"my-4\">\n          <Button variant=\"success\" className=\"my-4\" onClick={handleSubmit}> \n            Submit\n          </Button>\n          <Button variant=\"primary\" className=\"ml-4\" onClick={addRow}>\n            Add a Row\n          </Button>\n          <Button variant=\"primary\" className=\"ml-4\" onClick={removeRow}>\n            Remove a Row\n          </Button>\n\n        </Col>\n      </Row>\n    )\n  }\n\n  const addRow = () => {\n    const gridLength = grid.length\n    const newRow = [{value: gridLength, readOnly: true}, {value: 0}, {value: 0}]\n    const newGrid = [...grid, newRow]\n    setGrid(newGrid)\n  }\n\n  const removeRow = () => {\n    const newGrid = [...grid]\n    newGrid.pop()\n    setGrid(newGrid)\n  }\n  \n\n  return (\n    <Container>\n      <Row>\n        <Col xs={10}>\n          {renderWellHeader()}\n          <ReactDataSheet data={grid} valueRenderer={(cell)=> cell.value} onCellsChanged={onCellsChanged}/>\n          {renderRowsButtons()}\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nconst mapStateToProps = ({activeWell, postLeaseLinesToJSONDbReducer}) => {\n  return {\n    activeWell,\n    postLeaseLinesToJSONDbReducer,\n  }\n}\n\nexport default connect(mapStateToProps, {saveLeaseLinesToReduxStore, postLeaseLinesToJSONDb})(LeaseLines)",["203","204"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/postLeaseLinesToJSONDb.js",["205"],"import { POST_LEASE_LINES_TO_JSONDB_REQUESTED,\n  POST_LEASE_LINES_TO_JSONDB_RECEIVED,\n  POST_LEASE_LINES_TO_JSONDB_FAILED } from \"./types\"\nimport wells from \"../APIs/wells\"\n\n\n  export default (wellinfo) => {\n    return async dispatch => {\n      dispatch({\n        type: POST_LEASE_LINES_TO_JSONDB_REQUESTED\n      })\n      try {\n        const response = await wells.post(\"LeaseLines\", wellinfo)\n        dispatch({\n          type: POST_LEASE_LINES_TO_JSONDB_RECEIVED,\n          payload: response\n        })\n      } catch (error) {\n        dispatch({\n          type: POST_LEASE_LINES_TO_JSONDB_FAILED,\n          payload: error\n        })\n      }\n    }\n  }","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/saveLeaseLinesToReduxStore.js",["206"],"import { SAVE_LEASE_LINES_TO_REDUX_STORE_REQUESTED,\n  SAVE_LEASE_LINES_TO_REDUX_STORE_RECEIVED,\n  SAVE_LEASE_LINES_TO_REDUX_STORE_FAILED } from \"./types\"\n\nexport default (leaseLines) => {\n  return async dispatch => {\n    dispatch({\n      type: SAVE_LEASE_LINES_TO_REDUX_STORE_REQUESTED\n    })\n    try {\n      dispatch({\n        type: SAVE_LEASE_LINES_TO_REDUX_STORE_RECEIVED,\n        payload: leaseLines\n      })\n    } catch(error) {\n      dispatch({\n        type: SAVE_LEASE_LINES_TO_REDUX_STORE_FAILED,\n        payload: error\n      })\n    }\n  }\n}\n",["207","208"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/index.js",[],["209","210"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/ExistingPlans.js",["211","212","213","214","215","216","217","218","219"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/savePlansToReduxStoreReducer.js",["220"],"import { SAVE_PLANS_TO_REDUX_STORE_REQUESTED,\n  SAVE_PLANS_TO_REDUX_STORE_RECEIVED,\n  SAVE_PLANS_TO_REDUX_STORE_FAILED\n} from \"../ActionCreators/types\"\n\nconst INITIAL_STATE = {\n  response: {},\n  status: \"\"\n}\n\nexport default (state=INITIAL_STATE, {type, payload}) =>{\n  switch (type) {\n    case SAVE_PLANS_TO_REDUX_STORE_REQUESTED:\n      return {...state, status: \"waiting\"}\n    case SAVE_PLANS_TO_REDUX_STORE_RECEIVED:\n      return {...state, response: payload, status: \"received\"}\n    case SAVE_PLANS_TO_REDUX_STORE_FAILED:\n      return {...state, response: payload, status: \"failed\"}\n    default:\n      return state\n  }\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/postLeaseLinesToJSONDbReducer.js",["221"],"import   {POST_LEASE_LINES_TO_JSONDB_REQUESTED,\nPOST_LEASE_LINES_TO_JSONDB_RECEIVED, \nPOST_LEASE_LINES_TO_JSONDB_FAILED} from \"../ActionCreators/types\"\n\nconst INITIAL_STATE = {\n  response: {}, \n  status: \"\"\n}\n\nexport default (state = INITIAL_STATE, {type, payload}) => {\n  switch (type) {\n    case POST_LEASE_LINES_TO_JSONDB_REQUESTED:\n      return {...state, status: \"waiting\"}\n    case POST_LEASE_LINES_TO_JSONDB_RECEIVED:\n      return {...state, response: payload, status: \"received\"}\n    case POST_LEASE_LINES_TO_JSONDB_FAILED:\n      return {...state, response: payload, status: \"failed\"}\n    default:\n      return state;\n  }\n} ",["222","223"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/saveLeaseLinesToReduxStoreReducer.js",["224","225"],"import { initial } from \"lodash\"\nimport { SAVE_LEASE_LINES_TO_REDUX_STORE_REQUESTED,\n  SAVE_LEASE_LINES_TO_REDUX_STORE_RECEIVED,\n  SAVE_LEASE_LINES_TO_REDUX_STORE_FAILED } from \"../ActionCreators/types\"\n\nconst INITIAL_STATE = {\n  response: {}, \n  status: \"\"\n}\n\nexport default (state=INITIAL_STATE, {type, payload}) => {\n  switch (type) {\n    case SAVE_LEASE_LINES_TO_REDUX_STORE_REQUESTED:\n      return {...state, status: \"waiting\"}\n    case SAVE_LEASE_LINES_TO_REDUX_STORE_RECEIVED:\n      return {...state, response: payload, status: \"received\"}\n    case SAVE_LEASE_LINES_TO_REDUX_STORE_FAILED:\n      return {...state, response: payload, status: \"failed\"}\n    default:\n      return state\n  }\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/savePlansToReduxStore.js",["226"],"import { SAVE_PLANS_TO_REDUX_STORE_REQUESTED,\n  SAVE_PLANS_TO_REDUX_STORE_RECEIVED,\n  SAVE_PLANS_TO_REDUX_STORE_FAILED\n} from \"./types\"\n\nexport default (plans) => {\n  return async (dispatch, getState) => {\n    dispatch({\n      type: SAVE_PLANS_TO_REDUX_STORE_REQUESTED\n    });\n    \n    try {\n      dispatch({\n        type: SAVE_PLANS_TO_REDUX_STORE_RECEIVED,\n        payload: plans,\n      });\n    } catch (error) {\n      dispatch({\n        type: SAVE_PLANS_TO_REDUX_STORE_FAILED,\n        payload: error\n      })\n    }\n  }\n}",["227","228"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/saveWellInfoToReduxStore.js",["229"],"import { SAVE_WELL_INFO_TO_REDUX_STORE_REQUESTED,\n  SAVE_WELL_INFO_TO_REDUX_STORE_RECEIVED,\n  SAVE_WELL_INFO_TO_REDUX_STORE_FAILED } from './types';\n  \n  export default (wellInfo) => {\n    return async (dispatch, getState) => {\n      dispatch({\n        type: SAVE_WELL_INFO_TO_REDUX_STORE_REQUESTED,\n      });\n      try {\n        dispatch({\n          type: SAVE_WELL_INFO_TO_REDUX_STORE_RECEIVED,\n          payload: wellInfo,\n        });\n      } catch (error) {\n        console.log(error)\n        dispatch({\n          type: SAVE_WELL_INFO_TO_REDUX_STORE_FAILED,\n          payload: error,\n        });\n      }\n    };\n  };\n  ","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getWellsFromJSONDb.js",["230"],"import wells from \"../APIs/wells\"\n\nimport { GET_WELLS_FROM_JSON_REQUESTED,\n  GET_WELLS_FROM_JSON_RECEIVED,\n  GET_WELLS_FROM_JSON_FAILED } from \"./types\"\n\n\nexport default () => {\n  return async dispatch => {\n    dispatch({\n      type: GET_WELLS_FROM_JSON_REQUESTED\n    })\n    try {\n      const response = await wells.get(\"/wells\")\n      dispatch({\n        type: GET_WELLS_FROM_JSON_RECEIVED,\n        payload: response.data\n      })\n    } catch (error) {\n      dispatch({\n        type: GET_WELLS_FROM_JSON_FAILED,\n        payload: error\n      })\n    }\n  }\n}",["231","232"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/SECT.js",["233"],"import EW from './EW';\nimport NS from './NS';\n\nexport default (measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior = 1, inclinationPrior = 2, azimuthPrior = 3, calculatedNorthingPrior = 0.02, calculatedEastingPrior = 0, index, vsDirection = 0) => {\n  const converter = (Math.PI)/180;\n  const converter2 = 0.00000001;\n\n  const calculatedEastingCurrent = EW(measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior, inclinationPrior, azimuthPrior, calculatedEastingPrior)\n\n  const calculatedNorthingCurrent = NS(measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior, inclinationPrior, azimuthPrior, calculatedNorthingPrior)\n\n  const closure = Math.atan2(calculatedEastingCurrent, calculatedNorthingCurrent + converter2) / converter\n\n  const determineClosure = () => {\n    if (closure < 0) {\n      return Math.cos(((360 + closure) - vsDirection) * converter)\n    } else {\n      return Math.cos((closure - vsDirection) * converter)\n    }\n  }\n\n  const HD = Math.sqrt(Math.pow(calculatedNorthingCurrent, 2) + Math.pow(calculatedEastingCurrent, 2))\n\n  const calculatedSect = HD * determineClosure()\n\n\n  return (\n    parseFloat(calculatedSect.toFixed(2))\n  )\n};\n","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/DLS.js",["234"],"import DLC from \"./DLC\"\n\nexport default (measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior = 1, inclinationPrior = 2, azimuthPrior = 3 ) => {\n  const converter = (Math.PI)/180;\n\n  // calculate DLC\n  const calculatedDLC = DLC(inclinationPrior, inclinationCurrent, azimuthPrior, azimuthCurrent)\n\n  const calculatedDLS = ((calculatedDLC/converter)*100/(measuredDepthCurrent-measuredDepthPrior))\n\n  return (\n    parseFloat(calculatedDLS.toFixed(2))\n  )\n\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/types.js",[],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/APIs/wells.js",[],["235","236"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/Home.js",["237","238","239"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/Plans.js",["240","241","242","243","244"],"import React, { useState, useEffect } from \"react\"\n//bootstrap\nimport Container from \"react-bootstrap/esm/Container\";\nimport Form from \"react-bootstrap/Form\"\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\nimport Button from \"react-bootstrap/Button\"\n//other libs\nimport 'react-datasheet/lib/react-datasheet.css';\nimport { connect } from \"react-redux\"\nimport ReactDataSheet from 'react-datasheet';\n// actionCreators\n\nimport savePlansToReduxStore from \"../ActionCreators/savePlansToReduxStore\"\n//helper functions\nimport calculateTVD from \"../HelperFunctions/Calculations/TVD\"\nimport calculateNS from \"../HelperFunctions/Calculations/NS\"\nimport calculateEW from \"../HelperFunctions/Calculations/EW\"\nimport calculateSECT from \"../HelperFunctions/Calculations/SECT\"\nimport calculateDLS from \"../HelperFunctions/Calculations/DLS\"\nimport postPlansToJSONDb from \"../ActionCreators/postPlansToJSONDb\";\n\n\n\nconst Plans = ({savePlansToReduxStore, saveWellInfoToReduxStoreReducer,savePlansToReduxStoreReducer, postPlansToJSONDb}) => {\n  \n  const [editGrid, setEditGrid] = useState(true)\n  const [input, setInput] = useState(false)\n  const [vsDirection, setVSDirection] = useState(0)\n  \n  const initialGrid = [\n    [{value: '', readOnly: true, width: '7rem'}, {value:\"Measured Depth\", readOnly: true, width: '7rem'}, {value:\"Inclination\", readOnly: true, width: '7rem'}, {value:\"Azimuth\", readOnly: true, width: '7rem'}, {value:\"TVD\", readOnly: true, width: '7rem'}, {value:\"Northing\", readOnly: true, width: '7rem'}, {value:\"Easting\", readOnly: true, width: '7rem'}, {value:\"VS\", readOnly: true, width: '7rem'},{value:\"DLS\", readOnly: true, width: '7rem'}],\n    \n    [{value: 1, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}],\n    \n    [{readOnly: true, value: 2}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}],\n    [{readOnly: true, value: 3}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}],\n    [{readOnly: true, value: 4}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}],\n    [{readOnly: true, value: 5}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}],\n  ];\n\n  const [grid, setGrid] = useState(initialGrid);\n\n  useEffect(()=>{\n    if (input) {\n      //performcalcs doesn't happen bc we're copying from plans. Currently not needed\n    }\n  },[input])\n\n  useEffect(()=> {\n    handleAddRows(1)\n  }, [])\n\n  const performCalculations = () => {\n    grid.map((row, index) => {\n      if (index === 0 || index === 1) {\n        // nothing because we don't want to run calcs on the header array\n      } else {\n        // for every array within grid array, want to iterate over and change the values of TVD, NS, EW, SECT, & DLS\n        // note val after idx is column \n        // TVD order of args : (measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior, inclinationPrior, azimuthPrior, calculatedTVDPrior)\n        // NS order of args: (measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior, inclinationPrior, azimuthPrior, calculatedNorthingPrior)\n\n        const calculatedTVD = calculateTVD(grid[index][1].value, grid[index][2].value, grid[index][3].value, grid[index - 1][1].value, grid[index - 1][2].value, grid[index - 1][3].value, grid[index - 1][4].value)\n        const calculatedNS = calculateNS(grid[index][1].value, grid[index][2].value, grid[index][3].value, grid[index - 1][1].value, grid[index - 1][2].value, grid[index - 1][3].value, grid[index - 1][5].value)\n        const calculatedEW = calculateEW(grid[index][1].value, grid[index][2].value, grid[index][3].value, grid[index - 1][1].value, grid[index - 1][2].value, grid[index - 1][3].value, grid[index - 1][6].value)\n        const calculatedSECT = calculateSECT(grid[index][1].value, grid[index][2].value, grid[index][3].value, grid[index - 1][1].value, grid[index - 1][2].value, grid[index - 1][3].value, grid[index - 1][5].value, grid[index - 1][6].value, index, vsDirection)\n        const calculatedDLS = calculateDLS(grid[index][1].value, grid[index][2].value, grid[index][3].value, grid[index - 1][1].value, grid[index - 1][2].value, grid[index - 1][3].value)\n\n\n        grid[index][4] = {...grid[index][4], readOnly: true, value: calculatedTVD}\n        grid[index][5] = {...grid[index][5], readOnly: true, value: calculatedNS}\n        grid[index][6] = {...grid[index][6], readOnly: true, value: calculatedEW}\n        grid[index][7] = {...grid[index][7], readOnly: true, value: calculatedSECT}\n        grid[index][8] = {...grid[index][8], readOnly: true, value: calculatedDLS}\n\n        setGrid(grid)\n        setInput(false)\n\n      }\n    })\n  }\n\n  const onCellsChanged = changes => {\n    // iterate through existing grid to get a copy and not mutate current as we iterate over\n    const gridNew = grid.map(row => [...row]);\n    // iterate through the changes.  Each change is a cell, each cell is an object\n    // with cell (previousVal), row, col, currentVal\n    // add the value of the newGrid[row#][col#] to the new value \n    changes.forEach(({ cell, row, col, value }) => {\n      gridNew[row][col] = {...grid[row][col], value };\n    });\n    setGrid(gridNew)\n    setInput(true)\n  };\n\n  const handleVSDirection = (val) => {\n    setVSDirection(val)\n    setInput(true)\n  }\n\n  const handleSubmit = () => {\n    const {well, operator, rig, county, uSstate, northing, easting} = saveWellInfoToReduxStoreReducer.response\n    postPlansToJSONDb(operator, rig ,well, county, uSstate, grid, vsDirection, northing, easting)\n    savePlansToReduxStore(grid)\n\n  }\n\n  const handleRemoveRow = () => {\n    const newGrid = [...grid];\n    newGrid.pop();\n    setGrid(newGrid);\n  };\n\n  const createRows = (numberOfRowsToAdd) => {\n    let createdRows = []\n    for (let i = 0; i < numberOfRowsToAdd; i++) {\n      createdRows.push(\n        [{readOnly: true, value: grid.length + i}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}]\n      )\n    }\n    return createdRows\n  };\n\n  const handleAddRows = (rows) => {\n    const newGrid = [...grid, ...createRows(rows)]\n    setGrid(newGrid)\n  }\n\n  const renderSetRowsButtons = () => {\n    return (\n      <Row>\n        <Col xs={10} className=\"d-flex justify-content-start mt-4\">\n          <Button variant=\"success\" value={25} onClick={(event)=> handleAddRows(event.target.value)}>\n            Add 25 rows\n          </Button>\n          <Button variant=\"success\" className=\"ml-4\" value={10} onClick={(event) => handleAddRows(event.target.value)}>\n            Add 10 rows\n          </Button>\n          <Button variant=\"success\" className=\"ml-4\" value={5} onClick={(event) => handleAddRows(event.target.value)}>\n            Add 5 rows\n          </Button>\n          <Button variant=\"success\" className=\"ml-4\" value={1} onClick={(event) => handleAddRows(event.target.value)}>\n            Add a row\n          </Button>\n          <Button variant=\"danger\" className=\"ml-4\" onClick={handleRemoveRow}>\n            Remove a row\n          </Button>\n        </Col>\n        <Col xs={2}>\n          \n        </Col>\n      </Row>\n    )\n  }\n\n  const renderSubmitButton = () => {\n    return (\n      <Row>\n        <Col xs={10} className=\"my-4\">\n          <Button variant=\"info\" onClick={()=>handleSubmit()}>\n            Submit Data\n          </Button>\n        </Col>\n        <Col xs={2}>\n\n        </Col>\n      </Row>\n    )\n  }\n\n  const renderWellData = () => {\n    if (saveWellInfoToReduxStoreReducer.status === \"received\") {\n      const { well, rig, operator} = saveWellInfoToReduxStoreReducer.response\n      return <h3 className=\"hy-4\"> {operator} - {rig} - {well}</h3>\n    } else {\n      return \"No well data\"\n    }\n  }\n\n  return (\n    <Container>\n      <Row>\n        <Col xs={10}>\n          {renderWellData()}\n          <ReactDataSheet data={grid} valueRenderer={(cell)=> cell.value} onCellsChanged={onCellsChanged}/>\n        </Col>\n        <Col xs={2}>\n          <Form className=\"mt-7\">\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Control className=\"mt-3\" type=\"float\" placeholder=\"Enter VS Here\" onChange={event => handleVSDirection(event.target.value)}/>\n            </Form.Group>\n          </Form>\n        </Col>\n      </Row>\n      {renderSetRowsButtons()}\n      {renderSubmitButton()}\n      <Row>\n        <Col xs={10}>\n          {/* {renderAlert()} */}\n        </Col>\n        <Col xs={2}>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nconst mapStateToProps = ({saveWellInfoToReduxStoreReducer}) => {\n  return {\n    saveWellInfoToReduxStoreReducer\n  }\n}\n\nexport default connect(mapStateToProps, { savePlansToReduxStore, postPlansToJSONDb})(Plans)\n\n\n","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/saveWellInfoToReduxStoreReducer.js",["245"],"import { SAVE_WELL_INFO_TO_REDUX_STORE_REQUESTED,\n  SAVE_WELL_INFO_TO_REDUX_STORE_RECEIVED,\n  SAVE_WELL_INFO_TO_REDUX_STORE_FAILED } from \"../ActionCreators/types\"\n\n  const INITIAL_STATE = {\n    response: {}, \n    status: \"\"\n  };\n\n  export default (state = INITIAL_STATE, { type, payload }) => {\n    \n    switch (type) {\n      case SAVE_WELL_INFO_TO_REDUX_STORE_REQUESTED:\n        return { ...state, status: 'waiting' };\n      case SAVE_WELL_INFO_TO_REDUX_STORE_RECEIVED:\n        return { ...state, response: payload, status: 'received' };\n      case SAVE_WELL_INFO_TO_REDUX_STORE_FAILED:\n        return { ...state, response: payload, status: 'failed' };\n      default:\n        return state;\n    }\n  };\n  ","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/postPlansToJSONDbReducer.js",["246"],"import { POST_PLANS_TO_JSON_REQUESTED,\n  POST_PLANS_TO_JSON_RECEIVED,\n  POST_PLANS_TO_JSON_FAILED } from \"../ActionCreators/types\"\n\nconst INITIAL_STATE = {\n  response: {},\n  status: \"\"\n}\nexport default (state = INITIAL_STATE, {type, payload}) => {\n  switch (type) {\n    case POST_PLANS_TO_JSON_REQUESTED:\n      return {...state, status: \"waiting\"}\n    case POST_PLANS_TO_JSON_RECEIVED:\n      return {...state, response: payload, status: \"received\"}\n    case POST_PLANS_TO_JSON_FAILED:\n      return {...state, response: payload, status: \"failed\"}\n    default:\n      return state;\n  }\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/saveActiveWellToReduxStoreReducer.js",["247"],"import { SAVE_ACTIVE_WELL_TO_REDUX_STORE_RECEIVED,\n  SAVE_ACTIVE_WELL_TO_REDUX_STORE_REQUESTED,\n  SAVE_ACTIVE_WELL_TO_REDUX_STORE_FAILED\n } from \"../ActionCreators/types\"\n\nconst INITIAL_STATE = {\n  response: {},\n  status: \"\"\n}\n\nexport default (state = INITIAL_STATE, {type, payload}) => {\n  switch (type) {\n    case SAVE_ACTIVE_WELL_TO_REDUX_STORE_REQUESTED:\n      return {...state, status: \"waiting\"}\n    case SAVE_ACTIVE_WELL_TO_REDUX_STORE_RECEIVED:\n      return {...state, response: payload, status: \"received\"}\n    case SAVE_ACTIVE_WELL_TO_REDUX_STORE_FAILED:\n      return {...state, response: payload, status: \"failed\"}\n    default:\n      return state;\n  }\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/saveActiveWellToReduxStore.js",["248"],"import { SAVE_ACTIVE_WELL_TO_REDUX_STORE_REQUESTED,\n  SAVE_ACTIVE_WELL_TO_REDUX_STORE_RECEIVED,\n  SAVE_ACTIVE_WELL_TO_REDUX_STORE_FAILED\n } from \"./types\"\n\nexport default (selectedWell) => {\n  return (dispatch) => {\n    dispatch ({\n      type: SAVE_ACTIVE_WELL_TO_REDUX_STORE_REQUESTED\n    });\n    try {\n      dispatch({\n        type: SAVE_ACTIVE_WELL_TO_REDUX_STORE_RECEIVED,\n        payload: selectedWell\n      });\n    } catch (error) {\n      console.log(error)\n      dispatch({\n        type: SAVE_ACTIVE_WELL_TO_REDUX_STORE_FAILED,\n        payload: error\n      })\n    }\n  }\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getWellPlansFromJSONDb.js",["249","250","251","252","253","254"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/EW.js",["255"],"import DLC from \"./DLC\"\nimport RF from \"./RF\"\n\nexport default (measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior, inclinationPrior, azimuthPrior, calculatedEastingPrior) => {\n  const converter = (Math.PI)/180\n\n  const calculatedDLC = DLC(inclinationPrior, inclinationCurrent, azimuthPrior, azimuthCurrent)\n\n  const calculatedRF = RF(measuredDepthPrior, measuredDepthCurrent, calculatedDLC)\n\n  const calculatedEastingCurrent = (calculatedEastingPrior + calculatedRF *(Math.sin(inclinationPrior*converter)))\n\n  return (\n    parseFloat(calculatedEastingCurrent.toFixed(2))\n  )\n\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/RF.js",["256"],"export default (measuredDepthPrior, measuredDepthCurrent, calculatedDLC) => {\n  return (\n    Math.tan(calculatedDLC/2)\n    *\n    ((measuredDepthCurrent - measuredDepthPrior) / calculatedDLC)\n  )\n}",["257","258"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/postWellInfoToJSONDb.js",["259","260"],"import wells from \"../APIs/wells\"\n\nimport { POST_WELLINFO_TO_JSONDB_REQUESTED,\n  POST_WELLINFO_TO_JSONDB_RECEIVED,\n  POST_WELLINFO_TO_JSONDB_FAILED } from './types';\n  \n  export default (wellInfo) => {\n\n    return async (dispatch, getState) => {\n      // let wellList = getState().getWellsFromJSONDbReducer.response\n      // console.log('should get wellList next')\n      // console.log(wellList)\n      const response = await wells.post(\"/wells\", wellInfo)\n      dispatch({\n        type: POST_WELLINFO_TO_JSONDB_REQUESTED,\n      });\n      try {\n        dispatch({\n          type: POST_WELLINFO_TO_JSONDB_RECEIVED,\n          payload: wellInfo,\n        });\n      } catch (error) {\n        console.log(error)\n        dispatch({\n          type: POST_WELLINFO_TO_JSONDB_FAILED,\n          payload: error,\n        });\n      }\n    };\n  };\n  ","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/postPlansToJSONDb.js",["261"],"import wells from \"../APIs/wells\"\nimport { \n  POST_PLANS_TO_JSON_REQUESTED,\n  POST_PLANS_TO_JSON_RECEIVED,\n  POST_PLANS_TO_JSON_FAILED \n} from \"./types\"\nimport moment from \"moment\"\n\nexport default (operator, rig ,well, county, uSstate, grid, vsDirection) => {\n  return async (dispatch, getState) => {\n\n    dispatch({\n      type: POST_PLANS_TO_JSON_REQUESTED\n    })\n    try {\n      const wellData = {\n        operator,\n        rig,\n        well,\n        county,\n        uSstate,\n        vsDirection,\n        grid, \n        date: moment().format()\n      }\n      const response = await wells.post(`wells`, wellData)\n      dispatch({\n        type: POST_PLANS_TO_JSON_RECEIVED,\n        payload: response.data\n      })\n    } catch (error) {\n\n      dispatch({\n        type: POST_PLANS_TO_JSON_FAILED,\n        payload: error\n      })\n    }\n  }\n}\n","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getWellsFromJSONDbReducer.js",["262"],"import { GET_WELLS_FROM_JSON_REQUESTED,\n  GET_WELLS_FROM_JSON_RECEIVED,\n  GET_WELLS_FROM_JSON_FAILED } from \"../ActionCreators/types\"\n\n  const INITIAL_STATE = {\n    response: {},\n    status: \"\"\n  }\n\n  export default (state = INITIAL_STATE, {type, payload}) => {\n    switch (type) {\n      case GET_WELLS_FROM_JSON_REQUESTED:\n        return {...state, status: \"waiting\"}\n      case GET_WELLS_FROM_JSON_RECEIVED:\n        return {...state, response: payload, status: \"received\"}    \n      case GET_WELLS_FROM_JSON_FAILED:\n        return {...state, response: payload, status: \"failed\"}\n      default:\n        return state\n    }\n  }","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/index.js",[],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/postWellInfoToJSONDbReducer.js",["263"],"import { POST_WELLINFO_TO_JSONDB_REQUESTED,\n  POST_WELLINFO_TO_JSONDB_RECEIVED,\n  POST_WELLINFO_TO_JSONDB_FAILED } from \"../ActionCreators/types\"\n\nconst INITIAL_STATE = {\n  response: {},\n  status: \"\"\n}\n\nexport default (state = INITIAL_STATE, {type, payload}) => {\n  switch (type) {\n    case POST_WELLINFO_TO_JSONDB_REQUESTED:\n      return {...state, status: \"waiting\"}\n    case POST_WELLINFO_TO_JSONDB_RECEIVED:\n      return {...state, response: payload, status: \"received\"}\n    case POST_WELLINFO_TO_JSONDB_FAILED:\n      return {...state, response: payload, status: \"failed\"}\n    default:\n      return state;\n  }\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getWellPlansFromJSONDbReducer.js",["264"],"import { GET_WELL_PLANS_FROM_JSONDB_REQUESTED, \n  GET_WELL_PLANS_FROM_JSONDB_RECEIVED,\n  GET_WELL_PLANS_FROM_JSONDB_FAILED} from \"../ActionCreators/types\"\n\n\nconst INITIAL_STATE = {\n  response: {},\n  status: \"\"\n}\n\nexport default (state = INITIAL_STATE, {type, payload}) => {\n  \n  switch (type) {\n    case GET_WELL_PLANS_FROM_JSONDB_REQUESTED:\n      return {...state, status: \"waiting\"}\n    case GET_WELL_PLANS_FROM_JSONDB_RECEIVED:\n      return {...state, response: payload, status: \"received\"}\n    case GET_WELL_PLANS_FROM_JSONDB_FAILED:\n      return {...state, response: payload, status: \"failed\"}\n    default:\n      return state\n  }\n}\n","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/DLC.js",["265"],"export default (inclinationPrior, inclinationCurrent, azimuthPrior, azimuthCurrent) => {\n  const converter = Math.PI/180;\n  const converter2 = 0.00000001;\n\n  return (\n    Math.acos(\n      (\n        Math.cos(inclinationPrior*converter)*Math.cos(inclinationCurrent*converter)\n      )\n      +\n      (\n        Math.sin(inclinationPrior*converter)*Math.sin(inclinationCurrent*converter)*Math.cos((azimuthCurrent-azimuthPrior)*converter-converter2)\n      )\n    )\n  )\n}",["266","267"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/APIs/LeaseLines.js",[],["268","269"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/NS.js",["270"],"import DLC from \"./DLC\"\nimport RF from \"./RF\"\n\nexport default (measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior, inclinationPrior, azimuthPrior, calculatedNorthingPrior) => {\n  const converter = (Math.PI)/180;\n  const converter2 = 0.00000001;\n\n  const calculatedDLC = DLC(inclinationPrior, inclinationCurrent, azimuthPrior, azimuthCurrent)\n\n  const calculatedRF = RF(measuredDepthPrior, measuredDepthCurrent, calculatedDLC)\n\n  const calculatedNorthingCurrent = (calculatedNorthingPrior+converter2) + calculatedRF * (Math.sin(inclinationPrior*converter)*Math.cos(azimuthPrior*converter)+ Math.sin(inclinationCurrent * converter) * Math.cos(azimuthCurrent*converter));\n\n  return (\n    parseFloat(calculatedNorthingCurrent.toFixed(2))\n\n  )\n} ","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/App.js",["271","272"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/TVD.js",["273"],"import DLC from \"./DLC\"\nimport RF from \"./RF\"\n\nexport default (measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior, inclinationPrior, azimuthPrior, calculatedTVDPrior) => {\n  const converter = (Math.PI)/180\n\n  const calculatedDLC = DLC(inclinationPrior, inclinationCurrent, azimuthPrior, azimuthCurrent)\n\n  const calculatedRF = RF(measuredDepthPrior, measuredDepthCurrent, calculatedDLC)\n\n  const calculatedTVDCurrent = calculatedTVDPrior + calculatedRF * (Math.cos(inclinationPrior*converter) + Math.cos(inclinationCurrent*converter));\n\n  return (\n    parseFloat(calculatedTVDCurrent.toFixed(2))\n  )\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getLeaseLinesFromJSONDbReducer.js",["274"],"import { GET_LEASE_LINES_FROM_JSONDB_REQUESTED,\n  GET_LEASE_LINES_FROM_JSONDB_RECEIVED,\n  GET_LEASE_LINES_FROM_JSONDB_FAILED } from \"../ActionCreators/types\"\n\nconst INITIAL_STATE = {\n  response: {},\n  status: \"\"\n}\n\nexport default (state = INITIAL_STATE, {type, payload}) => {\n  switch (type) {\n    case GET_LEASE_LINES_FROM_JSONDB_REQUESTED:\n      return {...state, status: \"waiting\"}\n    case GET_LEASE_LINES_FROM_JSONDB_RECEIVED:\n      return {...state, response: payload, status: \"received\"}\n    case GET_LEASE_LINES_FROM_JSONDB_FAILED:\n      return {...state, response: payload, status: \"failed\"}\n    default:\n      return state\n  }\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/ExistingLeaseLines.js",["275","276","277","278","279","280","281","282","283"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getLeaseLinesFromJSONDb.js",["284"],"import {GET_LEASE_LINES_FROM_JSONDB_REQUESTED,\n  GET_LEASE_LINES_FROM_JSONDB_RECEIVED,\n  GET_LEASE_LINES_FROM_JSONDB_FAILED} from \"./types\"\nimport wells from \"../APIs/wells\"\n  export default (selectedWell, getState) => {\n    console.log(selectedWell)\n    return async dispatch => {\n      dispatch({\n        type: GET_LEASE_LINES_FROM_JSONDB_REQUESTED\n      })\n      try {\n        let result = null;\n        const response = await wells.get(\"LeaseLines\")\n        const listOfWells = response.data\n        console.log(listOfWells)\n        const selectedWellConvertedToArray = selectedWell.split(\"-\").map(word => word.trim())\n        const selectedWellOperator = selectedWellConvertedToArray[0]\n        const selectedWell_Well = selectedWellConvertedToArray[2]\n        for (let well in listOfWells) {\n          if (listOfWells[well].operator === selectedWellOperator && listOfWells[well].well === selectedWell_Well) {\n            result = [...listOfWells[well].grid]\n          }\n        }\n        dispatch({\n          type: GET_LEASE_LINES_FROM_JSONDB_RECEIVED,\n          payload: result\n        })\n      } catch (error) {\n        dispatch({\n          type: GET_LEASE_LINES_FROM_JSONDB_FAILED,\n          payload: error\n        })\n      }\n    }\n  }","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/PVA.js",["285"],"import React from \"react\"\nimport Container from \"react-bootstrap/Container\"\nimport Plot from 'react-plotly.js';\nimport { connect } from \"react-redux\"\nimport _ from \"lodash\"\nimport savePlansToReduxStore from \"../ActionCreators/savePlansToReduxStore\"\nimport saveLeaseLinesToReduxStore from \"../ActionCreators/saveLeaseLinesToReduxStore\"\nimport saveWellInfoToReduxStore from \"../ActionCreators/saveWellInfoToReduxStore\"\n\nconst PVA = ({savePlansToReduxStoreReducer, saveLeaseLinesToReduxStoreReducer, activeWell}) => {\n  // const createEastingCoordinates = (data, polyLine = false) => {\n  //   if (polyLine) {\n  //     if (Object.keys(data).length === 0) {\n  //       return []\n  //     } else {\n  //       const eastingCoordinates = []\n  //       data.map((row, index) => {\n  //         if (index === 0 || index === 1) {\n\n  //         } else {\n  //           const x = data[index][2].value\n  //           eastingCoordinates.push(x)\n  //         }\n  //       })\n  //       return eastingCoordinates\n  //     }\n  //   } else {\n  //     if (Object.keys(data).length === 0) {\n  //       return []\n  //     } else {\n  //       const eastingCoordinates = []\n  //       data.map((row, index) => {\n  //         if (index === 0) {\n\n  //         } else {\n  //           const x = data[index][6].value\n  //           eastingCoordinates.push(x)\n  //         }\n  //       })\n  //       return eastingCoordinates\n  //     }\n  //   }\n  // }  \n  \n  // const createNorthingCoordinates = (data, polyLine = false) => {\n  //   if (polyLine) {\n  //     if (Object.keys(data).length === 0) {\n  //       return []\n  //     } else {\n  //       const northingCoordinates = []\n  //       northingCoordinates = data.map((row, index) => {\n  //         if (index === 0 || index === 1) {\n\n  //         } else {\n  //           return data[index][5]\n            \n  //         }\n  //       })\n  //       return northingCoordinates\n  //     }\n  //   }\n  // }\n\n  const createEastingCoordinates = (polyLine = false, data) => {\n    if (polyLine) {\n      if (data.length === 0) {\n        return []\n      } else {\n        return data.slice(1).filter((row, index) => index !== 0)\n          .map((row, index) => data[index][2])\n      }\n    } else {\n        if (data.length === 0) {\n          return []\n        } else {\n          return data.slice(1).filter((row, index) => index !== 0)\n            .map((row, index) => data[index][6])\n        }\n      }\n    } \n\n    const createNorthingCoordinates = (polyLine = false, data) => {\n      if (polyLine) {\n        if (data.length === 0) {\n          return []\n        } else {\n          return data.slice(1).filter((row, index) => index !== 0)\n            .map((row, index) => data[index][1])\n        }\n      } else {\n          if (data.length === 0) {\n            return []\n          } else {\n            return data.slice(1).filter((row, index) => index !== 0)\n              .map((row, index) => data[index][5])\n          }\n        }\n      } \n\n  const renderPlanView = () => {\n    // if (\n    //   Object.keys(savePlansToReduxStoreReducer.response).length === 0 && Object.keys(save)\n    // )\n    return (\n      <Plot\n        data={[\n          {\n            x: createEastingCoordinates(savePlansToReduxStoreReducer.response),\n            y: createNorthingCoordinates(savePlansToReduxStoreReducer.response),\n            type: \"scatter\",\n            mode: \"lines+markers\",\n            marker: {color: \"blue\"},\n            name: \"Plan\"\n          },\n          {\n            x: createEastingCoordinates(true, saveLeaseLinesToReduxStoreReducer.response),\n            y: createNorthingCoordinates(true, saveLeaseLinesToReduxStoreReducer.response),\n            type: \"scatter\",\n            mode: \"lines+markers\",\n            marker: {color: \"blue\"},\n            name: \"Lease Lines\"\n          }\n        ]}\n        layout = { {width: 1000, height: 800, title: 'Section View'} }\n        />\n    )\n  }\n\n  return (\n    <Container>\n      {renderPlanView()}\n    </Container>\n  )\n\n}\n\nconst mapStateToProps = ({savePlansToReduxStoreReducer, saveLeaseLinesToReduxStoreReducer, activeWell}) => {\n  return {\n    savePlansToReduxStoreReducer, \n    saveLeaseLinesToReduxStoreReducer, \n    activeWell\n  }\n}\n\nexport default connect(mapStateToProps, { savePlansToReduxStore, saveLeaseLinesToReduxStore, saveWellInfoToReduxStore })(PVA)","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/ExistingPVA.js",["286","287","288","289","290","291","292","293"],{"ruleId":"294","severity":1,"message":"295","line":1,"column":27,"nodeType":"296","messageId":"297","endLine":1,"endColumn":36},{"ruleId":"294","severity":1,"message":"298","line":4,"column":8,"nodeType":"296","messageId":"297","endLine":4,"endColumn":12},{"ruleId":"299","replacedBy":"300"},{"ruleId":"301","replacedBy":"302"},{"ruleId":"303","severity":1,"message":"304","line":7,"column":3,"nodeType":"305","endLine":25,"endColumn":4},{"ruleId":"303","severity":1,"message":"304","line":5,"column":1,"nodeType":"305","endLine":22,"endColumn":2},{"ruleId":"299","replacedBy":"306"},{"ruleId":"301","replacedBy":"307"},{"ruleId":"299","replacedBy":"308"},{"ruleId":"301","replacedBy":"309"},{"ruleId":"294","severity":1,"message":"298","line":5,"column":8,"nodeType":"296","messageId":"297","endLine":5,"endColumn":12},{"ruleId":"294","severity":1,"message":"310","line":6,"column":8,"nodeType":"296","messageId":"297","endLine":6,"endColumn":11},{"ruleId":"294","severity":1,"message":"311","line":7,"column":8,"nodeType":"296","messageId":"297","endLine":7,"endColumn":11},{"ruleId":"294","severity":1,"message":"312","line":8,"column":8,"nodeType":"296","messageId":"297","endLine":8,"endColumn":14},{"ruleId":"294","severity":1,"message":"313","line":16,"column":10,"nodeType":"296","messageId":"297","endLine":16,"endColumn":14},{"ruleId":"294","severity":1,"message":"314","line":16,"column":16,"nodeType":"296","messageId":"297","endLine":16,"endColumn":23},{"ruleId":"315","severity":1,"message":"316","line":23,"column":5,"nodeType":"317","endLine":23,"endColumn":43,"suggestions":"318"},{"ruleId":"294","severity":1,"message":"319","line":40,"column":9,"nodeType":"296","messageId":"297","endLine":40,"endColumn":18},{"ruleId":"294","severity":1,"message":"320","line":42,"column":7,"nodeType":"296","messageId":"297","endLine":42,"endColumn":20},{"ruleId":"303","severity":1,"message":"304","line":11,"column":1,"nodeType":"305","endLine":22,"endColumn":2},{"ruleId":"303","severity":1,"message":"304","line":10,"column":1,"nodeType":"305","endLine":21,"endColumn":2},{"ruleId":"299","replacedBy":"321"},{"ruleId":"301","replacedBy":"322"},{"ruleId":"294","severity":1,"message":"323","line":1,"column":10,"nodeType":"296","messageId":"297","endLine":1,"endColumn":17},{"ruleId":"303","severity":1,"message":"304","line":11,"column":1,"nodeType":"305","endLine":22,"endColumn":2},{"ruleId":"303","severity":1,"message":"304","line":6,"column":1,"nodeType":"305","endLine":24,"endColumn":2},{"ruleId":"299","replacedBy":"324"},{"ruleId":"301","replacedBy":"325"},{"ruleId":"303","severity":1,"message":"304","line":5,"column":3,"nodeType":"305","endLine":23,"endColumn":5},{"ruleId":"303","severity":1,"message":"304","line":8,"column":1,"nodeType":"305","endLine":26,"endColumn":2},{"ruleId":"299","replacedBy":"326"},{"ruleId":"301","replacedBy":"327"},{"ruleId":"303","severity":1,"message":"304","line":4,"column":1,"nodeType":"305","endLine":30,"endColumn":3},{"ruleId":"303","severity":1,"message":"304","line":3,"column":1,"nodeType":"305","endLine":15,"endColumn":2},{"ruleId":"299","replacedBy":"328"},{"ruleId":"301","replacedBy":"329"},{"ruleId":"294","severity":1,"message":"330","line":12,"column":8,"nodeType":"296","messageId":"297","endLine":12,"endColumn":9},{"ruleId":"315","severity":1,"message":"331","line":39,"column":6,"nodeType":"317","endLine":39,"endColumn":8,"suggestions":"332"},{"ruleId":"294","severity":1,"message":"333","line":43,"column":9,"nodeType":"296","messageId":"297","endLine":43,"endColumn":22},{"ruleId":"294","severity":1,"message":"334","line":27,"column":10,"nodeType":"296","messageId":"297","endLine":27,"endColumn":18},{"ruleId":"294","severity":1,"message":"335","line":27,"column":20,"nodeType":"296","messageId":"297","endLine":27,"endColumn":31},{"ruleId":"315","severity":1,"message":"336","line":52,"column":6,"nodeType":"317","endLine":52,"endColumn":8,"suggestions":"337"},{"ruleId":"294","severity":1,"message":"338","line":54,"column":9,"nodeType":"296","messageId":"297","endLine":54,"endColumn":28},{"ruleId":"339","severity":1,"message":"340","line":55,"column":27,"nodeType":"341","messageId":"342","endLine":55,"endColumn":29},{"ruleId":"303","severity":1,"message":"304","line":10,"column":3,"nodeType":"305","endLine":22,"endColumn":5},{"ruleId":"303","severity":1,"message":"304","line":9,"column":1,"nodeType":"305","endLine":20,"endColumn":2},{"ruleId":"303","severity":1,"message":"304","line":11,"column":1,"nodeType":"305","endLine":22,"endColumn":2},{"ruleId":"303","severity":1,"message":"304","line":6,"column":1,"nodeType":"305","endLine":24,"endColumn":2},{"ruleId":"294","severity":1,"message":"343","line":1,"column":10,"nodeType":"296","messageId":"297","endLine":1,"endColumn":13},{"ruleId":"294","severity":1,"message":"344","line":2,"column":8,"nodeType":"296","messageId":"297","endLine":2,"endColumn":13},{"ruleId":"294","severity":1,"message":"345","line":3,"column":8,"nodeType":"296","messageId":"297","endLine":3,"endColumn":26},{"ruleId":"303","severity":1,"message":"304","line":8,"column":1,"nodeType":"305","endLine":37,"endColumn":2},{"ruleId":"346","severity":1,"message":"347","line":21,"column":37,"nodeType":"348","messageId":"349","endLine":21,"endColumn":39},{"ruleId":"346","severity":1,"message":"347","line":21,"column":84,"nodeType":"348","messageId":"349","endLine":21,"endColumn":86},{"ruleId":"303","severity":1,"message":"304","line":4,"column":1,"nodeType":"305","endLine":17,"endColumn":2},{"ruleId":"303","severity":1,"message":"304","line":1,"column":1,"nodeType":"305","endLine":7,"endColumn":2},{"ruleId":"299","replacedBy":"350"},{"ruleId":"301","replacedBy":"351"},{"ruleId":"303","severity":1,"message":"304","line":7,"column":3,"nodeType":"305","endLine":30,"endColumn":5},{"ruleId":"294","severity":1,"message":"352","line":13,"column":13,"nodeType":"296","messageId":"297","endLine":13,"endColumn":21},{"ruleId":"303","severity":1,"message":"304","line":9,"column":1,"nodeType":"305","endLine":39,"endColumn":2},{"ruleId":"303","severity":1,"message":"304","line":10,"column":3,"nodeType":"305","endLine":21,"endColumn":4},{"ruleId":"303","severity":1,"message":"304","line":10,"column":1,"nodeType":"305","endLine":21,"endColumn":2},{"ruleId":"303","severity":1,"message":"304","line":11,"column":1,"nodeType":"305","endLine":23,"endColumn":2},{"ruleId":"303","severity":1,"message":"304","line":1,"column":1,"nodeType":"305","endLine":16,"endColumn":2},{"ruleId":"299","replacedBy":"353"},{"ruleId":"301","replacedBy":"354"},{"ruleId":"299","replacedBy":"355"},{"ruleId":"301","replacedBy":"356"},{"ruleId":"303","severity":1,"message":"304","line":4,"column":1,"nodeType":"305","endLine":18,"endColumn":2},{"ruleId":"294","severity":1,"message":"357","line":18,"column":8,"nodeType":"296","messageId":"297","endLine":18,"endColumn":29},{"ruleId":"294","severity":1,"message":"358","line":20,"column":8,"nodeType":"296","messageId":"297","endLine":20,"endColumn":19},{"ruleId":"303","severity":1,"message":"304","line":4,"column":1,"nodeType":"305","endLine":16,"endColumn":2},{"ruleId":"303","severity":1,"message":"304","line":10,"column":1,"nodeType":"305","endLine":21,"endColumn":2},{"ruleId":"294","severity":1,"message":"298","line":5,"column":8,"nodeType":"296","messageId":"297","endLine":5,"endColumn":12},{"ruleId":"294","severity":1,"message":"310","line":6,"column":8,"nodeType":"296","messageId":"297","endLine":6,"endColumn":11},{"ruleId":"294","severity":1,"message":"311","line":7,"column":8,"nodeType":"296","messageId":"297","endLine":7,"endColumn":11},{"ruleId":"294","severity":1,"message":"312","line":8,"column":8,"nodeType":"296","messageId":"297","endLine":8,"endColumn":14},{"ruleId":"294","severity":1,"message":"343","line":12,"column":10,"nodeType":"296","messageId":"297","endLine":12,"endColumn":13},{"ruleId":"294","severity":1,"message":"359","line":15,"column":10,"nodeType":"296","messageId":"297","endLine":15,"endColumn":20},{"ruleId":"294","severity":1,"message":"313","line":16,"column":10,"nodeType":"296","messageId":"297","endLine":16,"endColumn":14},{"ruleId":"294","severity":1,"message":"314","line":16,"column":16,"nodeType":"296","messageId":"297","endLine":16,"endColumn":23},{"ruleId":"315","severity":1,"message":"360","line":23,"column":5,"nodeType":"317","endLine":23,"endColumn":44,"suggestions":"361"},{"ruleId":"303","severity":1,"message":"304","line":5,"column":3,"nodeType":"305","endLine":35,"endColumn":4},{"ruleId":"294","severity":1,"message":"330","line":5,"column":8,"nodeType":"296","messageId":"297","endLine":5,"endColumn":9},{"ruleId":"294","severity":1,"message":"295","line":1,"column":17,"nodeType":"296","messageId":"297","endLine":1,"endColumn":26},{"ruleId":"294","severity":1,"message":"362","line":1,"column":28,"nodeType":"296","messageId":"297","endLine":1,"endColumn":36},{"ruleId":"294","severity":1,"message":"298","line":5,"column":8,"nodeType":"296","messageId":"297","endLine":5,"endColumn":12},{"ruleId":"294","severity":1,"message":"310","line":6,"column":8,"nodeType":"296","messageId":"297","endLine":6,"endColumn":11},{"ruleId":"294","severity":1,"message":"311","line":7,"column":8,"nodeType":"296","messageId":"297","endLine":7,"endColumn":11},{"ruleId":"294","severity":1,"message":"312","line":8,"column":8,"nodeType":"296","messageId":"297","endLine":8,"endColumn":14},{"ruleId":"294","severity":1,"message":"363","line":11,"column":8,"nodeType":"296","messageId":"297","endLine":11,"endColumn":22},{"ruleId":"294","severity":1,"message":"364","line":52,"column":9,"nodeType":"296","messageId":"297","endLine":52,"endColumn":23},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","no-native-reassign",["365"],"no-negated-in-lhs",["366"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["365"],["366"],["365"],["366"],"'Row' is defined but never used.","'Col' is defined but never used.","'Button' is defined but never used.","'grid' is assigned a value but never used.","'setGrid' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getWellPlansFromJSONDbReducer.response'. Either include it or remove the dependency array.","ArrayExpression",["367"],"'plansCopy' is assigned a value but never used.","'gridFromPlans' is assigned a value but never used.",["365"],["366"],"'initial' is defined but never used.",["365"],["366"],["365"],["366"],["365"],["366"],"'_' is defined but never used.","React Hook useEffect has a missing dependency: 'getWellsFromJSONDb'. Either include it or remove the dependency array.",["368"],"'renderedWells' is defined but never used.","'editGrid' is assigned a value but never used.","'setEditGrid' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleAddRows'. Either include it or remove the dependency array.",["369"],"'performCalculations' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'get' is defined but never used.","'wells' is defined but never used.","'getWellsFromJSONDb' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["365"],["366"],"'response' is assigned a value but never used.",["365"],["366"],["365"],["366"],"'savePlansToReduxStore' is defined but never used.","'ExistingPVA' is defined but never used.","'leaseLines' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getLeaseLinesFromJSONDbReducer.response'. Either include it or remove the dependency array.",["370"],"'useState' is defined but never used.","'ReactDataSheet' is defined but never used.","'renderPlanView' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"371","fix":"372"},{"desc":"373","fix":"374"},{"desc":"375","fix":"376"},{"desc":"377","fix":"378"},"Update the dependencies array to be: [getWellPlansFromJSONDbReducer.response, getWellPlansFromJSONDbReducer.status]",{"range":"379","text":"380"},"Update the dependencies array to be: [getWellsFromJSONDb]",{"range":"381","text":"382"},"Update the dependencies array to be: [handleAddRows]",{"range":"383","text":"384"},"Update the dependencies array to be: [getLeaseLinesFromJSONDbReducer.response, getLeaseLinesFromJSONDbReducer.status]",{"range":"385","text":"386"},[838,876],"[getWellPlansFromJSONDbReducer.response, getWellPlansFromJSONDbReducer.status]",[1775,1777],"[getWellsFromJSONDb]",[2703,2705],"[handleAddRows]",[821,860],"[getLeaseLinesFromJSONDbReducer.response, getLeaseLinesFromJSONDbReducer.status]"]