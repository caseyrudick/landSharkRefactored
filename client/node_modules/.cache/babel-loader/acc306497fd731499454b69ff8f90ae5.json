{"ast":null,"code":"\"use strict\";\n\nfunction compileSearch(funcName, predicate, reversed, extraArgs, earlyOut) {\n  var code = [\"function \", funcName, \"(a,l,h,\", extraArgs.join(\",\"), \"){\", earlyOut ? \"\" : \"var i=\", reversed ? \"l-1\" : \"h+1\", \";while(l<=h){var m=(l+h)>>>1,x=a[m]\"];\n\n  if (earlyOut) {\n    if (predicate.indexOf(\"c\") < 0) {\n      code.push(\";if(x===y){return m}else if(x<=y){\");\n    } else {\n      code.push(\";var p=c(x,y);if(p===0){return m}else if(p<=0){\");\n    }\n  } else {\n    code.push(\";if(\", predicate, \"){i=m;\");\n  }\n\n  if (reversed) {\n    code.push(\"l=m+1}else{h=m-1}\");\n  } else {\n    code.push(\"h=m-1}else{l=m+1}\");\n  }\n\n  code.push(\"}\");\n\n  if (earlyOut) {\n    code.push(\"return -1};\");\n  } else {\n    code.push(\"return i};\");\n  }\n\n  return code.join(\"\");\n}\n\nfunction compileBoundsSearch(predicate, reversed, suffix, earlyOut) {\n  var result = new Function([compileSearch(\"A\", \"x\" + predicate + \"y\", reversed, [\"y\"], earlyOut), compileSearch(\"P\", \"c(x,y)\" + predicate + \"0\", reversed, [\"y\", \"c\"], earlyOut), \"function dispatchBsearch\", suffix, \"(a,y,c,l,h){\\\nif(typeof(c)==='function'){\\\nreturn P(a,(l===void 0)?0:l|0,(h===void 0)?a.length-1:h|0,y,c)\\\n}else{\\\nreturn A(a,(c===void 0)?0:c|0,(l===void 0)?a.length-1:l|0,y)\\\n}}\\\nreturn dispatchBsearch\", suffix].join(\"\"));\n  return result();\n}\n\nmodule.exports = {\n  ge: compileBoundsSearch(\">=\", false, \"GE\"),\n  gt: compileBoundsSearch(\">\", false, \"GT\"),\n  lt: compileBoundsSearch(\"<\", true, \"LT\"),\n  le: compileBoundsSearch(\"<=\", true, \"LE\"),\n  eq: compileBoundsSearch(\"-\", true, \"EQ\", true)\n};","map":{"version":3,"sources":["/Users/caseyrudick/Documents/landsharkrefactored-copy/client/node_modules/binary-search-bounds/search-bounds.js"],"names":["compileSearch","funcName","predicate","reversed","extraArgs","earlyOut","code","join","indexOf","push","compileBoundsSearch","suffix","result","Function","module","exports","ge","gt","lt","le","eq"],"mappings":"AAAA;;AAEA,SAASA,aAAT,CAAuBC,QAAvB,EAAiCC,SAAjC,EAA4CC,QAA5C,EAAsDC,SAAtD,EAAiEC,QAAjE,EAA2E;AACzE,MAAIC,IAAI,GAAG,CACT,WADS,EACIL,QADJ,EACc,SADd,EACyBG,SAAS,CAACG,IAAV,CAAe,GAAf,CADzB,EAC+C,IAD/C,EAETF,QAAQ,GAAG,EAAH,GAAQ,QAFP,EAEkBF,QAAQ,GAAG,KAAH,GAAW,KAFrC,EAGT,qCAHS,CAAX;;AAIA,MAAGE,QAAH,EAAa;AACX,QAAGH,SAAS,CAACM,OAAV,CAAkB,GAAlB,IAAyB,CAA5B,EAA+B;AAC7BF,MAAAA,IAAI,CAACG,IAAL,CAAU,oCAAV;AACD,KAFD,MAEO;AACLH,MAAAA,IAAI,CAACG,IAAL,CAAU,iDAAV;AACD;AACF,GAND,MAMO;AACLH,IAAAA,IAAI,CAACG,IAAL,CAAU,MAAV,EAAkBP,SAAlB,EAA6B,QAA7B;AACD;;AACD,MAAGC,QAAH,EAAa;AACXG,IAAAA,IAAI,CAACG,IAAL,CAAU,mBAAV;AACD,GAFD,MAEO;AACLH,IAAAA,IAAI,CAACG,IAAL,CAAU,mBAAV;AACD;;AACDH,EAAAA,IAAI,CAACG,IAAL,CAAU,GAAV;;AACA,MAAGJ,QAAH,EAAa;AACXC,IAAAA,IAAI,CAACG,IAAL,CAAU,aAAV;AACD,GAFD,MAEO;AACLH,IAAAA,IAAI,CAACG,IAAL,CAAU,YAAV;AACD;;AACD,SAAOH,IAAI,CAACC,IAAL,CAAU,EAAV,CAAP;AACD;;AAED,SAASG,mBAAT,CAA6BR,SAA7B,EAAwCC,QAAxC,EAAkDQ,MAAlD,EAA0DN,QAA1D,EAAoE;AAClE,MAAIO,MAAM,GAAG,IAAIC,QAAJ,CAAa,CAC1Bb,aAAa,CAAC,GAAD,EAAM,MAAME,SAAN,GAAkB,GAAxB,EAA6BC,QAA7B,EAAuC,CAAC,GAAD,CAAvC,EAA8CE,QAA9C,CADa,EAE1BL,aAAa,CAAC,GAAD,EAAM,WAAWE,SAAX,GAAuB,GAA7B,EAAkCC,QAAlC,EAA4C,CAAC,GAAD,EAAM,GAAN,CAA5C,EAAwDE,QAAxD,CAFa,EAG5B,0BAH4B,EAGAM,MAHA,EAGQ;AACpC;AACA;AACA;AACA;AACA;AACA,uBAT4B,EASHA,MATG,EASKJ,IATL,CASU,EATV,CAAb,CAAb;AAUA,SAAOK,MAAM,EAAb;AACD;;AAEDE,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,EAAE,EAAEN,mBAAmB,CAAC,IAAD,EAAO,KAAP,EAAe,IAAf,CADR;AAEfO,EAAAA,EAAE,EAAEP,mBAAmB,CAAC,GAAD,EAAO,KAAP,EAAe,IAAf,CAFR;AAGfQ,EAAAA,EAAE,EAAER,mBAAmB,CAAC,GAAD,EAAO,IAAP,EAAe,IAAf,CAHR;AAIfS,EAAAA,EAAE,EAAET,mBAAmB,CAAC,IAAD,EAAO,IAAP,EAAe,IAAf,CAJR;AAKfU,EAAAA,EAAE,EAAEV,mBAAmB,CAAC,GAAD,EAAO,IAAP,EAAe,IAAf,EAAqB,IAArB;AALR,CAAjB","sourcesContent":["\"use strict\"\n\nfunction compileSearch(funcName, predicate, reversed, extraArgs, earlyOut) {\n  var code = [\n    \"function \", funcName, \"(a,l,h,\", extraArgs.join(\",\"),  \"){\",\n    earlyOut ? \"\" : \"var i=\", (reversed ? \"l-1\" : \"h+1\"),\n    \";while(l<=h){var m=(l+h)>>>1,x=a[m]\"]\n  if(earlyOut) {\n    if(predicate.indexOf(\"c\") < 0) {\n      code.push(\";if(x===y){return m}else if(x<=y){\")\n    } else {\n      code.push(\";var p=c(x,y);if(p===0){return m}else if(p<=0){\")\n    }\n  } else {\n    code.push(\";if(\", predicate, \"){i=m;\")\n  }\n  if(reversed) {\n    code.push(\"l=m+1}else{h=m-1}\")\n  } else {\n    code.push(\"h=m-1}else{l=m+1}\")\n  }\n  code.push(\"}\")\n  if(earlyOut) {\n    code.push(\"return -1};\")\n  } else {\n    code.push(\"return i};\")\n  }\n  return code.join(\"\")\n}\n\nfunction compileBoundsSearch(predicate, reversed, suffix, earlyOut) {\n  var result = new Function([\n  compileSearch(\"A\", \"x\" + predicate + \"y\", reversed, [\"y\"], earlyOut),\n  compileSearch(\"P\", \"c(x,y)\" + predicate + \"0\", reversed, [\"y\", \"c\"], earlyOut),\n\"function dispatchBsearch\", suffix, \"(a,y,c,l,h){\\\nif(typeof(c)==='function'){\\\nreturn P(a,(l===void 0)?0:l|0,(h===void 0)?a.length-1:h|0,y,c)\\\n}else{\\\nreturn A(a,(c===void 0)?0:c|0,(l===void 0)?a.length-1:l|0,y)\\\n}}\\\nreturn dispatchBsearch\", suffix].join(\"\"))\n  return result()\n}\n\nmodule.exports = {\n  ge: compileBoundsSearch(\">=\", false,  \"GE\"),\n  gt: compileBoundsSearch(\">\",  false,  \"GT\"),\n  lt: compileBoundsSearch(\"<\",  true,   \"LT\"),\n  le: compileBoundsSearch(\"<=\", true,   \"LE\"),\n  eq: compileBoundsSearch(\"-\",  true,   \"EQ\", true)\n}\n"]},"metadata":{},"sourceType":"script"}