{"ast":null,"code":"/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar Axes = require('../../plots/cartesian/axes');\n\nvar alignPeriod = require('../../plots/cartesian/align_period');\n\nvar mergeArray = require('../../lib').mergeArray;\n\nvar calcSelection = require('../scatter/calc_selection');\n\nvar BADNUM = require('../../constants/numerical').BADNUM;\n\nfunction isAbsolute(a) {\n  return a === 'a' || a === 'absolute';\n}\n\nfunction isTotal(a) {\n  return a === 't' || a === 'total';\n}\n\nmodule.exports = function calc(gd, trace) {\n  var xa = Axes.getFromId(gd, trace.xaxis || 'x');\n  var ya = Axes.getFromId(gd, trace.yaxis || 'y');\n  var size, pos, origPos;\n  var hasPeriod;\n\n  if (trace.orientation === 'h') {\n    size = xa.makeCalcdata(trace, 'x');\n    origPos = ya.makeCalcdata(trace, 'y');\n    pos = alignPeriod(trace, ya, 'y', origPos);\n    hasPeriod = !!trace.yperiodalignment;\n  } else {\n    size = ya.makeCalcdata(trace, 'y');\n    origPos = xa.makeCalcdata(trace, 'x');\n    pos = alignPeriod(trace, xa, 'x', origPos);\n    hasPeriod = !!trace.xperiodalignment;\n  } // create the \"calculated data\" to plot\n\n\n  var serieslen = Math.min(pos.length, size.length);\n  var cd = new Array(serieslen); // set position and size (as well as for waterfall total size)\n\n  var previousSum = 0;\n  var newSize; // trace-wide flags\n\n  var hasTotals = false;\n\n  for (var i = 0; i < serieslen; i++) {\n    var amount = size[i] || 0;\n    var connectToNext = false;\n\n    if (size[i] !== BADNUM || isTotal(trace.measure[i]) || isAbsolute(trace.measure[i])) {\n      if (i + 1 < serieslen && (size[i + 1] !== BADNUM || isTotal(trace.measure[i + 1]) || isAbsolute(trace.measure[i + 1]))) {\n        connectToNext = true;\n      }\n    }\n\n    var cdi = cd[i] = {\n      i: i,\n      p: pos[i],\n      s: amount,\n      rawS: amount,\n      cNext: connectToNext\n    };\n\n    if (isAbsolute(trace.measure[i])) {\n      previousSum = cdi.s;\n      cdi.isSum = true;\n      cdi.dir = 'totals';\n      cdi.s = previousSum;\n    } else if (isTotal(trace.measure[i])) {\n      cdi.isSum = true;\n      cdi.dir = 'totals';\n      cdi.s = previousSum;\n    } else {\n      // default: relative\n      cdi.isSum = false;\n      cdi.dir = cdi.rawS < 0 ? 'decreasing' : 'increasing';\n      newSize = cdi.s;\n      cdi.s = previousSum + newSize;\n      previousSum += newSize;\n    }\n\n    if (cdi.dir === 'totals') {\n      hasTotals = true;\n    }\n\n    if (hasPeriod) {\n      cd[i].orig_p = origPos[i]; // used by hover\n    }\n\n    if (trace.ids) {\n      cdi.id = String(trace.ids[i]);\n    }\n\n    cdi.v = (trace.base || 0) + previousSum;\n  }\n\n  if (cd.length) cd[0].hasTotals = hasTotals;\n  mergeArray(trace.text, cd, 'tx');\n  mergeArray(trace.hovertext, cd, 'htx');\n  calcSelection(cd, trace);\n  return cd;\n};","map":{"version":3,"sources":["/Users/caseyrudick/Documents/landsharkrefactored-copy/client/node_modules/plotly.js/src/traces/waterfall/calc.js"],"names":["Axes","require","alignPeriod","mergeArray","calcSelection","BADNUM","isAbsolute","a","isTotal","module","exports","calc","gd","trace","xa","getFromId","xaxis","ya","yaxis","size","pos","origPos","hasPeriod","orientation","makeCalcdata","yperiodalignment","xperiodalignment","serieslen","Math","min","length","cd","Array","previousSum","newSize","hasTotals","i","amount","connectToNext","measure","cdi","p","s","rawS","cNext","isSum","dir","orig_p","ids","id","String","v","base","text","hovertext"],"mappings":"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","sourcesContent":["/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Axes = require('../../plots/cartesian/axes');\nvar alignPeriod = require('../../plots/cartesian/align_period');\nvar mergeArray = require('../../lib').mergeArray;\nvar calcSelection = require('../scatter/calc_selection');\nvar BADNUM = require('../../constants/numerical').BADNUM;\n\nfunction isAbsolute(a) {\n    return (a === 'a' || a === 'absolute');\n}\n\nfunction isTotal(a) {\n    return (a === 't' || a === 'total');\n}\n\nmodule.exports = function calc(gd, trace) {\n    var xa = Axes.getFromId(gd, trace.xaxis || 'x');\n    var ya = Axes.getFromId(gd, trace.yaxis || 'y');\n    var size, pos, origPos;\n\n    var hasPeriod;\n    if(trace.orientation === 'h') {\n        size = xa.makeCalcdata(trace, 'x');\n        origPos = ya.makeCalcdata(trace, 'y');\n        pos = alignPeriod(trace, ya, 'y', origPos);\n        hasPeriod = !!trace.yperiodalignment;\n    } else {\n        size = ya.makeCalcdata(trace, 'y');\n        origPos = xa.makeCalcdata(trace, 'x');\n        pos = alignPeriod(trace, xa, 'x', origPos);\n        hasPeriod = !!trace.xperiodalignment;\n    }\n\n    // create the \"calculated data\" to plot\n    var serieslen = Math.min(pos.length, size.length);\n    var cd = new Array(serieslen);\n\n    // set position and size (as well as for waterfall total size)\n    var previousSum = 0;\n    var newSize;\n    // trace-wide flags\n    var hasTotals = false;\n\n    for(var i = 0; i < serieslen; i++) {\n        var amount = size[i] || 0;\n\n        var connectToNext = false;\n        if(size[i] !== BADNUM || isTotal(trace.measure[i]) || isAbsolute(trace.measure[i])) {\n            if(i + 1 < serieslen && (size[i + 1] !== BADNUM || isTotal(trace.measure[i + 1]) || isAbsolute(trace.measure[i + 1]))) {\n                connectToNext = true;\n            }\n        }\n\n        var cdi = cd[i] = {\n            i: i,\n            p: pos[i],\n            s: amount,\n            rawS: amount,\n            cNext: connectToNext\n        };\n\n        if(isAbsolute(trace.measure[i])) {\n            previousSum = cdi.s;\n\n            cdi.isSum = true;\n            cdi.dir = 'totals';\n            cdi.s = previousSum;\n        } else if(isTotal(trace.measure[i])) {\n            cdi.isSum = true;\n            cdi.dir = 'totals';\n            cdi.s = previousSum;\n        } else {\n            // default: relative\n            cdi.isSum = false;\n            cdi.dir = cdi.rawS < 0 ? 'decreasing' : 'increasing';\n            newSize = cdi.s;\n            cdi.s = previousSum + newSize;\n            previousSum += newSize;\n        }\n\n        if(cdi.dir === 'totals') {\n            hasTotals = true;\n        }\n\n        if(hasPeriod) {\n            cd[i].orig_p = origPos[i]; // used by hover\n        }\n\n        if(trace.ids) {\n            cdi.id = String(trace.ids[i]);\n        }\n\n        cdi.v = (trace.base || 0) + previousSum;\n    }\n\n    if(cd.length) cd[0].hasTotals = hasTotals;\n\n    mergeArray(trace.text, cd, 'tx');\n    mergeArray(trace.hovertext, cd, 'htx');\n    calcSelection(cd, trace);\n\n    return cd;\n};\n"]},"metadata":{},"sourceType":"script"}