{"ast":null,"code":"/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nmodule.exports = {\n  mode: {\n    valType: 'enumerated',\n    dflt: 'afterall',\n    role: 'info',\n    values: ['immediate', 'next', 'afterall'],\n    description: ['Describes how a new animate call interacts with currently-running', 'animations. If `immediate`, current animations are interrupted and', 'the new animation is started. If `next`, the current frame is allowed', 'to complete, after which the new animation is started. If `afterall`', 'all existing frames are animated to completion before the new animation', 'is started.'].join(' ')\n  },\n  direction: {\n    valType: 'enumerated',\n    role: 'info',\n    values: ['forward', 'reverse'],\n    dflt: 'forward',\n    description: ['The direction in which to play the frames triggered by the animation call'].join(' ')\n  },\n  fromcurrent: {\n    valType: 'boolean',\n    dflt: false,\n    role: 'info',\n    description: ['Play frames starting at the current frame instead of the beginning.'].join(' ')\n  },\n  frame: {\n    duration: {\n      valType: 'number',\n      role: 'info',\n      min: 0,\n      dflt: 500,\n      description: ['The duration in milliseconds of each frame. If greater than the frame', 'duration, it will be limited to the frame duration.'].join(' ')\n    },\n    redraw: {\n      valType: 'boolean',\n      role: 'info',\n      dflt: true,\n      description: ['Redraw the plot at completion of the transition. This is desirable', 'for transitions that include properties that cannot be transitioned,', 'but may significantly slow down updates that do not require a full', 'redraw of the plot'].join(' ')\n    }\n  },\n  transition: {\n    duration: {\n      valType: 'number',\n      role: 'info',\n      min: 0,\n      dflt: 500,\n      editType: 'none',\n      description: ['The duration of the transition, in milliseconds. If equal to zero,', 'updates are synchronous.'].join(' ')\n    },\n    easing: {\n      valType: 'enumerated',\n      dflt: 'cubic-in-out',\n      values: ['linear', 'quad', 'cubic', 'sin', 'exp', 'circle', 'elastic', 'back', 'bounce', 'linear-in', 'quad-in', 'cubic-in', 'sin-in', 'exp-in', 'circle-in', 'elastic-in', 'back-in', 'bounce-in', 'linear-out', 'quad-out', 'cubic-out', 'sin-out', 'exp-out', 'circle-out', 'elastic-out', 'back-out', 'bounce-out', 'linear-in-out', 'quad-in-out', 'cubic-in-out', 'sin-in-out', 'exp-in-out', 'circle-in-out', 'elastic-in-out', 'back-in-out', 'bounce-in-out'],\n      role: 'info',\n      editType: 'none',\n      description: 'The easing function used for the transition'\n    },\n    ordering: {\n      valType: 'enumerated',\n      values: ['layout first', 'traces first'],\n      dflt: 'layout first',\n      role: 'info',\n      editType: 'none',\n      description: ['Determines whether the figure\\'s layout or traces smoothly transitions', 'during updates that make both traces and layout change.'].join(' ')\n    }\n  }\n};","map":{"version":3,"sources":["/Users/caseyrudick/Documents/landsharkrefactored-copy/client/node_modules/plotly.js/src/plots/animation_attributes.js"],"names":["module","exports","mode","valType","dflt","role","values","description","join","direction","fromcurrent","frame","duration","min","redraw","transition","editType","easing","ordering"],"mappings":"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","sourcesContent":["/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nmodule.exports = {\n    mode: {\n        valType: 'enumerated',\n        dflt: 'afterall',\n        role: 'info',\n        values: ['immediate', 'next', 'afterall'],\n        description: [\n            'Describes how a new animate call interacts with currently-running',\n            'animations. If `immediate`, current animations are interrupted and',\n            'the new animation is started. If `next`, the current frame is allowed',\n            'to complete, after which the new animation is started. If `afterall`',\n            'all existing frames are animated to completion before the new animation',\n            'is started.'\n        ].join(' ')\n    },\n    direction: {\n        valType: 'enumerated',\n        role: 'info',\n        values: ['forward', 'reverse'],\n        dflt: 'forward',\n        description: [\n            'The direction in which to play the frames triggered by the animation call'\n        ].join(' ')\n    },\n    fromcurrent: {\n        valType: 'boolean',\n        dflt: false,\n        role: 'info',\n        description: [\n            'Play frames starting at the current frame instead of the beginning.'\n        ].join(' ')\n    },\n    frame: {\n        duration: {\n            valType: 'number',\n            role: 'info',\n            min: 0,\n            dflt: 500,\n            description: [\n                'The duration in milliseconds of each frame. If greater than the frame',\n                'duration, it will be limited to the frame duration.'\n            ].join(' ')\n        },\n        redraw: {\n            valType: 'boolean',\n            role: 'info',\n            dflt: true,\n            description: [\n                'Redraw the plot at completion of the transition. This is desirable',\n                'for transitions that include properties that cannot be transitioned,',\n                'but may significantly slow down updates that do not require a full',\n                'redraw of the plot'\n            ].join(' ')\n        },\n    },\n    transition: {\n        duration: {\n            valType: 'number',\n            role: 'info',\n            min: 0,\n            dflt: 500,\n            editType: 'none',\n            description: [\n                'The duration of the transition, in milliseconds. If equal to zero,',\n                'updates are synchronous.'\n            ].join(' ')\n        },\n        easing: {\n            valType: 'enumerated',\n            dflt: 'cubic-in-out',\n            values: [\n                'linear',\n                'quad',\n                'cubic',\n                'sin',\n                'exp',\n                'circle',\n                'elastic',\n                'back',\n                'bounce',\n                'linear-in',\n                'quad-in',\n                'cubic-in',\n                'sin-in',\n                'exp-in',\n                'circle-in',\n                'elastic-in',\n                'back-in',\n                'bounce-in',\n                'linear-out',\n                'quad-out',\n                'cubic-out',\n                'sin-out',\n                'exp-out',\n                'circle-out',\n                'elastic-out',\n                'back-out',\n                'bounce-out',\n                'linear-in-out',\n                'quad-in-out',\n                'cubic-in-out',\n                'sin-in-out',\n                'exp-in-out',\n                'circle-in-out',\n                'elastic-in-out',\n                'back-in-out',\n                'bounce-in-out'\n            ],\n            role: 'info',\n            editType: 'none',\n            description: 'The easing function used for the transition'\n        },\n        ordering: {\n            valType: 'enumerated',\n            values: ['layout first', 'traces first'],\n            dflt: 'layout first',\n            role: 'info',\n            editType: 'none',\n            description: [\n                'Determines whether the figure\\'s layout or traces smoothly transitions',\n                'during updates that make both traces and layout change.'\n            ].join(' ')\n        }\n    }\n};\n"]},"metadata":{},"sourceType":"script"}