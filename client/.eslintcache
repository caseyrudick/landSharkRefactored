[{"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Components/Home.js":"1","/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/ActionCreators/types.js":"2","/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Reducers/wellsReducer.js":"3","/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Reducers/postPlansToJSONdb.js":"4","/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Reducers/selectWellFromReduxStoreReducer.js":"5","/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Components/App.js":"6","/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Components/Plans.js":"7","/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Components/ExistingWellPlans.js":"8","/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/ActionCreators/setActiveWell.js":"9","/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/ActionCreators/saveWellPlansToJSON.js":"10","/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/APIs/wells.js":"11","/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/ActionCreators/postNewWellToJSONdb.js":"12","/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/ActionCreators/saveNewWellToReduxStore.js":"13","/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Reducers/index.js":"14","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/App.js":"15","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/types.js":"16","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/Plans.js":"17","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/ExistingPlans.js":"18","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/Home.js":"19","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/saveWellInfoToReduxStore.js":"20","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/saveWellInfoToReduxStoreReducer.js":"21","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/postWellInfoToJSONDbReducer.js":"22","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/APIs/wells.js":"23","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/index.js":"24","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getWellsFromJSONDbReducer.js":"25","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getWellsFromJSONDb.js":"26","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/postWellInfoToJSONDb.js":"27","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/saveActiveWellToReduxStoreReducer.js":"28","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/saveActiveWellToReduxStore.js":"29","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/Surveys.js":"30","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/LeaseLines.js":"31","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/postPlansToJSONDbReducer.js":"32","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/postPlansToJSONDb.js":"33","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/TVD.js":"34","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/NS.js":"35","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/SECT.js":"36","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/RF.js":"37","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/savePlansToReduxStoreReducer.js":"38","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/savePlansToReduxStore.js":"39","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getWellPlansFromJSONDbReducer.js":"40","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getWellPlansFromJSONDb.js":"41","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/index.js":"42","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/DLS.js":"43","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/DLC.js":"44","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/EW.js":"45"},{"size":4248,"mtime":1607360419321,"results":"46","hashOfConfig":"47"},{"size":679,"mtime":1607360175845,"results":"48","hashOfConfig":"47"},{"size":665,"mtime":1607356185886,"results":"49","hashOfConfig":"47"},{"size":335,"mtime":1607288385754,"results":"50","hashOfConfig":"47"},{"size":310,"mtime":1607346221844,"results":"51","hashOfConfig":"47"},{"size":1457,"mtime":1607356502742,"results":"52","hashOfConfig":"47"},{"size":5185,"mtime":1607357108715,"results":"53","hashOfConfig":"47"},{"size":1824,"mtime":1607285843365,"results":"54","hashOfConfig":"47"},{"size":199,"mtime":1607052260455,"results":"55","hashOfConfig":"47"},{"size":327,"mtime":1607265174112,"results":"56","hashOfConfig":"47"},{"size":94,"mtime":1606780246113,"results":"57","hashOfConfig":"47"},{"size":259,"mtime":1607355751651,"results":"58","hashOfConfig":"47"},{"size":652,"mtime":1607360107412,"results":"59","hashOfConfig":"47"},{"size":492,"mtime":1607359728450,"results":"60","hashOfConfig":"47"},{"size":1579,"mtime":1607617347528,"results":"61","hashOfConfig":"62"},{"size":2147,"mtime":1607608880778,"results":"63","hashOfConfig":"62"},{"size":8960,"mtime":1607617493003,"results":"64","hashOfConfig":"62"},{"size":2143,"mtime":1607619314912,"results":"65","hashOfConfig":"62"},{"size":5553,"mtime":1607619401935,"results":"66","hashOfConfig":"62"},{"size":622,"mtime":1607563740710,"results":"67","hashOfConfig":"62"},{"size":705,"mtime":1607563251547,"results":"68","hashOfConfig":"62"},{"size":615,"mtime":1607486694229,"results":"69","hashOfConfig":"62"},{"size":94,"mtime":1606780246113,"results":"70","hashOfConfig":"62"},{"size":872,"mtime":1607607802217,"results":"71","hashOfConfig":"62"},{"size":626,"mtime":1607538953582,"results":"72","hashOfConfig":"62"},{"size":555,"mtime":1607387052358,"results":"73","hashOfConfig":"62"},{"size":835,"mtime":1607431605353,"results":"74","hashOfConfig":"62"},{"size":590,"mtime":1607486696124,"results":"75","hashOfConfig":"62"},{"size":303,"mtime":1607444760741,"results":"76","hashOfConfig":"62"},{"size":5960,"mtime":1607485977688,"results":"77","hashOfConfig":"62"},{"size":5633,"mtime":1607485639431,"results":"78","hashOfConfig":"62"},{"size":584,"mtime":1607528546735,"results":"79","hashOfConfig":"62"},{"size":862,"mtime":1607615874822,"results":"80","hashOfConfig":"62"},{"size":627,"mtime":1607525617278,"results":"81","hashOfConfig":"62"},{"size":767,"mtime":1607526323173,"results":"82","hashOfConfig":"62"},{"size":1222,"mtime":1607526475495,"results":"83","hashOfConfig":"62"},{"size":196,"mtime":1607525301624,"results":"84","hashOfConfig":"62"},{"size":623,"mtime":1607523677659,"results":"85","hashOfConfig":"62"},{"size":523,"mtime":1607616565129,"results":"86","hashOfConfig":"62"},{"size":691,"mtime":1607619662794,"results":"87","hashOfConfig":"62"},{"size":1357,"mtime":1607620545961,"results":"88","hashOfConfig":"62"},{"size":679,"mtime":1606780516169,"results":"89","hashOfConfig":"62"},{"size":478,"mtime":1607525889497,"results":"90","hashOfConfig":"62"},{"size":462,"mtime":1607524691387,"results":"91","hashOfConfig":"62"},{"size":603,"mtime":1607526149901,"results":"92","hashOfConfig":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"yhp794",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},"5r6a9f",{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"130"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"130"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"130"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"130"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"126"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"123"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"126"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"130"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"126"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"123"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"123"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"123"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"126"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"130"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"126"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Components/Home.js",["208","209","210","211"],"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/ActionCreators/types.js",[],"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Reducers/wellsReducer.js",["212","213","214"],"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Reducers/postPlansToJSONdb.js",["215"],"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Reducers/selectWellFromReduxStoreReducer.js",["216"],"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Components/App.js",[],"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Components/Plans.js",["217","218","219","220"],"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Components/ExistingWellPlans.js",["221","222","223","224","225","226","227"],"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/ActionCreators/setActiveWell.js",["228"],"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/ActionCreators/saveWellPlansToJSON.js",["229"],"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/APIs/wells.js",[],"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/ActionCreators/postNewWellToJSONdb.js",["230","231"],"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/ActionCreators/saveNewWellToReduxStore.js",["232","233"],"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Reducers/index.js",[],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/App.js",[],["234","235"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/types.js",[],["236","237"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/Plans.js",["238","239","240","241","242"],"import React, { useState, useEffect } from \"react\"\n//bootstrap\nimport Container from \"react-bootstrap/esm/Container\";\nimport Form from \"react-bootstrap/Form\"\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\nimport Button from \"react-bootstrap/Button\"\n//other libs\nimport 'react-datasheet/lib/react-datasheet.css';\nimport { connect } from \"react-redux\"\nimport ReactDataSheet from 'react-datasheet';\n// actionCreators\n\nimport savePlansToReduxStore from \"../ActionCreators/savePlansToReduxStore\"\n//helper functions\nimport calculateTVD from \"../HelperFunctions/Calculations/TVD\"\nimport calculateNS from \"../HelperFunctions/Calculations/NS\"\nimport calculateEW from \"../HelperFunctions/Calculations/EW\"\nimport calculateSECT from \"../HelperFunctions/Calculations/SECT\"\nimport calculateDLS from \"../HelperFunctions/Calculations/DLS\"\nimport postPlansToJSONDb from \"../ActionCreators/postPlansToJSONDb\";\n\n\n\nconst Plans = ({savePlansToReduxStore, saveWellInfoToReduxStoreReducer,savePlansToReduxStoreReducer, postPlansToJSONDb}) => {\n  \n  const [editGrid, setEditGrid] = useState(true)\n  const [input, setInput] = useState(false)\n  const [vsDirection, setVSDirection] = useState(0)\n  \n  const initialGrid = [\n    [{value: '', readOnly: true, width: '7rem'}, {value:\"Measured Depth\", readOnly: true, width: '7rem'}, {value:\"Inclination\", readOnly: true, width: '7rem'}, {value:\"Azimuth\", readOnly: true, width: '7rem'}, {value:\"TVD\", readOnly: true, width: '7rem'}, {value:\"Northing\", readOnly: true, width: '7rem'}, {value:\"Easting\", readOnly: true, width: '7rem'}, {value:\"VS\", readOnly: true, width: '7rem'},{value:\"DLS\", readOnly: true, width: '7rem'}],\n    \n    [{value: 1, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}],\n    \n    [{readOnly: true, value: 2}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}],\n    [{readOnly: true, value: 3}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}],\n    [{readOnly: true, value: 4}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}],\n    [{readOnly: true, value: 5}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}],\n  ];\n\n  const [grid, setGrid] = useState(initialGrid);\n\n  useEffect(()=>{\n    if (input) {\n      //performcalcs doesn't happen bc we're copying from plans. Currently not needed\n    }\n  },[input])\n\n  useEffect(()=> {\n    handleAddRows(1)\n  }, [])\n\n  const performCalculations = () => {\n    grid.map((row, index) => {\n      if (index === 0 || index === 1) {\n        // nothing because we don't want to run calcs on the header array\n      } else {\n        // for every array within grid array, want to iterate over and change the values of TVD, NS, EW, SECT, & DLS\n        // note val after idx is column \n        // TVD order of args : (measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior, inclinationPrior, azimuthPrior, calculatedTVDPrior)\n        // NS order of args: (measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior, inclinationPrior, azimuthPrior, calculatedNorthingPrior)\n\n        const calculatedTVD = calculateTVD(grid[index][1].value, grid[index][2].value, grid[index][3].value, grid[index - 1][1].value, grid[index - 1][2].value, grid[index - 1][3].value, grid[index - 1][4].value)\n        const calculatedNS = calculateNS(grid[index][1].value, grid[index][2].value, grid[index][3].value, grid[index - 1][1].value, grid[index - 1][2].value, grid[index - 1][3].value, grid[index - 1][5].value)\n        const calculatedEW = calculateEW(grid[index][1].value, grid[index][2].value, grid[index][3].value, grid[index - 1][1].value, grid[index - 1][2].value, grid[index - 1][3].value, grid[index - 1][6].value)\n        const calculatedSECT = calculateSECT(grid[index][1].value, grid[index][2].value, grid[index][3].value, grid[index - 1][1].value, grid[index - 1][2].value, grid[index - 1][3].value, grid[index - 1][5].value, grid[index - 1][6].value, index, vsDirection)\n        const calculatedDLS = calculateDLS(grid[index][1].value, grid[index][2].value, grid[index][3].value, grid[index - 1][1].value, grid[index - 1][2].value, grid[index - 1][3].value)\n\n\n        grid[index][4] = {...grid[index][4], readOnly: true, value: calculatedTVD}\n        grid[index][5] = {...grid[index][5], readOnly: true, value: calculatedNS}\n        grid[index][6] = {...grid[index][6], readOnly: true, value: calculatedEW}\n        grid[index][7] = {...grid[index][7], readOnly: true, value: calculatedSECT}\n        grid[index][8] = {...grid[index][8], readOnly: true, value: calculatedDLS}\n\n        setGrid(grid)\n        setInput(false)\n\n      }\n    })\n  }\n\n  const onCellsChanged = changes => {\n    // iterate through existing grid to get a copy and not mutate current as we iterate over\n    const gridNew = grid.map(row => [...row]);\n    // iterate through the changes.  Each change is a cell, each cell is an object\n    // with cell (previousVal), row, col, currentVal\n    // add the value of the newGrid[row#][col#] to the new value \n    changes.forEach(({ cell, row, col, value }) => {\n      gridNew[row][col] = { ...grid[row][col], value };\n    });\n    setGrid(gridNew)\n    setInput(true)\n  };\n\n  const handleVSDirection = (val) => {\n    setVSDirection(val)\n    setInput(true)\n  }\n\n  const handleSubmit = () => {\n    const {well, operator, rig, county, uSstate} = saveWellInfoToReduxStoreReducer.response\n    postPlansToJSONDb(operator, rig ,well, county, uSstate, grid, vsDirection)\n    savePlansToReduxStore(grid)\n\n  }\n\n  const handleRemoveRow = () => {\n    const newGrid = [...grid];\n    newGrid.pop();\n    setGrid(newGrid);\n  };\n\n  const createRows = (numberOfRowsToAdd) => {\n    let createdRows = []\n    for (let i = 0; i < numberOfRowsToAdd; i++) {\n      createdRows.push(\n        [{readOnly: true, value: grid.length + i}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}]\n      )\n    }\n    return createdRows\n  };\n\n  const handleAddRows = (rows) => {\n    const newGrid = [...grid, ...createRows(rows)]\n    setGrid(newGrid)\n  }\n\n  const renderSetRowsButtons = () => {\n    return (\n      <Row>\n        <Col xs={10} className=\"d-flex justify-content-start mt-4\">\n          <Button variant=\"success\" value={25} onClick={(event)=> handleAddRows(event.target.value)}>\n            Add 25 rows\n          </Button>\n          <Button variant=\"success\" className=\"ml-4\" value={10} onClick={(event) => handleAddRows(event.target.value)}>\n            Add 10 rows\n          </Button>\n          <Button variant=\"success\" className=\"ml-4\" value={5} onClick={(event) => handleAddRows(event.target.value)}>\n            Add 5 rows\n          </Button>\n          <Button variant=\"success\" className=\"ml-4\" value={1} onClick={(event) => handleAddRows(event.target.value)}>\n            Add a row\n          </Button>\n          <Button variant=\"danger\" className=\"ml-4\" onClick={handleRemoveRow}>\n            Remove a row\n          </Button>\n        </Col>\n        <Col xs={2}>\n          \n        </Col>\n      </Row>\n    )\n  }\n\n  const renderSubmitButton = () => {\n    return (\n      <Row>\n        <Col xs={10} className=\"my-4\">\n          <Button variant=\"info\" onClick={()=>handleSubmit()}>\n            Submit Data\n          </Button>\n        </Col>\n        <Col xs={2}>\n\n        </Col>\n      </Row>\n    )\n  }\n\n  const renderWellData = () => {\n    console.log(saveWellInfoToReduxStoreReducer)\n    if (saveWellInfoToReduxStoreReducer.status === \"received\") {\n      const { well, rig, operator} = saveWellInfoToReduxStoreReducer.response\n      return <h3 className=\"hy-4\"> {operator} - {rig} - {well}</h3>\n    } else {\n      return \"No well data\"\n    }\n  }\n\n  return (\n    <Container>\n      <Row>\n        <Col xs={10}>\n          {renderWellData()}\n          <ReactDataSheet data={grid} valueRenderer={(cell)=> cell.value} onCellsChanged={onCellsChanged}/>\n        </Col>\n        <Col xs={2}>\n          <Form className=\"mt-7\">\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Control className=\"mt-3\" type=\"float\" placeholder=\"Enter VS Here\" onChange={event => handleVSDirection(event.target.value)}/>\n            </Form.Group>\n          </Form>\n        </Col>\n      </Row>\n      {renderSetRowsButtons()}\n      {renderSubmitButton()}\n      <Row>\n        <Col xs={10}>\n          {/* {renderAlert()} */}\n        </Col>\n        <Col xs={2}>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nconst mapStateToProps = ({saveWellInfoToReduxStoreReducer}) => {\n  return {\n    saveWellInfoToReduxStoreReducer\n  }\n}\n\nexport default connect(mapStateToProps, { savePlansToReduxStore, postPlansToJSONDb})(Plans)\n\n\n",["243","244"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/ExistingPlans.js",["245","246","247","248","249","250","251","252","253","254","255","256","257"],"import React, { useEffect, useState } from \"react\"\nimport { connect } from \"react-redux\"\n\nimport Container from \"react-bootstrap/esm/Container\"\nimport Form from \"react-bootstrap/Form\"\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\nimport Button from \"react-bootstrap/Button\"\n\nimport 'react-datasheet/lib/react-datasheet.css'\nimport ReactDataSheet from \"react-datasheet\"\nimport getWellPlansFromJSONDb from \"../ActionCreators/getWellPlansFromJSONDb\"\n\nconst ExistingWellPlans = ({getWellPlansFromJSONDbReducer}) => {\n  const [plans, setPlans] = useState([])\n  const [grid, setGrid] = useState([])\n\n  // useEffect(()=> {\n  //   if (getWellPlansFromDynamoDbReducer.status === \"received\") {\n  //     convertSurveyNumberStringsToNumbers();\n  //   }\n    \n  // },[getWellPlansFromDynamoDbReducer.status])\n\n  // useEffect(()=> {\n  //   createGridFromPlans();\n  // },[plans])\n\n  const convertSurveyNumberStringsToNumbers = () => {\n    // let plansFromReducerCopy = [...getWellPlansFromJSONDbReducer.response]\n    // console.log(getWellPlansFromJSONDbReducer.response)\n  }\n  // convertSurveyNumberStringsToNumbers()\n  return (\n    \n    \"existing plans\"\n  )\n  // return (\n  //   <Container>\n  //     <Col>EXISTING PLANS</Col>\n\n  //     <ReactDataSheet\n  //       data={grid}\n  //       valueRenderer={(cell)=> cell.value}\n  //       onCellsChanged={onCellsChanged}\n  //     ></ReactDataSheet>\n  //     <Col>\n  //   <Button variant=\"primary\" className=\"mt-4 mb-4\" onClick={()=>addNewRow()}>Add a Row</Button>\n  //   <Button variant=\"danger\" className=\"my-4 ml-4\" onClick={()=>removeRow()}>Remove a Row</Button>\n  //   <Button variant=\"info\" className=\"my-4 ml-4\" onClick={()=>editPlans()}>Edit Plans</Button>\n  //   <Button variant=\"info\" className=\"my-4 ml-4\" onClick={()=>createNewPlan()}>Create New Plan</Button>\n    \n  //     </Col>\n  //   </Container>\n  // )\n}\n\nconst mapStateToProps = ({getWellPlansFromJSONDbReducer, saveActiveWellToReduxStoreReducer, getWellsFromJSONDbReducer}) => {\n  return {\n    getWellPlansFromJSONDbReducer\n  }\n}\n\nexport default connect(mapStateToProps, {getWellPlansFromJSONDb})(ExistingWellPlans)","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/Home.js",["258","259","260","261"],"// react\nimport React, { useState, useEffect } from 'react';\n// react-bootstrap\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Dropdown from 'react-bootstrap/Dropdown';\n// other libs/imports\nimport { connect } from 'react-redux';\nimport _ from 'lodash'\n// images\n// components\n// action creators\n// import getWellNamesFromDynamoDb from 'ActionCreators/getWellNamesFromDynamoDb';\nimport saveWellInfoToReduxStore from \"../ActionCreators/saveWellInfoToReduxStore\"\n// import getWellPlansFromDynamoDb from 'ActionCreators/getWellPlansFromDynamoDb';\nimport postWellInfoToJSONDb from \"../ActionCreators/postWellInfoToJSONDb\"\nimport getWellsFromJSONDb from \"../ActionCreators/getWellsFromJSONDb\"\nimport {saveSelectedAsActiveWell} from \"../ActionCreators/saveActiveWellToReduxStore\"\nimport getWellPlansFromJSONDb from \"../ActionCreators/getWellPlansFromJSONDb\"\n\n\nconst Home = ({ getWellPlansFromJSONDb ,saveSelectedAsActiveWell, postWellInfoToJSONDb, saveWellInfoToReduxStore, saveWellInfoToReduxStoreReducer, getWellsFromJSONDb, getWellsFromJSONDbReducer}) => {\n  const [activeWell, setActiveWell] = useState('None');\n  const [operator, setOperator] = useState('');\n  const [rig, setRig] = useState('');\n  const [well, setWell] = useState('');\n  const [county, setCounty] = useState('');\n  const [uSstate, setUSstate] = useState('');\n  const [northing, setNorthing] = useState('');\n  const [easting, setEasting] = useState('');\n\n\n  useEffect(() => {\n    \n    setTimeout(getWellsFromJSONDb, 1000);\n  }, []);\n\n  const renderWellNames = () => {\n    let renderedWells;\n    if (getWellsFromJSONDbReducer.status === \"received\") {\n      let wells = getWellsFromJSONDbReducer.response\n      return (\n        <Dropdown.Menu>\n          {wells.map(well => {\n            return (\n              <Dropdown.Item href=\"\" key={well.well} onClick={()=> setActiveWell(`${well.operator} - ${well.rig} - ${well.well}`)}>\n                {well.operator} - {well.rig} - {well.well}\n              </Dropdown.Item>\n            )\n          })}\n        </Dropdown.Menu>\n      )\n    }\n    else {\n      return \"Data loading\"\n    }\n  }\n\n  const createNewWell = () => {\n    return (\n      <Col>\n        <h3 className=\"my-4\">Add new well data</h3>\n        <Form.Control className=\"mt-3\" placeholder=\"Operator\" onChange={event => setOperator(event.target.value)} />\n        <Form.Control className=\"mt-3\" placeholder=\"Rig\" onChange={event => setRig(event.target.value)} />\n        <Form.Control className=\"mt-3\" placeholder=\"Well\" onChange={event => setWell(event.target.value)} />\n        <Form.Control className=\"mt-3\" placeholder=\"County\" onChange={event => setCounty(event.target.value)} />\n        <Form.Control className=\"mt-3\" placeholder=\"State\" onChange={event => setUSstate(event.target.value)} />\n        <Form.Control className=\"mt-3\" placeholder=\"Northing\" onChange={event => setNorthing(event.target.value)} />\n        <Form.Control className=\"mt-3\" placeholder=\"Easting\" onChange={event => setEasting(event.target.value)} />\n        <Button className=\"mt-4\" variant=\"info\" disabled={ operator === \"\" || rig === \"\" || well === \"\" || county === \"\" || uSstate === \"\" ? true : false } onClick={()=>handleNewWellSubmit()}>Submit and begin adding well data</Button>\n      </Col>\n    )\n  }\n\n  const handleNewWellSubmit = () => {\n    const wellInfo = {\n      operator,\n      rig,\n      well,\n      // plans: [],\n      county,\n      uSstate,\n      northing,\n      easting\n    }\n    // postWellInfoToJSONDb(wellInfo)\n    saveWellInfoToReduxStore(wellInfo)\n    getWellsFromJSONDb()\n  }\n\n  const handleFetchData = () => {\n\n\n    getWellPlansFromJSONDb(activeWell)\n    // setTimeout(getWellHardLinesFromDynamoDb(selectedWell), 1000);\n    // setTimeout(getWellLeaseLinesFromDynamoDb(selectedWell), 1500);\n    // setTimeout(getWellSurveysFromDynamoDb(selectedWell), 2000);\n    // setTimeout(getOffsets(selectedWell), 2500);\n  }\n\n\n\n  const selectExistingWell = () => {\n    return (\n      <Col>\n      <h3 className=\"my-4\">Select Existing Well</h3>\n      <Dropdown>\n        <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\">\n          {activeWell ? activeWell : `Select Well:`}\n        </Dropdown.Toggle>\n        {renderWellNames()}\n      </Dropdown>\n      <Button className=\"mt-4\" variant=\"success\" disabled={ activeWell === \"None\" ? true : false } onClick={()=>handleFetchData()}>Fetch well data</Button>\n      </Col>\n    )\n  }\n\n\n\n  const renderSelectWell = () => {\n    return (\n      <Col>\n        <h3 className=\"my-4\">Select existing well</h3>\n        <Dropdown>\n          <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\">\n            Selected Well: <strong>{activeWell}</strong>\n          </Dropdown.Toggle>\n          {/* // {renderWellNames()} */}\n        </Dropdown>\n        \n      </Col>\n    )\n  }\n\n\n  \n  return (\n      <Container>\n        <Row>\n          {createNewWell()}\n          {selectExistingWell()}\n        </Row>\n      </Container>\n    )\n//  }\n}\n\nconst mapStateToProps = ({ saveActiveWellToReduxStoreReducer ,saveWellInfoToReduxStoreReducer, postWellInfoToJSONDbReducer, getWellsFromJSONDbReducer }) => {\n  return {\n    saveWellInfoToReduxStoreReducer,\n    postWellInfoToJSONDbReducer,\n    getWellsFromJSONDbReducer,\n  };\n};\n\nexport default connect(mapStateToProps, { getWellPlansFromJSONDb, saveSelectedAsActiveWell, saveWellInfoToReduxStore, postWellInfoToJSONDb, getWellsFromJSONDb })(Home);\n","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/saveWellInfoToReduxStore.js",["262"],"import { SAVE_WELL_INFO_TO_REDUX_STORE_REQUESTED,\n  SAVE_WELL_INFO_TO_REDUX_STORE_RECEIVED,\n  SAVE_WELL_INFO_TO_REDUX_STORE_FAILED } from './types';\n  \n  export default (wellInfo) => {\n    return async (dispatch, getState) => {\n      dispatch({\n        type: SAVE_WELL_INFO_TO_REDUX_STORE_REQUESTED,\n      });\n      try {\n        dispatch({\n          type: SAVE_WELL_INFO_TO_REDUX_STORE_RECEIVED,\n          payload: wellInfo,\n        });\n      } catch (error) {\n        console.log(error)\n        dispatch({\n          type: SAVE_WELL_INFO_TO_REDUX_STORE_FAILED,\n          payload: error,\n        });\n      }\n    };\n  };\n  ","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/saveWellInfoToReduxStoreReducer.js",["263"],"import { SAVE_WELL_INFO_TO_REDUX_STORE_REQUESTED,\n  SAVE_WELL_INFO_TO_REDUX_STORE_RECEIVED,\n  SAVE_WELL_INFO_TO_REDUX_STORE_FAILED } from \"../ActionCreators/types\"\n\n  const INITIAL_STATE = {\n    response: {}, \n    status: \"\"\n  };\n\n  export default (state = INITIAL_STATE, { type, payload }) => {\n    \n    switch (type) {\n      case SAVE_WELL_INFO_TO_REDUX_STORE_REQUESTED:\n        return { ...state, status: 'waiting' };\n      case SAVE_WELL_INFO_TO_REDUX_STORE_RECEIVED:\n        return { ...state, response: payload, status: 'received' };\n      case SAVE_WELL_INFO_TO_REDUX_STORE_FAILED:\n        return { ...state, response: payload, status: 'failed' };\n      default:\n        return state;\n    }\n  };\n  ","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/postWellInfoToJSONDbReducer.js",["264"],"import { POST_WELLINFO_TO_JSONDB_REQUESTED,\n  POST_WELLINFO_TO_JSONDB_RECEIVED,\n  POST_WELLINFO_TO_JSONDB_FAILED } from \"../ActionCreators/types\"\n\nconst INITIAL_STATE = {\n  response: {},\n  status: \"\"\n}\n\nexport default (state = INITIAL_STATE, {type, payload}) => {\n  switch (type) {\n    case POST_WELLINFO_TO_JSONDB_REQUESTED:\n      return {...state, status: \"waiting\"}\n    case POST_WELLINFO_TO_JSONDB_RECEIVED:\n      return {...state, response: payload, status: \"received\"}\n    case POST_WELLINFO_TO_JSONDB_FAILED:\n      return {...state, response: payload, status: \"failed\"}\n    default:\n      return state;\n  }\n}",["265","266"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/APIs/wells.js",[],["267","268"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/index.js",[],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getWellsFromJSONDbReducer.js",["269"],"import { GET_WELLS_FROM_JSON_REQUESTED,\n  GET_WELLS_FROM_JSON_RECEIVED,\n  GET_WELLS_FROM_JSON_FAILED } from \"../ActionCreators/types\"\n\n  const INITIAL_STATE = {\n    response: {},\n    status: \"\"\n  }\n\n  export default (state = INITIAL_STATE, {type, payload}) => {\n    switch (type) {\n      case GET_WELLS_FROM_JSON_REQUESTED:\n        return {...state, status: \"waiting\"}\n      case GET_WELLS_FROM_JSON_RECEIVED:\n        return {...state, response: payload, status: \"received\"}    \n      case GET_WELLS_FROM_JSON_FAILED:\n        return {...state, response: payload, status: \"failed\"}\n      default:\n        return state\n    }\n  }","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getWellsFromJSONDb.js",["270"],"import wells from \"../APIs/wells\"\n\nimport { GET_WELLS_FROM_JSON_REQUESTED,\n  GET_WELLS_FROM_JSON_RECEIVED,\n  GET_WELLS_FROM_JSON_FAILED } from \"./types\"\n\n\nexport default () => {\n  return async dispatch => {\n    dispatch({\n      type: GET_WELLS_FROM_JSON_REQUESTED\n    })\n    try {\n      const response = await wells.get(\"/wells\")\n      dispatch({\n        type: GET_WELLS_FROM_JSON_RECEIVED,\n        payload: response.data\n      })\n    } catch (error) {\n      dispatch({\n        type: GET_WELLS_FROM_JSON_FAILED,\n        payload: error\n      })\n    }\n  }\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/postWellInfoToJSONDb.js",["271","272"],"import wells from \"../APIs/wells\"\n\nimport { POST_WELLINFO_TO_JSONDB_REQUESTED,\n  POST_WELLINFO_TO_JSONDB_RECEIVED,\n  POST_WELLINFO_TO_JSONDB_FAILED } from './types';\n  \n  export default (wellInfo) => {\n\n    return async (dispatch, getState) => {\n      // let wellList = getState().getWellsFromJSONDbReducer.response\n      // console.log('should get wellList next')\n      // console.log(wellList)\n      const response = await wells.post(\"/wells\", wellInfo)\n      dispatch({\n        type: POST_WELLINFO_TO_JSONDB_REQUESTED,\n      });\n  \n      try {\n        dispatch({\n          type: POST_WELLINFO_TO_JSONDB_RECEIVED,\n          payload: wellInfo,\n        });\n      } catch (error) {\n        console.log(error)\n        dispatch({\n          type: POST_WELLINFO_TO_JSONDB_FAILED,\n          payload: error,\n        });\n      }\n    };\n  };\n  ","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/saveActiveWellToReduxStoreReducer.js",["273"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/saveActiveWellToReduxStore.js",["274","275"],"import { SAVE_ACTIVE_WELL_TO_REDUX_STORE_REQUESTED,\n  SAVE_ACTIVE_WELL_TO_REDUX_STORE_RECEIVED,\n  SAVE_ACTIVE_WELL_TO_REDUX_STORE_FAILED\n } from \"./types\"\n\nexport const saveSelectedAsActiveWell = (selectedWell) => {\n  return { type: SAVE_ACTIVE_WELL_TO_REDUX_STORE_RECEIVED, payload: {selectedWell} }\n}\n","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/Surveys.js",[],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/LeaseLines.js",["276","277","278"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/postPlansToJSONDbReducer.js",["279"],"import { POST_PLANS_TO_JSON_REQUESTED,\n  POST_PLANS_TO_JSON_RECEIVED,\n  POST_PLANS_TO_JSON_FAILED } from \"../ActionCreators/types\"\n\nconst INITIAL_STATE = {\n  response: {},\n  status: \"\"\n}\nexport default (state = INITIAL_STATE, {type, payload}) => {\n  switch (type) {\n    case POST_PLANS_TO_JSON_REQUESTED:\n      return {...state, status: \"waiting\"}\n    case POST_PLANS_TO_JSON_RECEIVED:\n      return {...state, response: payload, status: \"received\"}\n    case POST_PLANS_TO_JSON_FAILED:\n      return {...state, response: payload, status: \"failed\"}\n    default:\n      return state;\n  }\n}",["280","281"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/postPlansToJSONDb.js",["282"],"import wells from \"../APIs/wells\"\nimport { POST_PLANS_TO_JSON_REQUESTED,\n  POST_PLANS_TO_JSON_RECEIVED,\n  POST_PLANS_TO_JSON_FAILED } from \"./types\"\nimport moment from \"moment\"\n\nexport default (operator, rig ,well, county, uSstate, grid, vsDirection) => {\n  return async (dispatch, getState) => {\n\n    dispatch({\n      type: POST_PLANS_TO_JSON_REQUESTED\n    })\n    try {\n      const wellData = {\n        operator,\n        rig,\n        well,\n        county,\n        uSstate,\n        vsDirection,\n        grid, \n        date: moment().format()\n      }\n      console.log(wellData)\n      const response = await wells.post(`wells`, wellData)\n      dispatch({\n        type: POST_PLANS_TO_JSON_RECEIVED,\n        payload: response.data\n      })\n    } catch (error) {\n\n      dispatch({\n        type: POST_PLANS_TO_JSON_FAILED,\n        payload: error\n      })\n    }\n  }\n}\n","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/TVD.js",["283"],"import DLC from \"./DLC\"\nimport RF from \"./RF\"\n\nexport default (measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior, inclinationPrior, azimuthPrior, calculatedTVDPrior) => {\n  const converter = (Math.PI)/180\n\n  const calculatedDLC = DLC(inclinationPrior, inclinationCurrent, azimuthPrior, azimuthCurrent)\n\n  const calculatedRF = RF(measuredDepthPrior, measuredDepthCurrent, calculatedDLC)\n\n  const calculatedTVDCurrent = calculatedTVDPrior + calculatedRF * (Math.cos(inclinationPrior*converter) + Math.cos(inclinationCurrent*converter));\n\n  return (\n    parseFloat(calculatedTVDCurrent.toFixed(2))\n  )\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/NS.js",["284"],"import DLC from \"./DLC\"\nimport RF from \"./RF\"\n\nexport default (measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior, inclinationPrior, azimuthPrior, calculatedNorthingPrior) => {\n  const converter = (Math.PI)/180;\n  const converter2 = 0.00000001;\n\n  const calculatedDLC = DLC(inclinationPrior, inclinationCurrent, azimuthPrior, azimuthCurrent)\n\n  const calculatedRF = RF(measuredDepthPrior, measuredDepthCurrent, calculatedDLC)\n\n  const calculatedNorthingCurrent = (calculatedNorthingPrior+converter2) + calculatedRF * (Math.sin(inclinationPrior*converter)*Math.cos(azimuthPrior*converter)+ Math.sin(inclinationCurrent * converter) * Math.cos(azimuthCurrent*converter));\n\n  return (\n    parseFloat(calculatedNorthingCurrent.toFixed(2))\n\n  )\n} ","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/SECT.js",["285"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/RF.js",["286"],"export default (measuredDepthPrior, measuredDepthCurrent, calculatedDLC) => {\n  return (\n    Math.tan(calculatedDLC/2)\n    *\n    ((measuredDepthCurrent - measuredDepthPrior) / calculatedDLC)\n  )\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/savePlansToReduxStoreReducer.js",["287"],"import { SAVE_PLANS_TO_REDUX_STORE_REQUESTED,\n  SAVE_PLANS_TO_REDUX_STORE_RECEIVED,\n  SAVE_PLANS_TO_REDUX_STORE_FAILED\n} from \"../ActionCreators/types\"\n\nconst INITIAL_STATE = {\n  response: {},\n  status: \"\"\n}\n\nexport default (state=INITIAL_STATE, {type, payload}) =>{\n  switch (type) {\n    case SAVE_PLANS_TO_REDUX_STORE_REQUESTED:\n      return {...state, status: \"waiting\"}\n    case SAVE_PLANS_TO_REDUX_STORE_RECEIVED:\n      return {...state, response: payload, status: \"received\"}\n    case SAVE_PLANS_TO_REDUX_STORE_FAILED:\n      return {...state, response: payload, status: \"failed\"}\n    default:\n      return state\n  }\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/savePlansToReduxStore.js",["288"],"import { SAVE_PLANS_TO_REDUX_STORE_REQUESTED,\n  SAVE_PLANS_TO_REDUX_STORE_RECEIVED,\n  SAVE_PLANS_TO_REDUX_STORE_FAILED\n} from \"./types\"\n\nexport default (plans) => {\n  return async (dispatch, getState) => {\n    dispatch({\n      type: SAVE_PLANS_TO_REDUX_STORE_REQUESTED\n    });\n    \n    try {\n      dispatch({\n        type: SAVE_PLANS_TO_REDUX_STORE_RECEIVED,\n        payload: plans,\n      });\n    } catch (error) {\n      dispatch({\n        type: SAVE_PLANS_TO_REDUX_STORE_FAILED,\n        payload: error\n      })\n    }\n  }\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getWellPlansFromJSONDbReducer.js",["289"],"import { GET_WELL_PLANS_FROM_JSONDB_REQUESTED, \n  GET_WELL_PLANS_FROM_JSONDB_RECEIVED,\n  GET_WELL_PLANS_FROM_JSONDB_FAILED} from \"../ActionCreators/types\"\n\n\nconst INITIAL_STATE = {\n  response: {},\n  status: \"\"\n}\n\nexport default (state = INITIAL_STATE, {type, payload}) => {\n  \n  switch (type) {\n    case GET_WELL_PLANS_FROM_JSONDB_REQUESTED:\n      console.log(\"hello\")\n      return {...state, status: \"waiting\"}\n    case GET_WELL_PLANS_FROM_JSONDB_RECEIVED:\n      console.log(payload)\n      return {...state, response: payload, status: \"received\"}\n    case GET_WELL_PLANS_FROM_JSONDB_FAILED:\n      return {...state, response: payload, status: \"failed\"}\n    default:\n      return state\n  }\n}\n","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getWellPlansFromJSONDb.js",["290","291","292","293","294","295"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/index.js",[],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/DLS.js",["296"],"import DLC from \"./DLC\"\n\nexport default (measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior = 1, inclinationPrior = 2, azimuthPrior = 3 ) => {\n  const converter = (Math.PI)/180;\n\n  // calculate DLC\n  const calculatedDLC = DLC(inclinationPrior, inclinationCurrent, azimuthPrior, azimuthCurrent)\n\n  const calculatedDLS = ((calculatedDLC/converter)*100/(measuredDepthCurrent-measuredDepthPrior))\n\n  return (\n    parseFloat(calculatedDLS.toFixed(2))\n  )\n\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/DLC.js",["297"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/EW.js",["298"],{"ruleId":"299","severity":1,"message":"300","line":2,"column":8,"nodeType":"301","messageId":"302","endLine":2,"endColumn":9},{"ruleId":"299","severity":1,"message":"303","line":12,"column":8,"nodeType":"301","messageId":"302","endLine":12,"endColumn":22},{"ruleId":"304","severity":1,"message":"305","line":30,"column":5,"nodeType":"306","endLine":30,"endColumn":7,"suggestions":"307"},{"ruleId":"299","severity":1,"message":"308","line":121,"column":7,"nodeType":"301","messageId":"302","endLine":121,"endColumn":15},{"ruleId":"299","severity":1,"message":"309","line":2,"column":8,"nodeType":"301","messageId":"302","endLine":2,"endColumn":16},{"ruleId":"299","severity":1,"message":"310","line":3,"column":40,"nodeType":"301","messageId":"302","endLine":3,"endColumn":55},{"ruleId":"311","severity":1,"message":"312","line":10,"column":1,"nodeType":"313","endLine":21,"endColumn":2},{"ruleId":"311","severity":1,"message":"312","line":8,"column":1,"nodeType":"313","endLine":15,"endColumn":2},{"ruleId":"311","severity":1,"message":"312","line":9,"column":1,"nodeType":"313","endLine":16,"endColumn":3},{"ruleId":"299","severity":1,"message":"314","line":1,"column":27,"nodeType":"301","messageId":"302","endLine":1,"endColumn":36},{"ruleId":"299","severity":1,"message":"315","line":4,"column":8,"nodeType":"301","messageId":"302","endLine":4,"endColumn":12},{"ruleId":"299","severity":1,"message":"316","line":5,"column":8,"nodeType":"301","messageId":"302","endLine":5,"endColumn":11},{"ruleId":"299","severity":1,"message":"317","line":14,"column":8,"nodeType":"301","messageId":"302","endLine":14,"endColumn":20},{"ruleId":"299","severity":1,"message":"315","line":5,"column":8,"nodeType":"301","messageId":"302","endLine":5,"endColumn":12},{"ruleId":"299","severity":1,"message":"316","line":6,"column":8,"nodeType":"301","messageId":"302","endLine":6,"endColumn":11},{"ruleId":"299","severity":1,"message":"318","line":8,"column":8,"nodeType":"301","messageId":"302","endLine":8,"endColumn":14},{"ruleId":"299","severity":1,"message":"319","line":12,"column":8,"nodeType":"301","messageId":"302","endLine":12,"endColumn":31},{"ruleId":"299","severity":1,"message":"320","line":13,"column":8,"nodeType":"301","messageId":"302","endLine":13,"endColumn":25},{"ruleId":"299","severity":1,"message":"317","line":14,"column":8,"nodeType":"301","messageId":"302","endLine":14,"endColumn":20},{"ruleId":"299","severity":1,"message":"321","line":23,"column":9,"nodeType":"301","messageId":"302","endLine":23,"endColumn":20},{"ruleId":"299","severity":1,"message":"322","line":1,"column":8,"nodeType":"301","messageId":"302","endLine":1,"endColumn":13},{"ruleId":"311","severity":1,"message":"312","line":4,"column":1,"nodeType":"313","endLine":12,"endColumn":2},{"ruleId":"311","severity":1,"message":"312","line":4,"column":1,"nodeType":"313","endLine":9,"endColumn":2},{"ruleId":"299","severity":1,"message":"323","line":6,"column":11,"nodeType":"301","messageId":"302","endLine":6,"endColumn":19},{"ruleId":"299","severity":1,"message":"322","line":1,"column":8,"nodeType":"301","messageId":"302","endLine":1,"endColumn":13},{"ruleId":"311","severity":1,"message":"312","line":6,"column":3,"nodeType":"313","endLine":25,"endColumn":5},{"ruleId":"324","replacedBy":"325"},{"ruleId":"326","replacedBy":"327"},{"ruleId":"324","replacedBy":"328"},{"ruleId":"326","replacedBy":"329"},{"ruleId":"299","severity":1,"message":"330","line":27,"column":10,"nodeType":"301","messageId":"302","endLine":27,"endColumn":18},{"ruleId":"299","severity":1,"message":"331","line":27,"column":20,"nodeType":"301","messageId":"302","endLine":27,"endColumn":31},{"ruleId":"304","severity":1,"message":"332","line":52,"column":6,"nodeType":"306","endLine":52,"endColumn":8,"suggestions":"333"},{"ruleId":"299","severity":1,"message":"334","line":54,"column":9,"nodeType":"301","messageId":"302","endLine":54,"endColumn":28},{"ruleId":"335","severity":1,"message":"336","line":55,"column":27,"nodeType":"337","messageId":"338","endLine":55,"endColumn":29},{"ruleId":"324","replacedBy":"339"},{"ruleId":"326","replacedBy":"340"},{"ruleId":"299","severity":1,"message":"322","line":1,"column":8,"nodeType":"301","messageId":"302","endLine":1,"endColumn":13},{"ruleId":"299","severity":1,"message":"314","line":1,"column":17,"nodeType":"301","messageId":"302","endLine":1,"endColumn":26},{"ruleId":"299","severity":1,"message":"341","line":4,"column":8,"nodeType":"301","messageId":"302","endLine":4,"endColumn":17},{"ruleId":"299","severity":1,"message":"315","line":5,"column":8,"nodeType":"301","messageId":"302","endLine":5,"endColumn":12},{"ruleId":"299","severity":1,"message":"316","line":6,"column":8,"nodeType":"301","messageId":"302","endLine":6,"endColumn":11},{"ruleId":"299","severity":1,"message":"342","line":7,"column":8,"nodeType":"301","messageId":"302","endLine":7,"endColumn":11},{"ruleId":"299","severity":1,"message":"318","line":8,"column":8,"nodeType":"301","messageId":"302","endLine":8,"endColumn":14},{"ruleId":"299","severity":1,"message":"343","line":11,"column":8,"nodeType":"301","messageId":"302","endLine":11,"endColumn":22},{"ruleId":"299","severity":1,"message":"344","line":15,"column":10,"nodeType":"301","messageId":"302","endLine":15,"endColumn":15},{"ruleId":"299","severity":1,"message":"345","line":15,"column":17,"nodeType":"301","messageId":"302","endLine":15,"endColumn":25},{"ruleId":"299","severity":1,"message":"346","line":16,"column":10,"nodeType":"301","messageId":"302","endLine":16,"endColumn":14},{"ruleId":"299","severity":1,"message":"347","line":16,"column":16,"nodeType":"301","messageId":"302","endLine":16,"endColumn":23},{"ruleId":"299","severity":1,"message":"348","line":29,"column":9,"nodeType":"301","messageId":"302","endLine":29,"endColumn":44},{"ruleId":"299","severity":1,"message":"300","line":12,"column":8,"nodeType":"301","messageId":"302","endLine":12,"endColumn":9},{"ruleId":"304","severity":1,"message":"349","line":39,"column":6,"nodeType":"306","endLine":39,"endColumn":8,"suggestions":"350"},{"ruleId":"299","severity":1,"message":"351","line":42,"column":9,"nodeType":"301","messageId":"302","endLine":42,"endColumn":22},{"ruleId":"299","severity":1,"message":"352","line":123,"column":9,"nodeType":"301","messageId":"302","endLine":123,"endColumn":25},{"ruleId":"311","severity":1,"message":"312","line":5,"column":3,"nodeType":"313","endLine":23,"endColumn":5},{"ruleId":"311","severity":1,"message":"312","line":10,"column":3,"nodeType":"313","endLine":22,"endColumn":5},{"ruleId":"311","severity":1,"message":"312","line":10,"column":1,"nodeType":"313","endLine":21,"endColumn":2},{"ruleId":"324","replacedBy":"353"},{"ruleId":"326","replacedBy":"354"},{"ruleId":"324","replacedBy":"355"},{"ruleId":"326","replacedBy":"356"},{"ruleId":"311","severity":1,"message":"312","line":10,"column":3,"nodeType":"313","endLine":21,"endColumn":4},{"ruleId":"311","severity":1,"message":"312","line":8,"column":1,"nodeType":"313","endLine":26,"endColumn":2},{"ruleId":"311","severity":1,"message":"312","line":7,"column":3,"nodeType":"313","endLine":31,"endColumn":5},{"ruleId":"299","severity":1,"message":"323","line":13,"column":13,"nodeType":"301","messageId":"302","endLine":13,"endColumn":21},{"ruleId":"311","severity":1,"message":"312","line":9,"column":1,"nodeType":"313","endLine":20,"endColumn":2},{"ruleId":"299","severity":1,"message":"357","line":1,"column":10,"nodeType":"301","messageId":"302","endLine":1,"endColumn":51},{"ruleId":"299","severity":1,"message":"358","line":3,"column":3,"nodeType":"301","messageId":"302","endLine":3,"endColumn":41},{"ruleId":"299","severity":1,"message":"314","line":1,"column":27,"nodeType":"301","messageId":"302","endLine":1,"endColumn":36},{"ruleId":"299","severity":1,"message":"315","line":4,"column":8,"nodeType":"301","messageId":"302","endLine":4,"endColumn":12},{"ruleId":"299","severity":1,"message":"316","line":5,"column":8,"nodeType":"301","messageId":"302","endLine":5,"endColumn":11},{"ruleId":"311","severity":1,"message":"312","line":9,"column":1,"nodeType":"313","endLine":20,"endColumn":2},{"ruleId":"324","replacedBy":"359"},{"ruleId":"326","replacedBy":"360"},{"ruleId":"311","severity":1,"message":"312","line":7,"column":1,"nodeType":"313","endLine":38,"endColumn":2},{"ruleId":"311","severity":1,"message":"312","line":4,"column":1,"nodeType":"313","endLine":16,"endColumn":2},{"ruleId":"311","severity":1,"message":"312","line":4,"column":1,"nodeType":"313","endLine":18,"endColumn":2},{"ruleId":"311","severity":1,"message":"312","line":4,"column":1,"nodeType":"313","endLine":30,"endColumn":3},{"ruleId":"311","severity":1,"message":"312","line":1,"column":1,"nodeType":"313","endLine":7,"endColumn":2},{"ruleId":"311","severity":1,"message":"312","line":11,"column":1,"nodeType":"313","endLine":22,"endColumn":2},{"ruleId":"311","severity":1,"message":"312","line":6,"column":1,"nodeType":"313","endLine":24,"endColumn":2},{"ruleId":"311","severity":1,"message":"312","line":11,"column":1,"nodeType":"313","endLine":25,"endColumn":2},{"ruleId":"299","severity":1,"message":"361","line":1,"column":10,"nodeType":"301","messageId":"302","endLine":1,"endColumn":13},{"ruleId":"299","severity":1,"message":"362","line":2,"column":8,"nodeType":"301","messageId":"302","endLine":2,"endColumn":13},{"ruleId":"299","severity":1,"message":"363","line":3,"column":8,"nodeType":"301","messageId":"302","endLine":3,"endColumn":26},{"ruleId":"311","severity":1,"message":"312","line":8,"column":1,"nodeType":"313","endLine":38,"endColumn":2},{"ruleId":"364","severity":1,"message":"365","line":21,"column":37,"nodeType":"366","messageId":"367","endLine":21,"endColumn":39},{"ruleId":"364","severity":1,"message":"365","line":21,"column":84,"nodeType":"366","messageId":"367","endLine":21,"endColumn":86},{"ruleId":"311","severity":1,"message":"312","line":3,"column":1,"nodeType":"313","endLine":15,"endColumn":2},{"ruleId":"311","severity":1,"message":"312","line":1,"column":1,"nodeType":"313","endLine":16,"endColumn":2},{"ruleId":"311","severity":1,"message":"312","line":4,"column":1,"nodeType":"313","endLine":17,"endColumn":2},"no-unused-vars","'_' is defined but never used.","Identifier","unusedVar","'DropdownButton' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchWellsFromJSON'. Either include it or remove the dependency array. If 'fetchWellsFromJSON' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["368"],"'wellInfo' is assigned a value but never used.","'_default' is defined but never used.","'SET_ACTIVE_WELL' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useEffect' is defined but never used.","'Form' is defined but never used.","'Row' is defined but never used.","'wellsReducer' is defined but never used.","'Button' is defined but never used.","'saveNewPlanToReduxStore' is defined but never used.","'postPlanstoJSONdb' is defined but never used.","'initialGrid' is assigned a value but never used.","'React' is defined but never used.","'response' is assigned a value but never used.","no-native-reassign",["369"],"no-negated-in-lhs",["370"],["369"],["370"],"'editGrid' is assigned a value but never used.","'setEditGrid' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleAddRows'. Either include it or remove the dependency array.",["371"],"'performCalculations' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["369"],["370"],"'Container' is defined but never used.","'Col' is defined but never used.","'ReactDataSheet' is defined but never used.","'plans' is assigned a value but never used.","'setPlans' is assigned a value but never used.","'grid' is assigned a value but never used.","'setGrid' is assigned a value but never used.","'convertSurveyNumberStringsToNumbers' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getWellsFromJSONDb'. Either include it or remove the dependency array.",["372"],"'renderedWells' is defined but never used.","'renderSelectWell' is assigned a value but never used.",["369"],["370"],["369"],["370"],"'SAVE_ACTIVE_WELL_TO_REDUX_STORE_REQUESTED' is defined but never used.","'SAVE_ACTIVE_WELL_TO_REDUX_STORE_FAILED' is defined but never used.",["369"],["370"],"'get' is defined but never used.","'wells' is defined but never used.","'getWellsFromJSONDb' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"373","fix":"374"},"no-global-assign","no-unsafe-negation",{"desc":"375","fix":"376"},{"desc":"377","fix":"378"},"Update the dependencies array to be: [fetchWellsFromJSON]",{"range":"379","text":"380"},"Update the dependencies array to be: [handleAddRows]",{"range":"381","text":"382"},"Update the dependencies array to be: [getWellsFromJSONDb]",{"range":"383","text":"384"},[1271,1273],"[fetchWellsFromJSON]",[2703,2705],"[handleAddRows]",[1669,1671],"[getWellsFromJSONDb]"]