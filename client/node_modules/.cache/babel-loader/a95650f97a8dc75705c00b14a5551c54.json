{"ast":null,"code":"// import React, { useState, useEffect } from \"react\"\n// //bootstrap\n// import Container from \"react-bootstrap/esm/Container\";\n// import Form from \"react-bootstrap/Form\"\n// import Row from \"react-bootstrap/Row\"\n// import Col from \"react-bootstrap/Col\"\n// import Button from \"react-bootstrap/Button\"\n// import 'react-datasheet/lib/react-datasheet.css';\n// import { connect } from \"react-redux\"\n// import ReactDataSheet from 'react-datasheet';\n// const Plans = () => {\n//   const [editGrid, setEditGrid] = useState(false)\n//   const initialGrid = [\n//     [{value: '', readOnly: true, width: '7rem'}, {value:\"Measured Depth\", readOnly: true, width: '7rem'}, {value:\"Inclination\", readOnly: true, width: '7rem'}, {value:\"Azimuth\", readOnly: true, width: '7rem'}, {value:\"TVD\", readOnly: true, width: '7rem'}, {value:\"Northing\", readOnly: true, width: '7rem'}, {value:\"Easting\", readOnly: true, width: '7rem'}],\n//     [{value: 1, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}],\n//     [{value: 2, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}],\n//     [{value: 3, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}],\n//     [{value: 4, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}],\n//     [{value: 5, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}],\n//     [{value: 6, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}],\n//     ];\n//   const [grid, setGrid] = useState(initialGrid);\n//   const onCellsChanged = changes => {\n//     // iterate through existing grid to get a copy and not mutate current as we iterate over\n//     const gridNew = grid.map(row => [...row]);\n//     // iterate through the changes.  Each change is a cell, each cell is an object\n//     // with cell (previousVal), row, col, currentVal\n//     // mutate the value of the newGrid[row#][col#] to the new value \n//     changes.forEach(({ cell, row, col, value }) => {\n//       gridNew[row][col] = { ...grid[row][col], value };\n//     });\n//     setGrid(gridNew)\n//   };\n//   const addNewRow = () => {\n//     const localGrid = [{value: grid.length + 1, readOnly: true}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}]\n//     setGrid([...grid, localGrid])\n//   };\n//   const editPlans = () => {\n//     setEditGrid(!editGrid)\n//     const gridNew = grid.map(row => [...row]);\n//     for (let row = 1; row < gridNew.length; row ++) {\n//       for (let col = 1; col < gridNew[row].length; col ++) {\n//         gridNew[row][col].readOnly = editGrid;\n//       }\n//     }\n//     setGrid(gridNew);\n//   };\n//   const removeRow = () => {\n//     const newGrid = [...grid];\n//     newGrid.pop();\n//     setGrid(newGrid);\n//   };\n//   // const createNewPlan = () => {\n//   //     let wellPlanCount = wellPlans.length;\n//   //     let newWellPlanNumberAndPlan = {\n//   //       \"id\": wellPlanCount += 1,\n//   //       \"planDetails\": grid\n//   //     };\n//   //     const activeWellCopy = {...currentlyActiveWell};\n//   //     activeWellCopy.plans.push(newWellPlanNumberAndPlan);\n//   //     saveNewPlanToReduxStore(activeWellCopy);\n//   //     postPlansToJSONdb(activeWellCopy)\n//   // };\n//   return (\n//     <Container>\n//       <Col xs={30}>{wellInfo}</Col>\n//       <Col xs={30}>\n//     <ReactDataSheet\n//         data={grid}\n//         valueRenderer={(cell) => cell.value}\n//         onCellsChanged={onCellsChanged}\n//         // editPlans={(cell) => {\n//         //   setEditGrid(!editGrid)\n//         //   cell.readOnly = editGrid\n//         // }}\n//     />\n//     </Col>\n//     <Button variant=\"primary\" className=\"mt-4 mb-4\" onClick={()=>addNewRow()}>Add a Row</Button>\n//     <Button variant=\"danger\" className=\"my-4 ml-4\" onClick={()=>removeRow()}>Remove a Row</Button>\n//     <Button variant=\"info\" className=\"my-4 ml-4\" onClick={()=>editPlans()}>Edit Plans</Button>\n//     <Button variant=\"info\" className=\"my-4 ml-4\" onClick={()=>createNewPlan()}>Create New Plan</Button>\n//     </Container>\n//   )\n// }\n// const mapStateToProps = ({activeWell}) => {\n//   console.log(activeWell.payload)\n//   const currentlyActiveWell = Object.values(activeWell.payload[0])\n//   const wellInfo = `${activeWell.operator} - ${activeWell.rig} - ${activeWell.well}`;\n//   const wellPlans= activeWell.plans\n//   return {\n//     currentlyActiveWell,\n//     wellInfo,\n//     wellPlans\n//   }\n// }\n// export default connect(mapStateToProps, {saveNewPlanToReduxStore, postPlansToJSONdb})(Plans)","map":{"version":3,"sources":["/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/Plans.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { useState, useEffect } from \"react\"\n// //bootstrap\n// import Container from \"react-bootstrap/esm/Container\";\n// import Form from \"react-bootstrap/Form\"\n// import Row from \"react-bootstrap/Row\"\n// import Col from \"react-bootstrap/Col\"\n// import Button from \"react-bootstrap/Button\"\n\n// import 'react-datasheet/lib/react-datasheet.css';\n// import { connect } from \"react-redux\"\n// import ReactDataSheet from 'react-datasheet';\n\n// const Plans = () => {\n//   const [editGrid, setEditGrid] = useState(false)\n//   const initialGrid = [\n//     [{value: '', readOnly: true, width: '7rem'}, {value:\"Measured Depth\", readOnly: true, width: '7rem'}, {value:\"Inclination\", readOnly: true, width: '7rem'}, {value:\"Azimuth\", readOnly: true, width: '7rem'}, {value:\"TVD\", readOnly: true, width: '7rem'}, {value:\"Northing\", readOnly: true, width: '7rem'}, {value:\"Easting\", readOnly: true, width: '7rem'}],\n//     [{value: 1, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}],\n//     [{value: 2, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}],\n//     [{value: 3, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}],\n//     [{value: 4, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}],\n//     [{value: 5, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}],\n//     [{value: 6, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}],\n//     ];\n\n//   const [grid, setGrid] = useState(initialGrid);\n\n//   const onCellsChanged = changes => {\n//     // iterate through existing grid to get a copy and not mutate current as we iterate over\n//     const gridNew = grid.map(row => [...row]);\n//     // iterate through the changes.  Each change is a cell, each cell is an object\n//     // with cell (previousVal), row, col, currentVal\n//     // mutate the value of the newGrid[row#][col#] to the new value \n//     changes.forEach(({ cell, row, col, value }) => {\n//       gridNew[row][col] = { ...grid[row][col], value };\n//     });\n//     setGrid(gridNew)\n//   };\n\n//   const addNewRow = () => {\n//     const localGrid = [{value: grid.length + 1, readOnly: true}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}]\n//     setGrid([...grid, localGrid])\n//   };\n\n//   const editPlans = () => {\n//     setEditGrid(!editGrid)\n//     const gridNew = grid.map(row => [...row]);\n//     for (let row = 1; row < gridNew.length; row ++) {\n//       for (let col = 1; col < gridNew[row].length; col ++) {\n//         gridNew[row][col].readOnly = editGrid;\n//       }\n//     }\n//     setGrid(gridNew);\n//   };\n\n//   const removeRow = () => {\n//     const newGrid = [...grid];\n//     newGrid.pop();\n//     setGrid(newGrid);\n//   };\n\n//   // const createNewPlan = () => {\n//   //     let wellPlanCount = wellPlans.length;\n//   //     let newWellPlanNumberAndPlan = {\n//   //       \"id\": wellPlanCount += 1,\n//   //       \"planDetails\": grid\n//   //     };\n//   //     const activeWellCopy = {...currentlyActiveWell};\n//   //     activeWellCopy.plans.push(newWellPlanNumberAndPlan);\n//   //     saveNewPlanToReduxStore(activeWellCopy);\n//   //     postPlansToJSONdb(activeWellCopy)\n//   // };\n\n\n\n//   return (\n//     <Container>\n//       <Col xs={30}>{wellInfo}</Col>\n//       <Col xs={30}>\n//     <ReactDataSheet\n//         data={grid}\n//         valueRenderer={(cell) => cell.value}\n//         onCellsChanged={onCellsChanged}\n//         // editPlans={(cell) => {\n//         //   setEditGrid(!editGrid)\n//         //   cell.readOnly = editGrid\n//         // }}\n        \n//     />\n//     </Col>\n//     <Button variant=\"primary\" className=\"mt-4 mb-4\" onClick={()=>addNewRow()}>Add a Row</Button>\n//     <Button variant=\"danger\" className=\"my-4 ml-4\" onClick={()=>removeRow()}>Remove a Row</Button>\n//     <Button variant=\"info\" className=\"my-4 ml-4\" onClick={()=>editPlans()}>Edit Plans</Button>\n//     <Button variant=\"info\" className=\"my-4 ml-4\" onClick={()=>createNewPlan()}>Create New Plan</Button>\n    \n//     </Container>\n//   )\n// }\n\n// const mapStateToProps = ({activeWell}) => {\n//   console.log(activeWell.payload)\n//   const currentlyActiveWell = Object.values(activeWell.payload[0])\n//   const wellInfo = `${activeWell.operator} - ${activeWell.rig} - ${activeWell.well}`;\n//   const wellPlans= activeWell.plans\n//   return {\n//     currentlyActiveWell,\n//     wellInfo,\n//     wellPlans\n//   }\n// }\n\n// export default connect(mapStateToProps, {saveNewPlanToReduxStore, postPlansToJSONdb})(Plans)\n"]},"metadata":{},"sourceType":"module"}