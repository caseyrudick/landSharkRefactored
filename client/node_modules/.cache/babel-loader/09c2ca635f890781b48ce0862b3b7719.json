{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/SignUp.js\";\n// import React, { useState } from 'react';\n// import Container from 'react-bootstrap/Container';\n// import Row from 'react-bootstrap/Row';\n// import Col from 'react-bootstrap/Col';\n// import Button from 'react-bootstrap/Button';\n// import Form from 'react-bootstrap/Form';\n// import UserPool from \"./UserPool\"\n// import { CognitoUser } from 'amazon-cognito-identity-js';\n// const SignUp = () => {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [userSubmittedCredentials, setSubmittedCreds] = useState(false)\n//   const [verificationCode, setVerificationCode] = useState(null)\n//   const submitNewUser = event => {\n//     // event.preventDefault();\n//     UserPool.signUp(email, password, [], null, (err, data) => {\n//       if (err) {\n//         console.log(err)\n//       } else {\n//         console.log(data)\n//         setSubmittedCreds(true)\n//       }\n//     })\n//   }\n//   const signUp = () => {\n//     return (\n//       <Col xs={5}>\n//         <Row className=\"justify-content-md-center\">\n//           <h3>Register</h3>\n//         </Row>\n//         <Form.Group>\n//           <Form.Control /*className=\"mt-3\"*/ placeholder=\"Enter Email\" onChange={event => setEmail(event.target.value)} />\n//         </Form.Group>\n//         <Form.Group>\n//           <Form.Control /*className=\"mt-3\"*/ placeholder=\"Create Password\" onChange={event => setPassword(event.target.value)} />\n//         </Form.Group>\n//           <Button className=\"mt-4\" variant=\"info\" disabled={ email === \"\" && password === \"\" && userSubmittedCredentials === false ? true : false } onClick={()=>submitNewUser()}>Submit</Button>\n//       </Col>\n//     )\n//   }\n//   const verifyConfirmationCode = event => {\n//     event.preventDefault()\n//     const userData = {\n//       Username: email,\n//       Pool: UserPool\n//     }\n//     console.log(verificationCode)\n//     const congitoUser = new CognitoUser(userData);\n//     congitoUser.confirmRegistration(verificationCode, true, (err, result) => {\n//       if (err) {\n//         console.log(err)\n//       } else {\n//         console.log(result)\n//       }\n//     })\n//   }\nimport React from \"react\";\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody } from 'mdbreact';\n\nconst SignUp = () => {\n  return /*#__PURE__*/_jsxDEV(MDBContainer, {\n    children: /*#__PURE__*/_jsxDEV(MDBRow, {\n      children: /*#__PURE__*/_jsxDEV(MDBCol, {\n        md: \"6\",\n        children: /*#__PURE__*/_jsxDEV(MDBCard, {\n          children: /*#__PURE__*/_jsxDEV(MDBCardBody, {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"h4 text-center py-4\",\n                children: \"Sign up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"grey-text\",\n                children: [/*#__PURE__*/_jsxDEV(MDBInput, {\n                  label: \"Your name\",\n                  icon: \"user\",\n                  group: true,\n                  type: \"text\",\n                  validate: true,\n                  error: \"wrong\",\n                  success: \"right\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n                  label: \"Your email\",\n                  icon: \"envelope\",\n                  group: true,\n                  type: \"email\",\n                  validate: true,\n                  error: \"wrong\",\n                  success: \"right\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n                  label: \"Confirm your email\",\n                  icon: \"exclamation-triangle\",\n                  group: true,\n                  type: \"text\",\n                  validate: true,\n                  error: \"wrong\",\n                  success: \"right\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n                  label: \"Your password\",\n                  icon: \"lock\",\n                  group: true,\n                  type: \"password\",\n                  validate: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center py-4 mt-3\",\n                children: /*#__PURE__*/_jsxDEV(MDBBtn, {\n                  color: \"cyan\",\n                  type: \"submit\",\n                  children: \"Register\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_c = SignUp;\nexport default SignUp; //   const renderConfirmationCodeForm = () => {\n//      return (\n//       <Form.Group>\n//         <h3 className=\"my-4\">Confirmation Code</h3>\n//         <Form.Control className=\"mt-3\" placeholder=\"Enter Verification Code\" onChange={event => setVerificationCode(event.target.value)} />\n//         <Button className=\"mt-4\" variant=\"primary\" disabled={ verificationCode === \"\" ? true : false } onClick={(event) => verifyConfirmationCode(event)}>Submit</Button>\n//       </Form.Group>\n//      )\n//   }\n//   return (\n//     <Container>\n//       <Col>\n//         {signUp()}\n//         {userSubmittedCredentials ? renderConfirmationCodeForm() : null }\n//       </Col>\n//     </Container>\n//   )\n// }\n// export default SignUp\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/SignUp.js"],"names":["React","MDBContainer","MDBRow","MDBCol","MDBInput","MDBBtn","MDBCard","MDBCardBody","SignUp"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,MAAvB,EAA+BC,MAA/B,EAAuCC,QAAvC,EAAiDC,MAAjD,EAAyDC,OAAzD,EAAkEC,WAAlE,QAAqF,UAArF;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,sBACE,QAAC,YAAD;AAAA,2BACE,QAAC,MAAD;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,GAAX;AAAA,+BACE,QAAC,OAAD;AAAA,iCACE,QAAC,WAAD;AAAA,mCACE;AAAA,sCACE;AAAG,gBAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAK,gBAAA,SAAS,EAAC,WAAf;AAAA,wCACE,QAAC,QAAD;AACE,kBAAA,KAAK,EAAC,WADR;AAEE,kBAAA,IAAI,EAAC,MAFP;AAGE,kBAAA,KAAK,MAHP;AAIE,kBAAA,IAAI,EAAC,MAJP;AAKE,kBAAA,QAAQ,MALV;AAME,kBAAA,KAAK,EAAC,OANR;AAOE,kBAAA,OAAO,EAAC;AAPV;AAAA;AAAA;AAAA;AAAA,wBADF,eAUE,QAAC,QAAD;AACE,kBAAA,KAAK,EAAC,YADR;AAEE,kBAAA,IAAI,EAAC,UAFP;AAGE,kBAAA,KAAK,MAHP;AAIE,kBAAA,IAAI,EAAC,OAJP;AAKE,kBAAA,QAAQ,MALV;AAME,kBAAA,KAAK,EAAC,OANR;AAOE,kBAAA,OAAO,EAAC;AAPV;AAAA;AAAA;AAAA;AAAA,wBAVF,eAmBE,QAAC,QAAD;AACE,kBAAA,KAAK,EAAC,oBADR;AAEE,kBAAA,IAAI,EAAC,sBAFP;AAGE,kBAAA,KAAK,MAHP;AAIE,kBAAA,IAAI,EAAC,MAJP;AAKE,kBAAA,QAAQ,MALV;AAME,kBAAA,KAAK,EAAC,OANR;AAOE,kBAAA,OAAO,EAAC;AAPV;AAAA;AAAA;AAAA;AAAA,wBAnBF,eA4BE,QAAC,QAAD;AACE,kBAAA,KAAK,EAAC,eADR;AAEE,kBAAA,IAAI,EAAC,MAFP;AAGE,kBAAA,KAAK,MAHP;AAIE,kBAAA,IAAI,EAAC,UAJP;AAKE,kBAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,wBA5BF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAsCE;AAAK,gBAAA,SAAS,EAAC,uBAAf;AAAA,uCACE,QAAC,MAAD;AAAQ,kBAAA,KAAK,EAAC,MAAd;AAAqB,kBAAA,IAAI,EAAC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAtCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwDD,CAzDD;;KAAMA,M;AA2DN,eAAeA,MAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA","sourcesContent":["// import React, { useState } from 'react';\n// import Container from 'react-bootstrap/Container';\n// import Row from 'react-bootstrap/Row';\n// import Col from 'react-bootstrap/Col';\n// import Button from 'react-bootstrap/Button';\n// import Form from 'react-bootstrap/Form';\n\n// import UserPool from \"./UserPool\"\n// import { CognitoUser } from 'amazon-cognito-identity-js';\n\n\n// const SignUp = () => {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [userSubmittedCredentials, setSubmittedCreds] = useState(false)\n//   const [verificationCode, setVerificationCode] = useState(null)\n\n//   const submitNewUser = event => {\n//     // event.preventDefault();\n\n//     UserPool.signUp(email, password, [], null, (err, data) => {\n//       if (err) {\n//         console.log(err)\n//       } else {\n//         console.log(data)\n//         setSubmittedCreds(true)\n//       }\n//     })\n//   }\n\n//   const signUp = () => {\n//     return (\n//       <Col xs={5}>\n//         <Row className=\"justify-content-md-center\">\n//           <h3>Register</h3>\n//         </Row>\n//         <Form.Group>\n//           <Form.Control /*className=\"mt-3\"*/ placeholder=\"Enter Email\" onChange={event => setEmail(event.target.value)} />\n//         </Form.Group>\n//         <Form.Group>\n//           <Form.Control /*className=\"mt-3\"*/ placeholder=\"Create Password\" onChange={event => setPassword(event.target.value)} />\n//         </Form.Group>\n//           <Button className=\"mt-4\" variant=\"info\" disabled={ email === \"\" && password === \"\" && userSubmittedCredentials === false ? true : false } onClick={()=>submitNewUser()}>Submit</Button>\n\n//       </Col>\n//     )\n//   }\n\n//   const verifyConfirmationCode = event => {\n//     event.preventDefault()\n//     const userData = {\n//       Username: email,\n//       Pool: UserPool\n//     }\n//     console.log(verificationCode)\n//     const congitoUser = new CognitoUser(userData);\n//     congitoUser.confirmRegistration(verificationCode, true, (err, result) => {\n//       if (err) {\n//         console.log(err)\n//       } else {\n//         console.log(result)\n//       }\n//     })\n//   }\n\n\nimport React from \"react\";\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody } from 'mdbreact';\n\nconst SignUp = () => {\n  return (\n    <MDBContainer>\n      <MDBRow>\n        <MDBCol md=\"6\">\n          <MDBCard>\n            <MDBCardBody>\n              <form>\n                <p className=\"h4 text-center py-4\">Sign up</p>\n                <div className=\"grey-text\">\n                  <MDBInput\n                    label=\"Your name\"\n                    icon=\"user\"\n                    group\n                    type=\"text\"\n                    validate\n                    error=\"wrong\"\n                    success=\"right\"\n                  />\n                  <MDBInput\n                    label=\"Your email\"\n                    icon=\"envelope\"\n                    group\n                    type=\"email\"\n                    validate\n                    error=\"wrong\"\n                    success=\"right\"\n                  />\n                  <MDBInput\n                    label=\"Confirm your email\"\n                    icon=\"exclamation-triangle\"\n                    group\n                    type=\"text\"\n                    validate\n                    error=\"wrong\"\n                    success=\"right\"\n                  />\n                  <MDBInput\n                    label=\"Your password\"\n                    icon=\"lock\"\n                    group\n                    type=\"password\"\n                    validate\n                  />\n                </div>\n                <div className=\"text-center py-4 mt-3\">\n                  <MDBBtn color=\"cyan\" type=\"submit\">\n                    Register\n                  </MDBBtn>\n                </div>\n              </form>\n            </MDBCardBody>\n          </MDBCard>\n        </MDBCol>\n      </MDBRow>\n    </MDBContainer>\n  );\n};\n\nexport default SignUp;\n\n\n//   const renderConfirmationCodeForm = () => {\n//      return (\n//       <Form.Group>\n//         <h3 className=\"my-4\">Confirmation Code</h3>\n//         <Form.Control className=\"mt-3\" placeholder=\"Enter Verification Code\" onChange={event => setVerificationCode(event.target.value)} />\n//         <Button className=\"mt-4\" variant=\"primary\" disabled={ verificationCode === \"\" ? true : false } onClick={(event) => verifyConfirmationCode(event)}>Submit</Button>\n//       </Form.Group>\n//      )\n//   }\n\n//   return (\n//     <Container>\n//       <Col>\n//         {signUp()}\n//         {userSubmittedCredentials ? renderConfirmationCodeForm() : null }\n//       </Col>\n//     </Container>\n//   )\n\n// }\n\n// export default SignUp"]},"metadata":{},"sourceType":"module"}