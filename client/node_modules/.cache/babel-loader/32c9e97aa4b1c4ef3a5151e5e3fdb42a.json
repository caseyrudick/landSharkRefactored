{"ast":null,"code":"\"use strict\";\n\nmodule.exports = triangulateCube;\n\nvar perm = require(\"permutation-rank\");\n\nvar sgn = require(\"permutation-parity\");\n\nvar gamma = require(\"gamma\");\n\nfunction triangulateCube(dimension) {\n  if (dimension < 0) {\n    return [];\n  }\n\n  if (dimension === 0) {\n    return [[0]];\n  }\n\n  var dfactorial = Math.round(gamma(dimension + 1)) | 0;\n  var result = [];\n\n  for (var i = 0; i < dfactorial; ++i) {\n    var p = perm.unrank(dimension, i);\n    var cell = [0];\n    var v = 0;\n\n    for (var j = 0; j < p.length; ++j) {\n      v += 1 << p[j];\n      cell.push(v);\n    }\n\n    if (sgn(p) < 1) {\n      cell[0] = v;\n      cell[dimension] = 0;\n    }\n\n    result.push(cell);\n  }\n\n  return result;\n}","map":{"version":3,"sources":["/Users/caseyrudick/Documents/landsharkrefactored-copy/client/node_modules/triangulate-hypercube/triangulate-cube.js"],"names":["module","exports","triangulateCube","perm","require","sgn","gamma","dimension","dfactorial","Math","round","result","i","p","unrank","cell","v","j","length","push"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,eAAjB;;AAEA,IAAIC,IAAI,GAAGC,OAAO,CAAC,kBAAD,CAAlB;;AACA,IAAIC,GAAG,GAAGD,OAAO,CAAC,oBAAD,CAAjB;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,OAAD,CAAnB;;AAEA,SAASF,eAAT,CAAyBK,SAAzB,EAAoC;AAClC,MAAGA,SAAS,GAAG,CAAf,EAAkB;AAChB,WAAO,EAAP;AACD;;AACD,MAAGA,SAAS,KAAK,CAAjB,EAAoB;AAClB,WAAO,CAAE,CAAC,CAAD,CAAF,CAAP;AACD;;AACD,MAAIC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWJ,KAAK,CAACC,SAAS,GAAC,CAAX,CAAhB,IAA+B,CAAhD;AACA,MAAII,MAAM,GAAG,EAAb;;AACA,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACJ,UAAf,EAA2B,EAAEI,CAA7B,EAAgC;AAC9B,QAAIC,CAAC,GAAGV,IAAI,CAACW,MAAL,CAAYP,SAAZ,EAAuBK,CAAvB,CAAR;AACA,QAAIG,IAAI,GAAG,CAAE,CAAF,CAAX;AACA,QAAIC,CAAC,GAAG,CAAR;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACJ,CAAC,CAACK,MAAjB,EAAyB,EAAED,CAA3B,EAA8B;AAC5BD,MAAAA,CAAC,IAAK,KAAGH,CAAC,CAACI,CAAD,CAAV;AACAF,MAAAA,IAAI,CAACI,IAAL,CAAUH,CAAV;AACD;;AACD,QAAGX,GAAG,CAACQ,CAAD,CAAH,GAAS,CAAZ,EAAe;AACbE,MAAAA,IAAI,CAAC,CAAD,CAAJ,GAAUC,CAAV;AACAD,MAAAA,IAAI,CAACR,SAAD,CAAJ,GAAkB,CAAlB;AACD;;AACDI,IAAAA,MAAM,CAACQ,IAAP,CAAYJ,IAAZ;AACD;;AACD,SAAOJ,MAAP;AACD","sourcesContent":["\"use strict\"\n\nmodule.exports = triangulateCube\n\nvar perm = require(\"permutation-rank\")\nvar sgn = require(\"permutation-parity\")\nvar gamma = require(\"gamma\")\n\nfunction triangulateCube(dimension) {\n  if(dimension < 0) {\n    return [ ]\n  }\n  if(dimension === 0) {\n    return [ [0] ]\n  }\n  var dfactorial = Math.round(gamma(dimension+1))|0\n  var result = []\n  for(var i=0; i<dfactorial; ++i) {\n    var p = perm.unrank(dimension, i)\n    var cell = [ 0 ]\n    var v = 0\n    for(var j=0; j<p.length; ++j) {\n      v += (1<<p[j])\n      cell.push(v)\n    }\n    if(sgn(p) < 1) {\n      cell[0] = v\n      cell[dimension] = 0\n    }\n    result.push(cell)\n  }\n  return result\n}"]},"metadata":{},"sourceType":"script"}