{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar meta_1 = require(\"@turf/meta\");\n\nvar helpers_1 = require(\"@turf/helpers\");\n/**\n * Takes one or more features and calculates the centroid using the mean of all vertices.\n * This lessens the effect of small islands and artifacts when calculating the centroid of a set of polygons.\n *\n * @name centroid\n * @param {GeoJSON} geojson GeoJSON to be centered\n * @param {Object} [options={}] Optional Parameters\n * @param {Object} [options.properties={}] an Object that is used as the {@link Feature}'s properties\n * @returns {Feature<Point>} the centroid of the input features\n * @example\n * var polygon = turf.polygon([[[-81, 41], [-88, 36], [-84, 31], [-80, 33], [-77, 39], [-81, 41]]]);\n *\n * var centroid = turf.centroid(polygon);\n *\n * //addToMap\n * var addToMap = [polygon, centroid]\n */\n\n\nfunction centroid(geojson, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var xSum = 0;\n  var ySum = 0;\n  var len = 0;\n  meta_1.coordEach(geojson, function (coord) {\n    xSum += coord[0];\n    ySum += coord[1];\n    len++;\n  });\n  return helpers_1.point([xSum / len, ySum / len], options.properties);\n}\n\nexports.default = centroid;","map":{"version":3,"sources":["/Users/caseyrudick/Documents/landsharkrefactored-copy/client/node_modules/@turf/centroid/index.js"],"names":["Object","defineProperty","exports","value","meta_1","require","helpers_1","centroid","geojson","options","xSum","ySum","len","coordEach","coord","point","properties","default"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,YAAD,CAApB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,eAAD,CAAvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,QAAT,CAAkBC,OAAlB,EAA2BC,OAA3B,EAAoC;AAChC,MAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AAAEA,IAAAA,OAAO,GAAG,EAAV;AAAe;;AACzC,MAAIC,IAAI,GAAG,CAAX;AACA,MAAIC,IAAI,GAAG,CAAX;AACA,MAAIC,GAAG,GAAG,CAAV;AACAR,EAAAA,MAAM,CAACS,SAAP,CAAiBL,OAAjB,EAA0B,UAAUM,KAAV,EAAiB;AACvCJ,IAAAA,IAAI,IAAII,KAAK,CAAC,CAAD,CAAb;AACAH,IAAAA,IAAI,IAAIG,KAAK,CAAC,CAAD,CAAb;AACAF,IAAAA,GAAG;AACN,GAJD;AAKA,SAAON,SAAS,CAACS,KAAV,CAAgB,CAACL,IAAI,GAAGE,GAAR,EAAaD,IAAI,GAAGC,GAApB,CAAhB,EAA0CH,OAAO,CAACO,UAAlD,CAAP;AACH;;AACDd,OAAO,CAACe,OAAR,GAAkBV,QAAlB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar meta_1 = require(\"@turf/meta\");\nvar helpers_1 = require(\"@turf/helpers\");\n/**\n * Takes one or more features and calculates the centroid using the mean of all vertices.\n * This lessens the effect of small islands and artifacts when calculating the centroid of a set of polygons.\n *\n * @name centroid\n * @param {GeoJSON} geojson GeoJSON to be centered\n * @param {Object} [options={}] Optional Parameters\n * @param {Object} [options.properties={}] an Object that is used as the {@link Feature}'s properties\n * @returns {Feature<Point>} the centroid of the input features\n * @example\n * var polygon = turf.polygon([[[-81, 41], [-88, 36], [-84, 31], [-80, 33], [-77, 39], [-81, 41]]]);\n *\n * var centroid = turf.centroid(polygon);\n *\n * //addToMap\n * var addToMap = [polygon, centroid]\n */\nfunction centroid(geojson, options) {\n    if (options === void 0) { options = {}; }\n    var xSum = 0;\n    var ySum = 0;\n    var len = 0;\n    meta_1.coordEach(geojson, function (coord) {\n        xSum += coord[0];\n        ySum += coord[1];\n        len++;\n    });\n    return helpers_1.point([xSum / len, ySum / len], options.properties);\n}\nexports.default = centroid;\n"]},"metadata":{},"sourceType":"script"}