[{"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/PVA.js":"1","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/postWellInfoToJSONDb.js":"2","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/index.js":"3","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/saveWellInfoToReduxStoreReducer.js":"4","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/savePlansToReduxStoreReducer.js":"5","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getWellsFromJSONDbReducer.js":"6","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/saveActiveWellToReduxStoreReducer.js":"7","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getWellPlansFromJSONDbReducer.js":"8","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/saveWellInfoToReduxStore.js":"9","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/postPlansToJSONDb.js":"10","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/types.js":"11","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/EW.js":"12","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/TVD.js":"13","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/RF.js":"14","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/ExistingPVA.js":"15","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getLeaseLinesFromJSONDbReducer.js":"16","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/Home.js":"17","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/App.js":"18","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/Plans.js":"19","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/postWellInfoToJSONDbReducer.js":"20","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getWellPlansFromJSONDb.js":"21","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/saveLeaseLinesToReduxStore.js":"22","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/NS.js":"23","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/DLS.js":"24","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/DLC.js":"25","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getWellsFromJSONDb.js":"26","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getWellsWithLeaseLinesFromJSONDbReducer.js":"27","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/index.js":"28","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/postLeaseLinesToJSONDbReducer.js":"29","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getWellsWithLeaseLinesFromJSONDb.js":"30","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/Surveys.js":"31","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/postPlansToJSONDbReducer.js":"32","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/saveLeaseLinesToReduxStoreReducer.js":"33","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/SECT.js":"34","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getLeaseLinesFromJSONDb.js":"35","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/saveSurveysToReduxStoreReducer.js":"36","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/postSurveysToJSONDbReducer.js":"37","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/postSurveysToJSONDb.js":"38","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getWellsWithSurveysFromJSONDbReducer.js":"39","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getWellsWithSurveysFromJSONDb.js":"40","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/ExistingSurveys.js":"41","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getSurveysFromJSONDbReducer.js":"42","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getSurveysFromJSONDb.js":"43","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/ExistingPlans.js":"44","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/ExistingPolyLines.js":"45","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/ExistingLeaseLines.js":"46","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/postHardLinesToJSONDbReducer.js":"47","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getWellsWithHardLinesFromJSONDbReducer.js":"48","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/PolyLines.js":"49","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/LeaseLines.js":"50","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getHardLinesFromJSONDb.js":"51","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/ExistingHardLines.js":"52","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/HardLines.js":"53","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getWellsWithHardLinesFromJSONDb.js":"54","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/saveHardLinesToReduxStoreReducer.js":"55","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/saveSurveysToReduxStore.js":"56","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/postLeaseLinesToJSONDb.js":"57","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/APIs/wells.js":"58","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/saveHardLinesToReduxStore.js":"59","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/saveActiveWellToReduxStore.js":"60","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/savePlansToReduxStore.js":"61","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/postHardLinesToJSONDb.js":"62","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getHardLinesFromJSONDbReducer.js":"63","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/UserVerification/SignIn.js":"64","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/UserVerification/SignInHome.js":"65","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/UserVerification/UserPool.js":"66","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/UserVerification/SignUp.js":"67","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/UserVerification/userNeedsToCreateAccount.js":"68","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/userNeedsToCreateAccountReducer.js":"69","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/History.js":"70","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/Dashboard.js":"71","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/scratch.js":"72","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/postWellInfoToDynamoDb.js":"73","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/postWellInfoToDynamoDbReducer.js":"74","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/postPlansToDynamoDbReducer.js":"75","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/postPlansToDynamoDb.js":"76","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getWellsFromDynamoDbReducer.js":"77","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Components/App.js":"78","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/index.js":"79","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/postPlansToJSONDbReducer.js":"80","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/postLeaseLinesToJSONDbReducer.js":"81","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/saveLeaseLinesToReduxStoreReducer.js":"82","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/getWellsWithSurveysFromJSONDbReducer.js":"83","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/saveHardLinesToReduxStoreReducer.js":"84","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/getWellsWithHardLinesFromJSONDbReducer.js":"85","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/getWellPlansFromDynamoDbReducer.js":"86","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Components/Plans.js":"87","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Components/ExistingSurveys.js":"88","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Components/ExistingPlans.js":"89","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Components/UserVerification/UserPool.js":"90","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/ActionCreators/savePlansToReduxStore.js":"91","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/ActionCreators/postPlansToJSONDb.js":"92","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/ActionCreators/postWellInfoToDynamoDb.js":"93","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/ActionCreators/saveSurveysToReduxStore.js":"94","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Components/ExistingLeaseLines.js":"95","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/HelperFunctions/Calculations/TVD.js":"96","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/HelperFunctions/Calculations/NS.js":"97","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/ActionCreators/getSurveysFromJSONDb.js":"98","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/ActionCreators/saveActiveWellToReduxStore.js":"99","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/ActionCreators/postLeaseLinesToJSONDb.js":"100","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/HelperFunctions/Calculations/RF.js":"101","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Components/Home.js":"102","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/index.js":"103","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Components/Dashboard.js":"104","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/getLeaseLinesFromJSONDbReducer.js":"105","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/saveSurveysToReduxStoreReducer.js":"106","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/getHardLinesFromJSONDbReducer.js":"107","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/postPlansToDynamoDbReducer.js":"108","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/postWellInfoToJSONDbReducer.js":"109","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Components/ExistingPolyLines.js":"110","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Components/ExistingPVA.js":"111","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/ActionCreators/saveWellInfoToReduxStore.js":"112","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/ActionCreators/getLeaseLinesFromJSONDb.js":"113","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/ActionCreators/getWellsWithLeaseLinesFromJSONDb.js":"114","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/ActionCreators/getWellsWithHardLinesFromJSONDb.js":"115","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/ActionCreators/getHardLinesFromJSONDb.js":"116","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/ActionCreators/saveLeaseLinesToReduxStore.js":"117","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/ActionCreators/postSurveysToJSONDb.js":"118","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Components/ExistingHardLines.js":"119","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/ActionCreators/postPlansToDynamoDb.js":"120","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/ActionCreators/UserVerification/userNeedsToCreateAccount.js":"121","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Components/UserVerification/SignIn.js":"122","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/HelperFunctions/Calculations/DLC.js":"123","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/ActionCreators/getWellPlansFromDynamoDb.js":"124","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Components/History.js":"125","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/getWellsFromJSONDbReducer.js":"126","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/getWellPlansFromJSONDbReducer.js":"127","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/postSurveysToJSONDbReducer.js":"128","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/getSurveysFromJSONDbReducer.js":"129","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/getWellsFromDynamoDbReducer.js":"130","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Components/PVA.js":"131","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Components/UserVerification/SignInHome.js":"132","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/ActionCreators/types.js":"133","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/ActionCreators/getWellPlansFromJSONDb.js":"134","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/HelperFunctions/Calculations/SECT.js":"135","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/ActionCreators/postHardLinesToJSONDb.js":"136","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/ActionCreators/saveHardLinesToReduxStore.js":"137","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Components/UserVerification/SignUp.js":"138","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/savePlansToReduxStoreReducer.js":"139","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/saveActiveWellToReduxStoreReducer.js":"140","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/getWellsWithLeaseLinesFromJSONDbReducer.js":"141","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/ActionCreators/getWellsFromDynamoDb.js":"142","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/HelperFunctions/Calculations/EW.js":"143","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Components/LeaseLines.js":"144","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/APIs/wells.js":"145","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/saveWellInfoToReduxStoreReducer.js":"146","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/postHardLinesToJSONDbReducer.js":"147","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/postWellInfoToDynamoDbReducer.js":"148","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Components/Surveys.js":"149","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Components/HardLines.js":"150","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/ActionCreators/getWellsFromJSONDb.js":"151"},{"size":5197,"mtime":1608305877761,"results":"152","hashOfConfig":"153"},{"size":831,"mtime":1608086866799,"results":"154","hashOfConfig":"153"},{"size":2735,"mtime":1610494047059,"results":"155","hashOfConfig":"153"},{"size":705,"mtime":1607563251547,"results":"156","hashOfConfig":"153"},{"size":623,"mtime":1607523677659,"results":"157","hashOfConfig":"153"},{"size":626,"mtime":1607538953582,"results":"158","hashOfConfig":"153"},{"size":664,"mtime":1607633245513,"results":"159","hashOfConfig":"153"},{"size":637,"mtime":1607636656362,"results":"160","hashOfConfig":"153"},{"size":622,"mtime":1607563740710,"results":"161","hashOfConfig":"153"},{"size":838,"mtime":1607703856457,"results":"162","hashOfConfig":"153"},{"size":6364,"mtime":1610492616160,"results":"163","hashOfConfig":"153"},{"size":905,"mtime":1608144934403,"results":"164","hashOfConfig":"153"},{"size":827,"mtime":1608138150131,"results":"165","hashOfConfig":"153"},{"size":196,"mtime":1608143803818,"results":"166","hashOfConfig":"153"},{"size":5815,"mtime":1608262317225,"results":"167","hashOfConfig":"153"},{"size":638,"mtime":1608090093045,"results":"168","hashOfConfig":"153"},{"size":6951,"mtime":1610494369130,"results":"169","hashOfConfig":"153"},{"size":1104,"mtime":1610118183202,"results":"170","hashOfConfig":"153"},{"size":9216,"mtime":1610404054642,"results":"171","hashOfConfig":"153"},{"size":615,"mtime":1607486694229,"results":"172","hashOfConfig":"153"},{"size":1350,"mtime":1607882728534,"results":"173","hashOfConfig":"153"},{"size":549,"mtime":1607702894653,"results":"174","hashOfConfig":"153"},{"size":867,"mtime":1608144866509,"results":"175","hashOfConfig":"153"},{"size":478,"mtime":1607525889497,"results":"176","hashOfConfig":"153"},{"size":462,"mtime":1608143792958,"results":"177","hashOfConfig":"153"},{"size":555,"mtime":1608132032248,"results":"178","hashOfConfig":"153"},{"size":1144,"mtime":1608216198423,"results":"179","hashOfConfig":"153"},{"size":867,"mtime":1610045436125,"results":"180","hashOfConfig":"153"},{"size":632,"mtime":1607877919616,"results":"181","hashOfConfig":"153"},{"size":1354,"mtime":1608216060566,"results":"182","hashOfConfig":"153"},{"size":9228,"mtime":1608219411373,"results":"183","hashOfConfig":"153"},{"size":584,"mtime":1607528546735,"results":"184","hashOfConfig":"153"},{"size":694,"mtime":1607659948536,"results":"185","hashOfConfig":"153"},{"size":1222,"mtime":1607526475495,"results":"186","hashOfConfig":"153"},{"size":1119,"mtime":1608260264135,"results":"187","hashOfConfig":"153"},{"size":640,"mtime":1608216797800,"results":"188","hashOfConfig":"153"},{"size":611,"mtime":1608218987483,"results":"189","hashOfConfig":"153"},{"size":593,"mtime":1608219456070,"results":"190","hashOfConfig":"153"},{"size":682,"mtime":1608220509005,"results":"191","hashOfConfig":"153"},{"size":653,"mtime":1608222078292,"results":"192","hashOfConfig":"153"},{"size":2226,"mtime":1608223787867,"results":"193","hashOfConfig":"153"},{"size":619,"mtime":1608221538512,"results":"194","hashOfConfig":"153"},{"size":1038,"mtime":1608223853004,"results":"195","hashOfConfig":"153"},{"size":5295,"mtime":1608236762260,"results":"196","hashOfConfig":"153"},{"size":1267,"mtime":1608241471750,"results":"197","hashOfConfig":"153"},{"size":1689,"mtime":1608242709255,"results":"198","hashOfConfig":"153"},{"size":666,"mtime":1608239736034,"results":"199","hashOfConfig":"153"},{"size":663,"mtime":1608240154986,"results":"200","hashOfConfig":"153"},{"size":6530,"mtime":1608242687828,"results":"201","hashOfConfig":"153"},{"size":4312,"mtime":1608242076616,"results":"202","hashOfConfig":"153"},{"size":1028,"mtime":1608260229827,"results":"203","hashOfConfig":"153"},{"size":1673,"mtime":1608241692134,"results":"204","hashOfConfig":"153"},{"size":4275,"mtime":1608264477989,"results":"205","hashOfConfig":"153"},{"size":634,"mtime":1608243294731,"results":"206","hashOfConfig":"153"},{"size":689,"mtime":1608239459262,"results":"207","hashOfConfig":"153"},{"size":560,"mtime":1608216616484,"results":"208","hashOfConfig":"153"},{"size":652,"mtime":1607878537714,"results":"209","hashOfConfig":"153"},{"size":94,"mtime":1606780246113,"results":"210","hashOfConfig":"153"},{"size":543,"mtime":1608239273804,"results":"211","hashOfConfig":"153"},{"size":578,"mtime":1607633701228,"results":"212","hashOfConfig":"153"},{"size":523,"mtime":1607616565129,"results":"213","hashOfConfig":"153"},{"size":645,"mtime":1608239628710,"results":"214","hashOfConfig":"153"},{"size":632,"mtime":1608240474635,"results":"215","hashOfConfig":"153"},{"size":3714,"mtime":1610122838546,"results":"216","hashOfConfig":"153"},{"size":855,"mtime":1610076221412,"results":"217","hashOfConfig":"153"},{"size":414,"mtime":1609967332382,"results":"218","hashOfConfig":"153"},{"size":3836,"mtime":1610123839675,"results":"219","hashOfConfig":"153"},{"size":414,"mtime":1609991775897,"results":"220","hashOfConfig":"153"},{"size":527,"mtime":1609991622795,"results":"221","hashOfConfig":"153"},{"size":87,"mtime":1610045440531,"results":"222","hashOfConfig":"153"},{"size":4488,"mtime":1610079560581,"results":"223","hashOfConfig":"153"},{"size":1508,"mtime":1610216909177,"results":"224","hashOfConfig":"153"},{"size":857,"mtime":1610238749714,"results":"225","hashOfConfig":"153"},{"size":638,"mtime":1610239053936,"results":"226","hashOfConfig":"153"},{"size":608,"mtime":1610296883009,"results":"227","hashOfConfig":"153"},{"size":1147,"mtime":1610494049885,"results":"228","hashOfConfig":"153"},{"size":609,"mtime":1610493200013,"results":"229","hashOfConfig":"153"},{"size":1104,"mtime":1610510161665,"results":"230","hashOfConfig":"231"},{"size":2854,"mtime":1610510161673,"results":"232","hashOfConfig":"231"},{"size":584,"mtime":1610510161673,"results":"233","hashOfConfig":"231"},{"size":632,"mtime":1610510161673,"results":"234","hashOfConfig":"231"},{"size":694,"mtime":1610510161674,"results":"235","hashOfConfig":"231"},{"size":682,"mtime":1610510161673,"results":"236","hashOfConfig":"231"},{"size":689,"mtime":1610510161674,"results":"237","hashOfConfig":"231"},{"size":663,"mtime":1610510161672,"results":"238","hashOfConfig":"231"},{"size":646,"mtime":1610554418197,"results":"239","hashOfConfig":"231"},{"size":9216,"mtime":1610510161668,"results":"240","hashOfConfig":"231"},{"size":2226,"mtime":1610510161667,"results":"241","hashOfConfig":"231"},{"size":5295,"mtime":1610510161666,"results":"242","hashOfConfig":"231"},{"size":414,"mtime":1610510161669,"results":"243","hashOfConfig":"231"},{"size":523,"mtime":1610510161664,"results":"244","hashOfConfig":"231"},{"size":838,"mtime":1610510161662,"results":"245","hashOfConfig":"231"},{"size":857,"mtime":1610510161663,"results":"246","hashOfConfig":"231"},{"size":560,"mtime":1610510161664,"results":"247","hashOfConfig":"231"},{"size":1689,"mtime":1610510161666,"results":"248","hashOfConfig":"231"},{"size":827,"mtime":1610510161671,"results":"249","hashOfConfig":"231"},{"size":867,"mtime":1610510161670,"results":"250","hashOfConfig":"231"},{"size":1038,"mtime":1610510161660,"results":"251","hashOfConfig":"231"},{"size":578,"mtime":1610510161663,"results":"252","hashOfConfig":"231"},{"size":652,"mtime":1610510161662,"results":"253","hashOfConfig":"231"},{"size":196,"mtime":1610510161670,"results":"254","hashOfConfig":"231"},{"size":6889,"mtime":1610555991332,"results":"255","hashOfConfig":"231"},{"size":867,"mtime":1610510161675,"results":"256","hashOfConfig":"231"},{"size":4599,"mtime":1610555731727,"results":"257","hashOfConfig":"231"},{"size":638,"mtime":1610510161671,"results":"258","hashOfConfig":"231"},{"size":640,"mtime":1610510161675,"results":"259","hashOfConfig":"231"},{"size":632,"mtime":1610510161671,"results":"260","hashOfConfig":"231"},{"size":608,"mtime":1610510161673,"results":"261","hashOfConfig":"231"},{"size":615,"mtime":1610510161674,"results":"262","hashOfConfig":"231"},{"size":1267,"mtime":1610510161666,"results":"263","hashOfConfig":"231"},{"size":5815,"mtime":1610510161666,"results":"264","hashOfConfig":"231"},{"size":622,"mtime":1610510161664,"results":"265","hashOfConfig":"231"},{"size":1119,"mtime":1610510161660,"results":"266","hashOfConfig":"231"},{"size":1354,"mtime":1610510161661,"results":"267","hashOfConfig":"231"},{"size":634,"mtime":1610510161661,"results":"268","hashOfConfig":"231"},{"size":1028,"mtime":1610510161659,"results":"269","hashOfConfig":"231"},{"size":549,"mtime":1610510161664,"results":"270","hashOfConfig":"231"},{"size":593,"mtime":1610510161663,"results":"271","hashOfConfig":"231"},{"size":1673,"mtime":1610510161666,"results":"272","hashOfConfig":"231"},{"size":1147,"mtime":1610510161662,"results":"273","hashOfConfig":"231"},{"size":414,"mtime":1610510161659,"results":"274","hashOfConfig":"231"},{"size":3714,"mtime":1610510161668,"results":"275","hashOfConfig":"231"},{"size":462,"mtime":1610510161670,"results":"276","hashOfConfig":"231"},{"size":800,"mtime":1610653789786,"results":"277","hashOfConfig":"231"},{"size":87,"mtime":1610510161667,"results":"278","hashOfConfig":"231"},{"size":626,"mtime":1610510161672,"results":"279","hashOfConfig":"231"},{"size":637,"mtime":1610510161672,"results":"280","hashOfConfig":"231"},{"size":611,"mtime":1610510161674,"results":"281","hashOfConfig":"231"},{"size":619,"mtime":1610510161671,"results":"282","hashOfConfig":"231"},{"size":609,"mtime":1610510161672,"results":"283","hashOfConfig":"231"},{"size":5197,"mtime":1610510161668,"results":"284","hashOfConfig":"231"},{"size":855,"mtime":1610510161669,"results":"285","hashOfConfig":"231"},{"size":6642,"mtime":1610510161665,"results":"286","hashOfConfig":"231"},{"size":1350,"mtime":1610510161660,"results":"287","hashOfConfig":"231"},{"size":1222,"mtime":1610510161670,"results":"288","hashOfConfig":"231"},{"size":645,"mtime":1610510161662,"results":"289","hashOfConfig":"231"},{"size":543,"mtime":1610510161663,"results":"290","hashOfConfig":"231"},{"size":3836,"mtime":1610510161669,"results":"291","hashOfConfig":"231"},{"size":623,"mtime":1610510161674,"results":"292","hashOfConfig":"231"},{"size":664,"mtime":1610510161674,"results":"293","hashOfConfig":"231"},{"size":1144,"mtime":1610510161672,"results":"294","hashOfConfig":"231"},{"size":620,"mtime":1610510161661,"results":"295","hashOfConfig":"231"},{"size":905,"mtime":1610510161670,"results":"296","hashOfConfig":"231"},{"size":4312,"mtime":1610510161667,"results":"297","hashOfConfig":"231"},{"size":94,"mtime":1610510161659,"results":"298","hashOfConfig":"231"},{"size":705,"mtime":1610510161675,"results":"299","hashOfConfig":"231"},{"size":666,"mtime":1610510161673,"results":"300","hashOfConfig":"231"},{"size":638,"mtime":1610510161674,"results":"301","hashOfConfig":"231"},{"size":9228,"mtime":1610510161668,"results":"302","hashOfConfig":"231"},{"size":4275,"mtime":1610510161667,"results":"303","hashOfConfig":"231"},{"size":555,"mtime":1610510161661,"results":"304","hashOfConfig":"231"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"308"},"5r6a9f",{"filePath":"309","messages":"310","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"312"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"312"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"321"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"321"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"328"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"312"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"335"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"321"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"341","messages":"342","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"308"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"321"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"312"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"356"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"359","messages":"360","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"321"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"364","messages":"365","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"321"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"321"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"373"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"377"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"321"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"384"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"377"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"321"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"394"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"321"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"321"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403","usedDeprecatedRules":"404"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"408"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"312"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"321"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417","usedDeprecatedRules":"312"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420","usedDeprecatedRules":"321"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"312"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"312"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"430"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"321"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"312"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439","usedDeprecatedRules":"321"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"442","usedDeprecatedRules":"377"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"445","usedDeprecatedRules":"321"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"448","usedDeprecatedRules":"312"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"312"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454","usedDeprecatedRules":"455"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458","usedDeprecatedRules":"321"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461","usedDeprecatedRules":"321"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"321"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"312"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"312"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"321"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"312"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479","usedDeprecatedRules":"404"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"321"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485","usedDeprecatedRules":"308"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"490","usedDeprecatedRules":"491"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"494","usedDeprecatedRules":"321"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"497","usedDeprecatedRules":"321"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"500","usedDeprecatedRules":"328"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"503","usedDeprecatedRules":"321"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"506","usedDeprecatedRules":"312"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509","usedDeprecatedRules":"321"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512","usedDeprecatedRules":"377"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"515","usedDeprecatedRules":"321"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518","usedDeprecatedRules":"404"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"521","usedDeprecatedRules":"455"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"526","usedDeprecatedRules":"321"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"529","usedDeprecatedRules":"530"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"533","usedDeprecatedRules":"377"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"536","usedDeprecatedRules":"321"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"539","usedDeprecatedRules":"308"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"542","messages":"543","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"544","usedDeprecatedRules":"321"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"547"},"1c1yibh",{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"550","messages":"551","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"552"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"555"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"555"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"560","messages":"561","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"562","messages":"563","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458","usedDeprecatedRules":"555"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"566","messages":"567","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"568","usedDeprecatedRules":"547"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"547"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"445","usedDeprecatedRules":"555"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512","usedDeprecatedRules":"552"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"577","messages":"578","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"579","messages":"580","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"533","usedDeprecatedRules":"581"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"552"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"581"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"555"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"555"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"592","messages":"593","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"494","usedDeprecatedRules":"552"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"600","usedDeprecatedRules":"555"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"555"},{"filePath":"603","messages":"604","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"605","usedDeprecatedRules":"555"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"555"},{"filePath":"608","messages":"609","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"610","messages":"611","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"503","usedDeprecatedRules":"552"},{"filePath":"612","messages":"613","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"614","messages":"615","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"616","messages":"617","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"618","messages":"619","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"581"},{"filePath":"620","messages":"621","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"552"},{"filePath":"622","messages":"623","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417","usedDeprecatedRules":"555"},{"filePath":"624","messages":"625","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"555"},{"filePath":"626","messages":"627","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"628","messages":"629","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"552"},{"filePath":"630","messages":"631","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"555"},{"filePath":"632","messages":"633","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"552"},{"filePath":"634","messages":"635","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"581"},{"filePath":"636","messages":"637","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"638","usedDeprecatedRules":"555"},{"filePath":"639","messages":"640","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"641","messages":"642","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"506","usedDeprecatedRules":"555"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"645","messages":"646","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"647","usedDeprecatedRules":"555"},{"filePath":"648","messages":"649","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"555"},{"filePath":"650","messages":"651","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"552"},{"filePath":"652","messages":"653","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"555"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"552"},{"filePath":"656","messages":"657","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439","usedDeprecatedRules":"555"},{"filePath":"658","messages":"659","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"544","usedDeprecatedRules":"555"},{"filePath":"660","messages":"661","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"555"},{"filePath":"662","messages":"663","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509","usedDeprecatedRules":"552"},{"filePath":"664","messages":"665","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"555"},{"filePath":"666","messages":"667","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"668","messages":"669","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"670","messages":"671","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"500","usedDeprecatedRules":"552"},{"filePath":"672","messages":"673","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"490","usedDeprecatedRules":"555"},{"filePath":"674","messages":"675","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"515","usedDeprecatedRules":"555"},{"filePath":"676","messages":"677","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"678","messages":"679","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"680","messages":"681","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"682","messages":"683","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"684","usedDeprecatedRules":"555"},{"filePath":"685","messages":"686","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"687","messages":"688","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"689","messages":"690","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"691","messages":"692","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"693","messages":"694","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"695","messages":"696","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"697","messages":"698","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"699","messages":"700","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"701","messages":"702","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/PVA.js",["703"],"import React from \"react\"\nimport Container from \"react-bootstrap/Container\"\nimport Plot from 'react-plotly.js';\nimport { connect } from \"react-redux\"\nimport _ from \"lodash\"\nimport savePlansToReduxStore from \"../ActionCreators/savePlansToReduxStore\"\nimport saveLeaseLinesToReduxStore from \"../ActionCreators/saveLeaseLinesToReduxStore\"\nimport saveWellInfoToReduxStore from \"../ActionCreators/saveWellInfoToReduxStore\"\n\n\nconst PVA = ({saveSurveysToReduxStoreReducer, saveHardLinesToReduxStoreReducer, savePlansToReduxStoreReducer, saveLeaseLinesToReduxStoreReducer, activeWell}) => {\n  const createEastingCoordinates = (data, polyLine = false) => {\n    if (polyLine) {\n      if (Object.keys(data).length === 0) {\n        console.log(\"nada\")\n        return []\n      } else {\n        let result = data.map((row, index) => data[index][2].value).slice(1)\n        // console.log(\"easting\" + result)\n        return result\n      }\n    } else {\n      if (Object.keys(data).length === 0) {\n        console.log(\"nada\")\n        return []\n      } else {\n        let result = data.map((row, index) => data[index][6].value).slice(1)\n        // console.log(\"easting\" + result)\n        return result\n      }\n    }\n  }  \n  \n  const createNorthingCoordinates = (data, polyLine = false) => {\n    if (polyLine) {\n      if (Object.keys(data).length === 0) {\n        return []\n      } else {\n        let result = data.map((row, index) => data[index][1].value).slice(1)\n        // console.log(\"northing:\" + result)\n        return result\n      }\n    } else {\n      if (Object.keys(data).length === 0) {\n        console.log(\"nada\")\n        return []\n      } else {\n        let result = data.map((row, index) => data[index][5].value).slice(1)\n        // console.log(\"northing\" + result)\n        return result\n      }\n    }\n  }\n\n  const createTVDCoordiantes = (data) => {\n    if (data.length === 0) {\n      return []\n    } else {\n      return data.map((row, index) => data[index][4].value * -1 ).slice(1)\n    }\n  } \n\n  const createSectCoordinates = (data) => {\n    if (data.length === 0) {\n      return []\n    } else {\n      return data.map((row, index) => data[index][7].value).slice(1)\n    }\n  }\n  \n\nconsole.log(saveLeaseLinesToReduxStoreReducer.response.grid)\n\n  const renderSectionView = () => {\n    return (\n      <Plot\n      data={[\n        {\n          x: createTVDCoordiantes(savePlansToReduxStoreReducer.response),\n          y: createSectCoordinates(savePlansToReduxStoreReducer.response),\n          type: \"scatter\",\n          mode: \"lines+markers\",\n          marker: {color: \"blue\"},\n          name: \"Plan\"\n        },\n        {\n          x: createTVDCoordiantes(saveSurveysToReduxStoreReducer.response),\n          y: createSectCoordinates(saveSurveysToReduxStoreReducer.response),\n          type: \"scatter\",\n          mode: \"lines+markers\",\n          marker: {color: \"Red\"},\n          name: \"Surveys\"\n        },\n      ]}\n      layout = { {width: 1000, height: 800, title: 'Section View'} }\n      />\n    )\n  }\n  const renderPlanView = () => {\n    // if (\n    //   Object.keys(savePlansToReduxStoreReducer.response).length === 0 && Object.keys(save)\n    // )\n    return (\n      <Plot\n        data={[\n          {\n            x: createEastingCoordinates(savePlansToReduxStoreReducer.response),\n            y: createNorthingCoordinates(savePlansToReduxStoreReducer.response),\n            type: \"scatter\",\n            mode: \"lines+markers\",\n            marker: {color: \"blue\"},\n            name: \"Plan\"\n          },\n          {\n            x: createEastingCoordinates(saveSurveysToReduxStoreReducer.response),\n            y: createNorthingCoordinates(saveSurveysToReduxStoreReducer.response),\n            type: \"scatter\",\n            mode: \"lines+markers\",\n            marker: {color: \"red\"},\n            name: \"Surveys\"\n          },\n          {\n            x: createEastingCoordinates(saveLeaseLinesToReduxStoreReducer.response.grid, true),\n            y: createNorthingCoordinates(saveLeaseLinesToReduxStoreReducer.response.grid, true),\n            type: \"scatter\",\n            mode: \"lines+markers\",\n            marker: {color: \"black\"},\n            name: \"Lease Lines\"\n          },\n          {\n            x: createEastingCoordinates(saveHardLinesToReduxStoreReducer.response.grid, true),\n            y: createNorthingCoordinates(saveHardLinesToReduxStoreReducer.response.grid, true),\n            type: \"scatter\",\n            mode: \"lines+markers\",\n            marker: {color: \"red\"},\n            name: \"Lease Lines\"\n          },\n        ]}\n        layout = { {width: 1000, height: 800, title: 'Plan View'} }\n        />\n    )\n  }\n\n  return (\n    <Container>\n      {renderSectionView()}\n      {renderPlanView()}\n    </Container>\n  )\n\n}\n\nconst mapStateToProps = ({saveHardLinesToReduxStoreReducer, saveSurveysToReduxStoreReducer, savePlansToReduxStoreReducer, saveLeaseLinesToReduxStoreReducer, activeWell}) => {\n  return {\n    savePlansToReduxStoreReducer, \n    saveLeaseLinesToReduxStoreReducer, \n    activeWell,\n    saveHardLinesToReduxStoreReducer,\n    saveSurveysToReduxStoreReducer,\n  }\n}\n\nexport default connect(mapStateToProps, { savePlansToReduxStore, saveLeaseLinesToReduxStore, saveWellInfoToReduxStore })(PVA)",["704","705"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/postWellInfoToJSONDb.js",["706","707"],"import wells from \"../APIs/wells\"\n\nimport { POST_WELLINFO_TO_JSONDB_REQUESTED,\n  POST_WELLINFO_TO_JSONDB_RECEIVED,\n  POST_WELLINFO_TO_JSONDB_FAILED } from './types';\n  \n  export default (wellInfo) => {\n\n    return async (dispatch, getState) => {\n      // let wellList = getState().getWellsFromJSONDbReducer.response\n      // console.log('should get wellList next')\n      // console.log(wellList)\n      const response = await wells.post(\"wells\", wellInfo)\n      dispatch({\n        type: POST_WELLINFO_TO_JSONDB_REQUESTED,\n      });\n      try {\n        dispatch({\n          type: POST_WELLINFO_TO_JSONDB_RECEIVED,\n          payload: wellInfo,\n        });\n      } catch (error) {\n        console.log(error)\n        dispatch({\n          type: POST_WELLINFO_TO_JSONDB_FAILED,\n          payload: error,\n        });\n      }\n    };\n  };\n  ",["708","709"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/index.js",[],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/saveWellInfoToReduxStoreReducer.js",["710"],"import { SAVE_WELL_INFO_TO_REDUX_STORE_REQUESTED,\n  SAVE_WELL_INFO_TO_REDUX_STORE_RECEIVED,\n  SAVE_WELL_INFO_TO_REDUX_STORE_FAILED } from \"../ActionCreators/types\"\n\n  const INITIAL_STATE = {\n    response: {}, \n    status: \"\"\n  };\n\n  export default (state = INITIAL_STATE, { type, payload }) => {\n    \n    switch (type) {\n      case SAVE_WELL_INFO_TO_REDUX_STORE_REQUESTED:\n        return { ...state, status: 'waiting' };\n      case SAVE_WELL_INFO_TO_REDUX_STORE_RECEIVED:\n        return { ...state, response: payload, status: 'received' };\n      case SAVE_WELL_INFO_TO_REDUX_STORE_FAILED:\n        return { ...state, response: payload, status: 'failed' };\n      default:\n        return state;\n    }\n  };\n  ","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/savePlansToReduxStoreReducer.js",["711"],"import { SAVE_PLANS_TO_REDUX_STORE_REQUESTED,\n  SAVE_PLANS_TO_REDUX_STORE_RECEIVED,\n  SAVE_PLANS_TO_REDUX_STORE_FAILED\n} from \"../ActionCreators/types\"\n\nconst INITIAL_STATE = {\n  response: {},\n  status: \"\"\n}\n\nexport default (state=INITIAL_STATE, {type, payload}) =>{\n  switch (type) {\n    case SAVE_PLANS_TO_REDUX_STORE_REQUESTED:\n      return {...state, status: \"waiting\"}\n    case SAVE_PLANS_TO_REDUX_STORE_RECEIVED:\n      return {...state, response: payload, status: \"received\"}\n    case SAVE_PLANS_TO_REDUX_STORE_FAILED:\n      return {...state, response: payload, status: \"failed\"}\n    default:\n      return state\n  }\n}",["712","713"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getWellsFromJSONDbReducer.js",["714"],"import { GET_WELLS_FROM_JSON_REQUESTED,\n  GET_WELLS_FROM_JSON_RECEIVED,\n  GET_WELLS_FROM_JSON_FAILED } from \"../ActionCreators/types\"\n\n  const INITIAL_STATE = {\n    response: {},\n    status: \"\"\n  }\n\n  export default (state = INITIAL_STATE, {type, payload}) => {\n    switch (type) {\n      case GET_WELLS_FROM_JSON_REQUESTED:\n        return {...state, status: \"waiting\"}\n      case GET_WELLS_FROM_JSON_RECEIVED:\n        return {...state, response: payload, status: \"received\"}    \n      case GET_WELLS_FROM_JSON_FAILED:\n        return {...state, response: payload, status: \"failed\"}\n      default:\n        return state\n    }\n  }","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/saveActiveWellToReduxStoreReducer.js",["715"],"import { SAVE_ACTIVE_WELL_TO_REDUX_STORE_RECEIVED,\n  SAVE_ACTIVE_WELL_TO_REDUX_STORE_REQUESTED,\n  SAVE_ACTIVE_WELL_TO_REDUX_STORE_FAILED\n } from \"../ActionCreators/types\"\n\nconst INITIAL_STATE = {\n  response: {},\n  status: \"\"\n}\n\nexport default (state = INITIAL_STATE, {type, payload}) => {\n  switch (type) {\n    case SAVE_ACTIVE_WELL_TO_REDUX_STORE_REQUESTED:\n      return {...state, status: \"waiting\"}\n    case SAVE_ACTIVE_WELL_TO_REDUX_STORE_RECEIVED:\n      return {...state, response: payload, status: \"received\"}\n    case SAVE_ACTIVE_WELL_TO_REDUX_STORE_FAILED:\n      return {...state, response: payload, status: \"failed\"}\n    default:\n      return state;\n  }\n}",["716","717"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getWellPlansFromJSONDbReducer.js",["718"],"import { GET_WELL_PLANS_FROM_JSONDB_REQUESTED, \n  GET_WELL_PLANS_FROM_JSONDB_RECEIVED,\n  GET_WELL_PLANS_FROM_JSONDB_FAILED} from \"../ActionCreators/types\"\n\n\nconst INITIAL_STATE = {\n  response: {},\n  status: \"\"\n}\n\nexport default (state = INITIAL_STATE, {type, payload}) => {\n  \n  switch (type) {\n    case GET_WELL_PLANS_FROM_JSONDB_REQUESTED:\n      return {...state, status: \"waiting\"}\n    case GET_WELL_PLANS_FROM_JSONDB_RECEIVED:\n      return {...state, response: payload, status: \"received\"}\n    case GET_WELL_PLANS_FROM_JSONDB_FAILED:\n      return {...state, response: payload, status: \"failed\"}\n    default:\n      return state\n  }\n}\n","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/saveWellInfoToReduxStore.js",["719"],"import { SAVE_WELL_INFO_TO_REDUX_STORE_REQUESTED,\n  SAVE_WELL_INFO_TO_REDUX_STORE_RECEIVED,\n  SAVE_WELL_INFO_TO_REDUX_STORE_FAILED } from './types';\n  \n  export default (wellInfo) => {\n    return async (dispatch, getState) => {\n      dispatch({\n        type: SAVE_WELL_INFO_TO_REDUX_STORE_REQUESTED,\n      });\n      try {\n        dispatch({\n          type: SAVE_WELL_INFO_TO_REDUX_STORE_RECEIVED,\n          payload: wellInfo,\n        });\n      } catch (error) {\n        console.log(error)\n        dispatch({\n          type: SAVE_WELL_INFO_TO_REDUX_STORE_FAILED,\n          payload: error,\n        });\n      }\n    };\n  };\n  ",["720","721"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/postPlansToJSONDb.js",["722"],"import wells from \"../APIs/wells\"\nimport { \n  POST_PLANS_TO_JSON_REQUESTED,\n  POST_PLANS_TO_JSON_RECEIVED,\n  POST_PLANS_TO_JSON_FAILED \n} from \"./types\"\nimport moment from \"moment\"\n\nexport default (operator, rig ,well, county, uSstate, grid, vsDirection) => {\n  return async (dispatch, getState) => {\n\n    dispatch({\n      type: POST_PLANS_TO_JSON_REQUESTED\n    })\n    try {\n      const wellData = {\n        operator,\n        rig,\n        well,\n        county,\n        uSstate,\n        vsDirection,\n        grid, \n        date: moment().format()\n      }\n      const response = await wells.post(`wells`, wellData)\n      dispatch({\n        type: POST_PLANS_TO_JSON_RECEIVED,\n        payload: response.data\n      })\n    } catch (error) {\n\n      dispatch({\n        type: POST_PLANS_TO_JSON_FAILED,\n        payload: error\n      })\n    }\n  }\n}\n","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/types.js",[],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/EW.js",["723"],"import DLC from \"./DLC\"\nimport RF from \"./RF\"\n\nexport default (measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior, inclinationPrior, azimuthPrior, calculatedEastingPrior) => {\n  const converter = (Math.PI)/180;\n\n  const calculatedDLC = DLC(inclinationPrior, inclinationCurrent, azimuthPrior, azimuthCurrent)\n  console.log(`EW calculatedDLC ${calculatedDLC}`)\n\n  const calculatedRF = RF(measuredDepthPrior, measuredDepthCurrent, calculatedDLC)\n  console.log(`EW calculatedRF ${calculatedRF}`)\n\n  const calculatedEastingCurrent = (calculatedEastingPrior + calculatedRF *(Math.sin(inclinationPrior*converter)* Math.sin(azimuthPrior * converter) + Math.sin(inclinationCurrent * converter)*Math.sin(azimuthCurrent*converter)));\n  console.log(`Easting: ${calculatedEastingCurrent}`)\n  return (\n    parseFloat(calculatedEastingCurrent.toFixed(2))\n    // calculatedEastingCurrent\n  )\n};\n","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/TVD.js",["724"],"import DLC from \"./DLC\"\nimport RF from \"./RF\"\n\nexport default (measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior, inclinationPrior, azimuthPrior, calculatedTVDPrior) => {\n  const converter = (Math.PI)/180\n  console.log(`converter: ${converter}`)\n\n  const calculatedDLC = DLC(inclinationPrior, inclinationCurrent, azimuthPrior, azimuthCurrent)\n  console.log(`calculatedDLC: ${calculatedDLC}`)\n\n  const calculatedRF = RF(measuredDepthPrior, measuredDepthCurrent, calculatedDLC)\n  console.log(`calculatedRF: ${calculatedRF}`)\n\n  const calculatedTVDCurrent = calculatedTVDPrior + calculatedRF * (Math.cos(inclinationPrior*converter) + Math.cos(inclinationCurrent*converter));\n  console.log(`calculatedTVDCurrent: ${calculatedTVDCurrent}`)\n\n  return (\n    parseFloat(calculatedTVDCurrent.toFixed(2))\n  )\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/RF.js",["725"],"export default (measuredDepthPrior, measuredDepthCurrent, calculatedDLC) => {\n  return (\n    Math.tan(calculatedDLC/2)\n    *\n    ((measuredDepthCurrent - measuredDepthPrior) / calculatedDLC)\n  )\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/ExistingPVA.js",["726","727","728","729","730","731","732","733","734"],"import React, { useEffect, useState } from \"react\"\nimport { connect } from \"react-redux\"\n\nimport Container from \"react-bootstrap/esm/Container\"\nimport Form from \"react-bootstrap/Form\"\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\nimport Button from \"react-bootstrap/Button\"\n\nimport 'react-datasheet/lib/react-datasheet.css'\nimport ReactDataSheet from \"react-datasheet\"\nimport Plot from \"react-plotly.js\"\nimport { isNumber } from \"lodash\"\nimport saveSurveysToReduxStore from \"../ActionCreators/saveSurveysToReduxStore\"\n\nconst ExistingPVA = ({savePlansToReduxStoreReducer, getHardLinesFromJSONDbReducer, saveSurveysToReduxStoreReducer, getSurveysFromJSONDbReducer, getWellPlansFromJSONDbReducer, activeWell, getLeaseLinesFromJSONDbReducer}) => {\n\n  const createEastingCoordinates = (data, polyLine = false) => {\n    if (polyLine) {\n      if (Object.keys(data).length === 0) {\n        console.log(\"nada\")\n        return []\n      } else {\n        let result = data.map((row, index) => data[index][2].value).slice(1)\n        return result\n      }\n    } else {\n      if (Object.keys(data).length === 0) {\n        console.log(\"nada\")\n        return []\n      } else {\n        let result = data.map((row, index) => data[index][6].value).slice(1)\n        return result\n      }\n    }\n  }  \n  \n  const createNorthingCoordinates = (data, polyLine = false) => {\n    if (polyLine) {\n      if (Object.keys(data).length === 0) {\n        return []\n      } else {\n          return data.map((row, index) => data[index][1].value).slice(1)\n      }\n    } else {\n      if (Object.keys(data).length === 0) {\n        console.log(\"nada\")\n        return []\n      } else {\n          return data.map((row, index) => data[index][5].value).slice(1)\n      }\n    }\n  }\n\n  const createTVDCoordinates = (data) => {\n    if (data.length === 0) {\n      return []\n    } else {\n        return data.map((row, index) => {\n          return parseInt(data[index][4].value) * -1\n            }).slice(1)\n    }\n  } \n\n  const createSectCoordinates = (data) => {\n    if (data.length === 0) {\n      return []\n    } else {\n      return data.map((row, index) => {\n        return parseInt(data[index][7].value)\n          }).slice(1)\n    }\n  }\n\n  const renderSectionView = () => {\n    return (\n      <Plot\n      data={[\n        {\n          x: createSectCoordinates(getWellPlansFromJSONDbReducer.response),\n          y: createTVDCoordinates(getWellPlansFromJSONDbReducer.response),\n          type: \"scatter\",\n          mode: \"lines+markers\",\n          marker: {color: \"blue\"},\n          name: \"Plan\"\n        },\n        {\n          x: createSectCoordinates(getSurveysFromJSONDbReducer.response),\n          y: createTVDCoordinates(getSurveysFromJSONDbReducer.response),\n          type: \"scatter\",\n          mode: \"lines+markers\",\n          marker: {color: \"Red\"},\n          name: \"Surveys\"\n        },\n      ]}\n      layout = { {width: 1000, height: 800, title: 'Section View'} }\n      />\n    )\n  }\n\n  const renderPlanView = () => {\n    return (\n      // <Container>\n      //   <Col xs={2}>\n      //     <Form className=\"mt-7\">\n      //       <Form.Group controlId=\"formBasicEmail\">\n      //         <Form.Control className=\"mt-3\" type=\"float\" disabled placeholder=\"Enter VS Here\" onChange={event => event.target.value}/>\n      //       </Form.Group>\n      //     </Form>\n      //   </Col>\n\n      <Plot\n        data={[\n          {\n            x: createEastingCoordinates(getWellPlansFromJSONDbReducer.response),\n            y: createNorthingCoordinates(getWellPlansFromJSONDbReducer.response),\n            type: \"scatter\",\n            mode: \"lines+markers\",\n            marker: {color: \"blue\"},\n            name: \"Plan\"\n          },\n          {\n            x: createEastingCoordinates(getSurveysFromJSONDbReducer.response),\n            y: createNorthingCoordinates(getSurveysFromJSONDbReducer.response),\n            type: \"scatter\",\n            mode: \"lines+markers\",\n            marker: {color: \"red\"},\n            name: \"Surveys\"\n          },\n          {\n            x: createEastingCoordinates(getLeaseLinesFromJSONDbReducer.response, true),\n            y: createNorthingCoordinates(getLeaseLinesFromJSONDbReducer.response, true),\n            type: \"scatter\",\n            mode: \"lines+markers\",\n            marker: {color: \"black\"},\n            name: \"Lease Lines\"\n          },\n          {\n            x: createEastingCoordinates(getHardLinesFromJSONDbReducer.response, true),\n            y: createNorthingCoordinates(getHardLinesFromJSONDbReducer.response, true),\n            type: \"scatter\",\n            mode: \"lines+markers\",\n            marker: {color: \"red\"},\n            name: \"Hard Lines\"\n          },\n        ]}\n        layout = { {width: 1000, height: 800, title: 'Plan View'} }\n        />\n      // </Container>\n    )\n  }\n\n  \n\n\n  if (getLeaseLinesFromJSONDbReducer.status === \"received\" && getWellPlansFromJSONDbReducer.status === \"received\") {\n    return (\n      <Container>\n        <h3>{activeWell.operator} - {activeWell.rig} - {activeWell.well}</h3>\n        {renderSectionView()}\n        {renderPlanView()} \n      </Container>\n    )\n      \n      // <Container>\n      //   {renderPlanView()} \n      // </Container>\n    \n  } else {\n    return (\n      \"Data Loading\"\n    )\n  }\n\n\n}\n\nconst mapStateToProps = ({savePlansToReduxStoreReducer, getHardLinesFromJSONDbReducer, saveSurveysToReduxStoreReducer,getSurveysFromJSONDbReducer, getWellPlansFromJSONDbReducer, activeWell, getLeaseLinesFromJSONDbReducer}) => {\n  return {\n    getWellPlansFromJSONDbReducer, \n    activeWell: activeWell.response, \n    getLeaseLinesFromJSONDbReducer,\n    getSurveysFromJSONDbReducer,\n    saveSurveysToReduxStoreReducer,\n    getHardLinesFromJSONDbReducer,\n    savePlansToReduxStoreReducer\n  }\n}\n\nexport default connect(mapStateToProps, { })(ExistingPVA)","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getLeaseLinesFromJSONDbReducer.js",["735"],"import { GET_LEASE_LINES_FROM_JSONDB_REQUESTED,\n  GET_LEASE_LINES_FROM_JSONDB_RECEIVED,\n  GET_LEASE_LINES_FROM_JSONDB_FAILED } from \"../ActionCreators/types\"\n\nconst INITIAL_STATE = {\n  response: {},\n  status: \"\"\n}\n\nexport default (state = INITIAL_STATE, {type, payload}) => {\n  switch (type) {\n    case GET_LEASE_LINES_FROM_JSONDB_REQUESTED:\n      return {...state, status: \"waiting\"}\n    case GET_LEASE_LINES_FROM_JSONDB_RECEIVED:\n      return {...state, response: payload, status: \"received\"}\n    case GET_LEASE_LINES_FROM_JSONDB_FAILED:\n      return {...state, response: payload, status: \"failed\"}\n    default:\n      return state\n  }\n}",["736","737"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/Home.js",["738","739","740"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/App.js",["741","742","743","744","745","746"],"import React from 'react'\nimport {Router, Route} from \"react-router-dom\"\n// react-boostrap\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Tabs from 'react-bootstrap/Tabs'\nimport Tab from \"react-bootstrap/Tab\"\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col'\n// redux\nimport { connect } from 'react-redux'\n// components\nimport History from \"./History\"\n//import SignInHome from \"./UserVerification/SignInHome\"\nimport SignUp from \"./UserVerification/SignUp\"\nimport SignIn from \"./UserVerification/SignIn\"\nimport Dashboard from \"./Dashboard\"\nimport scratch from \"./scratch\"\n\n\nconst App = () => {\n  return (\n      <Router history={History}>\n        <div>\n          <Route path=\"/\" exact component={SignIn}/>\n          <Route path=\"/signup\" exact component ={SignUp}/>\n          <Route path=\"/signin\" exact component ={SignIn}/>\n          <Route path=\"/scratch\" exact component ={scratch}/>\n          <Route path=\"/dashboard\" exact component ={Dashboard}/>\n        </div>\n      </Router>\n  )\n}\n\nexport default App;","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/Plans.js",["747","748","749","750","751"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/postWellInfoToJSONDbReducer.js",["752"],"import { POST_WELLINFO_TO_JSONDB_REQUESTED,\n  POST_WELLINFO_TO_JSONDB_RECEIVED,\n  POST_WELLINFO_TO_JSONDB_FAILED } from \"../ActionCreators/types\"\n\nconst INITIAL_STATE = {\n  response: {},\n  status: \"\"\n}\n\nexport default (state = INITIAL_STATE, {type, payload}) => {\n  switch (type) {\n    case POST_WELLINFO_TO_JSONDB_REQUESTED:\n      return {...state, status: \"waiting\"}\n    case POST_WELLINFO_TO_JSONDB_RECEIVED:\n      return {...state, response: payload, status: \"received\"}\n    case POST_WELLINFO_TO_JSONDB_FAILED:\n      return {...state, response: payload, status: \"failed\"}\n    default:\n      return state;\n  }\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getWellPlansFromJSONDb.js",["753","754","755","756","757","758"],"import { get } from \"lodash\"\nimport wells from \"../APIs/wells\"\nimport getWellsFromJSONDb from \"./getWellsFromJSONDb\"\nimport { GET_WELL_PLANS_FROM_JSONDB_REQUESTED, \n  GET_WELL_PLANS_FROM_JSONDB_RECEIVED,\n  GET_WELL_PLANS_FROM_JSONDB_FAILED} from \"./types\"\n\nexport default (selectedWell) => {\n  return async (dispatch, getState) => {\n    \n    dispatch({\n      type: GET_WELL_PLANS_FROM_JSONDB_REQUESTED\n    })\n    try {\n      let result = null;\n      const wellList = getState().getWellsFromJSONDbReducer.response\n      const selectedWellConvertedToArray = selectedWell.split(\"-\").map(word => word.trim())\n      const selectedWellOperator = selectedWellConvertedToArray[0]\n      const selectedWell_Well = selectedWellConvertedToArray[2]\n      for (let well in wellList) {\n        if (wellList[well].operator == selectedWellOperator && wellList[well].well == selectedWell_Well) {\n          result = [...wellList[well].grid]\n        }\n      }\n      dispatch({\n        type: GET_WELL_PLANS_FROM_JSONDB_RECEIVED,\n        payload: result\n      }) \n    } catch (error) {\n      \n      dispatch({\n        type: GET_WELL_PLANS_FROM_JSONDB_FAILED,\n        payload: error\n      })\n    }\n  }\n} \n\n\n    // have a well, for (well in getState.getWellsFromJSONDbReducer.response) {\n        // if (getState.getWellsFromJSONDbReducer.response[well].operator )\n    // }\n\n","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/saveLeaseLinesToReduxStore.js",["759"],"import { SAVE_LEASE_LINES_TO_REDUX_STORE_REQUESTED,\n  SAVE_LEASE_LINES_TO_REDUX_STORE_RECEIVED,\n  SAVE_LEASE_LINES_TO_REDUX_STORE_FAILED } from \"./types\"\n\nexport default (leaseLines) => {\n  return async dispatch => {\n    dispatch({\n      type: SAVE_LEASE_LINES_TO_REDUX_STORE_REQUESTED\n    })\n    try {\n      dispatch({\n        type: SAVE_LEASE_LINES_TO_REDUX_STORE_RECEIVED,\n        payload: leaseLines\n      })\n    } catch(error) {\n      dispatch({\n        type: SAVE_LEASE_LINES_TO_REDUX_STORE_FAILED,\n        payload: error\n      })\n    }\n  }\n}\n",["760","761"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/NS.js",["762"],"import DLC from \"./DLC\"\nimport RF from \"./RF\"\n\nexport default (measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior, inclinationPrior, azimuthPrior, calculatedNorthingPrior) => {\n  const converter = (Math.PI)/180;\n  const converter2 = 0.00000001;\n\n  const calculatedDLC = DLC(inclinationPrior, inclinationCurrent, azimuthPrior, azimuthCurrent)\n  console.log(`NS calculatedDLC ${calculatedDLC}`)\n\n  const calculatedRF = RF(measuredDepthPrior, measuredDepthCurrent, calculatedDLC)\n  console.log(`NS calculatedRF ${calculatedRF}`)\n\n  const calculatedNorthingCurrent = (calculatedNorthingPrior+converter2) + calculatedRF * (Math.sin(inclinationPrior*converter)*Math.cos(azimuthPrior*converter)+ Math.sin(inclinationCurrent * converter) * Math.cos(azimuthCurrent*converter));\n\n  return (\n    parseFloat(calculatedNorthingCurrent.toFixed(2))\n\n  )\n} ",["763","764"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/DLS.js",["765"],"import DLC from \"./DLC\"\n\nexport default (measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior = 1, inclinationPrior = 2, azimuthPrior = 3 ) => {\n  const converter = (Math.PI)/180;\n\n  // calculate DLC\n  const calculatedDLC = DLC(inclinationPrior, inclinationCurrent, azimuthPrior, azimuthCurrent)\n\n  const calculatedDLS = ((calculatedDLC/converter)*100/(measuredDepthCurrent-measuredDepthPrior))\n\n  return (\n    parseFloat(calculatedDLS.toFixed(2))\n  )\n\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/DLC.js",["766"],"export default (inclinationPrior, inclinationCurrent, azimuthPrior, azimuthCurrent) => {\n  const converter = Math.PI/180;\n  const converter2 = 0.00000001;\n\n  return (\n    Math.acos(\n      (\n        Math.cos(inclinationPrior*converter)*Math.cos(inclinationCurrent*converter)\n      )\n      +\n      (\n        Math.sin(inclinationPrior*converter)*Math.sin(inclinationCurrent*converter)*Math.cos((azimuthCurrent-azimuthPrior)*converter-converter2)\n      )\n    )\n  )\n}",["767","768"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getWellsFromJSONDb.js",["769"],"import wells from \"../APIs/wells\"\n\nimport { GET_WELLS_FROM_JSON_REQUESTED,\n  GET_WELLS_FROM_JSON_RECEIVED,\n  GET_WELLS_FROM_JSON_FAILED } from \"./types\"\n\n\nexport default () => {\n  return async dispatch => {\n    dispatch({\n      type: GET_WELLS_FROM_JSON_REQUESTED\n    })\n    try {\n      const response = await wells.get(\"/wells\")\n      dispatch({\n        type: GET_WELLS_FROM_JSON_RECEIVED,\n        payload: response.data\n      })\n    } catch (error) {\n      dispatch({\n        type: GET_WELLS_FROM_JSON_FAILED,\n        payload: error\n      })\n    }\n  }\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getWellsWithLeaseLinesFromJSONDbReducer.js",["770"],"import { GET_LEASE_LINES_LIST_FROM_JSONDB_REQUESTED,\n  GET_LEASE_LINES_LIST_FROM_JSONDB_RECEIVED,\n  GET_LEASE_LINES_LIST_FROM_JSONDB_FAILED,\n} from \"../ActionCreators/types\"\n\nconst INITIAL_STATE = {\n  response: {},\n  status: \"\"\n}\n\n// export default (state = INITIAL_STATE, {type, payload}) => {\n//   switch (type) {\n//     case GET_LEASE_LINES_LIST_FROM_JSONDB_REQUESTED:\n//       return {...state, status:\"waiting\"}\n//     case GET_LEASE_LINES_LIST_FROM_JSONDB_RECEIVED:\n//       return {...state, response: payload, status: \"received\"}\n//     case GET_LEASE_LINES_LIST_FROM_JSONDB_FAILED:\n//       return {...state, response: payload, status: \"failed\"}\n//     default:\n//       return state;\n//   }\n// }\nexport default (state = INITIAL_STATE, {type, payload}) => {\n  switch (type) {\n    case GET_LEASE_LINES_LIST_FROM_JSONDB_REQUESTED:\n      return {...state, status:\"waiting\"}\n    case GET_LEASE_LINES_LIST_FROM_JSONDB_RECEIVED:\n      return {...state, response: payload, status: \"received\"}\n    case GET_LEASE_LINES_LIST_FROM_JSONDB_FAILED:\n      return {...state, response: payload, status: \"failed\"}\n    default:\n      return state;\n  }\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/index.js",["771","772","773"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reduxThunk from \"redux-thunk\"\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose } from \"redux\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './Components/App';\nimport reducers from './Reducers'\nimport Container from 'react-bootstrap/esm/Container';\nimport Col from 'react-bootstrap/esm/Col';\nimport Row from 'react-bootstrap/esm/Row';\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(reduxThunk))\n)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>  \n  </Provider>,\n  document.getElementById('root')\n);\n\n// create a form that saves data to our redux store, \n// add validators to each field \n// then pushes this data to our backend ",["774","775"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/postLeaseLinesToJSONDbReducer.js",["776"],"import   {POST_LEASE_LINES_TO_JSONDB_REQUESTED,\nPOST_LEASE_LINES_TO_JSONDB_RECEIVED, \nPOST_LEASE_LINES_TO_JSONDB_FAILED} from \"../ActionCreators/types\"\n\nconst INITIAL_STATE = {\n  response: {}, \n  status: \"\"\n}\n\nexport default (state = INITIAL_STATE, {type, payload}) => {\n  switch (type) {\n    case POST_LEASE_LINES_TO_JSONDB_REQUESTED:\n      return {...state, status: \"waiting\"}\n    case POST_LEASE_LINES_TO_JSONDB_RECEIVED:\n      return {...state, response: payload, status: \"received\"}\n    case POST_LEASE_LINES_TO_JSONDB_FAILED:\n      return {...state, response: payload, status: \"failed\"}\n    default:\n      return state;\n  }\n} ","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getWellsWithLeaseLinesFromJSONDb.js",["777"],"import { \n  GET_LEASE_LINES_LIST_FROM_JSONDB_REQUESTED,\n  GET_LEASE_LINES_LIST_FROM_JSONDB_RECEIVED,\n  GET_LEASE_LINES_LIST_FROM_JSONDB_FAILED\n} from \"./types\"\n\nimport wells from \"../APIs/wells\"\n\n\nexport default () => {\n  return async dispatch => {\n    dispatch({\n      type: GET_LEASE_LINES_LIST_FROM_JSONDB_REQUESTED\n    })\n    try {\n      const response = await wells.get(\"/LeaseLines\")\n      dispatch({\n        type: GET_LEASE_LINES_LIST_FROM_JSONDB_RECEIVED,\n        payload: response.data\n      })\n    } catch (error) {\n      dispatch({\n        type: GET_LEASE_LINES_LIST_FROM_JSONDB_FAILED,\n        payload: error\n      })\n    }\n  }\n}\n\n// import { \n//   GET_LEASE_LINES_LIST_FROM_JSONDB_REQUESTED,\n//   GET_LEASE_LINES_LIST_FROM_JSONDB_RECEIVED,\n//   GET_LEASE_LINES_LIST_FROM_JSONDB_FAILED\n// } from \"./types\"\n\n// import wells from \"../APIs/wells\"\n\n\n// export default () => {\n//   return async dispatch => {\n//     dispatch({\n//       type: GET_LEASE_LINES_LIST_FROM_JSONDB_REQUESTED\n//     })\n//     try {\n//       const response = await wells.get(\"/LeaseLines\")\n//       dispatch({\n//         type: GET_LEASE_LINES_LIST_FROM_JSONDB_RECEIVED,\n//         payload: response\n//       })\n//     } catch (error) {\n//       dispatch({\n//         type: GET_LEASE_LINES_LIST_FROM_JSONDB_FAILED,\n//         payload: error\n//       })\n//     }\n//   }\n// }","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/Surveys.js",["778","779","780","781","782"],"import React, { useState, useEffect } from \"react\"\n//bootstrap\nimport Container from \"react-bootstrap/esm/Container\";\nimport Form from \"react-bootstrap/Form\"\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\nimport Button from \"react-bootstrap/Button\"\n//other libs\nimport 'react-datasheet/lib/react-datasheet.css';\nimport { connect } from \"react-redux\"\nimport ReactDataSheet from 'react-datasheet';\n// actionCreators\n\nimport savePlansToReduxStore from \"../ActionCreators/savePlansToReduxStore\"\n//helper functions\nimport calculateTVD from \"../HelperFunctions/Calculations/TVD\"\nimport calculateNS from \"../HelperFunctions/Calculations/NS\"\nimport calculateEW from \"../HelperFunctions/Calculations/EW\"\nimport calculateSECT from \"../HelperFunctions/Calculations/SECT\"\nimport calculateDLS from \"../HelperFunctions/Calculations/DLS\"\nimport postPlansToJSONDb from \"../ActionCreators/postPlansToJSONDb\";\nimport saveSurveysToReduxStore from \"../ActionCreators/saveSurveysToReduxStore\"\nimport postSurveysToJSONDb from \"../ActionCreators/postSurveysToJSONDb\"\n\nconst Surveys = ({ postSurveysToJSONDb, activeWell, saveSurveysToReduxStore ,savePlansToReduxStore, saveWellInfoToReduxStoreReducer,savePlansToReduxStoreReducer, postPlansToJSONDb}) => {\n  \n  const [editGrid, setEditGrid] = useState(true)\n  const [input, setInput] = useState(false)\n  const [vsDirection, setVSDirection] = useState(0)\n  \n  const initialGrid = [\n    [{value: '', readOnly: true, width: '7rem'}, {value:\"Measured Depth\", readOnly: true, width: '7rem'}, {value:\"Inclination\", readOnly: true, width: '7rem'}, {value:\"Azimuth\", readOnly: true, width: '7rem'}, {value:\"TVD\", readOnly: true, width: '7rem'}, {value:\"Northing\", readOnly: true, width: '7rem'}, {value:\"Easting\", readOnly: true, width: '7rem'}, {value:\"VS\", readOnly: true, width: '7rem'},{value:\"DLS\", readOnly: true, width: '7rem'}],\n    \n    [{value: 1, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}],\n    \n    // [{readOnly: true, value: 2}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}],\n    // [{readOnly: true, value: 3}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}],\n    // [{readOnly: true, value: 4}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}],\n    // [{readOnly: true, value: 5}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}],\n  ];\n\n  const [grid, setGrid] = useState(initialGrid);\n\n  useEffect(()=>{\n    if (input) {\n      performCalculations()\n    }\n  },[input])\n\n  useEffect(()=> {\n    handleAddRows(1)\n  }, [])\n\n  const performCalculations = () => {\n    grid.map((row, index) => {\n      if (index === 0 || index === 1) {\n        // nothing because we don't want to run calcs on the header array\n      } else {\n        // for every array within grid array, want to iterate over and change the values of TVD, NS, EW, SECT, & DLS\n        // note val after idx is column \n        // TVD order of args : (measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior, inclinationPrior, azimuthPrior, calculatedTVDPrior)\n        // NS order of args: (measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior, inclinationPrior, azimuthPrior, calculatedNorthingPrior)\n\n        const calculatedTVD = calculateTVD(grid[index][1].value, grid[index][2].value, grid[index][3].value, grid[index - 1][1].value, grid[index - 1][2].value, grid[index - 1][3].value, grid[index - 1][4].value)\n        const calculatedNS = calculateNS(grid[index][1].value, grid[index][2].value, grid[index][3].value, grid[index - 1][1].value, grid[index - 1][2].value, grid[index - 1][3].value, grid[index - 1][5].value)\n        const calculatedEW = calculateEW(grid[index][1].value, grid[index][2].value, grid[index][3].value, grid[index - 1][1].value, grid[index - 1][2].value, grid[index - 1][3].value, grid[index - 1][6].value)\n        const calculatedSECT = calculateSECT(grid[index][1].value, grid[index][2].value, grid[index][3].value, grid[index - 1][1].value, grid[index - 1][2].value, grid[index - 1][3].value, grid[index - 1][5].value, grid[index - 1][6].value, index, vsDirection)\n        const calculatedDLS = calculateDLS(grid[index][1].value, grid[index][2].value, grid[index][3].value, grid[index - 1][1].value, grid[index - 1][2].value, grid[index - 1][3].value)\n\n\n        grid[index][4] = {...grid[index][4], readOnly: true, value: calculatedTVD}\n        console.log(calculatedTVD)\n        grid[index][5] = {...grid[index][5], readOnly: true, value: calculatedNS}\n        grid[index][6] = {...grid[index][6], readOnly: true, value: calculatedEW}\n        grid[index][7] = {...grid[index][7], readOnly: true, value: calculatedSECT}\n        grid[index][8] = {...grid[index][8], readOnly: true, value: calculatedDLS}\n\n        setGrid(grid)\n        setInput(false)\n\n      }\n    })\n  }\n\n  const onCellsChanged = changes => {\n    // iterate through existing grid to get a copy and not mutate current as we iterate over\n    const gridNew = grid.map(row => [...row]);\n    // iterate through the changes.  Each change is a cell, each cell is an object\n    // with cell (previousVal), row, col, currentVal\n    // add the value of the newGrid[row#][col#] to the new value \n    changes.forEach(({ cell, row, col, value }) => {\n      gridNew[row][col] = {...grid[row][col], value };\n    });\n    setGrid(gridNew)\n    setInput(true)\n  };\n\n  const handleVSDirection = (val) => {\n    setVSDirection(val)\n    setInput(true)\n  }\n\n  const handleSubmit = () => {\n    const { well, operator, rig, county, uSstate, northing, easting } = activeWell.response\n    const wellInfo = {operator, well, rig, county, uSstate, northing, easting, grid}\n    saveSurveysToReduxStore(grid)\n    postSurveysToJSONDb(wellInfo)\n\n  }\n\n  const handleRemoveRow = () => {\n    const newGrid = [...grid];\n    newGrid.pop();\n    setGrid(newGrid);\n  };\n\n  const createRows = (numberOfRowsToAdd) => {\n    let createdRows = []\n    for (let i = 0; i < numberOfRowsToAdd; i++) {\n      createdRows.push(\n        [{readOnly: true, value: grid.length + i}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}]\n      )\n    }\n    return createdRows\n  };\n\n  const handleAddRows = (rows) => {\n    const newGrid = [...grid, ...createRows(rows)]\n    setGrid(newGrid)\n  }\n\n  const renderSetRowsButtons = () => {\n    return (\n      <Row>\n        <Col xs={10} className=\"d-flex justify-content-start mt-4\">\n          <Button variant=\"success\" value={25} onClick={(event)=> handleAddRows(event.target.value)}>\n            Add 25 rows\n          </Button>\n          <Button variant=\"success\" className=\"ml-4\" value={10} onClick={(event) => handleAddRows(event.target.value)}>\n            Add 10 rows\n          </Button>\n          <Button variant=\"success\" className=\"ml-4\" value={5} onClick={(event) => handleAddRows(event.target.value)}>\n            Add 5 rows\n          </Button>\n          <Button variant=\"success\" className=\"ml-4\" value={1} onClick={(event) => handleAddRows(event.target.value)}>\n            Add a row\n          </Button>\n          <Button variant=\"danger\" className=\"ml-4\" onClick={handleRemoveRow}>\n            Remove a row\n          </Button>\n        </Col>\n        <Col xs={2}>\n          \n        </Col>\n      </Row>\n    )\n  }\n\n  const renderSubmitButton = () => {\n    return (\n      <Row>\n        <Col xs={10} className=\"my-4\">\n          <Button variant=\"info\" onClick={()=>handleSubmit()}>\n            Submit Data\n          </Button>\n        </Col>\n        <Col xs={2}>\n\n        </Col>\n      </Row>\n    )\n  }\n\n  const renderWellData = () => {\n    if (saveWellInfoToReduxStoreReducer.status === \"received\") {\n      const { well, rig, operator} = saveWellInfoToReduxStoreReducer.response\n      return <h3 className=\"hy-4\"> {operator} - {rig} - {well}</h3>\n    } else {\n      return \"No well data\"\n    }\n  }\n\n  return (\n    <Container>\n      <Row>\n        <Col xs={10}>\n          {renderWellData()}\n          <ReactDataSheet data={grid} valueRenderer={(cell)=> cell.value} onCellsChanged={onCellsChanged}/>\n        </Col>\n        <Col xs={2}>\n          <Form className=\"mt-7\">\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Control className=\"mt-3\" type=\"float\" placeholder=\"Enter VS Here\" onChange={event => handleVSDirection(event.target.value)}/>\n            </Form.Group>\n          </Form>\n        </Col>\n      </Row>\n      {renderSetRowsButtons()}\n      {renderSubmitButton()}\n      <Row>\n        <Col xs={10}>\n          {/* {renderAlert()} */}\n        </Col>\n        <Col xs={2}>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nconst mapStateToProps = ({activeWell, saveWellInfoToReduxStoreReducer}) => {\n  return {\n    saveWellInfoToReduxStoreReducer,\n    activeWell\n  }\n}\n\nexport default connect(mapStateToProps, { postSurveysToJSONDb, saveSurveysToReduxStore, savePlansToReduxStore, postPlansToJSONDb})(Surveys)\n\n\n",["783","784"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/postPlansToJSONDbReducer.js",["785"],"import { POST_PLANS_TO_JSON_REQUESTED,\n  POST_PLANS_TO_JSON_RECEIVED,\n  POST_PLANS_TO_JSON_FAILED } from \"../ActionCreators/types\"\n\nconst INITIAL_STATE = {\n  response: {},\n  status: \"\"\n}\nexport default (state = INITIAL_STATE, {type, payload}) => {\n  switch (type) {\n    case POST_PLANS_TO_JSON_REQUESTED:\n      return {...state, status: \"waiting\"}\n    case POST_PLANS_TO_JSON_RECEIVED:\n      return {...state, response: payload, status: \"received\"}\n    case POST_PLANS_TO_JSON_FAILED:\n      return {...state, response: payload, status: \"failed\"}\n    default:\n      return state;\n  }\n}",["786","787"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/saveLeaseLinesToReduxStoreReducer.js",["788","789"],"import { initial } from \"lodash\"\nimport { SAVE_LEASE_LINES_TO_REDUX_STORE_REQUESTED,\n  SAVE_LEASE_LINES_TO_REDUX_STORE_RECEIVED,\n  SAVE_LEASE_LINES_TO_REDUX_STORE_FAILED } from \"../ActionCreators/types\"\n\nconst INITIAL_STATE = {\n  response: {}, \n  status: \"\"\n}\n\nexport default (state=INITIAL_STATE, {type, payload}) => {\n  switch (type) {\n    case SAVE_LEASE_LINES_TO_REDUX_STORE_REQUESTED:\n      return {...state, status: \"waiting\"}\n    case SAVE_LEASE_LINES_TO_REDUX_STORE_RECEIVED:\n      return {...state, response: payload, status: \"received\"}\n    case SAVE_LEASE_LINES_TO_REDUX_STORE_FAILED:\n      return {...state, response: payload, status: \"failed\"}\n    default:\n      return state\n  }\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/SECT.js",["790"],"import EW from './EW';\nimport NS from './NS';\n\nexport default (measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior = 1, inclinationPrior = 2, azimuthPrior = 3, calculatedNorthingPrior = 0.02, calculatedEastingPrior = 0, index, vsDirection = 0) => {\n  const converter = (Math.PI)/180;\n  const converter2 = 0.00000001;\n\n  const calculatedEastingCurrent = EW(measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior, inclinationPrior, azimuthPrior, calculatedEastingPrior)\n\n  const calculatedNorthingCurrent = NS(measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior, inclinationPrior, azimuthPrior, calculatedNorthingPrior)\n\n  const closure = Math.atan2(calculatedEastingCurrent, calculatedNorthingCurrent + converter2) / converter\n\n  const determineClosure = () => {\n    if (closure < 0) {\n      return Math.cos(((360 + closure) - vsDirection) * converter)\n    } else {\n      return Math.cos((closure - vsDirection) * converter)\n    }\n  }\n\n  const HD = Math.sqrt(Math.pow(calculatedNorthingCurrent, 2) + Math.pow(calculatedEastingCurrent, 2))\n\n  const calculatedSect = HD * determineClosure()\n\n\n  return (\n    parseFloat(calculatedSect.toFixed(2))\n  )\n};\n","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getLeaseLinesFromJSONDb.js",["791"],"import { GET_LEASE_LINES_FROM_JSONDB_REQUESTED,\n  GET_LEASE_LINES_FROM_JSONDB_RECEIVED,\n  GET_LEASE_LINES_FROM_JSONDB_FAILED } from \"./types\"\n\n  export default (selectedWell) => {\n    return async (dispatch, getState) => {\n      dispatch({\n        type: GET_LEASE_LINES_FROM_JSONDB_REQUESTED\n      })\n      try {\n        const selectedWellConvertedToArray = selectedWell.split(\"-\").map(word => word.trim())\n        const selectedWellOperator = selectedWellConvertedToArray[0]\n        const selectedWell_Well = selectedWellConvertedToArray[2]\n        let wells = getState().getWellsWithLeaseLinesFromJSONDbReducer.response\n        // console.log(getState().getWellsWithLeaseLinesFromJSONDbReducer.response)\n        let result = wells.filter(well => {\n          return well.operator === selectedWellOperator && well.well === selectedWell_Well\n        })\n        dispatch({\n          type: GET_LEASE_LINES_FROM_JSONDB_RECEIVED,\n          payload: result[0].grid\n        })\n      } catch (error) {\n        dispatch({\n          type: GET_LEASE_LINES_FROM_JSONDB_FAILED,\n          payload: error\n        })\n      }\n    }\n  }\n","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/saveSurveysToReduxStoreReducer.js",["792"],"import { SAVE_SURVEYS_TO_REDUX_STORE_REQUESTED, \n  SAVE_SURVEYS_TO_REDUX_STORE_RECEIVED,\n  SAVE_SURVEYS_TO_REDUX_STORE_FAILED } from \"../ActionCreators/types\"\n\nconst INITIAL_STATE = {\n  response: {},\n  status: \"\"\n}\n\nexport default (state = INITIAL_STATE, {type, payload}) => {\n  switch (type) {\n    case SAVE_SURVEYS_TO_REDUX_STORE_REQUESTED:\n      return {...state, status: \"waiting\"}\n    case SAVE_SURVEYS_TO_REDUX_STORE_RECEIVED:\n      return {...state, response: payload, status: \"received\"}\n    case SAVE_SURVEYS_TO_REDUX_STORE_FAILED:\n      return {...state, response: payload, status: \"waiting\"}\n    default:\n      return state\n  }\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/postSurveysToJSONDbReducer.js",["793"],"import { POST_SURVEYS_TO_JSONDB_REQUESTED, \n  POST_SURVEYS_TO_JSONDB_RECEIVED, \n  POST_SURVEYS_TO_JSONDB_FAILED } from \"../ActionCreators/types\"\n\nconst INITIAL_STATE = {\n  reponse: {},\n  status: \"\"\n}\n\nexport default (state = INITIAL_STATE, {type, payload}) => {\n  switch (type) {\n    case POST_SURVEYS_TO_JSONDB_REQUESTED:\n      return {...state, status: \"waiting\"}\n    case POST_SURVEYS_TO_JSONDB_RECEIVED:\n      return {...state, response: payload, status: \"received\"}\n    case POST_SURVEYS_TO_JSONDB_FAILED: \n      return {...state, response: payload, status: \"failed\"}\n    default:\n      return state\n  }\n} ","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/postSurveysToJSONDb.js",["794"],"import { POST_SURVEYS_TO_JSONDB_REQUESTED, \n  POST_SURVEYS_TO_JSONDB_RECEIVED, \n  POST_SURVEYS_TO_JSONDB_FAILED } from \"./types\"\n\nimport wells from \"../APIs/wells\"\n\nexport default (wellInfo) => {\n  return async dispatch => {\n    dispatch({\n      type: POST_SURVEYS_TO_JSONDB_REQUESTED\n    })\n    try {\n      let response = await wells.post(\"Surveys\", wellInfo)\n      dispatch({\n        type: POST_SURVEYS_TO_JSONDB_RECEIVED,\n        payload: response.data\n      })\n    } catch (error) {\n      dispatch({\n        type: POST_SURVEYS_TO_JSONDB_FAILED,\n        payload: error\n      })\n    }\n  } \n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getWellsWithSurveysFromJSONDbReducer.js",["795"],"import {\n  GET_WELLS_WITH_SURVEYS_FROM_JSONDB_REQUESTED,\n  GET_WELLS_WITH_SURVEYS_FROM_JSONDB_RECEIVED,\n  GET_WELLS_WITH_SURVEYS_FROM_JSONDB_FAILED\n} from \"../ActionCreators/types\"\n\nconst INITIAL_STATE = {\n  response: {},\n  status: \"\"\n}\n\nexport default (state = INITIAL_STATE, {type, payload}) => {\n  switch (type) {\n    case GET_WELLS_WITH_SURVEYS_FROM_JSONDB_REQUESTED:\n      return {...state, status: \"waiting\"}\n    case GET_WELLS_WITH_SURVEYS_FROM_JSONDB_RECEIVED:\n      return {...state, response: payload, status: \"received\"}\n    case GET_WELLS_WITH_SURVEYS_FROM_JSONDB_FAILED:\n      return {...state, response: payload, status: \"failed\"}\n    default:\n      return state\n  }\n}",["796","797"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getWellsWithSurveysFromJSONDb.js",["798"],"import {\n  GET_WELLS_WITH_SURVEYS_FROM_JSONDB_REQUESTED,\n  GET_WELLS_WITH_SURVEYS_FROM_JSONDB_RECEIVED,\n  GET_WELLS_WITH_SURVEYS_FROM_JSONDB_FAILED\n} from \"./types\"\nimport wells from \"../APIs/wells\"\n\nexport default () => {\n  return async dispatch => {\n    dispatch({\n      type: GET_WELLS_WITH_SURVEYS_FROM_JSONDB_REQUESTED\n    })\n    try {\n      const response = await wells.get(\"Surveys\")\n      dispatch({\n        type: GET_WELLS_WITH_SURVEYS_FROM_JSONDB_RECEIVED,\n        payload: response.data\n      })\n    } catch (error) {\n      dispatch({\n        type: GET_WELLS_WITH_SURVEYS_FROM_JSONDB_FAILED,\n        payload: error\n      })\n    }\n  }\n}\n      ","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/ExistingSurveys.js",["799","800","801","802","803","804","805","806"],"import React, { useEffect, useState } from \"react\"\nimport { connect } from \"react-redux\"\n\nimport Container from \"react-bootstrap/esm/Container\"\nimport Form from \"react-bootstrap/Form\"\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\nimport Button from \"react-bootstrap/Button\"\n\nimport 'react-datasheet/lib/react-datasheet.css'\nimport ReactDataSheet from \"react-datasheet\"\nimport getSurveysFromJSONDb from \"../ActionCreators/getWellPlansFromJSONDb\"\n\n\nconst ExistingSurveys = ({activeWell, getSurveysFromJSONDbReducer, getSurveysFromJSONDb}) => {\n  const [surveys, setSurveys] = useState([])\n  const [grid, setGrid] = useState([])\n\n  useEffect(() => {\n    if (getSurveysFromJSONDbReducer.status === \"received\") {\n      console.log(getSurveysFromJSONDbReducer.response)\n      const plansFromReducerCopy = [...getSurveysFromJSONDbReducer.response]\n      setSurveys(plansFromReducerCopy)\n    }\n  },[getSurveysFromJSONDbReducer.status])\n\n  let gridFromSurveys = [[{value: '', readOnly: true, width: '3rem'}, {value: 'Measured Depth', readOnly: true, width: '10rem'}, {value: 'Inclination', readOnly: true, width: '7rem'}, {value: 'Azimuth', readOnly: true, width: '7rem'}, {value: 'TVD', readOnly: true, width: '7rem'}, {value: 'NS', readOnly: true, width: '7rem'}, {value: 'EW', readOnly: true, width: '7rem'}, {value: 'SECT', readOnly: true, width: '7rem'}, {value: 'DLS', readOnly: true, width: '7rem'}]]\n\n\n  const renderMain = () => {\n    const { operator, rig, well } = activeWell.response\n    return (\n      <React.Fragment>\n        <h3 className=\"my-4\">{operator} - {rig} - {well}</h3>\n        <ReactDataSheet\n          data={surveys}\n          valueRenderer={cell => cell.value}\n          width\n        />\n      </React.Fragment>\n    )\n  }\n\n  if (getSurveysFromJSONDbReducer.status === \"received\" && getSurveysFromJSONDbReducer.response) {\n    return (\n      <Container>\n        {renderMain()}\n      </Container>\n    )\n  } else {\n    return (\n      \"Data Loading\"\n    )\n  }\n}\n\nconst mapStateToProps = ({activeWell, getSurveysFromJSONDbReducer}) => {\n  return {\n    activeWell, \n    getSurveysFromJSONDbReducer\n  }\n}\n\nexport default connect(mapStateToProps, {getSurveysFromJSONDb})(ExistingSurveys)","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getSurveysFromJSONDbReducer.js",["807"],"import { \n  GET_SURVEYS_FROM_JSONDB_REQUESTED,\n  GET_SURVEYS_FROM_JSONDB_RECEIVED,\n  GET_SURVEYS_FROM_JSONDB_FAILED,\n} from \"../ActionCreators/types\"\n\nconst INITIAL_STATE = {\n  response: {},\n  state: \"\"\n}\n\nexport default (state = INITIAL_STATE, { type, payload }) => {\n  switch (type) {\n    case GET_SURVEYS_FROM_JSONDB_REQUESTED:\n      return {...state, status: \"waiting\"}\n    case GET_SURVEYS_FROM_JSONDB_RECEIVED:\n      return {...state, response: payload, status: \"received\"}\n    case GET_SURVEYS_FROM_JSONDB_FAILED:\n      return {...state, response: payload, status: \"failed\"}\n    default:\n      return state\n  }\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getSurveysFromJSONDb.js",["808"],"import { \n  GET_SURVEYS_FROM_JSONDB_REQUESTED,\n  GET_SURVEYS_FROM_JSONDB_RECEIVED,\n  GET_SURVEYS_FROM_JSONDB_FAILED,\n} from \"./types\"\n\n\nexport default (selectedWell) => {\n  return async (dispatch, getState) => {\n    dispatch({\n      type: GET_SURVEYS_FROM_JSONDB_REQUESTED\n    })\n    try {\n      const selectedWellConvertedToArray = selectedWell.split(\"-\").map(word => word.trim())\n      const selectedWellOperator = selectedWellConvertedToArray[0]\n      const selectedWell_Well = selectedWellConvertedToArray[2]\n      let wells = getState().getWellsWithSurveysFromJSONDbReducer.response\n      console.log(getState().getWellsWithSurveysFromJSONDbReducer.response)\n      let result = wells.filter(well => {\n        return well.operator === selectedWellOperator && well.well === selectedWell_Well\n      })\n      dispatch({\n        type: GET_SURVEYS_FROM_JSONDB_RECEIVED,\n        payload: result[0].grid\n      })\n    } catch (error) {\n      dispatch({\n        type: GET_SURVEYS_FROM_JSONDB_FAILED,\n        payload: error\n      })\n    }\n  }\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/ExistingPlans.js",["809","810","811","812","813","814","815","816","817"],"import React, { useEffect, useState } from \"react\"\nimport { connect } from \"react-redux\"\n\nimport Container from \"react-bootstrap/esm/Container\"\nimport Form from \"react-bootstrap/Form\"\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\nimport Button from \"react-bootstrap/Button\"\n\nimport 'react-datasheet/lib/react-datasheet.css'\nimport ReactDataSheet from \"react-datasheet\"\nimport getWellPlansFromJSONDb from \"../ActionCreators/getWellPlansFromJSONDb\"\n\nconst ExistingPlans = ({getWellPlansFromJSONDbReducer, activeWell}) => {\n  const [plans, setPlans] = useState([])\n  const [grid, setGrid] = useState([])\n  \n  useEffect(()=> {\n    if (getWellPlansFromJSONDbReducer.status === \"received\") {\n      let planFromReducerCopy = [...getWellPlansFromJSONDbReducer.response]\n      setPlans(planFromReducerCopy)\n    }\n  },[getWellPlansFromJSONDbReducer.status])\n    \n  \n\n  // useEffect(()=> {\n  //   createGridFromPlans();\n  // },[plans])\n\n  // const convertSurveyNumberStringsToNumbers = () => {\n  //   let plansFromReducerCopy = [...getWellPlansFromJSONDbReducer.response]\n  //   plansFromReducerCopy.map((survey, index) => {\n  //     plansFromReducerCopy[index].\n  //   })\n  //   console.log(getWellPlansFromJSONDbReducer.response)\n  // }\n  // convertSurveyNumberStringsToNumbers()\n\n  const plansCopy = [...plans]\n  // console.log(plansCopy)\n  let gridFromPlans = [[{value: '', readOnly: true, width: '3rem'}, {value: 'Measured Depth', readOnly: true, width: '10rem'}, {value: 'Inclination', readOnly: true, width: '7rem'}, {value: 'Azimuth', readOnly: true, width: '7rem'}, {value: 'TVD', readOnly: true, width: '7rem'}, {value: 'NS', readOnly: true, width: '7rem'}, {value: 'EW', readOnly: true, width: '7rem'}, {value: 'SECT', readOnly: true, width: '7rem'}, {value: 'DLS', readOnly: true, width: '7rem'}]]\n  // plansFromGrid = plansCopy.map(row => {\n  //   row.map(cell => {\n\n  //   })\n  // })\n\n  //   plansCopy.forEach((row, index) => {\n//     console.log(row)\n//     // const convertedRow = [\n//     //   {readOnly: true, value: row[0]}, \n//     //   {readOnly: true, value: row[1]},\n//     //   {readOnly: true, value: row[2]},\n//     //   {readOnly: true, value: row[3]},\n//     //   {readOnly: true, value: row[4]},\n//     //   {readOnly: true, value: row[5]},\n//     //   {readOnly: true, value: row[6]},\n//     //   {readOnly: true, value: row[7]},\n//     //   {readOnly: true, value: row[8]},\n//     // ]\n//     // gridFromPlans.push(convertedRow)\n//   })\n// setGrid(gridFromPlans)\n\n  // const createGridFromPlans = () => {\n  //   let gridFromPlans = [[{value: '', readOnly: true, width: '3rem'}, {value: 'Measured Depth', readOnly: true, width: '10rem'}, {value: 'Inclination', readOnly: true, width: '7rem'}, {value: 'Azimuth', readOnly: true, width: '7rem'}, {value: 'TVD', readOnly: true, width: '7rem'}, {value: 'NS', readOnly: true, width: '7rem'}, {value: 'EW', readOnly: true, width: '7rem'}, {value: 'SECT', readOnly: true, width: '7rem'}, {value: 'DLS', readOnly: true, width: '7rem'}]]\n  //   const plansCopy = [...plans]  \n  //   // const plansCopy = [...plans]\n  //   plansCopy.forEach((row, index) => { \n  //     const convertedRow = [\n  //       {readOnly: true, value: row[0]}, \n  //       {readOnly: true, value: row[1]},\n  //       {readOnly: true, value: row[2]},\n  //       {readOnly: true, value: row[3]},\n  //       {readOnly: true, value: row[4]},\n  //       {readOnly: true, value: row[5]},\n  //       {readOnly: true, value: row[6]},\n  //       {readOnly: true, value: row[7]},\n  //       {readOnly: true, value: row[8]},\n  //     ]\n  //     gridFromPlans.push(convertedRow)\n  //   })\n  //   console.log(gridFromPlans)\n  //   setGrid(gridFromPlans)\n  // }\n\n\n  // createGridFromPlans()\n\n\n  const renderMain = () => {\n    if (getWellPlansFromJSONDbReducer.status === \"received\") {\n      const { operator, rig, well } = activeWell.response\n      return (\n        <React.Fragment>\n          <h3 className=\"my-4\">{operator} - {rig} - {well}</h3>\n          <ReactDataSheet data={activeWell.response.grid} valueRenderer={cell => cell.value} width/>\n        </React.Fragment>\n      )\n    }\n  }\n  if (getWellPlansFromJSONDbReducer.status === \"received\") {\n\n    return (\n      <Container>\n        {renderMain()}\n      </Container>\n    ) \n  } else {\n    return \"error\"\n  }\n  \n\n\n\n  // return (\n  //   <Container>\n  //     <Col>EXISTING PLANS</Col>\n\n  //     <ReactDataSheet\n  //       data={grid}             \n  //       valueRenderer={(cell)=> cell.value}\n  //       onCellsChanged={onCellsChanged}\n  //     ></ReactDataSheet>\n  //     <Col>\n  //   <Button variant=\"primary\" className=\"mt-4 mb-4\" onClick={()=>addNewRow()}>Add a Row</Button>\n  //   <Button variant=\"danger\" className=\"my-4 ml-4\" onClick={()=>removeRow()}>Remove a Row</Button>\n  //   <Button variant=\"info\" className=\"my-4 ml-4\" onClick={()=>editPlans()}>Edit Plans</Button>\n  //   <Button variant=\"info\" className=\"my-4 ml-4\" onClick={()=>createNewPlan()}>Create New Plan</Button>\n    \n  //     </Col>\n  //   </Container>\n  // )\n}\n\nconst mapStateToProps = ({getWellPlansFromJSONDbReducer, activeWell, getWellsFromJSONDbReducer}) => {\n  return {\n    getWellPlansFromJSONDbReducer,\n    activeWell\n  }\n}\n\nexport default connect(mapStateToProps, {getWellPlansFromJSONDb})(ExistingPlans)","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/ExistingPolyLines.js",["818","819","820","821","822"],"import React, { useEffect, useState } from \"react\"\nimport { connect } from \"react-redux\"\n\nimport Container from \"react-bootstrap/esm/Container\"\nimport Form from \"react-bootstrap/Form\"\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\nimport Button from \"react-bootstrap/Button\"\n\nimport 'react-datasheet/lib/react-datasheet.css'\nimport ReactDataSheet from \"react-datasheet\"\nimport ExistingLeaseLines from \"./ExistingLeaseLines\"\nimport ExistingHardLines from \"./ExistingHardLines\"\n\nconst ExistingPolyLines = ({getLeaseLinesFromJSONDbReducer, activeWell}) => {\n  const renderWellData = () => {\n      const {operator, rig, well } = activeWell.response\n      return (\n          <h3 className=\"my-4\">{operator} - {rig} - {well}</h3>\n      )\n    }\n  \n\n  return (\n    <Container>\n      {renderWellData()}\n      <Row className=\"mt-4\">\n        <Col>\n          <h4>Lease Lines</h4>\n          <ExistingLeaseLines/>\n        </Col>\n        <Col>\n        <h4>Hard Lines</h4>\n          <ExistingHardLines/>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nconst mapStateToProps = ({activeWell, getLeaseLinesFromJSONDbReducer}) => {\n return {\n  activeWell, \n  getLeaseLinesFromJSONDbReducer\n }\n}\n\nexport default connect(mapStateToProps)(ExistingPolyLines)","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/ExistingLeaseLines.js",["823","824","825","826","827","828","829","830","831","832","833","834"],"import React, { useEffect, useState } from \"react\"\nimport { connect } from \"react-redux\"\n\nimport Container from \"react-bootstrap/esm/Container\"\nimport Form from \"react-bootstrap/Form\"\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\nimport Button from \"react-bootstrap/Button\"\n\nimport 'react-datasheet/lib/react-datasheet.css'\nimport ReactDataSheet from \"react-datasheet\"\nimport { get } from \"lodash\"\n\nconst ExistingLeaseLines = ({getLeaseLinesFromJSONDbReducer, activeWell}) => {\n  const [leaseLines, setLeaseLines] = useState([])\n  const [grid, setGrid] = useState([])\n\n  useEffect(()=>{\n    if (getLeaseLinesFromJSONDbReducer.status === \"received\") {\n      let leaseLinesFromReducerCopy = [...getLeaseLinesFromJSONDbReducer.response]\n      setLeaseLines(leaseLinesFromReducerCopy)\n    }\n  },[getLeaseLinesFromJSONDbReducer.status])\n\n  const renderMain = () => {\n    if (getLeaseLinesFromJSONDbReducer.status === \"received\") {\n      const {operator, rig, well } = activeWell.response\n      return (\n        <React.Fragment>\n          {/* <h3 className=\"my-4\">{operator} - {rig} - {well}</h3> */}\n          <ReactDataSheet data = {getLeaseLinesFromJSONDbReducer.response} valueRenderer = {cell => cell.value} width></ReactDataSheet>\n        </React.Fragment>\n      )\n    }\n  }\n\n  if (getLeaseLinesFromJSONDbReducer.status === \"received\") {\n    return (\n      <Container>\n        {renderMain()}\n      </Container>\n    )\n  } else {\n        return \"error\"\n    }\n}\n\nconst mapStateToProps = ({activeWell, getLeaseLinesFromJSONDbReducer}) => {\n return {\n  activeWell, \n  getLeaseLinesFromJSONDbReducer\n }\n}\n\nexport default connect(mapStateToProps)(ExistingLeaseLines)","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/postHardLinesToJSONDbReducer.js",["835"],"import   {POST_HARD_LINES_TO_JSONDB_REQUESTED,\n  POST_HARD_LINES_TO_JSONDB_RECEIVED, \n  POST_HARD_LINES_TO_JSONDB_FAILED} from \"../ActionCreators/types\"\n  \n  const INITIAL_STATE = {\n    response: {}, \n    status: \"\"\n  }\n  \n  export default (state = INITIAL_STATE, {type, payload}) => {\n    switch (type) {\n      case POST_HARD_LINES_TO_JSONDB_REQUESTED:\n        return {...state, status: \"waiting\"}\n      case POST_HARD_LINES_TO_JSONDB_RECEIVED:\n        return {...state, response: payload, status: \"received\"}\n      case POST_HARD_LINES_TO_JSONDB_FAILED:\n        return {...state, response: payload, status: \"failed\"}\n      default:\n        return state;\n    }\n  } ",["836","837"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getWellsWithHardLinesFromJSONDbReducer.js",["838"],"import { GET_HARD_LINES_LIST_FROM_JSONDB_REQUESTED,\n  GET_HARD_LINES_LIST_FROM_JSONDB_RECEIVED,\n  GET_HARD_LINES_LIST_FROM_JSONDB_FAILED,\n} from \"../ActionCreators/types\"\n\nconst INITIAL_STATE = {\n  response: {},\n  status: \"\"\n}\n\nexport default (state = INITIAL_STATE, {type, payload}) => {\n  switch (type) {\n    case GET_HARD_LINES_LIST_FROM_JSONDB_REQUESTED:\n      return {...state, status:\"waiting\"}\n    case GET_HARD_LINES_LIST_FROM_JSONDB_RECEIVED:\n      return {...state, response: payload, status: \"received\"}\n    case GET_HARD_LINES_LIST_FROM_JSONDB_FAILED:\n      return {...state, response: payload, status: \"failed\"}\n    default:\n      return state;\n  }\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/PolyLines.js",["839","840","841","842","843"],"import React, { useEffect, useState } from \"react\"\nimport { connect } from \"react-redux\"\n\nimport Container from \"react-bootstrap/esm/Container\"\nimport Form from \"react-bootstrap/Form\"\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\nimport Button from \"react-bootstrap/Button\"\n\nimport 'react-datasheet/lib/react-datasheet.css'\nimport ReactDataSheet from \"react-datasheet\"\nimport ExistingLeaseLines from \"./ExistingLeaseLines\"\nimport ExistingHardLines from \"./ExistingHardLines\"\nimport LeaseLines from \"./LeaseLines\"\nimport HardLines from \"./HardLines\"\n\nconst PolyLines = ({activeWell, getLeaseLinesFromJSONDbReducer, getHardLinesFromJSONDbReducer,}) => {\n  const renderWellData = () => {\n      const {operator, rig, well } = activeWell.response\n      return (\n          <h3 className=\"my-4\">{operator} - {rig} - {well}</h3>\n      )\n    }\n  \n  const renderLeaseLines = () => {\n    if (getLeaseLinesFromJSONDbReducer.status === \"received\" && getLeaseLinesFromJSONDbReducer.response) {\n      return <ExistingLeaseLines/>\n    } else {\n      return <LeaseLines/>\n    }\n  }\n\n  const renderHardLines = () => {\n    if (getHardLinesFromJSONDbReducer.status === \"received\" && getHardLinesFromJSONDbReducer.response) {\n      return <ExistingHardLines/>\n    } else {\n      return <HardLines/>\n    }\n  }\n\n  return (\n    <Container>\n      {renderWellData()}\n      <Row className=\"mt-4\">\n        <Col>\n          <h4>Lease Lines</h4>\n          {renderLeaseLines()}\n        </Col>\n        <Col>\n        <h4>Hard Lines</h4>\n          {renderHardLines()}\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nconst mapStateToProps = ({activeWell, getLeaseLinesFromJSONDbReducer, getHardLinesFromJSONDbReducer}) => {\n return {\n  getLeaseLinesFromJSONDbReducer,\n  getHardLinesFromJSONDbReducer,\n  activeWell, \n }\n}\n\nexport default connect(mapStateToProps)(PolyLines)\n\n\n\n\n// import React, { useState, useEffect } from \"react\"\n// //bootstrap\n// import Container from \"react-bootstrap/esm/Container\";\n// import Form from \"react-bootstrap/Form\"\n// import Row from \"react-bootstrap/Row\"\n// import Col from \"react-bootstrap/Col\"\n// import Button from \"react-bootstrap/Button\"\n\n// import 'react-datasheet/lib/react-datasheet.css';\n// import { connect } from \"react-redux\"\n// import ReactDataSheet from 'react-datasheet';\n\n// // actionCreators\n// import saveLeaseLinesToReduxStore from \"../ActionCreators/saveLeaseLinesToReduxStore\"\n// import postLeaseLinesToJSONDb from \"../ActionCreators/postLeaseLinesToJSONDb\"\n\n\n// const LeaseLines = ({activeWell, saveLeaseLinesToReduxStore, postLeaseLinesToJSONDb}) => {\n//   const {operator, rig, well, county, usState, northing, easting} = activeWell.response\n//   // set up initial grid\n//   // create local state to setGrid\n//   // renderWellHeader {if (either activeWell or saveWellInfoToRedux)} then destructure out the rig, wellname, operator\n//   // render out ReactData sheet data = {grid} valueRenderer={cell=> cell.value} onCellsChanged={onCellsChanged}\n//   // render submit button return row col xs={10} className = \"my-4\" button variant=\"info' onClick = handleSubmit\n//   // handlesubmit = postLeaseLinesToJSONDb saveHardLinesToRedux\n//   // addRows: newGrid =  [...grid, addedRow] setGrid(newGrid)\n\n//   const initialGrid = [\n//     [{value: \"\", readOnly: true, width: \"7rem\"}, {value: \"Northing\", readOnly: true, width: \"7rem\"}, {value:\"Easting\", readOnly: true, width: \"7rem\"}],\n//     [{value: 1, readOnly: true}, {value: 0}, {value: 0}],\n//     [{value: 2, readOnly: true}, {value: 0}, {value: 0}],\n//     [{value: 3, readOnly: true}, {value: 0}, {value: 0}],\n//     [{value: 4, readOnly: true}, {value: 0}, {value: 0}],\n//     [{value: 5, readOnly: true}, {value: 0}, {value: 0}],\n//     [{value: 6, readOnly: true}, {value: 0}, {value: 0}],\n//     [{value: 7, readOnly: true}, {value: 0}, {value: 0}],\n//     [{value: 8, readOnly: true}, {value: 0}, {value: 0}],\n//     [{value: 9, readOnly: true}, {value: 0}, {value: 0}],\n//   ]\n//   const [grid, setGrid] = useState(initialGrid)\n\n//   const renderWellHeader = () => {\n//     if (activeWell.status === \"received\") {\n//       // const {operator, rig, well} = activeWell.response\n//       return <h3 className=\"my-4\">{operator} - {rig} - {well}</h3>\n//     } else {\n//       return \"No Well Data\"\n//     }\n//   }\n\n//   const onCellsChanged = changes => {\n//     const gridNew = grid.map(row => [...row])\n//     changes.forEach(({cell, row, col, value}) => {\n//       gridNew[row][col] = {...grid[row][col], value}\n//     });\n//     setGrid(gridNew);\n    \n//   }\n\n//   const handleSubmit = () => {\n//     const wellInfoAndLeaseLines = {\n//       operator,\n//       rig, \n//       well, \n//       county,\n//       usState, \n//       northing,\n//       easting,\n//       grid\n//     }\n//     // const activeWell\n//     // saveLeaseLinesToJSON \n//     checkTest()\n//     postLeaseLinesToJSONDb(wellInfoAndLeaseLines)\n//     saveLeaseLinesToReduxStore(wellInfoAndLeaseLines)\n\n    \n//   }\n\n//   const checkTest = () => {\n//     console.log(\"whyyy\")\n//   }\n\n//   const renderRowsButtons = () => {\n//     return (\n//       <Row>\n//         <Col xs={10} className=\"my-4\">\n//           <Button variant=\"success\" className=\"my-4\" onClick={handleSubmit}> \n//             Submit\n//           </Button>\n//           <Button variant=\"primary\" className=\"ml-4\" onClick={addRow}>\n//             Add a Row\n//           </Button>\n//           <Button variant=\"primary\" className=\"ml-4\" onClick={removeRow}>\n//             Remove a Row\n//           </Button>\n\n//         </Col>\n//       </Row>\n//     )\n//   }\n\n//   const addRow = () => {\n//     const gridLength = grid.length\n//     const newRow = [{value: gridLength, readOnly: true}, {value: 0}, {value: 0}]\n//     const newGrid = [...grid, newRow]\n//     setGrid(newGrid)\n//   }\n\n//   const removeRow = () => {\n//     const newGrid = [...grid]\n//     newGrid.pop()\n//     setGrid(newGrid)\n//   }\n  \n\n//   return (\n//     <Container>\n//       <Row>\n//         <Col xs={10}>\n//           {renderWellHeader()}\n//           <ReactDataSheet data={grid} valueRenderer={(cell)=> cell.value} onCellsChanged={onCellsChanged}/>\n//           {renderRowsButtons()}\n//         </Col>\n//       </Row>\n//     </Container>\n//   )\n// }\n\n// const mapStateToProps = ({activeWell, postLeaseLinesToJSONDbReducer}) => {\n//   return {\n//     activeWell,\n//     postLeaseLinesToJSONDbReducer,\n//   }\n// }\n\n// export default connect(mapStateToProps, {saveLeaseLinesToReduxStore, postLeaseLinesToJSONDb})(LeaseLines)","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/LeaseLines.js",["844","845","846"],"import React, { useState, useEffect } from \"react\"\n//bootstrap\nimport Container from \"react-bootstrap/esm/Container\";\nimport Form from \"react-bootstrap/Form\"\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\nimport Button from \"react-bootstrap/Button\"\n\nimport 'react-datasheet/lib/react-datasheet.css';\nimport { connect } from \"react-redux\"\nimport ReactDataSheet from 'react-datasheet';\n\n// actionCreators\nimport saveLeaseLinesToReduxStore from \"../ActionCreators/saveLeaseLinesToReduxStore\"\nimport postLeaseLinesToJSONDb from \"../ActionCreators/postLeaseLinesToJSONDb\"\n\n\nconst LeaseLines = ({activeWell, saveLeaseLinesToReduxStore, postLeaseLinesToJSONDb}) => {\n  const {operator, rig, well, county, usState, northing, easting} = activeWell.response\n  // set up initial grid\n  // create local state to setGrid\n  // renderWellHeader {if (either activeWell or saveWellInfoToRedux)} then destructure out the rig, wellname, operator\n  // render out ReactData sheet data = {grid} valueRenderer={cell=> cell.value} onCellsChanged={onCellsChanged}\n  // render submit button return row col xs={10} className = \"my-4\" button variant=\"info' onClick = handleSubmit\n  // handlesubmit = postLeaseLinesToJSONDb saveHardLinesToRedux\n  // addRows: newGrid =  [...grid, addedRow] setGrid(newGrid)\n\n  const initialGrid = [\n    [{value: \"\", readOnly: true, width: \"7rem\"}, {value: \"Northing\", readOnly: true, width: \"7rem\"}, {value:\"Easting\", readOnly: true, width: \"7rem\"}],\n    [{value: 1, readOnly: true}, {value: 0}, {value: 0}],\n    [{value: 2, readOnly: true}, {value: 0}, {value: 0}],\n    [{value: 3, readOnly: true}, {value: 0}, {value: 0}],\n    [{value: 4, readOnly: true}, {value: 0}, {value: 0}],\n    [{value: 5, readOnly: true}, {value: 0}, {value: 0}],\n    [{value: 6, readOnly: true}, {value: 0}, {value: 0}],\n    [{value: 7, readOnly: true}, {value: 0}, {value: 0}],\n    [{value: 8, readOnly: true}, {value: 0}, {value: 0}],\n    [{value: 9, readOnly: true}, {value: 0}, {value: 0}],\n  ]\n  const [grid, setGrid] = useState(initialGrid)\n\n  const renderWellHeader = () => {\n    if (activeWell.status === \"received\") {\n      // const {operator, rig, well} = activeWell.response\n      return <h3 className=\"my-4\">{operator} - {rig} - {well}</h3>\n    } else {\n      return \"No Well Data\"\n    }\n  }\n\n  const onCellsChanged = changes => {\n    const gridNew = grid.map(row => [...row])\n    changes.forEach(({cell, row, col, value}) => {\n      gridNew[row][col] = {...grid[row][col], value}\n    });\n    setGrid(gridNew);\n    \n  }\n\n  const handleSubmit = () => {\n    const wellInfoAndLeaseLines = {\n      operator,\n      rig, \n      well, \n      county,\n      usState, \n      northing,\n      easting,\n      grid\n    }\n    // const activeWell\n    // saveLeaseLinesToJSON \n    checkTest()\n    postLeaseLinesToJSONDb(wellInfoAndLeaseLines)\n    saveLeaseLinesToReduxStore(wellInfoAndLeaseLines)\n\n    \n  }\n\n  const checkTest = () => {\n    console.log(\"whyyy\")\n  }\n\n  const renderRowsButtons = () => {\n    return (\n      <Row>\n        <Col xs={10} className=\"my-4\">\n          <Button variant=\"success\" className=\"my-4\" onClick={handleSubmit}> \n            Submit\n          </Button>\n          <Button variant=\"primary\" className=\"ml-4\" onClick={addRow}>\n            Add a Row\n          </Button>\n          <Button variant=\"primary\" className=\"ml-4\" onClick={removeRow}>\n            Remove a Row\n          </Button>\n\n        </Col>\n      </Row>\n    )\n  }\n\n  const addRow = () => {\n    const gridLength = grid.length\n    const newRow = [{value: gridLength, readOnly: true}, {value: 0}, {value: 0}]\n    const newGrid = [...grid, newRow]\n    setGrid(newGrid)\n  }\n\n  const removeRow = () => {\n    const newGrid = [...grid]\n    newGrid.pop()\n    setGrid(newGrid)\n  }\n  \n\n  return (\n    <Container>\n      <Row>\n        <Col xs={10}>\n          {/* {renderWellHeader()} */}\n          <ReactDataSheet data={grid} valueRenderer={(cell)=> cell.value} onCellsChanged={onCellsChanged}/>\n          {renderRowsButtons()}\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nconst mapStateToProps = ({activeWell, postLeaseLinesToJSONDbReducer}) => {\n  return {\n    activeWell,\n    postLeaseLinesToJSONDbReducer,\n  }\n}\n\nexport default connect(mapStateToProps, {saveLeaseLinesToReduxStore, postLeaseLinesToJSONDb})(LeaseLines)","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getHardLinesFromJSONDb.js",["847"],"import { GET_HARD_LINES_FROM_JSONDB_REQUESTED,\n  GET_HARD_LINES_FROM_JSONDB_RECEIVED,\n  GET_HARD_LINES_FROM_JSONDB_FAILED } from \"./types\"\n\n  export default (selectedWell) => {\n    return async (dispatch, getState) => {\n      dispatch({\n        type: GET_HARD_LINES_FROM_JSONDB_REQUESTED\n      })\n      try {\n        const selectedWellConvertedToArray = selectedWell.split(\"-\").map(word => word.trim())\n        const selectedWellOperator = selectedWellConvertedToArray[0]\n        const selectedWell_Well = selectedWellConvertedToArray[2]\n        let wells = getState().getWellsWithHardLinesFromJSONDbReducer.response\n        let result = wells.filter(well => {\n          return well.operator === selectedWellOperator && well.well === selectedWell_Well\n        })\n        dispatch({\n          type: GET_HARD_LINES_FROM_JSONDB_RECEIVED,\n          payload: result[0].grid\n        })\n      } catch (error) {\n        dispatch({\n          type: GET_HARD_LINES_FROM_JSONDB_FAILED,\n          payload: error\n        })\n      }\n    }\n  }\n","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/ExistingHardLines.js",["848","849","850","851","852","853","854","855","856","857","858","859"],"import React, { useEffect, useState } from \"react\"\nimport { connect } from \"react-redux\"\n\nimport Container from \"react-bootstrap/esm/Container\"\nimport Form from \"react-bootstrap/Form\"\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\nimport Button from \"react-bootstrap/Button\"\n\nimport 'react-datasheet/lib/react-datasheet.css'\nimport ReactDataSheet from \"react-datasheet\"\nimport { get } from \"lodash\"\n\nconst ExistingHardLines = ({getHardLinesFromJSONDbReducer, activeWell}) => {\n  const [hardLines, setHardLines] = useState([])\n  const [grid, setGrid] = useState([])\n\n  useEffect(()=>{\n    if (getHardLinesFromJSONDbReducer.status === \"received\") {\n      let hardLinesFromReducerCopy = [...getHardLinesFromJSONDbReducer.response]\n      setHardLines(hardLinesFromReducerCopy)\n    }\n  },[getHardLinesFromJSONDbReducer.status])\n\n  const renderMain = () => {\n    if (getHardLinesFromJSONDbReducer.status === \"received\") {\n      const {operator, rig, well } = activeWell.response\n      return (\n        <React.Fragment>\n          {/* <h3 className=\"my-4\">{operator} - {rig} - {well}</h3> */}\n          <ReactDataSheet data = {getHardLinesFromJSONDbReducer.response} valueRenderer = {cell => cell.value} width></ReactDataSheet>\n        </React.Fragment>\n      )\n    }\n  }\n\n  if (getHardLinesFromJSONDbReducer.status === \"received\") {\n    return (\n      <Container>\n        {renderMain()}\n      </Container>\n    )\n  } else {\n        return \"error\"\n    }\n}\n\nconst mapStateToProps = ({activeWell, getHardLinesFromJSONDbReducer}) => {\n return {\n  activeWell, \n  getHardLinesFromJSONDbReducer\n }\n}\n\nexport default connect(mapStateToProps)(ExistingHardLines)","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/HardLines.js",["860","861","862","863"],"import React, { useState, useEffect } from \"react\"\n//bootstrap\nimport Container from \"react-bootstrap/esm/Container\";\nimport Form from \"react-bootstrap/Form\"\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\nimport Button from \"react-bootstrap/Button\"\n\nimport 'react-datasheet/lib/react-datasheet.css';\nimport { connect } from \"react-redux\"\nimport ReactDataSheet from 'react-datasheet';\n\n// actionCreators\nimport saveHardLinesToReduxStore from \"../ActionCreators/saveHardLinesToReduxStore\"\nimport postHardLinesToJSONDb from \"../ActionCreators/postHardLinesToJSONDb\"\n\n\nconst HardLines = ({activeWell, saveHardLinesToReduxStore, postHardLinesToJSONDb}) => {\n  const {operator, rig, well, county, usState, northing, easting} = activeWell.response\n  // set up initial grid\n  // create local state to setGrid\n  // renderWellHeader {if (either activeWell or saveWellInfoToRedux)} then destructure out the rig, wellname, operator\n  // render out ReactData sheet data = {grid} valueRenderer={cell=> cell.value} onCellsChanged={onCellsChanged}\n  // render submit button return row col xs={10} className = \"my-4\" button variant=\"info' onClick = handleSubmit\n  // handlesubmit = postHardLinesToJSONDb saveHardLinesToRedux\n  // addRows: newGrid =  [...grid, addedRow] setGrid(newGrid)\n\n  const initialGrid = [\n    [{value: \"\", readOnly: true, width: \"7rem\"}, {value: \"Northing\", readOnly: true, width: \"7rem\"}, {value:\"Easting\", readOnly: true, width: \"7rem\"}],\n    [{value: 1, readOnly: true}, {value: 0}, {value: 0}],\n    [{value: 2, readOnly: true}, {value: 0}, {value: 0}],\n    [{value: 3, readOnly: true}, {value: 0}, {value: 0}],\n    [{value: 4, readOnly: true}, {value: 0}, {value: 0}],\n    [{value: 5, readOnly: true}, {value: 0}, {value: 0}],\n    [{value: 6, readOnly: true}, {value: 0}, {value: 0}],\n    [{value: 7, readOnly: true}, {value: 0}, {value: 0}],\n    [{value: 8, readOnly: true}, {value: 0}, {value: 0}],\n    [{value: 9, readOnly: true}, {value: 0}, {value: 0}],\n  ]\n  const [grid, setGrid] = useState(initialGrid)\n\n  const renderWellHeader = () => {\n    if (activeWell.status === \"received\") {\n      // const {operator, rig, well} = activeWell.response\n      return <h3 className=\"my-4\">{operator} - {rig} - {well}</h3>\n    } else {\n      return \"No Well Data\"\n    }\n  }\n\n  const onCellsChanged = changes => {\n    const gridNew = grid.map(row => [...row])\n    changes.forEach(({cell, row, col, value}) => {\n      gridNew[row][col] = {...grid[row][col], value}\n    });\n    setGrid(gridNew);\n    \n  }\n\n  const handleSubmit = () => {\n    const wellInfoAndLeaseLines = {\n      operator,\n      rig, \n      well, \n      county,\n      usState, \n      northing,\n      easting,\n      grid\n    }\n    // const activeWell\n    // saveLeaseLinesToJSON \n    postHardLinesToJSONDb(wellInfoAndLeaseLines)\n    saveHardLinesToReduxStore(wellInfoAndLeaseLines)\n  }\n\n  const checkTest = () => {\n    console.log(\"whyyy\")\n  }\n\n  const renderRowsButtons = () => {\n    return (\n      <Row>\n        <Col xs={10} className=\"my-4\">\n          <Button variant=\"success\" className=\"my-4\" onClick={handleSubmit}> \n            Submit\n          </Button>\n          <Button variant=\"primary\" className=\"ml-4\" onClick={addRow}>\n            Add a Row\n          </Button>\n          <Button variant=\"primary\" className=\"ml-4\" onClick={removeRow}>\n            Remove a Row\n          </Button>\n\n        </Col>\n      </Row>\n    )\n  }\n\n  const addRow = () => {\n    const gridLength = grid.length\n    const newRow = [{value: gridLength, readOnly: true}, {value: 0}, {value: 0}]\n    const newGrid = [...grid, newRow]\n    setGrid(newGrid)\n  }\n\n  const removeRow = () => {\n    const newGrid = [...grid]\n    newGrid.pop()\n    setGrid(newGrid)\n  }\n  \n\n  return (\n    <Container>\n      <Row>\n        <Col xs={10}>\n          {/* {renderWellHeader()} */}\n          <ReactDataSheet data={grid} valueRenderer={(cell)=> cell.value} onCellsChanged={onCellsChanged}/>\n          {renderRowsButtons()}\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nconst mapStateToProps = ({activeWell, postHardLinesToJSONDbReducer}) => {\n  return {\n    activeWell,\n    postHardLinesToJSONDbReducer,\n  }\n}\n\nexport default connect(mapStateToProps, {saveHardLinesToReduxStore, postHardLinesToJSONDb})(HardLines)","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getWellsWithHardLinesFromJSONDb.js",["864"],"import { \n  GET_HARD_LINES_LIST_FROM_JSONDB_REQUESTED,\n  GET_HARD_LINES_LIST_FROM_JSONDB_RECEIVED,\n  GET_HARD_LINES_LIST_FROM_JSONDB_FAILED\n} from \"./types\"\n\nimport wells from \"../APIs/wells\"\n\n\nexport default () => {\n  return async dispatch => {\n    dispatch({\n      type: GET_HARD_LINES_LIST_FROM_JSONDB_REQUESTED\n    })\n    try {\n      const response = await wells.get(\"/HardLines\")\n      dispatch({\n        type: GET_HARD_LINES_LIST_FROM_JSONDB_RECEIVED,\n        payload: response.data\n      })\n    } catch (error) {\n      dispatch({\n        type: GET_HARD_LINES_LIST_FROM_JSONDB_FAILED,\n        payload: error\n      })\n    }\n  }\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/saveHardLinesToReduxStoreReducer.js",["865"],"import { SAVE_HARD_LINES_TO_REDUX_STORE_REQUESTED,\n  SAVE_HARD_LINES_TO_REDUX_STORE_RECEIVED,\n  SAVE_HARD_LINES_TO_REDUX_STORE_FAILED } from \"../ActionCreators/types\"\n\n  const INITIAL_STATE = {\n    response: {}, \n    status: \"\"\n  }\n  \n  export default (state=INITIAL_STATE, {type, payload}) => {\n    switch (type) {\n      case SAVE_HARD_LINES_TO_REDUX_STORE_REQUESTED:\n        return {...state, status: \"waiting\"}\n      case SAVE_HARD_LINES_TO_REDUX_STORE_RECEIVED:\n        return {...state, response: payload, status: \"received\"}\n      case SAVE_HARD_LINES_TO_REDUX_STORE_FAILED:\n        return {...state, response: payload, status: \"failed\"}\n      default:\n        return state\n    }\n  }","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/saveSurveysToReduxStore.js",["866"],"import { SAVE_SURVEYS_TO_REDUX_STORE_REQUESTED, \n  SAVE_SURVEYS_TO_REDUX_STORE_RECEIVED,\n  SAVE_SURVEYS_TO_REDUX_STORE_FAILED } from \"./types\"\n\n\n  export default (wellData) => {\n    return async dispatch => {\n      dispatch ({\n        type: SAVE_SURVEYS_TO_REDUX_STORE_REQUESTED\n      })\n      try {\n        dispatch({\n          type: SAVE_SURVEYS_TO_REDUX_STORE_RECEIVED,\n          payload: wellData\n        })\n      } catch (error) {\n        dispatch({\n          type: SAVE_SURVEYS_TO_REDUX_STORE_FAILED,\n          payload: error\n        })\n      }\n    }\n  }","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/postLeaseLinesToJSONDb.js",["867"],"import { POST_LEASE_LINES_TO_JSONDB_REQUESTED,\n  POST_LEASE_LINES_TO_JSONDB_RECEIVED,\n  POST_LEASE_LINES_TO_JSONDB_FAILED } from \"./types\"\nimport wells from \"../APIs/wells\"\n\n\n  export default (wellinfo) => {\n    return async dispatch => {\n      dispatch({\n        type: POST_LEASE_LINES_TO_JSONDB_REQUESTED\n      })\n      try {\n        const response = await wells.post(\"LeaseLines\", wellinfo)\n        dispatch({\n          type: POST_LEASE_LINES_TO_JSONDB_RECEIVED,\n          payload: response\n        })\n      } catch (error) {\n        dispatch({\n          type: POST_LEASE_LINES_TO_JSONDB_FAILED,\n          payload: error\n        })\n      }\n    }\n  }","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/APIs/wells.js",[],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/saveHardLinesToReduxStore.js",["868"],"import { SAVE_HARD_LINES_TO_REDUX_STORE_REQUESTED,\n  SAVE_HARD_LINES_TO_REDUX_STORE_RECEIVED,\n  SAVE_HARD_LINES_TO_REDUX_STORE_FAILED } from \"./types\"\n\nexport default (leaseLines) => {\n  return async dispatch => {\n    dispatch({\n      type: SAVE_HARD_LINES_TO_REDUX_STORE_REQUESTED\n    })\n    try {\n      dispatch({\n        type: SAVE_HARD_LINES_TO_REDUX_STORE_RECEIVED,\n        payload: leaseLines\n      })\n    } catch(error) {\n      dispatch({\n        type: SAVE_HARD_LINES_TO_REDUX_STORE_FAILED,\n        payload: error\n      })\n    }\n  }\n}\n",["869","870"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/saveActiveWellToReduxStore.js",["871"],"import { SAVE_ACTIVE_WELL_TO_REDUX_STORE_REQUESTED,\n  SAVE_ACTIVE_WELL_TO_REDUX_STORE_RECEIVED,\n  SAVE_ACTIVE_WELL_TO_REDUX_STORE_FAILED\n } from \"./types\"\n\nexport default (selectedWell) => {\n  return (dispatch) => {\n    dispatch ({\n      type: SAVE_ACTIVE_WELL_TO_REDUX_STORE_REQUESTED\n    });\n    try {\n      dispatch({\n        type: SAVE_ACTIVE_WELL_TO_REDUX_STORE_RECEIVED,\n        payload: selectedWell\n      });\n    } catch (error) {\n      console.log(error)\n      dispatch({\n        type: SAVE_ACTIVE_WELL_TO_REDUX_STORE_FAILED,\n        payload: error\n      })\n    }\n  }\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/savePlansToReduxStore.js",["872"],"import { SAVE_PLANS_TO_REDUX_STORE_REQUESTED,\n  SAVE_PLANS_TO_REDUX_STORE_RECEIVED,\n  SAVE_PLANS_TO_REDUX_STORE_FAILED\n} from \"./types\"\n\nexport default (plans) => {\n  return async (dispatch, getState) => {\n    dispatch({\n      type: SAVE_PLANS_TO_REDUX_STORE_REQUESTED\n    });\n    \n    try {\n      dispatch({\n        type: SAVE_PLANS_TO_REDUX_STORE_RECEIVED,\n        payload: plans,\n      });\n    } catch (error) {\n      dispatch({\n        type: SAVE_PLANS_TO_REDUX_STORE_FAILED,\n        payload: error\n      })\n    }\n  }\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/postHardLinesToJSONDb.js",["873"],"import { POST_HARD_LINES_TO_JSONDB_REQUESTED,\n  POST_HARD_LINES_TO_JSONDB_RECEIVED,\n  POST_HARD_LINES_TO_JSONDB_FAILED } from \"./types\"\nimport wells from \"../APIs/wells\"\n\n\n  export default (wellinfo) => {\n    return async dispatch => {\n      dispatch({\n        type: POST_HARD_LINES_TO_JSONDB_REQUESTED\n      })\n      try {\n        const response = await wells.post(\"HardLines\", wellinfo)\n        dispatch({\n          type: POST_HARD_LINES_TO_JSONDB_RECEIVED,\n          payload: response\n        })\n      } catch (error) {\n        dispatch({\n          type: POST_HARD_LINES_TO_JSONDB_FAILED,\n          payload: error\n        })\n      }\n    }\n  }","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getHardLinesFromJSONDbReducer.js",["874"],"import { GET_HARD_LINES_FROM_JSONDB_REQUESTED,\n  GET_HARD_LINES_FROM_JSONDB_RECEIVED,\n  GET_HARD_LINES_FROM_JSONDB_FAILED } from \"../ActionCreators/types\"\n\nconst INITIAL_STATE = {\n  response: {},\n  status: \"\"\n}\n\nexport default (state = INITIAL_STATE, {type, payload}) => {\n  switch (type) {\n    case GET_HARD_LINES_FROM_JSONDB_REQUESTED:\n      return {...state, status: \"waiting\"}\n    case GET_HARD_LINES_FROM_JSONDB_RECEIVED:\n      return {...state, response: payload, status: \"received\"}\n    case GET_HARD_LINES_FROM_JSONDB_FAILED:\n      return {...state, response: payload, status: \"failed\"}\n    default:\n      return state\n  }\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/UserVerification/SignIn.js",["875","876","877","878","879"],"import React, { useState } from 'react';\n//boostrap\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Nav from \"react-bootstrap/Nav\"\nimport Jumbotron from 'react-bootstrap/esm/Jumbotron';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Tabs from 'react-bootstrap/Tabs'\nimport Tab from \"react-bootstrap/Tab\"\n// AWS Cognito\nimport { AuthenticationDetails, CognitoUser } from 'amazon-cognito-identity-js';\nimport UserPool from \"./UserPool\"\n//redux & router\nimport { connect } from \"react-redux\"\nimport { Link, Redirect } from \"react-router-dom\"\nimport History from \"../History\"\n// action Creator\nimport userNeedsToCreateAccount from \"../../ActionCreators/UserVerification/userNeedsToCreateAccount\"\n\n\nconst SignIn = ({ userNeedsToCreateAccount }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n\n\n  const submitCredentialsForSignIn = (event) => {\n    event.preventDefault();\n    const userCredentials = {\n      Username: email,\n      Password: password\n    }\n    const userData = {\n      Username: email, \n      Pool: UserPool\n    }\n    const authDetails = new AuthenticationDetails(userCredentials);\n    const user = new CognitoUser(userData)\n\n    user.authenticateUser(authDetails, {\n      onSuccess: data => {\n        console.log(data);\n        History.push(\"/dashboard\")\n        console.log(History)\n        \n      },\n\n      onFailure: err => {\n        console.log(\"error\", err)\n      }\n\n    })\n  }\n\n  //responsible for rendering SignUp page\n  const createAccount = (event) => {\n    event.preventDefault()\n\n    userNeedsToCreateAccount(true)\n  }\n\n  const renderSignIn = () => {\n    return (\n      <React.Fragment>\n      <Jumbotron fluid className=\"bg-dark text-white mb-0\">\n        <Container>\n          <h1>LandShark App (Employee Portal)</h1>\n        </Container>\n      </Jumbotron>\n      <Row className=\"justify-content-end\">\n      <Link to=\"/scratch\"className=\"item pr-4\" style={{color:\"whitesmoke\"}}>\n        Scratch\n        </Link>\n      </Row>\n      <Form>\n        <Container fluid className=\"h-100\">\n            <Row className=\"justify-content-center align-self-center\">\n              <Col md=\"auto\"></Col>\n              <Col md={3}>\n                <Row className=\"justify-content-md-center\">\n                  <h3>Sign In</h3>\n                </Row>\n                <Form.Group>\n                  <Form.Control placeholder=\"Enter Email\" onChange={event => setEmail(event.target.value)} />\n                </Form.Group>\n                <Form.Group>\n                  <Form.Control placeholder=\"Enter Password\" onChange={event => setPassword(event.target.value)} />\n                </Form.Group>\n                <Form.Group>\n                  <Row style={{alignItems: \"flex-end\"}}> \n                    <Col>\n                      <Button variant=\"info\" disabled={ email === \"\" && password === \"\" ? true : false } onClick={(e)=>submitCredentialsForSignIn(e)}>Submit</Button>\n                    </Col>\n                    <Col className=\"d-flex flex-row-reverse\">\n                      <Link to=\"/signup\" className=\"item\" style={{alignSelf: \"flex-end\"}}>\n                        Create an account\n                      </Link>\n                    </Col>\n                  </Row>\n                </Form.Group>       \n              </Col>\n              <Col md=\"auto\"></Col>\n\n            </Row>\n\n        </Container>\n        </Form> \n        \n      </React.Fragment>\n    )\n  }\n\n  return (\n      renderSignIn()\n  )\n}\n\n\nexport default connect(null, {userNeedsToCreateAccount})(SignIn)","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/UserVerification/SignInHome.js",["880","881","882"],"import React, {useState} from \"react\"\nimport Container from \"react-bootstrap/esm/Container\"\nimport SignIn from \"./SignIn\"\nimport SignUp from \"./SignUp\"\nimport { connect } from \"react-redux\"\nimport userNeedsToCreateAccount from \"../../ActionCreators/UserVerification/userNeedsToCreateAccount\"\n\nconst SignInHome = ({userNeedsToCreateAccountReducer}) => {\n  // const [existingUser, setExistingUser] = useState(true)\n  const SignInOrSignUp = () => {\n    if (userNeedsToCreateAccountReducer.response) {\n      console.log(\"user needs an account -sent from Home\")\n      return (\n        <SignUp/>\n      )\n    }\n    return (\n      <SignIn/>\n    )\n  }\n  return (\n    SignInOrSignUp()\n  )\n}\n\nconst mapStateToProps = ({ userNeedsToCreateAccountReducer }) => {\n  return {\n    userNeedsToCreateAccountReducer\n  }\n}\n\nexport default connect(mapStateToProps)(SignInHome);","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/UserVerification/UserPool.js",["883","884"],"import {\n\tCognitoUserPool,\n\tCognitoUserAttribute,\n\tCognitoUser,\n} from 'amazon-cognito-identity-js';\n\nconst poolData = {\n  UserPoolId: \"us-east-2_75YqLvMCl\",\n  ClientId: \"2j6ne1d5384a382eh4755719be\"\n}\n\nexport default new CognitoUserPool(poolData);\n\n\n// const POOL_DATA = {\n//   UserPoolId: \"us-east-2_yvwiM5ORU\",\n//   ClientId: \"4958acsp36ccmg13tfg44b0jkc\"\n// };\n// const userPool = new CognitoUserPool(POOL_DATA);","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/UserVerification/SignUp.js",["885","886","887"],"import React, { useState } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n// AWS Cognito\nimport UserPool from \"./UserPool\"\nimport { AuthenticationDetails, CognitoUser } from 'amazon-cognito-identity-js';\n//redux & router\nimport { connect } from \"react-redux\"\nimport { Link } from \"react-router-dom\"\n\nconst SignUp = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [userSubmittedCredentials, setSubmittedCreds] = useState(false)\n  const [verificationCode, setVerificationCode] = useState(null)\n  const [verficationSuccess, setVerificationSucess] = useState(false)\n\n\n  const submitNewUser = event => {\n    event.preventDefault();\n    UserPool.signUp(email, password, [], null, (err, data) => {\n      if (err) {\n        console.log(err)\n      } else {\n        console.log(data)\n        setSubmittedCreds(true)\n      }\n    })\n  }\n\n  const renderSignUp = () => {\n    return (\n        <Col>\n          <Row className=\"justify-content-md-center\">\n            <h3>Sign Up</h3>\n          </Row>\n          <Form.Group>\n            <Form.Control placeholder=\"Enter Email\" onChange={event => setEmail(event.target.value)} />\n          </Form.Group>\n          <Form.Group>\n            <Form.Control placeholder=\"Create Password\" onChange={event => setPassword(event.target.value)} />\n          </Form.Group>\n          <Row style={{alignItems: \"baseline\"}}>\n            <Col>\n              <Button variant=\"info\" disabled={ email === \"\" && password === \"\" && userSubmittedCredentials === false ? true : false } onClick={(e)=>submitNewUser(e)}>Submit</Button>\n            </Col>\n            <Col className=\"text-right\">\n              <Link to=\"/signin\" className=\"item\">\n                Already have an account?\n              </Link>\n            </Col>\n          </Row>\n        </Col>\n    )\n  }\n\n  const verifyConfirmationCode = event => {\n    event.preventDefault()\n    const userData = {\n      Username: email,\n      Pool: UserPool\n    }\n    console.log(verificationCode)\n    const congitoUser = new CognitoUser(userData);\n    congitoUser.confirmRegistration(verificationCode, true, (err, result) => {\n      if (err) {\n        console.log(err)\n      } else {\n        console.log(result)\n        setVerificationSucess(true)\n      }\n    })\n  }\n\n  const renderCodeResponse = () => {\n    return (\n      <div>\n        Registration Sucessful\n      </div>\n    )\n  }\n\n  const renderConfirmationCodeForm = () => {\n     return (\n        <Form.Group>\n          <Row className=\"justify-content-md-center\">\n            <h3 className=\"mt-4\">Confirmation Code</h3>\n          </Row>\n          <Form.Control className=\"mt-3\" placeholder=\"Enter Verification Code\" onChange={event => setVerificationCode(event.target.value)} />\n          <Button className=\"mt-4\" variant=\"primary\" disabled={ verificationCode === \"\" ? true : false } onClick={(event) => verifyConfirmationCode(event)}>Submit</Button>\n        </Form.Group>\n     )\n  }\n\n  return (\n    <React.Fragment>\n      <Jumbotron fluid className=\"bg-dark text-white\">\n        <Container>\n          <h1>LandShark App (Employee Portal)</h1>\n        </Container>\n      </Jumbotron>\n      <Form>\n        <Row className=\"justify-content-center align-self-center\">\n            <Col md=\"auto\"/>\n            <Col md={3}>\n              {renderSignUp()}\n              {userSubmittedCredentials ? renderConfirmationCodeForm() : null }\n              {verficationSuccess ? \"Registration Successful\" : \"\"}\n            </Col>\n            <Col md=\"auto\"></Col>\n          </Row>\n      </Form>\n    </React.Fragment>\n  )\n}\n\nexport default SignUp","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/UserVerification/userNeedsToCreateAccount.js",["888"],"import { SIGN_UP_REQUESTED,\n  SIGN_UP_RECEIVED,\n  SIGN_UP_FAILED\n} from \"../types\"\n\nexport default (bool) => {\n  return async (dispatch, getState) => {\n    dispatch({\n      type: SIGN_UP_REQUESTED\n    });\n    \n    try {\n      dispatch({\n        type: SIGN_UP_RECEIVED,\n        payload: bool,\n      });\n    } catch (error) {\n      dispatch({\n        type: SIGN_UP_FAILED,\n        payload: error\n      })\n    }\n  }\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/userNeedsToCreateAccountReducer.js",["889"],"import { SIGN_UP_REQUESTED,\n  SIGN_UP_RECEIVED,\n  SIGN_UP_FAILED\n} from \"../ActionCreators/types\"\n\n\nconst INITIAL_STATE = {\n  response: false,\n  status: \"\"\n}\n\n\nexport default (state = INITIAL_STATE, {type, payload}) => {\n  \n  switch (type) {\n    case SIGN_UP_REQUESTED:\n      return {...state, status: \"waiting\"}\n    case SIGN_UP_RECEIVED:\n      return {...state, response: payload, status: \"received\"}\n    case SIGN_UP_FAILED:\n      return {...state, response: payload, status: \"failed\"}\n    default:\n      return state\n  }\n}\n","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/History.js",[],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/Dashboard.js",["890","891","892","893","894","895"],"import React from 'react'\n// react-boostrap\nimport Tabs from 'react-bootstrap/Tabs'\nimport Tab from \"react-bootstrap/Tab\"\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Container from 'react-bootstrap/Container'\n// redux\nimport { connect } from 'react-redux'\n// styling \nimport 'bootstrap/dist/css/bootstrap.min.css';\n//import 'custom.scss'\n// components\nimport Home from \"./Home\"\nimport Plans from \"./Plans\"\nimport ExistingPlans from './ExistingPlans'\nimport LeaseLines from \"./PolyLines\"\nimport ExistingLeaseLines from \"./ExistingPolyLines\"\nimport savePlansToReduxStore from '../ActionCreators/savePlansToReduxStore'\nimport PVA from \"./PVA\"\nimport ExistingPVA from \"./ExistingPVA\"\nimport Surveys from \"./Surveys\"\nimport ExistingSurveys from \"./ExistingSurveys\"\nimport ExistingPolyLines from './ExistingPolyLines'\nimport PolyLines from './PolyLines'\nimport SignInHome from \"./UserVerification/SignInHome\"\nimport { Link } from \"react-router-dom\"\n\n// action creators\nimport getHardLinesFromJSONDb from '../ActionCreators/getHardLinesFromJSONDb'\n\nconst Dashboard = ({saveHardLinesToReduxStoreReducer, getHardLinesFromJSONDbReducer, getSurveysFromJSONDbReducer, saveSurveysToReduxStoreReducer, activeWell, saveWellInfoToReduxStoreReducer, getWellPlansFromJSONDbReducer, getLeaseLinesFromJSONDbReducer, savePlansToReduxStoreReducer, saveLeaseLinesToReduxStoreReducer}) => {\n  \n  return (\n    <React.Fragment>\n      <Jumbotron fluid className=\"bg-dark text-white\">\n        <Container>\n          <h1>LandShark App (Employee Portal)</h1>\n        </Container>\n      </Jumbotron>\n      <Tabs>\n        <Tab eventKey=\"Home\" title=\"Home\">\n          <Container>\n            <Home/>\n          </Container>\n        </Tab>\n        <Tab eventKey=\"Plans\" title=\"Plans\" disabled={getWellPlansFromJSONDbReducer.status === \"received\" || saveWellInfoToReduxStoreReducer.status === \"received\" ? false : true}>\n          <Container>\n          {getWellPlansFromJSONDbReducer.status === \"received\" && getWellPlansFromJSONDbReducer.response ? <ExistingPlans/> : <Plans/>}\n          </Container>\n        </Tab>\n        <Tab eventKey=\"PolyLines\" title=\"PolyLines\" disabled={getLeaseLinesFromJSONDbReducer.status === \"received\" || getHardLinesFromJSONDbReducer.status === \"received\"|| saveWellInfoToReduxStoreReducer.status === \"received\" ? false : true}>\n          <Container>\n            {getLeaseLinesFromJSONDbReducer.status === \"received\" && getHardLinesFromJSONDbReducer.status === \"received\" ? <ExistingPolyLines/> : <PolyLines/> }\n          </Container>\n        </Tab>\n        <Tab eventKey=\"PVA\" title=\"PVA\" disabled={(saveWellInfoToReduxStoreReducer.status === \"received\" && savePlansToReduxStoreReducer.status === \"received\" && saveLeaseLinesToReduxStoreReducer.status === \"received\" && saveHardLinesToReduxStoreReducer.status === \"received\")|| activeWell.status === \"received\" ? false : true}>\n          <Container>\n            {saveSurveysToReduxStoreReducer.status === \"received\" && savePlansToReduxStoreReducer.response && saveLeaseLinesToReduxStoreReducer.status === \"received\"  && saveLeaseLinesToReduxStoreReducer.status === \"received\" && saveHardLinesToReduxStoreReducer.status === \"received\" ? <PVA/> : <ExistingPVA/> }\n          </Container>\n        </Tab>\n        <Tab eventKey=\"Surveys\" title=\"Surveys\" disabled={(saveWellInfoToReduxStoreReducer.status === \"received\" && savePlansToReduxStoreReducer.status === \"received\" && saveLeaseLinesToReduxStoreReducer.status === \"received\") || activeWell.status === \"received\" ? false : true}>\n          <Container>\n            {getSurveysFromJSONDbReducer.status === \"received\" ? <ExistingSurveys/> : <Surveys/> }\n          </Container>\n        </Tab>\n      </Tabs>\n    </React.Fragment>\n  );\n}\n\nconst mapStateToProps = ({ saveHardLinesToReduxStoreReducer,getHardLinesFromJSONDbReducer, getSurveysFromJSONDbReducer, saveSurveysToReduxStoreReducer ,saveWellInfoToReduxStoreReducer, getWellPlansFromJSONDbReducer, activeWell, getLeaseLinesFromJSONDbReducer, savePlansToReduxStoreReducer, saveLeaseLinesToReduxStoreReducer}) => {\n  return {\n    saveWellInfoToReduxStoreReducer, \n    getWellPlansFromJSONDbReducer,\n    getHardLinesFromJSONDbReducer,\n    getSurveysFromJSONDbReducer,\n    activeWell,\n    getLeaseLinesFromJSONDbReducer,\n    savePlansToReduxStoreReducer,\n    saveLeaseLinesToReduxStoreReducer,\n    saveSurveysToReduxStoreReducer,\n    saveHardLinesToReduxStoreReducer,\n  }\n}\n\nexport default connect(mapStateToProps, { })(Dashboard);\n\n","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/scratch.js",["896","897","898"],"// DRAFTING ONLY - DO NOT USE\nimport React, { useState } from \"react\"\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport { Link } from \"react-router-dom\"\nimport axios from 'axios';\n\n\n\nexport default () => {\n  const [operator, setOperator] = useState(\"\")\n  const [rig, setRig] = useState(\"\")\n  const [well, setWell] = useState(\"\")\n  \n  const handleNewWellSubmit = async () => {\n      const data = {\n        operator, \n        rig,\n        well\n      }\n      try {\n        console.log(data)\n        await axios.post(\"https://ybalhnj3qc.execute-api.us-east-2.amazonaws.com/dev/testing2\", data)\n\n      } catch (error){\n        console.log(error)\n      }\n      \n  }\n  return (\n    <Container>\n      <Row>\n        <Col>\n        <h3 className=\"my-4\">Add new well data</h3>\n        <Form.Control className=\"mt-3\" placeholder=\"Operator\" onChange={event => setOperator(event.target.value)} />\n        <Form.Control className=\"mt-3\" placeholder=\"Rig\" onChange={event => setRig(event.target.value)} />\n        <Form.Control className=\"mt-3\" placeholder=\"Well\" onChange={event => setWell(event.target.value)} />\n        \n        <Button className=\"mt-4\" variant=\"info\" onClick={()=>handleNewWellSubmit()}>Submit and begin adding well data</Button>\n        </Col>\n      </Row>\n    </Container>\n  )\n}",["899","900"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/postWellInfoToDynamoDb.js",["901","902"],"import axios from \"axios\"\nimport { \n  POST_WELL_INFO_TO_DYNAMODB_REQUESTED,\n  POST_WELL_INFO_TO_DYNAMODB_RECEIVED,\n  POST_WELL_INFO_TO_DYNAMODB_FAILED\n} from \"./types\"\nimport moment from \"moment\"\n\nexport default (wellInfo) => {\n  return async (dispatch, getState) => {\n\n    dispatch({\n      type: POST_WELL_INFO_TO_DYNAMODB_REQUESTED\n    })\n    try {\n      const response = await axios.post(`https://l9vksep5eb.execute-api.us-east-2.amazonaws.com/dev/postwellinfotodynamodb`, wellInfo)\n      dispatch({\n        type: POST_WELL_INFO_TO_DYNAMODB_RECEIVED,\n        payload: response.data\n      })\n    } catch (error) {\n\n      dispatch({\n        type: POST_WELL_INFO_TO_DYNAMODB_FAILED,\n        payload: error\n      })\n    }\n  }\n}\n\n\n// wellData = {\n//   \"operator\": \"EOG\"\n//   \"rig\": \"H&P425\"\n//   \"well\": \"RyPepp\"\n//   \"county\": \"Lea\"\n//   \"uSstate\": \"NM\"\n// }","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/postWellInfoToDynamoDbReducer.js",["903"],"import { \n  POST_WELL_INFO_TO_DYNAMODB_REQUESTED,\n  POST_WELL_INFO_TO_DYNAMODB_RECEIVED,\n  POST_WELL_INFO_TO_DYNAMODB_FAILED\n} from \"../ActionCreators/types\"\n\n\nconst INITIAL_STATE = {\n  response: {},\n  status: \"\"\n}\n\nexport default (state = INITIAL_STATE, {type, payload}) => {\n  switch (type) {\n    case POST_WELL_INFO_TO_DYNAMODB_REQUESTED:\n      return {...state, status: \"waiting\"}\n    case POST_WELL_INFO_TO_DYNAMODB_RECEIVED:\n      return {...state, response: payload, status: \"received\"}\n    case POST_WELL_INFO_TO_DYNAMODB_FAILED: \n      return {...state, response: payload, status: \"failed\"}\n    default:\n      return state\n  }\n} ","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/postPlansToDynamoDbReducer.js",["904"],"import { POST_PLANS_TO_DYNAMODB_REQUESTED,\n  POST_PLANS_TO_DYNAMODB_RECEIVED,\n  POST_PLANS_TO_DYNAMODB_FAILED } from \"../ActionCreators/types\"\n\nconst INITIAL_STATE = {\n  response: {},\n  status: \"\"\n}\nexport default (state = INITIAL_STATE, {type, payload}) => {\n  switch (type) {\n    case POST_PLANS_TO_DYNAMODB_REQUESTED:\n      return {...state, status: \"waiting\"}\n    case POST_PLANS_TO_DYNAMODB_RECEIVED:\n      return {...state, response: payload, status: \"received\"}\n    case POST_PLANS_TO_DYNAMODB_FAILED:\n      return {...state, response: payload, status: \"failed\"}\n    default:\n      return state;\n  }\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/postPlansToDynamoDb.js",["905"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getWellsFromDynamoDbReducer.js",["906"],"import {\n  GET_WELLS_FROM_DYNAMO_REQUESTED,\n  GET_WELLS_FROM_DYNAMO_RECEIVED,\n  GET_WELLS_FROM_DYNAMO_FAILED\n} from \"../ActionCreators/types\"\n\n\nconst INITIAL_STATE = {\n  response: {},\n  status: \"\"\n}\n\nexport default (state = INITIAL_STATE, {type, payload}) => {\n  switch (type) {\n    case GET_WELLS_FROM_DYNAMO_REQUESTED:\n      return {...state, status: \"waiting\"}\n    case GET_WELLS_FROM_DYNAMO_RECEIVED:\n      return {...state, response: payload, status: \"received\"}    \n    case GET_WELLS_FROM_DYNAMO_FAILED:\n      return {...state, response: payload, status: \"failed\"}\n    default:\n      return state\n  }\n}","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Components/App.js",["907","908","909","910","911","912"],["913","914"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/index.js",[],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/postPlansToJSONDbReducer.js",["915"],["916","917"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/postLeaseLinesToJSONDbReducer.js",["918"],["919","920"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/saveLeaseLinesToReduxStoreReducer.js",["921","922"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/getWellsWithSurveysFromJSONDbReducer.js",["923"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/saveHardLinesToReduxStoreReducer.js",["924"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/getWellsWithHardLinesFromJSONDbReducer.js",["925"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/getWellPlansFromDynamoDbReducer.js",["926"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Components/Plans.js",["927","928","929","930","931"],"import React, { useState, useEffect } from \"react\"\n//bootstrap\nimport Container from \"react-bootstrap/esm/Container\";\nimport Form from \"react-bootstrap/Form\"\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\nimport Button from \"react-bootstrap/Button\"\n//other libs\nimport 'react-datasheet/lib/react-datasheet.css';\nimport { connect } from \"react-redux\"\nimport ReactDataSheet from 'react-datasheet';\n// actionCreators\n\nimport savePlansToReduxStore from \"../ActionCreators/savePlansToReduxStore\"\n//helper functions\nimport calculateTVD from \"../HelperFunctions/Calculations/TVD\"\nimport calculateNS from \"../HelperFunctions/Calculations/NS\"\nimport calculateEW from \"../HelperFunctions/Calculations/EW\"\nimport calculateSECT from \"../HelperFunctions/Calculations/SECT\"\nimport calculateDLS from \"../HelperFunctions/Calculations/DLS\"\nimport postPlansToJSONDb from \"../ActionCreators/postPlansToJSONDb\";\nimport postPlansToDynamoDb from \"../ActionCreators/postPlansToDynamoDb\";\n\n\n\nconst Plans = ({postPlansToDynamoDb, savePlansToReduxStore, saveWellInfoToReduxStoreReducer,savePlansToReduxStoreReducer, postPlansToJSONDb}) => {\n  \n  const [editGrid, setEditGrid] = useState(true)\n  const [input, setInput] = useState(false)\n  const [vsDirection, setVSDirection] = useState(0)\n  \n  const initialGrid = [\n    [{value: '', readOnly: true, width: '7rem'}, {value:\"Measured Depth\", readOnly: true, width: '7rem'}, {value:\"Inclination\", readOnly: true, width: '7rem'}, {value:\"Azimuth\", readOnly: true, width: '7rem'}, {value:\"TVD\", readOnly: true, width: '7rem'}, {value:\"Northing\", readOnly: true, width: '7rem'}, {value:\"Easting\", readOnly: true, width: '7rem'}, {value:\"VS\", readOnly: true, width: '7rem'},{value:\"DLS\", readOnly: true, width: '7rem'}],\n    \n    [{value: 1, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}],\n    \n    [{readOnly: true, value: 2}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}],\n    [{readOnly: true, value: 3}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}],\n    [{readOnly: true, value: 4}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}],\n    [{readOnly: true, value: 5}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}],\n  ];\n\n  const [grid, setGrid] = useState(initialGrid);\n\n  useEffect(()=>{\n    if (input) {\n      //performcalcs doesn't happen bc we're copying from plans. Currently not needed\n    }\n  },[input])\n\n  useEffect(()=> {\n    handleAddRows(1)\n  }, [])\n\n  const performCalculations = () => {\n    grid.map((row, index) => {\n      if (index === 0 || index === 1) {\n        // nothing because we don't want to run calcs on the header array\n      } else {\n        // for every array within grid array, want to iterate over and change the values of TVD, NS, EW, SECT, & DLS\n        // note val after idx is column \n        // TVD order of args : (measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior, inclinationPrior, azimuthPrior, calculatedTVDPrior)\n        // NS order of args: (measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior, inclinationPrior, azimuthPrior, calculatedNorthingPrior)\n\n        const calculatedTVD = calculateTVD(grid[index][1].value, grid[index][2].value, grid[index][3].value, grid[index - 1][1].value, grid[index - 1][2].value, grid[index - 1][3].value, grid[index - 1][4].value)\n        const calculatedNS = calculateNS(grid[index][1].value, grid[index][2].value, grid[index][3].value, grid[index - 1][1].value, grid[index - 1][2].value, grid[index - 1][3].value, grid[index - 1][5].value)\n        const calculatedEW = calculateEW(grid[index][1].value, grid[index][2].value, grid[index][3].value, grid[index - 1][1].value, grid[index - 1][2].value, grid[index - 1][3].value, grid[index - 1][6].value)\n        const calculatedSECT = calculateSECT(grid[index][1].value, grid[index][2].value, grid[index][3].value, grid[index - 1][1].value, grid[index - 1][2].value, grid[index - 1][3].value, grid[index - 1][5].value, grid[index - 1][6].value, index, vsDirection)\n        const calculatedDLS = calculateDLS(grid[index][1].value, grid[index][2].value, grid[index][3].value, grid[index - 1][1].value, grid[index - 1][2].value, grid[index - 1][3].value)\n\n\n        grid[index][4] = {...grid[index][4], readOnly: true, value: calculatedTVD}\n        grid[index][5] = {...grid[index][5], readOnly: true, value: calculatedNS}\n        grid[index][6] = {...grid[index][6], readOnly: true, value: calculatedEW}\n        grid[index][7] = {...grid[index][7], readOnly: true, value: calculatedSECT}\n        grid[index][8] = {...grid[index][8], readOnly: true, value: calculatedDLS}\n\n        setGrid(grid)\n        setInput(false)\n\n      }\n    })\n  }\n\n  const onCellsChanged = changes => {\n    // iterate through existing grid to get a copy and not mutate current as we iterate over\n    const gridNew = grid.map(row => [...row]);\n    // iterate through the changes.  Each change is a cell, each cell is an object\n    // with cell (previousVal), row, col, currentVal\n    // add the value of the newGrid[row#][col#] to the new value \n    changes.forEach(({ cell, row, col, value }) => {\n      gridNew[row][col] = {...grid[row][col], value };\n    });\n    setGrid(gridNew)\n    setInput(true)\n  };\n\n  const handleVSDirection = (val) => {\n    setVSDirection(val)\n    setInput(true)\n  }\n\n  const handleSubmit = () => {\n    const planRecords = grid\n    const {well, operator, rig, county, usState, northing, easting} = saveWellInfoToReduxStoreReducer.response\n    // postPlansToJSONDb(operator, rig ,well, county, uSstate, planRecords, vsDirection, northing, easting)\n    postPlansToDynamoDb(operator, rig ,well, county, usState, planRecords, vsDirection, northing, easting)\n    savePlansToReduxStore(planRecords)\n\n  }\n\n  const handleRemoveRow = () => {\n    const newGrid = [...grid];\n    newGrid.pop();\n    setGrid(newGrid);\n  };\n\n  const createRows = (numberOfRowsToAdd) => {\n    let createdRows = []\n    for (let i = 0; i < numberOfRowsToAdd; i++) {\n      createdRows.push(\n        [{readOnly: true, value: grid.length + i}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}]\n      )\n    }\n    return createdRows\n  };\n\n  const handleAddRows = (rows) => {\n    const newGrid = [...grid, ...createRows(rows)]\n    setGrid(newGrid)\n  }\n\n  const renderSetRowsButtons = () => {\n    return (\n      <Row>\n        <Col xs={10} className=\"d-flex justify-content-start mt-4\">\n          <Button variant=\"success\" value={25} onClick={(event)=> handleAddRows(event.target.value)}>\n            Add 25 rows\n          </Button>\n          <Button variant=\"success\" className=\"ml-4\" value={10} onClick={(event) => handleAddRows(event.target.value)}>\n            Add 10 rows\n          </Button>\n          <Button variant=\"success\" className=\"ml-4\" value={5} onClick={(event) => handleAddRows(event.target.value)}>\n            Add 5 rows\n          </Button>\n          <Button variant=\"success\" className=\"ml-4\" value={1} onClick={(event) => handleAddRows(event.target.value)}>\n            Add a row\n          </Button>\n          <Button variant=\"danger\" className=\"ml-4\" onClick={handleRemoveRow}>\n            Remove a row\n          </Button>\n        </Col>\n        <Col xs={2}>\n          \n        </Col>\n      </Row>\n    )\n  }\n\n  const renderSubmitButton = () => {\n    return (\n      <Row>\n        <Col xs={10} className=\"my-4\">\n          <Button variant=\"info\" onClick={()=>handleSubmit()}>\n            Submit Data\n          </Button>\n        </Col>\n        <Col xs={2}>\n\n        </Col>\n      </Row>\n    )\n  }\n\n  const renderWellData = () => {\n    if (saveWellInfoToReduxStoreReducer.status === \"received\") {\n      const { well, rig, operator} = saveWellInfoToReduxStoreReducer.response\n      return <h3 className=\"hy-4\"> {operator} - {rig} - {well}</h3>\n    } else {\n      return \"No well data\"\n    }\n  }\n\n  return (\n    <Container>\n      <Row>\n        <Col xs={10}>\n          {renderWellData()}\n          <ReactDataSheet data={grid} valueRenderer={(cell)=> cell.value} onCellsChanged={onCellsChanged}/>\n        </Col>\n        <Col xs={2}>\n          <Form className=\"mt-7\">\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Control className=\"mt-3\" type=\"float\" placeholder=\"Enter VS Here\" onChange={event => handleVSDirection(event.target.value)}/>\n            </Form.Group>\n          </Form>\n        </Col>\n      </Row>\n      {renderSetRowsButtons()}\n      {renderSubmitButton()}\n      <Row>\n        <Col xs={10}>\n          {/* {renderAlert()} */}\n        </Col>\n        <Col xs={2}>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nconst mapStateToProps = ({saveWellInfoToReduxStoreReducer}) => {\n  return {\n    saveWellInfoToReduxStoreReducer\n  }\n}\n\nexport default connect(mapStateToProps, { postPlansToDynamoDb, savePlansToReduxStore, postPlansToJSONDb})(Plans)\n\n\n","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Components/ExistingSurveys.js",["932","933","934","935","936","937","938","939"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Components/ExistingPlans.js",["940","941","942","943","944","945","946","947","948"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Components/UserVerification/UserPool.js",["949","950"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/ActionCreators/savePlansToReduxStore.js",["951"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/ActionCreators/postPlansToJSONDb.js",["952"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/ActionCreators/postWellInfoToDynamoDb.js",["953","954"],["955","956"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/ActionCreators/saveSurveysToReduxStore.js",["957"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Components/ExistingLeaseLines.js",["958","959","960","961","962","963","964","965","966","967","968","969"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/HelperFunctions/Calculations/TVD.js",["970"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/HelperFunctions/Calculations/NS.js",["971"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/ActionCreators/getSurveysFromJSONDb.js",["972"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/ActionCreators/saveActiveWellToReduxStore.js",["973"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/ActionCreators/postLeaseLinesToJSONDb.js",["974"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/HelperFunctions/Calculations/RF.js",["975"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Components/Home.js",["976","977"],"// react\nimport React, { useState, useEffect } from 'react';\n// react-bootstrap\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Dropdown from 'react-bootstrap/Dropdown';\n// other libs/imports\nimport { connect } from 'react-redux';\nimport _ from 'lodash'\n// images\n// components\n// action creators\n// import getWellNamesFromDynamoDb from 'ActionCreators/getWellNamesFromDynamoDb';\nimport saveWellInfoToReduxStore from \"../ActionCreators/saveWellInfoToReduxStore\"\nimport getWellPlansFromDynamoDb from '../ActionCreators/getWellPlansFromDynamoDb';\nimport postWellInfoToJSONDb from \"../ActionCreators/postWellInfoToJSONDb\"\nimport getWellPlansFromJSONDb from \"../ActionCreators/getWellPlansFromJSONDb\"\nimport saveActiveWellToReduxStore from \"../ActionCreators/saveActiveWellToReduxStore\"\nimport getLeaseLinesFromJSONDb from \"../ActionCreators/getLeaseLinesFromJSONDb\"\nimport getWellsWithLeaseLinesFromJSONDb from \"../ActionCreators/getWellsWithLeaseLinesFromJSONDb\"\nimport getSurveysFromJSONDb from \"../ActionCreators/getSurveysFromJSONDb\"\nimport getWellsWithSurveysFromJSONDb from \"../ActionCreators/getWellsWithSurveysFromJSONDb\"\nimport getWellsWithHardLinesFromJSONDb from \"../ActionCreators/getWellsWithHardLinesFromJSONDb\"\nimport getHardLinesFromJSONDb from \"../ActionCreators/getHardLinesFromJSONDb\"\nimport postWellInfoToDynamoDb from \"../ActionCreators/postWellInfoToDynamoDb\"\nimport getWellsFromDynamoDb from \"../ActionCreators/getWellsFromDynamoDb\"\n\n\nconst Home = ({ getWellPlansFromDynamoDb, getWellsFromDynamoDbReducer, getWellsFromDynamoDb, postWellInfoToDynamoDb, getHardLinesFromJSONDb, getWellsWithHardLinesFromJSONDb ,getWellsWithSurveysFromJSONDb, getSurveysFromJSONDb, getWellsWithLeaseLinesFromJSONDb ,getWellPlansFromJSONDb, saveActiveWellToReduxStore, postWellInfoToJSONDb, saveWellInfoToReduxStore, saveWellInfoToReduxStoreReducer, getLeaseLinesFromJSONDb}) => {\n  const [activeWell, setActiveWell] = useState('None');\n  const [operator, setOperator] = useState('');\n  const [rig, setRig] = useState('');\n  const [well, setWell] = useState('');\n  const [county, setCounty] = useState('');\n  const [usState, setUSstate] = useState('');\n  const [northing, setNorthing] = useState('');\n  const [easting, setEasting] = useState('');\n\n\n  useEffect(() => {\n    // getWellsWithLeaseLinesFromJSONDb()\n    // getWellsWithSurveysFromJSONDb()\n    // getWellsWithHardLinesFromJSONDb()\n    getWellsFromDynamoDb()\n  }, []);\n\n\n  const renderWellNames = () => {\n    if (getWellsFromDynamoDbReducer.status === \"received\") {\n      let wells = getWellsFromDynamoDbReducer.response.Items\n      return (\n        <Dropdown.Menu>\n          {wells.map(well => {\n            return (\n              <Dropdown.Item \n                href=\"\" \n                key={`${well.Operator.S}${well.Well_Name.S}`} \n                onClick={()=> {\n                  setActiveWell(`${well.Operator.S} - ${well.Rig.S} - ${well.Well_Name.S}`)\n                  saveActiveWellToReduxStore(well)\n                  console.log()\n              } }>\n                {well.Operator.S} - {well.Rig.S} - {well.Well_Name.S}\n              </Dropdown.Item>\n            )\n          })}\n        </Dropdown.Menu>\n      )\n    }\n    else {\n      return \"Data loading\"\n    }\n  }\n\n  const createNewWell = () => {\n    return (\n      <Col>\n        <h3 className=\"my-4\">Add new well data</h3>\n        <Form.Control className=\"mt-3\" placeholder=\"Operator\" onChange={event => setOperator(event.target.value)} />\n        <Form.Control className=\"mt-3\" placeholder=\"Rig\" onChange={event => setRig(event.target.value)} />\n        <Form.Control className=\"mt-3\" placeholder=\"Well\" onChange={event => setWell(event.target.value)} />\n        <Form.Control className=\"mt-3\" placeholder=\"County\" onChange={event => setCounty(event.target.value)} />\n        <Form.Control className=\"mt-3\" placeholder=\"State\" onChange={event => setUSstate(event.target.value)} />\n        <Form.Control className=\"mt-3\" placeholder=\"Northing\" onChange={event => setNorthing(event.target.value)} />\n        <Form.Control className=\"mt-3\" placeholder=\"Easting\" onChange={event => setEasting(event.target.value)} />\n        <Button className=\"mt-4\" variant=\"info\" disabled={ operator === \"\" || rig === \"\" || well === \"\" || county === \"\" || usState === \"\" ? true : false } onClick={()=>handleNewWellSubmit()}>Submit and begin adding well data</Button>\n      </Col>\n    )\n  }\n\n  const handleNewWellSubmit = () => {\n    const wellInfo = {\n      operator,\n      rig,\n      well,\n      county,\n      usState,\n      northing,\n      easting\n    }\n    // postWellInfoToJSONDb(wellInfo)\n    postWellInfoToDynamoDb(wellInfo)\n    saveWellInfoToReduxStore(wellInfo)\n    saveActiveWellToReduxStore(wellInfo)\n  }\n\n  const handleFetchData = () => {\n    getWellPlansFromDynamoDb(activeWell)\n    //getSurveysFromJSONDb(activeWell)\n    // setTimeout(getWellPlansFromJSONDb, 500, activeWell);\n    //setTimeout(getLeaseLinesFromJSONDb, 1000, activeWell);\n    // setTimeout(getSurveysFromJSONDb, 1500, activeWell)\n    //getHardLinesFromJSONDb(activeWell)\n  //   // setTimeout(getWellHardLinesFromDynamoDb(selectedWell), 1000);\n  //   // setTimeout(getWellSurveysFromDynamoDb(selectedWell), 2000);\n  //   // setTimeout(getOffsets(selectedWell), 2500);\n  }\n\n\n\n  const selectExistingWell = () => {\n    return (\n      <Col>\n        <h3 className=\"my-4\">Select Existing Well</h3>\n        <Dropdown>\n          <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\">\n            {activeWell ? activeWell : `Select Well:`}\n          </Dropdown.Toggle>\n          {renderWellNames()}\n        </Dropdown>\n        <Button className=\"mt-4\" variant=\"success\" disabled={ activeWell === \"None\" ? true : false } onClick={handleFetchData}>Fetch well data</Button>\n      </Col>\n    )\n  }\n\n\n  return (\n      <Container>\n        <Row>\n          {createNewWell()}\n          {selectExistingWell()}\n        </Row>\n      </Container>\n    )\n//  }\n}\n\nconst mapStateToProps = ({ getWellsFromDynamoDbReducer, postWellInfoToDynamoDbReducer, getHardLinesFromJSONDb, saveActiveWellToReduxStoreReducer ,saveWellInfoToReduxStoreReducer, postWellInfoToJSONDbReducer, getWellsFromJSONDbReducer }) => {\n  return {\n    saveWellInfoToReduxStoreReducer,\n    postWellInfoToJSONDbReducer,\n    postWellInfoToDynamoDbReducer,\n    getWellsFromDynamoDbReducer\n  };\n};\n\nexport default connect(mapStateToProps, {getWellPlansFromDynamoDb, getWellsFromDynamoDb, postWellInfoToDynamoDb, getHardLinesFromJSONDb, getWellsWithHardLinesFromJSONDb, getWellsWithSurveysFromJSONDb, getSurveysFromJSONDb, getWellsWithLeaseLinesFromJSONDb ,saveActiveWellToReduxStore, getWellPlansFromJSONDb, saveWellInfoToReduxStore, postWellInfoToJSONDb, getLeaseLinesFromJSONDb })(Home);\n","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/index.js",["978","979","980"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Components/Dashboard.js",["981","982","983","984","985","986","987","988","989","990","991","992"],"import React from 'react'\n// react-boostrap\nimport Tabs from 'react-bootstrap/Tabs'\nimport Tab from \"react-bootstrap/Tab\"\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Container from 'react-bootstrap/Container'\n// redux\nimport { connect } from 'react-redux'\n// styling \nimport 'bootstrap/dist/css/bootstrap.min.css';\n//import 'custom.scss'\n// components\nimport Home from \"./Home\"\nimport Plans from \"./Plans\"\nimport ExistingPlans from './ExistingPlans'\nimport LeaseLines from \"./PolyLines\"\nimport ExistingLeaseLines from \"./ExistingPolyLines\"\nimport savePlansToReduxStore from '../ActionCreators/savePlansToReduxStore'\nimport PVA from \"./PVA\"\nimport ExistingPVA from \"./ExistingPVA\"\nimport Surveys from \"./Surveys\"\nimport ExistingSurveys from \"./ExistingSurveys\"\nimport ExistingPolyLines from './ExistingPolyLines'\nimport PolyLines from './PolyLines'\nimport SignInHome from \"./UserVerification/SignInHome\"\nimport { Link } from \"react-router-dom\"\n\n// action creators\nimport getHardLinesFromJSONDb from '../ActionCreators/getHardLinesFromJSONDb'\n\nconst Dashboard = ({getWellPlansFromDynamoDbReducer, saveHardLinesToReduxStoreReducer, getHardLinesFromJSONDbReducer, getSurveysFromJSONDbReducer, saveSurveysToReduxStoreReducer, activeWell, saveWellInfoToReduxStoreReducer, getWellPlansFromJSONDbReducer, getLeaseLinesFromJSONDbReducer, savePlansToReduxStoreReducer, saveLeaseLinesToReduxStoreReducer}) => {\n  \n  return (\n    <React.Fragment>\n      <Jumbotron fluid className=\"bg-dark text-white\">\n        <Container>\n          <h1>LandShark App (Employee Portal)</h1>\n        </Container>\n      </Jumbotron>\n      <Tabs>\n        <Tab eventKey=\"Home\" title=\"Home\">\n          <Container>\n            <Home/>\n          </Container>\n        </Tab>\n        <Tab eventKey=\"Plans\" title=\"Plans\" disabled={getWellPlansFromJSONDbReducer.status === \"received\" || saveWellInfoToReduxStoreReducer.status === \"received\" ? false : true}>\n          <Container>\n          {getWellPlansFromJSONDbReducer.status === \"received\" && getWellPlansFromJSONDbReducer.response ? <ExistingPlans/> : <Plans/>}\n          </Container>\n        </Tab>\n        {/* <Tab eventKey=\"PolyLines\" title=\"PolyLines\" disabled={getLeaseLinesFromJSONDbReducer.status === \"received\" || getHardLinesFromJSONDbReducer.status === \"received\"|| saveWellInfoToReduxStoreReducer.status === \"received\" ? false : true}>\n          <Container>\n            {getLeaseLinesFromJSONDbReducer.status === \"received\" && getHardLinesFromJSONDbReducer.status === \"received\" ? <ExistingPolyLines/> : <PolyLines/> }\n          </Container>\n        </Tab>\n        <Tab eventKey=\"PVA\" title=\"PVA\" disabled={(saveWellInfoToReduxStoreReducer.status === \"received\" && savePlansToReduxStoreReducer.status === \"received\" && saveLeaseLinesToReduxStoreReducer.status === \"received\" && saveHardLinesToReduxStoreReducer.status === \"received\")|| activeWell.status === \"received\" ? false : true}>\n          <Container>\n            {saveSurveysToReduxStoreReducer.status === \"received\" && savePlansToReduxStoreReducer.response && saveLeaseLinesToReduxStoreReducer.status === \"received\"  && saveLeaseLinesToReduxStoreReducer.status === \"received\" && saveHardLinesToReduxStoreReducer.status === \"received\" ? <PVA/> : <ExistingPVA/> }\n          </Container>\n        </Tab>\n        <Tab eventKey=\"Surveys\" title=\"Surveys\" disabled={(saveWellInfoToReduxStoreReducer.status === \"received\" && savePlansToReduxStoreReducer.status === \"received\" && saveLeaseLinesToReduxStoreReducer.status === \"received\") || activeWell.status === \"received\" ? false : true}>\n          <Container>\n            {getSurveysFromJSONDbReducer.status === \"received\" ? <ExistingSurveys/> : <Surveys/> }\n          </Container>\n        </Tab> */}\n      </Tabs>\n    </React.Fragment>\n  );\n}\n\nconst mapStateToProps = ({ getWellPlansFromDynamoDbReducer, saveHardLinesToReduxStoreReducer,getHardLinesFromJSONDbReducer, getSurveysFromJSONDbReducer, saveSurveysToReduxStoreReducer ,saveWellInfoToReduxStoreReducer, getWellPlansFromJSONDbReducer, activeWell, getLeaseLinesFromJSONDbReducer, savePlansToReduxStoreReducer, saveLeaseLinesToReduxStoreReducer}) => {\n  return {\n    saveWellInfoToReduxStoreReducer,\n    getWellPlansFromDynamoDbReducer, \n    getWellPlansFromJSONDbReducer,\n    getHardLinesFromJSONDbReducer,\n    getSurveysFromJSONDbReducer,\n    activeWell,\n    getLeaseLinesFromJSONDbReducer,\n    savePlansToReduxStoreReducer,\n    saveLeaseLinesToReduxStoreReducer,\n    saveSurveysToReduxStoreReducer,\n    saveHardLinesToReduxStoreReducer,\n  }\n}\n\nexport default connect(mapStateToProps, { })(Dashboard);\n\n","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/getLeaseLinesFromJSONDbReducer.js",["993"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/saveSurveysToReduxStoreReducer.js",["994"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/getHardLinesFromJSONDbReducer.js",["995"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/postPlansToDynamoDbReducer.js",["996"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/postWellInfoToJSONDbReducer.js",["997"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Components/ExistingPolyLines.js",["998","999","1000","1001","1002"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Components/ExistingPVA.js",["1003","1004","1005","1006","1007","1008","1009","1010","1011"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/ActionCreators/saveWellInfoToReduxStore.js",["1012"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/ActionCreators/getLeaseLinesFromJSONDb.js",["1013"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/ActionCreators/getWellsWithLeaseLinesFromJSONDb.js",["1014"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/ActionCreators/getWellsWithHardLinesFromJSONDb.js",["1015"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/ActionCreators/getHardLinesFromJSONDb.js",["1016"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/ActionCreators/saveLeaseLinesToReduxStore.js",["1017"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/ActionCreators/postSurveysToJSONDb.js",["1018"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Components/ExistingHardLines.js",["1019","1020","1021","1022","1023","1024","1025","1026","1027","1028","1029","1030"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/ActionCreators/postPlansToDynamoDb.js",["1031"],"import axios from \"axios\"\nimport { \n  POST_PLANS_TO_DYNAMODB_REQUESTED,\n  POST_PLANS_TO_DYNAMODB_RECEIVED,\n  POST_PLANS_TO_DYNAMODB_FAILED \n} from \"./types\"\nimport moment from \"moment\"\n\nexport default (operator, rig ,well, county, usState, planRecords, northing, easting,vsDirection = 0) => {\n  return async (dispatch, getState) => {\n\n    dispatch({\n      type: POST_PLANS_TO_DYNAMODB_REQUESTED\n    })\n    try {\n      const wellInfo = {\n        operator,\n        rig,\n        well,\n        county,\n        usState,\n        vsDirection,\n        planRecords,\n        northing, \n        easting, \n        date: moment().format()\n      }\n      const response = await axios.post(`https://0vpisbh32h.execute-api.us-east-2.amazonaws.com/dev/postplans`, wellInfo)\n      console.log(response.data)\n      dispatch({\n        type: POST_PLANS_TO_DYNAMODB_RECEIVED,\n        payload: response\n      })\n    } catch (error) {\n\n      dispatch({\n        type: POST_PLANS_TO_DYNAMODB_FAILED,\n        payload: error\n      })\n    }\n  }\n}\n\n\n// wellData = {\n//   \"operator\": \"EOG\"\n//   \"rig\": \"H&P425\"\n//   \"well\": \"RyPepp\"\n//   \"county\": \"Lea\"\n//   \"uSstate\": \"NM\"\n// }","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/ActionCreators/UserVerification/userNeedsToCreateAccount.js",["1032"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Components/UserVerification/SignIn.js",["1033","1034","1035","1036","1037"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/HelperFunctions/Calculations/DLC.js",["1038"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/ActionCreators/getWellPlansFromDynamoDb.js",["1039"],"import axios from \"axios\"\nimport {\n  GET_WELL_PLANS_FROM_DYNAMODB_REQUESTED,\n  GET_WELL_PLANS_FROM_DYNAMODB_RECEIVED,\n  GET_WELL_PLANS_FROM_DYNAMODB_FAILED\n} from \"./types\"\n\nexport default (selectedWell) => {\n  console.log(selectedWell)\n  return async dispatch => {\n    dispatch({\n      type: GET_WELL_PLANS_FROM_DYNAMODB_REQUESTED\n    })\n    let well = { \"item\" : selectedWell }\n    console.log(well)\n    try {\n      const response = await axios.post(\"https://0vpisbh32h.execute-api.us-east-2.amazonaws.com/dev/getplans\", well)\n      console.log(response)\n      dispatch({\n        type: GET_WELL_PLANS_FROM_DYNAMODB_RECEIVED,\n        payload: response.data\n      })\n    } catch (error) {\n      dispatch({\n        type: GET_WELL_PLANS_FROM_DYNAMODB_FAILED,\n        payload: error\n      })\n    }\n  }\n}","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Components/History.js",[],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/getWellsFromJSONDbReducer.js",["1040"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/getWellPlansFromJSONDbReducer.js",["1041"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/postSurveysToJSONDbReducer.js",["1042"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/getSurveysFromJSONDbReducer.js",["1043"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/getWellsFromDynamoDbReducer.js",["1044"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Components/PVA.js",["1045"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Components/UserVerification/SignInHome.js",["1046","1047","1048"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/ActionCreators/types.js",[],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/ActionCreators/getWellPlansFromJSONDb.js",["1049","1050","1051","1052","1053","1054"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/HelperFunctions/Calculations/SECT.js",["1055"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/ActionCreators/postHardLinesToJSONDb.js",["1056"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/ActionCreators/saveHardLinesToReduxStore.js",["1057"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Components/UserVerification/SignUp.js",["1058","1059","1060"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/savePlansToReduxStoreReducer.js",["1061"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/saveActiveWellToReduxStoreReducer.js",["1062"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/getWellsWithLeaseLinesFromJSONDbReducer.js",["1063"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/ActionCreators/getWellsFromDynamoDb.js",["1064"],"import axios from \"axios\"\nimport {\n  GET_WELLS_FROM_DYNAMO_REQUESTED,\n  GET_WELLS_FROM_DYNAMO_RECEIVED,\n  GET_WELLS_FROM_DYNAMO_FAILED\n} from \"./types\"\n\nexport default () => {\n  return async dispatch => {\n    dispatch({\n      type: GET_WELLS_FROM_DYNAMO_REQUESTED\n    })\n    try {\n      const response = await axios.get(\"https://0vpisbh32h.execute-api.us-east-2.amazonaws.com/dev/getwells\")\n      dispatch({\n        type: GET_WELLS_FROM_DYNAMO_RECEIVED,\n        payload: response.data\n      })\n    } catch (error) {\n      dispatch({\n        type: GET_WELLS_FROM_DYNAMO_FAILED,\n        payload: error\n      })\n    }\n  }\n}","/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/HelperFunctions/Calculations/EW.js",["1065"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Components/LeaseLines.js",["1066","1067","1068"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/APIs/wells.js",[],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/saveWellInfoToReduxStoreReducer.js",["1069"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/postHardLinesToJSONDbReducer.js",["1070"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/postWellInfoToDynamoDbReducer.js",["1071"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Components/Surveys.js",["1072","1073","1074","1075","1076"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Components/HardLines.js",["1077","1078","1079","1080"],"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/ActionCreators/getWellsFromJSONDb.js",["1081"],{"ruleId":"1082","severity":1,"message":"1083","line":5,"column":8,"nodeType":"1084","messageId":"1085","endLine":5,"endColumn":9},{"ruleId":"1086","replacedBy":"1087"},{"ruleId":"1088","replacedBy":"1089"},{"ruleId":"1090","severity":1,"message":"1091","line":7,"column":3,"nodeType":"1092","endLine":30,"endColumn":5},{"ruleId":"1082","severity":1,"message":"1093","line":13,"column":13,"nodeType":"1084","messageId":"1085","endLine":13,"endColumn":21},{"ruleId":"1086","replacedBy":"1094"},{"ruleId":"1088","replacedBy":"1095"},{"ruleId":"1090","severity":1,"message":"1091","line":10,"column":3,"nodeType":"1092","endLine":22,"endColumn":5},{"ruleId":"1090","severity":1,"message":"1091","line":11,"column":1,"nodeType":"1092","endLine":22,"endColumn":2},{"ruleId":"1086","replacedBy":"1096"},{"ruleId":"1088","replacedBy":"1097"},{"ruleId":"1090","severity":1,"message":"1091","line":10,"column":3,"nodeType":"1092","endLine":21,"endColumn":4},{"ruleId":"1090","severity":1,"message":"1091","line":11,"column":1,"nodeType":"1092","endLine":22,"endColumn":2},{"ruleId":"1086","replacedBy":"1098"},{"ruleId":"1088","replacedBy":"1099"},{"ruleId":"1090","severity":1,"message":"1091","line":11,"column":1,"nodeType":"1092","endLine":23,"endColumn":2},{"ruleId":"1090","severity":1,"message":"1091","line":5,"column":3,"nodeType":"1092","endLine":23,"endColumn":5},{"ruleId":"1086","replacedBy":"1100"},{"ruleId":"1088","replacedBy":"1101"},{"ruleId":"1090","severity":1,"message":"1091","line":9,"column":1,"nodeType":"1092","endLine":39,"endColumn":2},{"ruleId":"1090","severity":1,"message":"1091","line":4,"column":1,"nodeType":"1092","endLine":19,"endColumn":3},{"ruleId":"1090","severity":1,"message":"1091","line":4,"column":1,"nodeType":"1092","endLine":20,"endColumn":2},{"ruleId":"1090","severity":1,"message":"1091","line":1,"column":1,"nodeType":"1092","endLine":7,"endColumn":2},{"ruleId":"1082","severity":1,"message":"1102","line":1,"column":17,"nodeType":"1084","messageId":"1085","endLine":1,"endColumn":26},{"ruleId":"1082","severity":1,"message":"1103","line":1,"column":28,"nodeType":"1084","messageId":"1085","endLine":1,"endColumn":36},{"ruleId":"1082","severity":1,"message":"1104","line":5,"column":8,"nodeType":"1084","messageId":"1085","endLine":5,"endColumn":12},{"ruleId":"1082","severity":1,"message":"1105","line":6,"column":8,"nodeType":"1084","messageId":"1085","endLine":6,"endColumn":11},{"ruleId":"1082","severity":1,"message":"1106","line":7,"column":8,"nodeType":"1084","messageId":"1085","endLine":7,"endColumn":11},{"ruleId":"1082","severity":1,"message":"1107","line":8,"column":8,"nodeType":"1084","messageId":"1085","endLine":8,"endColumn":14},{"ruleId":"1082","severity":1,"message":"1108","line":11,"column":8,"nodeType":"1084","messageId":"1085","endLine":11,"endColumn":22},{"ruleId":"1082","severity":1,"message":"1109","line":13,"column":10,"nodeType":"1084","messageId":"1085","endLine":13,"endColumn":18},{"ruleId":"1082","severity":1,"message":"1110","line":14,"column":8,"nodeType":"1084","messageId":"1085","endLine":14,"endColumn":31},{"ruleId":"1090","severity":1,"message":"1091","line":10,"column":1,"nodeType":"1092","endLine":21,"endColumn":2},{"ruleId":"1086","replacedBy":"1111"},{"ruleId":"1088","replacedBy":"1112"},{"ruleId":"1082","severity":1,"message":"1083","line":12,"column":8,"nodeType":"1084","messageId":"1085","endLine":12,"endColumn":9},{"ruleId":"1082","severity":1,"message":"1113","line":34,"column":22,"nodeType":"1084","messageId":"1085","endLine":34,"endColumn":35},{"ruleId":"1114","severity":1,"message":"1115","line":50,"column":6,"nodeType":"1116","endLine":50,"endColumn":8,"suggestions":"1117"},{"ruleId":"1082","severity":1,"message":"1118","line":5,"column":8,"nodeType":"1084","messageId":"1085","endLine":5,"endColumn":12},{"ruleId":"1082","severity":1,"message":"1119","line":6,"column":8,"nodeType":"1084","messageId":"1085","endLine":6,"endColumn":11},{"ruleId":"1082","severity":1,"message":"1120","line":7,"column":8,"nodeType":"1084","messageId":"1085","endLine":7,"endColumn":17},{"ruleId":"1082","severity":1,"message":"1121","line":8,"column":8,"nodeType":"1084","messageId":"1085","endLine":8,"endColumn":17},{"ruleId":"1082","severity":1,"message":"1106","line":9,"column":8,"nodeType":"1084","messageId":"1085","endLine":9,"endColumn":11},{"ruleId":"1082","severity":1,"message":"1122","line":11,"column":10,"nodeType":"1084","messageId":"1085","endLine":11,"endColumn":17},{"ruleId":"1082","severity":1,"message":"1123","line":28,"column":10,"nodeType":"1084","messageId":"1085","endLine":28,"endColumn":18},{"ruleId":"1082","severity":1,"message":"1124","line":28,"column":20,"nodeType":"1084","messageId":"1085","endLine":28,"endColumn":31},{"ruleId":"1114","severity":1,"message":"1125","line":53,"column":6,"nodeType":"1116","endLine":53,"endColumn":8,"suggestions":"1126"},{"ruleId":"1082","severity":1,"message":"1127","line":55,"column":9,"nodeType":"1084","messageId":"1085","endLine":55,"endColumn":28},{"ruleId":"1128","severity":1,"message":"1129","line":56,"column":27,"nodeType":"1130","messageId":"1131","endLine":56,"endColumn":29},{"ruleId":"1090","severity":1,"message":"1091","line":10,"column":1,"nodeType":"1092","endLine":21,"endColumn":2},{"ruleId":"1082","severity":1,"message":"1132","line":1,"column":10,"nodeType":"1084","messageId":"1085","endLine":1,"endColumn":13},{"ruleId":"1082","severity":1,"message":"1133","line":2,"column":8,"nodeType":"1084","messageId":"1085","endLine":2,"endColumn":13},{"ruleId":"1082","severity":1,"message":"1134","line":3,"column":8,"nodeType":"1084","messageId":"1085","endLine":3,"endColumn":26},{"ruleId":"1090","severity":1,"message":"1091","line":8,"column":1,"nodeType":"1092","endLine":37,"endColumn":2},{"ruleId":"1135","severity":1,"message":"1136","line":21,"column":37,"nodeType":"1137","messageId":"1138","endLine":21,"endColumn":39},{"ruleId":"1135","severity":1,"message":"1136","line":21,"column":84,"nodeType":"1137","messageId":"1138","endLine":21,"endColumn":86},{"ruleId":"1090","severity":1,"message":"1091","line":5,"column":1,"nodeType":"1092","endLine":22,"endColumn":2},{"ruleId":"1086","replacedBy":"1139"},{"ruleId":"1088","replacedBy":"1140"},{"ruleId":"1090","severity":1,"message":"1091","line":4,"column":1,"nodeType":"1092","endLine":20,"endColumn":2},{"ruleId":"1086","replacedBy":"1141"},{"ruleId":"1088","replacedBy":"1142"},{"ruleId":"1090","severity":1,"message":"1091","line":3,"column":1,"nodeType":"1092","endLine":15,"endColumn":2},{"ruleId":"1090","severity":1,"message":"1091","line":1,"column":1,"nodeType":"1092","endLine":16,"endColumn":2},{"ruleId":"1086","replacedBy":"1143"},{"ruleId":"1088","replacedBy":"1144"},{"ruleId":"1090","severity":1,"message":"1091","line":8,"column":1,"nodeType":"1092","endLine":26,"endColumn":2},{"ruleId":"1090","severity":1,"message":"1091","line":23,"column":1,"nodeType":"1092","endLine":34,"endColumn":2},{"ruleId":"1082","severity":1,"message":"1121","line":9,"column":8,"nodeType":"1084","messageId":"1085","endLine":9,"endColumn":17},{"ruleId":"1082","severity":1,"message":"1106","line":10,"column":8,"nodeType":"1084","messageId":"1085","endLine":10,"endColumn":11},{"ruleId":"1082","severity":1,"message":"1105","line":11,"column":8,"nodeType":"1084","messageId":"1085","endLine":11,"endColumn":11},{"ruleId":"1086","replacedBy":"1145"},{"ruleId":"1088","replacedBy":"1146"},{"ruleId":"1090","severity":1,"message":"1091","line":10,"column":1,"nodeType":"1092","endLine":21,"endColumn":2},{"ruleId":"1090","severity":1,"message":"1091","line":10,"column":1,"nodeType":"1092","endLine":28,"endColumn":2},{"ruleId":"1082","severity":1,"message":"1123","line":27,"column":10,"nodeType":"1084","messageId":"1085","endLine":27,"endColumn":18},{"ruleId":"1082","severity":1,"message":"1124","line":27,"column":20,"nodeType":"1084","messageId":"1085","endLine":27,"endColumn":31},{"ruleId":"1114","severity":1,"message":"1147","line":48,"column":5,"nodeType":"1116","endLine":48,"endColumn":12,"suggestions":"1148"},{"ruleId":"1114","severity":1,"message":"1125","line":52,"column":6,"nodeType":"1116","endLine":52,"endColumn":8,"suggestions":"1149"},{"ruleId":"1128","severity":1,"message":"1129","line":55,"column":27,"nodeType":"1130","messageId":"1131","endLine":55,"endColumn":29},{"ruleId":"1086","replacedBy":"1150"},{"ruleId":"1088","replacedBy":"1151"},{"ruleId":"1090","severity":1,"message":"1091","line":9,"column":1,"nodeType":"1092","endLine":20,"endColumn":2},{"ruleId":"1086","replacedBy":"1152"},{"ruleId":"1088","replacedBy":"1153"},{"ruleId":"1082","severity":1,"message":"1154","line":1,"column":10,"nodeType":"1084","messageId":"1085","endLine":1,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1091","line":11,"column":1,"nodeType":"1092","endLine":22,"endColumn":2},{"ruleId":"1090","severity":1,"message":"1091","line":4,"column":1,"nodeType":"1092","endLine":30,"endColumn":3},{"ruleId":"1090","severity":1,"message":"1091","line":5,"column":3,"nodeType":"1092","endLine":30,"endColumn":4},{"ruleId":"1090","severity":1,"message":"1091","line":10,"column":1,"nodeType":"1092","endLine":21,"endColumn":2},{"ruleId":"1090","severity":1,"message":"1091","line":10,"column":1,"nodeType":"1092","endLine":21,"endColumn":2},{"ruleId":"1090","severity":1,"message":"1091","line":7,"column":1,"nodeType":"1092","endLine":25,"endColumn":2},{"ruleId":"1090","severity":1,"message":"1091","line":12,"column":1,"nodeType":"1092","endLine":23,"endColumn":2},{"ruleId":"1086","replacedBy":"1155"},{"ruleId":"1088","replacedBy":"1156"},{"ruleId":"1090","severity":1,"message":"1091","line":8,"column":1,"nodeType":"1092","endLine":26,"endColumn":2},{"ruleId":"1082","severity":1,"message":"1104","line":5,"column":8,"nodeType":"1084","messageId":"1085","endLine":5,"endColumn":12},{"ruleId":"1082","severity":1,"message":"1105","line":6,"column":8,"nodeType":"1084","messageId":"1085","endLine":6,"endColumn":11},{"ruleId":"1082","severity":1,"message":"1106","line":7,"column":8,"nodeType":"1084","messageId":"1085","endLine":7,"endColumn":11},{"ruleId":"1082","severity":1,"message":"1107","line":8,"column":8,"nodeType":"1084","messageId":"1085","endLine":8,"endColumn":14},{"ruleId":"1082","severity":1,"message":"1157","line":17,"column":10,"nodeType":"1084","messageId":"1085","endLine":17,"endColumn":14},{"ruleId":"1082","severity":1,"message":"1158","line":17,"column":16,"nodeType":"1084","messageId":"1085","endLine":17,"endColumn":23},{"ruleId":"1114","severity":1,"message":"1159","line":25,"column":5,"nodeType":"1116","endLine":25,"endColumn":41,"suggestions":"1160"},{"ruleId":"1082","severity":1,"message":"1161","line":27,"column":7,"nodeType":"1084","messageId":"1085","endLine":27,"endColumn":22},{"ruleId":"1090","severity":1,"message":"1091","line":12,"column":1,"nodeType":"1092","endLine":23,"endColumn":2},{"ruleId":"1090","severity":1,"message":"1091","line":8,"column":1,"nodeType":"1092","endLine":33,"endColumn":2},{"ruleId":"1082","severity":1,"message":"1104","line":5,"column":8,"nodeType":"1084","messageId":"1085","endLine":5,"endColumn":12},{"ruleId":"1082","severity":1,"message":"1105","line":6,"column":8,"nodeType":"1084","messageId":"1085","endLine":6,"endColumn":11},{"ruleId":"1082","severity":1,"message":"1106","line":7,"column":8,"nodeType":"1084","messageId":"1085","endLine":7,"endColumn":11},{"ruleId":"1082","severity":1,"message":"1107","line":8,"column":8,"nodeType":"1084","messageId":"1085","endLine":8,"endColumn":14},{"ruleId":"1082","severity":1,"message":"1157","line":16,"column":10,"nodeType":"1084","messageId":"1085","endLine":16,"endColumn":14},{"ruleId":"1082","severity":1,"message":"1158","line":16,"column":16,"nodeType":"1084","messageId":"1085","endLine":16,"endColumn":23},{"ruleId":"1114","severity":1,"message":"1162","line":23,"column":5,"nodeType":"1116","endLine":23,"endColumn":43,"suggestions":"1163"},{"ruleId":"1082","severity":1,"message":"1164","line":40,"column":9,"nodeType":"1084","messageId":"1085","endLine":40,"endColumn":18},{"ruleId":"1082","severity":1,"message":"1165","line":42,"column":7,"nodeType":"1084","messageId":"1085","endLine":42,"endColumn":20},{"ruleId":"1082","severity":1,"message":"1102","line":1,"column":17,"nodeType":"1084","messageId":"1085","endLine":1,"endColumn":26},{"ruleId":"1082","severity":1,"message":"1103","line":1,"column":28,"nodeType":"1084","messageId":"1085","endLine":1,"endColumn":36},{"ruleId":"1082","severity":1,"message":"1104","line":5,"column":8,"nodeType":"1084","messageId":"1085","endLine":5,"endColumn":12},{"ruleId":"1082","severity":1,"message":"1107","line":8,"column":8,"nodeType":"1084","messageId":"1085","endLine":8,"endColumn":14},{"ruleId":"1082","severity":1,"message":"1108","line":11,"column":8,"nodeType":"1084","messageId":"1085","endLine":11,"endColumn":22},{"ruleId":"1082","severity":1,"message":"1104","line":5,"column":8,"nodeType":"1084","messageId":"1085","endLine":5,"endColumn":12},{"ruleId":"1082","severity":1,"message":"1105","line":6,"column":8,"nodeType":"1084","messageId":"1085","endLine":6,"endColumn":11},{"ruleId":"1082","severity":1,"message":"1106","line":7,"column":8,"nodeType":"1084","messageId":"1085","endLine":7,"endColumn":11},{"ruleId":"1082","severity":1,"message":"1107","line":8,"column":8,"nodeType":"1084","messageId":"1085","endLine":8,"endColumn":14},{"ruleId":"1082","severity":1,"message":"1132","line":12,"column":10,"nodeType":"1084","messageId":"1085","endLine":12,"endColumn":13},{"ruleId":"1082","severity":1,"message":"1166","line":15,"column":10,"nodeType":"1084","messageId":"1085","endLine":15,"endColumn":20},{"ruleId":"1082","severity":1,"message":"1157","line":16,"column":10,"nodeType":"1084","messageId":"1085","endLine":16,"endColumn":14},{"ruleId":"1082","severity":1,"message":"1158","line":16,"column":16,"nodeType":"1084","messageId":"1085","endLine":16,"endColumn":23},{"ruleId":"1114","severity":1,"message":"1167","line":23,"column":5,"nodeType":"1116","endLine":23,"endColumn":44,"suggestions":"1168"},{"ruleId":"1082","severity":1,"message":"1169","line":27,"column":14,"nodeType":"1084","messageId":"1085","endLine":27,"endColumn":22},{"ruleId":"1082","severity":1,"message":"1170","line":27,"column":24,"nodeType":"1084","messageId":"1085","endLine":27,"endColumn":27},{"ruleId":"1082","severity":1,"message":"1171","line":27,"column":29,"nodeType":"1084","messageId":"1085","endLine":27,"endColumn":33},{"ruleId":"1090","severity":1,"message":"1091","line":10,"column":3,"nodeType":"1092","endLine":21,"endColumn":4},{"ruleId":"1086","replacedBy":"1172"},{"ruleId":"1088","replacedBy":"1173"},{"ruleId":"1090","severity":1,"message":"1091","line":11,"column":1,"nodeType":"1092","endLine":22,"endColumn":2},{"ruleId":"1082","severity":1,"message":"1102","line":1,"column":17,"nodeType":"1084","messageId":"1085","endLine":1,"endColumn":26},{"ruleId":"1082","severity":1,"message":"1103","line":1,"column":28,"nodeType":"1084","messageId":"1085","endLine":1,"endColumn":36},{"ruleId":"1082","severity":1,"message":"1104","line":5,"column":8,"nodeType":"1084","messageId":"1085","endLine":5,"endColumn":12},{"ruleId":"1082","severity":1,"message":"1107","line":8,"column":8,"nodeType":"1084","messageId":"1085","endLine":8,"endColumn":14},{"ruleId":"1082","severity":1,"message":"1108","line":11,"column":8,"nodeType":"1084","messageId":"1085","endLine":11,"endColumn":22},{"ruleId":"1082","severity":1,"message":"1102","line":1,"column":27,"nodeType":"1084","messageId":"1085","endLine":1,"endColumn":36},{"ruleId":"1082","severity":1,"message":"1104","line":4,"column":8,"nodeType":"1084","messageId":"1085","endLine":4,"endColumn":12},{"ruleId":"1082","severity":1,"message":"1174","line":42,"column":9,"nodeType":"1084","messageId":"1085","endLine":42,"endColumn":25},{"ruleId":"1090","severity":1,"message":"1091","line":5,"column":3,"nodeType":"1092","endLine":29,"endColumn":4},{"ruleId":"1082","severity":1,"message":"1104","line":5,"column":8,"nodeType":"1084","messageId":"1085","endLine":5,"endColumn":12},{"ruleId":"1082","severity":1,"message":"1105","line":6,"column":8,"nodeType":"1084","messageId":"1085","endLine":6,"endColumn":11},{"ruleId":"1082","severity":1,"message":"1106","line":7,"column":8,"nodeType":"1084","messageId":"1085","endLine":7,"endColumn":11},{"ruleId":"1082","severity":1,"message":"1107","line":8,"column":8,"nodeType":"1084","messageId":"1085","endLine":8,"endColumn":14},{"ruleId":"1082","severity":1,"message":"1132","line":12,"column":10,"nodeType":"1084","messageId":"1085","endLine":12,"endColumn":13},{"ruleId":"1082","severity":1,"message":"1175","line":15,"column":10,"nodeType":"1084","messageId":"1085","endLine":15,"endColumn":19},{"ruleId":"1082","severity":1,"message":"1157","line":16,"column":10,"nodeType":"1084","messageId":"1085","endLine":16,"endColumn":14},{"ruleId":"1082","severity":1,"message":"1158","line":16,"column":16,"nodeType":"1084","messageId":"1085","endLine":16,"endColumn":23},{"ruleId":"1114","severity":1,"message":"1176","line":23,"column":5,"nodeType":"1116","endLine":23,"endColumn":43,"suggestions":"1177"},{"ruleId":"1082","severity":1,"message":"1169","line":27,"column":14,"nodeType":"1084","messageId":"1085","endLine":27,"endColumn":22},{"ruleId":"1082","severity":1,"message":"1170","line":27,"column":24,"nodeType":"1084","messageId":"1085","endLine":27,"endColumn":27},{"ruleId":"1082","severity":1,"message":"1171","line":27,"column":29,"nodeType":"1084","messageId":"1085","endLine":27,"endColumn":33},{"ruleId":"1082","severity":1,"message":"1102","line":1,"column":27,"nodeType":"1084","messageId":"1085","endLine":1,"endColumn":36},{"ruleId":"1082","severity":1,"message":"1104","line":4,"column":8,"nodeType":"1084","messageId":"1085","endLine":4,"endColumn":12},{"ruleId":"1082","severity":1,"message":"1174","line":42,"column":9,"nodeType":"1084","messageId":"1085","endLine":42,"endColumn":25},{"ruleId":"1082","severity":1,"message":"1178","line":77,"column":9,"nodeType":"1084","messageId":"1085","endLine":77,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1091","line":10,"column":1,"nodeType":"1092","endLine":28,"endColumn":2},{"ruleId":"1090","severity":1,"message":"1091","line":10,"column":3,"nodeType":"1092","endLine":21,"endColumn":4},{"ruleId":"1090","severity":1,"message":"1091","line":6,"column":3,"nodeType":"1092","endLine":23,"endColumn":4},{"ruleId":"1090","severity":1,"message":"1091","line":7,"column":3,"nodeType":"1092","endLine":25,"endColumn":4},{"ruleId":"1090","severity":1,"message":"1091","line":5,"column":1,"nodeType":"1092","endLine":22,"endColumn":2},{"ruleId":"1086","replacedBy":"1179"},{"ruleId":"1088","replacedBy":"1180"},{"ruleId":"1090","severity":1,"message":"1091","line":6,"column":1,"nodeType":"1092","endLine":24,"endColumn":2},{"ruleId":"1090","severity":1,"message":"1091","line":6,"column":1,"nodeType":"1092","endLine":24,"endColumn":2},{"ruleId":"1090","severity":1,"message":"1091","line":7,"column":3,"nodeType":"1092","endLine":25,"endColumn":4},{"ruleId":"1090","severity":1,"message":"1091","line":10,"column":1,"nodeType":"1092","endLine":21,"endColumn":2},{"ruleId":"1082","severity":1,"message":"1181","line":8,"column":8,"nodeType":"1084","messageId":"1085","endLine":8,"endColumn":11},{"ruleId":"1082","severity":1,"message":"1118","line":11,"column":8,"nodeType":"1084","messageId":"1085","endLine":11,"endColumn":12},{"ruleId":"1082","severity":1,"message":"1119","line":12,"column":8,"nodeType":"1084","messageId":"1085","endLine":12,"endColumn":11},{"ruleId":"1082","severity":1,"message":"1182","line":18,"column":16,"nodeType":"1084","messageId":"1085","endLine":18,"endColumn":24},{"ruleId":"1082","severity":1,"message":"1183","line":59,"column":9,"nodeType":"1084","messageId":"1085","endLine":59,"endColumn":22},{"ruleId":"1082","severity":1,"message":"1103","line":1,"column":16,"nodeType":"1084","messageId":"1085","endLine":1,"endColumn":24},{"ruleId":"1082","severity":1,"message":"1121","line":2,"column":8,"nodeType":"1084","messageId":"1085","endLine":2,"endColumn":17},{"ruleId":"1082","severity":1,"message":"1184","line":6,"column":8,"nodeType":"1084","messageId":"1085","endLine":6,"endColumn":32},{"ruleId":"1082","severity":1,"message":"1185","line":3,"column":2,"nodeType":"1084","messageId":"1085","endLine":3,"endColumn":22},{"ruleId":"1082","severity":1,"message":"1186","line":4,"column":2,"nodeType":"1084","messageId":"1085","endLine":4,"endColumn":13},{"ruleId":"1082","severity":1,"message":"1187","line":10,"column":10,"nodeType":"1084","messageId":"1085","endLine":10,"endColumn":31},{"ruleId":"1082","severity":1,"message":"1122","line":12,"column":10,"nodeType":"1084","messageId":"1085","endLine":12,"endColumn":17},{"ruleId":"1082","severity":1,"message":"1188","line":79,"column":9,"nodeType":"1084","messageId":"1085","endLine":79,"endColumn":27},{"ruleId":"1090","severity":1,"message":"1091","line":6,"column":1,"nodeType":"1092","endLine":24,"endColumn":2},{"ruleId":"1090","severity":1,"message":"1091","line":13,"column":1,"nodeType":"1092","endLine":25,"endColumn":2},{"ruleId":"1082","severity":1,"message":"1189","line":16,"column":8,"nodeType":"1084","messageId":"1085","endLine":16,"endColumn":18},{"ruleId":"1082","severity":1,"message":"1190","line":17,"column":8,"nodeType":"1084","messageId":"1085","endLine":17,"endColumn":26},{"ruleId":"1082","severity":1,"message":"1191","line":18,"column":8,"nodeType":"1084","messageId":"1085","endLine":18,"endColumn":29},{"ruleId":"1082","severity":1,"message":"1192","line":25,"column":8,"nodeType":"1084","messageId":"1085","endLine":25,"endColumn":18},{"ruleId":"1082","severity":1,"message":"1193","line":26,"column":10,"nodeType":"1084","messageId":"1085","endLine":26,"endColumn":14},{"ruleId":"1082","severity":1,"message":"1194","line":29,"column":8,"nodeType":"1084","messageId":"1085","endLine":29,"endColumn":30},{"ruleId":"1082","severity":1,"message":"1120","line":9,"column":8,"nodeType":"1084","messageId":"1085","endLine":9,"endColumn":17},{"ruleId":"1082","severity":1,"message":"1193","line":10,"column":10,"nodeType":"1084","messageId":"1085","endLine":10,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1091","line":15,"column":1,"nodeType":"1092","endLine":49,"endColumn":2},{"ruleId":"1086","replacedBy":"1195"},{"ruleId":"1088","replacedBy":"1196"},{"ruleId":"1082","severity":1,"message":"1197","line":7,"column":8,"nodeType":"1084","messageId":"1085","endLine":7,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1091","line":9,"column":1,"nodeType":"1092","endLine":29,"endColumn":2},{"ruleId":"1090","severity":1,"message":"1091","line":13,"column":1,"nodeType":"1092","endLine":24,"endColumn":2},{"ruleId":"1090","severity":1,"message":"1091","line":9,"column":1,"nodeType":"1092","endLine":20,"endColumn":2},{"ruleId":"1090","severity":1,"message":"1091","line":9,"column":1,"nodeType":"1092","endLine":42,"endColumn":2},{"ruleId":"1090","severity":1,"message":"1091","line":13,"column":1,"nodeType":"1092","endLine":24,"endColumn":2},{"ruleId":"1082","severity":1,"message":"1118","line":5,"column":8,"nodeType":"1084","messageId":"1085","endLine":5,"endColumn":12},{"ruleId":"1082","severity":1,"message":"1119","line":6,"column":8,"nodeType":"1084","messageId":"1085","endLine":6,"endColumn":11},{"ruleId":"1082","severity":1,"message":"1120","line":7,"column":8,"nodeType":"1084","messageId":"1085","endLine":7,"endColumn":17},{"ruleId":"1082","severity":1,"message":"1121","line":8,"column":8,"nodeType":"1084","messageId":"1085","endLine":8,"endColumn":17},{"ruleId":"1082","severity":1,"message":"1106","line":9,"column":8,"nodeType":"1084","messageId":"1085","endLine":9,"endColumn":11},{"ruleId":"1082","severity":1,"message":"1122","line":11,"column":10,"nodeType":"1084","messageId":"1085","endLine":11,"endColumn":17},{"ruleId":"1086","replacedBy":"1198"},{"ruleId":"1088","replacedBy":"1199"},{"ruleId":"1090","severity":1,"message":"1091","line":9,"column":1,"nodeType":"1092","endLine":20,"endColumn":2},{"ruleId":"1086","replacedBy":"1200"},{"ruleId":"1088","replacedBy":"1201"},{"ruleId":"1090","severity":1,"message":"1091","line":10,"column":1,"nodeType":"1092","endLine":21,"endColumn":2},{"ruleId":"1086","replacedBy":"1202"},{"ruleId":"1088","replacedBy":"1203"},{"ruleId":"1082","severity":1,"message":"1154","line":1,"column":10,"nodeType":"1084","messageId":"1085","endLine":1,"endColumn":17},{"ruleId":"1090","severity":1,"message":"1091","line":11,"column":1,"nodeType":"1092","endLine":22,"endColumn":2},{"ruleId":"1090","severity":1,"message":"1091","line":12,"column":1,"nodeType":"1092","endLine":23,"endColumn":2},{"ruleId":"1090","severity":1,"message":"1091","line":10,"column":3,"nodeType":"1092","endLine":21,"endColumn":4},{"ruleId":"1090","severity":1,"message":"1091","line":11,"column":1,"nodeType":"1092","endLine":22,"endColumn":2},{"ruleId":"1090","severity":1,"message":"1091","line":12,"column":1,"nodeType":"1092","endLine":23,"endColumn":2},{"ruleId":"1082","severity":1,"message":"1123","line":28,"column":10,"nodeType":"1084","messageId":"1085","endLine":28,"endColumn":18},{"ruleId":"1082","severity":1,"message":"1124","line":28,"column":20,"nodeType":"1084","messageId":"1085","endLine":28,"endColumn":31},{"ruleId":"1114","severity":1,"message":"1125","line":53,"column":6,"nodeType":"1116","endLine":53,"endColumn":8,"suggestions":"1204"},{"ruleId":"1082","severity":1,"message":"1127","line":55,"column":9,"nodeType":"1084","messageId":"1085","endLine":55,"endColumn":28},{"ruleId":"1128","severity":1,"message":"1129","line":56,"column":27,"nodeType":"1130","messageId":"1131","endLine":56,"endColumn":29},{"ruleId":"1082","severity":1,"message":"1104","line":5,"column":8,"nodeType":"1084","messageId":"1085","endLine":5,"endColumn":12},{"ruleId":"1082","severity":1,"message":"1105","line":6,"column":8,"nodeType":"1084","messageId":"1085","endLine":6,"endColumn":11},{"ruleId":"1082","severity":1,"message":"1106","line":7,"column":8,"nodeType":"1084","messageId":"1085","endLine":7,"endColumn":11},{"ruleId":"1082","severity":1,"message":"1107","line":8,"column":8,"nodeType":"1084","messageId":"1085","endLine":8,"endColumn":14},{"ruleId":"1082","severity":1,"message":"1157","line":17,"column":10,"nodeType":"1084","messageId":"1085","endLine":17,"endColumn":14},{"ruleId":"1082","severity":1,"message":"1158","line":17,"column":16,"nodeType":"1084","messageId":"1085","endLine":17,"endColumn":23},{"ruleId":"1114","severity":1,"message":"1159","line":25,"column":5,"nodeType":"1116","endLine":25,"endColumn":41,"suggestions":"1205"},{"ruleId":"1082","severity":1,"message":"1161","line":27,"column":7,"nodeType":"1084","messageId":"1085","endLine":27,"endColumn":22},{"ruleId":"1082","severity":1,"message":"1104","line":5,"column":8,"nodeType":"1084","messageId":"1085","endLine":5,"endColumn":12},{"ruleId":"1082","severity":1,"message":"1105","line":6,"column":8,"nodeType":"1084","messageId":"1085","endLine":6,"endColumn":11},{"ruleId":"1082","severity":1,"message":"1106","line":7,"column":8,"nodeType":"1084","messageId":"1085","endLine":7,"endColumn":11},{"ruleId":"1082","severity":1,"message":"1107","line":8,"column":8,"nodeType":"1084","messageId":"1085","endLine":8,"endColumn":14},{"ruleId":"1082","severity":1,"message":"1157","line":16,"column":10,"nodeType":"1084","messageId":"1085","endLine":16,"endColumn":14},{"ruleId":"1082","severity":1,"message":"1158","line":16,"column":16,"nodeType":"1084","messageId":"1085","endLine":16,"endColumn":23},{"ruleId":"1114","severity":1,"message":"1162","line":23,"column":5,"nodeType":"1116","endLine":23,"endColumn":43,"suggestions":"1206"},{"ruleId":"1082","severity":1,"message":"1164","line":40,"column":9,"nodeType":"1084","messageId":"1085","endLine":40,"endColumn":18},{"ruleId":"1082","severity":1,"message":"1165","line":42,"column":7,"nodeType":"1084","messageId":"1085","endLine":42,"endColumn":20},{"ruleId":"1082","severity":1,"message":"1185","line":3,"column":2,"nodeType":"1084","messageId":"1085","endLine":3,"endColumn":22},{"ruleId":"1082","severity":1,"message":"1186","line":4,"column":2,"nodeType":"1084","messageId":"1085","endLine":4,"endColumn":13},{"ruleId":"1090","severity":1,"message":"1091","line":6,"column":1,"nodeType":"1092","endLine":24,"endColumn":2},{"ruleId":"1090","severity":1,"message":"1091","line":9,"column":1,"nodeType":"1092","endLine":39,"endColumn":2},{"ruleId":"1082","severity":1,"message":"1197","line":7,"column":8,"nodeType":"1084","messageId":"1085","endLine":7,"endColumn":14},{"ruleId":"1090","severity":1,"message":"1091","line":9,"column":1,"nodeType":"1092","endLine":29,"endColumn":2},{"ruleId":"1086","replacedBy":"1207"},{"ruleId":"1088","replacedBy":"1208"},{"ruleId":"1090","severity":1,"message":"1091","line":6,"column":3,"nodeType":"1092","endLine":23,"endColumn":4},{"ruleId":"1082","severity":1,"message":"1104","line":5,"column":8,"nodeType":"1084","messageId":"1085","endLine":5,"endColumn":12},{"ruleId":"1082","severity":1,"message":"1105","line":6,"column":8,"nodeType":"1084","messageId":"1085","endLine":6,"endColumn":11},{"ruleId":"1082","severity":1,"message":"1106","line":7,"column":8,"nodeType":"1084","messageId":"1085","endLine":7,"endColumn":11},{"ruleId":"1082","severity":1,"message":"1107","line":8,"column":8,"nodeType":"1084","messageId":"1085","endLine":8,"endColumn":14},{"ruleId":"1082","severity":1,"message":"1132","line":12,"column":10,"nodeType":"1084","messageId":"1085","endLine":12,"endColumn":13},{"ruleId":"1082","severity":1,"message":"1166","line":15,"column":10,"nodeType":"1084","messageId":"1085","endLine":15,"endColumn":20},{"ruleId":"1082","severity":1,"message":"1157","line":16,"column":10,"nodeType":"1084","messageId":"1085","endLine":16,"endColumn":14},{"ruleId":"1082","severity":1,"message":"1158","line":16,"column":16,"nodeType":"1084","messageId":"1085","endLine":16,"endColumn":23},{"ruleId":"1114","severity":1,"message":"1167","line":23,"column":5,"nodeType":"1116","endLine":23,"endColumn":44,"suggestions":"1209"},{"ruleId":"1082","severity":1,"message":"1169","line":27,"column":14,"nodeType":"1084","messageId":"1085","endLine":27,"endColumn":22},{"ruleId":"1082","severity":1,"message":"1170","line":27,"column":24,"nodeType":"1084","messageId":"1085","endLine":27,"endColumn":27},{"ruleId":"1082","severity":1,"message":"1171","line":27,"column":29,"nodeType":"1084","messageId":"1085","endLine":27,"endColumn":33},{"ruleId":"1090","severity":1,"message":"1091","line":4,"column":1,"nodeType":"1092","endLine":20,"endColumn":2},{"ruleId":"1090","severity":1,"message":"1091","line":4,"column":1,"nodeType":"1092","endLine":20,"endColumn":2},{"ruleId":"1090","severity":1,"message":"1091","line":8,"column":1,"nodeType":"1092","endLine":33,"endColumn":2},{"ruleId":"1090","severity":1,"message":"1091","line":6,"column":1,"nodeType":"1092","endLine":24,"endColumn":2},{"ruleId":"1090","severity":1,"message":"1091","line":7,"column":3,"nodeType":"1092","endLine":25,"endColumn":4},{"ruleId":"1090","severity":1,"message":"1091","line":1,"column":1,"nodeType":"1092","endLine":7,"endColumn":2},{"ruleId":"1082","severity":1,"message":"1083","line":12,"column":8,"nodeType":"1084","messageId":"1085","endLine":12,"endColumn":9},{"ruleId":"1114","severity":1,"message":"1210","line":48,"column":6,"nodeType":"1116","endLine":48,"endColumn":8,"suggestions":"1211"},{"ruleId":"1082","severity":1,"message":"1121","line":9,"column":8,"nodeType":"1084","messageId":"1085","endLine":9,"endColumn":17},{"ruleId":"1082","severity":1,"message":"1106","line":10,"column":8,"nodeType":"1084","messageId":"1085","endLine":10,"endColumn":11},{"ruleId":"1082","severity":1,"message":"1105","line":11,"column":8,"nodeType":"1084","messageId":"1085","endLine":11,"endColumn":11},{"ruleId":"1082","severity":1,"message":"1189","line":16,"column":8,"nodeType":"1084","messageId":"1085","endLine":16,"endColumn":18},{"ruleId":"1082","severity":1,"message":"1190","line":17,"column":8,"nodeType":"1084","messageId":"1085","endLine":17,"endColumn":26},{"ruleId":"1082","severity":1,"message":"1191","line":18,"column":8,"nodeType":"1084","messageId":"1085","endLine":18,"endColumn":29},{"ruleId":"1082","severity":1,"message":"1212","line":19,"column":8,"nodeType":"1084","messageId":"1085","endLine":19,"endColumn":11},{"ruleId":"1082","severity":1,"message":"1213","line":20,"column":8,"nodeType":"1084","messageId":"1085","endLine":20,"endColumn":19},{"ruleId":"1082","severity":1,"message":"1214","line":21,"column":8,"nodeType":"1084","messageId":"1085","endLine":21,"endColumn":15},{"ruleId":"1082","severity":1,"message":"1215","line":22,"column":8,"nodeType":"1084","messageId":"1085","endLine":22,"endColumn":23},{"ruleId":"1082","severity":1,"message":"1216","line":23,"column":8,"nodeType":"1084","messageId":"1085","endLine":23,"endColumn":25},{"ruleId":"1082","severity":1,"message":"1217","line":24,"column":8,"nodeType":"1084","messageId":"1085","endLine":24,"endColumn":17},{"ruleId":"1082","severity":1,"message":"1192","line":25,"column":8,"nodeType":"1084","messageId":"1085","endLine":25,"endColumn":18},{"ruleId":"1082","severity":1,"message":"1193","line":26,"column":10,"nodeType":"1084","messageId":"1085","endLine":26,"endColumn":14},{"ruleId":"1082","severity":1,"message":"1194","line":29,"column":8,"nodeType":"1084","messageId":"1085","endLine":29,"endColumn":30},{"ruleId":"1090","severity":1,"message":"1091","line":10,"column":1,"nodeType":"1092","endLine":21,"endColumn":2},{"ruleId":"1090","severity":1,"message":"1091","line":10,"column":1,"nodeType":"1092","endLine":21,"endColumn":2},{"ruleId":"1090","severity":1,"message":"1091","line":10,"column":1,"nodeType":"1092","endLine":21,"endColumn":2},{"ruleId":"1090","severity":1,"message":"1091","line":9,"column":1,"nodeType":"1092","endLine":20,"endColumn":2},{"ruleId":"1090","severity":1,"message":"1091","line":10,"column":1,"nodeType":"1092","endLine":21,"endColumn":2},{"ruleId":"1082","severity":1,"message":"1102","line":1,"column":17,"nodeType":"1084","messageId":"1085","endLine":1,"endColumn":26},{"ruleId":"1082","severity":1,"message":"1103","line":1,"column":28,"nodeType":"1084","messageId":"1085","endLine":1,"endColumn":36},{"ruleId":"1082","severity":1,"message":"1104","line":5,"column":8,"nodeType":"1084","messageId":"1085","endLine":5,"endColumn":12},{"ruleId":"1082","severity":1,"message":"1107","line":8,"column":8,"nodeType":"1084","messageId":"1085","endLine":8,"endColumn":14},{"ruleId":"1082","severity":1,"message":"1108","line":11,"column":8,"nodeType":"1084","messageId":"1085","endLine":11,"endColumn":22},{"ruleId":"1082","severity":1,"message":"1102","line":1,"column":17,"nodeType":"1084","messageId":"1085","endLine":1,"endColumn":26},{"ruleId":"1082","severity":1,"message":"1103","line":1,"column":28,"nodeType":"1084","messageId":"1085","endLine":1,"endColumn":36},{"ruleId":"1082","severity":1,"message":"1104","line":5,"column":8,"nodeType":"1084","messageId":"1085","endLine":5,"endColumn":12},{"ruleId":"1082","severity":1,"message":"1105","line":6,"column":8,"nodeType":"1084","messageId":"1085","endLine":6,"endColumn":11},{"ruleId":"1082","severity":1,"message":"1106","line":7,"column":8,"nodeType":"1084","messageId":"1085","endLine":7,"endColumn":11},{"ruleId":"1082","severity":1,"message":"1107","line":8,"column":8,"nodeType":"1084","messageId":"1085","endLine":8,"endColumn":14},{"ruleId":"1082","severity":1,"message":"1108","line":11,"column":8,"nodeType":"1084","messageId":"1085","endLine":11,"endColumn":22},{"ruleId":"1082","severity":1,"message":"1109","line":13,"column":10,"nodeType":"1084","messageId":"1085","endLine":13,"endColumn":18},{"ruleId":"1082","severity":1,"message":"1110","line":14,"column":8,"nodeType":"1084","messageId":"1085","endLine":14,"endColumn":31},{"ruleId":"1090","severity":1,"message":"1091","line":5,"column":3,"nodeType":"1092","endLine":23,"endColumn":5},{"ruleId":"1090","severity":1,"message":"1091","line":5,"column":3,"nodeType":"1092","endLine":30,"endColumn":4},{"ruleId":"1090","severity":1,"message":"1091","line":10,"column":1,"nodeType":"1092","endLine":28,"endColumn":2},{"ruleId":"1090","severity":1,"message":"1091","line":10,"column":1,"nodeType":"1092","endLine":28,"endColumn":2},{"ruleId":"1090","severity":1,"message":"1091","line":5,"column":3,"nodeType":"1092","endLine":29,"endColumn":4},{"ruleId":"1090","severity":1,"message":"1091","line":5,"column":1,"nodeType":"1092","endLine":22,"endColumn":2},{"ruleId":"1090","severity":1,"message":"1091","line":7,"column":1,"nodeType":"1092","endLine":25,"endColumn":2},{"ruleId":"1082","severity":1,"message":"1104","line":5,"column":8,"nodeType":"1084","messageId":"1085","endLine":5,"endColumn":12},{"ruleId":"1082","severity":1,"message":"1105","line":6,"column":8,"nodeType":"1084","messageId":"1085","endLine":6,"endColumn":11},{"ruleId":"1082","severity":1,"message":"1106","line":7,"column":8,"nodeType":"1084","messageId":"1085","endLine":7,"endColumn":11},{"ruleId":"1082","severity":1,"message":"1107","line":8,"column":8,"nodeType":"1084","messageId":"1085","endLine":8,"endColumn":14},{"ruleId":"1082","severity":1,"message":"1132","line":12,"column":10,"nodeType":"1084","messageId":"1085","endLine":12,"endColumn":13},{"ruleId":"1082","severity":1,"message":"1175","line":15,"column":10,"nodeType":"1084","messageId":"1085","endLine":15,"endColumn":19},{"ruleId":"1082","severity":1,"message":"1157","line":16,"column":10,"nodeType":"1084","messageId":"1085","endLine":16,"endColumn":14},{"ruleId":"1082","severity":1,"message":"1158","line":16,"column":16,"nodeType":"1084","messageId":"1085","endLine":16,"endColumn":23},{"ruleId":"1114","severity":1,"message":"1176","line":23,"column":5,"nodeType":"1116","endLine":23,"endColumn":43,"suggestions":"1218"},{"ruleId":"1082","severity":1,"message":"1169","line":27,"column":14,"nodeType":"1084","messageId":"1085","endLine":27,"endColumn":22},{"ruleId":"1082","severity":1,"message":"1170","line":27,"column":24,"nodeType":"1084","messageId":"1085","endLine":27,"endColumn":27},{"ruleId":"1082","severity":1,"message":"1171","line":27,"column":29,"nodeType":"1084","messageId":"1085","endLine":27,"endColumn":33},{"ruleId":"1090","severity":1,"message":"1091","line":9,"column":1,"nodeType":"1092","endLine":42,"endColumn":2},{"ruleId":"1090","severity":1,"message":"1091","line":6,"column":1,"nodeType":"1092","endLine":24,"endColumn":2},{"ruleId":"1082","severity":1,"message":"1181","line":8,"column":8,"nodeType":"1084","messageId":"1085","endLine":8,"endColumn":11},{"ruleId":"1082","severity":1,"message":"1118","line":11,"column":8,"nodeType":"1084","messageId":"1085","endLine":11,"endColumn":12},{"ruleId":"1082","severity":1,"message":"1119","line":12,"column":8,"nodeType":"1084","messageId":"1085","endLine":12,"endColumn":11},{"ruleId":"1082","severity":1,"message":"1182","line":18,"column":16,"nodeType":"1084","messageId":"1085","endLine":18,"endColumn":24},{"ruleId":"1082","severity":1,"message":"1183","line":59,"column":9,"nodeType":"1084","messageId":"1085","endLine":59,"endColumn":22},{"ruleId":"1090","severity":1,"message":"1091","line":1,"column":1,"nodeType":"1092","endLine":16,"endColumn":2},{"ruleId":"1090","severity":1,"message":"1091","line":8,"column":1,"nodeType":"1092","endLine":30,"endColumn":2},{"ruleId":"1090","severity":1,"message":"1091","line":10,"column":3,"nodeType":"1092","endLine":21,"endColumn":4},{"ruleId":"1090","severity":1,"message":"1091","line":11,"column":1,"nodeType":"1092","endLine":23,"endColumn":2},{"ruleId":"1090","severity":1,"message":"1091","line":10,"column":1,"nodeType":"1092","endLine":21,"endColumn":2},{"ruleId":"1090","severity":1,"message":"1091","line":12,"column":1,"nodeType":"1092","endLine":23,"endColumn":2},{"ruleId":"1090","severity":1,"message":"1091","line":13,"column":1,"nodeType":"1092","endLine":24,"endColumn":2},{"ruleId":"1082","severity":1,"message":"1083","line":5,"column":8,"nodeType":"1084","messageId":"1085","endLine":5,"endColumn":9},{"ruleId":"1082","severity":1,"message":"1103","line":1,"column":16,"nodeType":"1084","messageId":"1085","endLine":1,"endColumn":24},{"ruleId":"1082","severity":1,"message":"1121","line":2,"column":8,"nodeType":"1084","messageId":"1085","endLine":2,"endColumn":17},{"ruleId":"1082","severity":1,"message":"1184","line":6,"column":8,"nodeType":"1084","messageId":"1085","endLine":6,"endColumn":32},{"ruleId":"1082","severity":1,"message":"1132","line":1,"column":10,"nodeType":"1084","messageId":"1085","endLine":1,"endColumn":13},{"ruleId":"1082","severity":1,"message":"1133","line":2,"column":8,"nodeType":"1084","messageId":"1085","endLine":2,"endColumn":13},{"ruleId":"1082","severity":1,"message":"1134","line":3,"column":8,"nodeType":"1084","messageId":"1085","endLine":3,"endColumn":26},{"ruleId":"1090","severity":1,"message":"1091","line":8,"column":1,"nodeType":"1092","endLine":37,"endColumn":2},{"ruleId":"1135","severity":1,"message":"1136","line":21,"column":37,"nodeType":"1137","messageId":"1138","endLine":21,"endColumn":39},{"ruleId":"1135","severity":1,"message":"1136","line":21,"column":84,"nodeType":"1137","messageId":"1138","endLine":21,"endColumn":86},{"ruleId":"1090","severity":1,"message":"1091","line":4,"column":1,"nodeType":"1092","endLine":30,"endColumn":3},{"ruleId":"1090","severity":1,"message":"1091","line":7,"column":3,"nodeType":"1092","endLine":25,"endColumn":4},{"ruleId":"1090","severity":1,"message":"1091","line":5,"column":1,"nodeType":"1092","endLine":22,"endColumn":2},{"ruleId":"1082","severity":1,"message":"1187","line":10,"column":10,"nodeType":"1084","messageId":"1085","endLine":10,"endColumn":31},{"ruleId":"1082","severity":1,"message":"1122","line":12,"column":10,"nodeType":"1084","messageId":"1085","endLine":12,"endColumn":17},{"ruleId":"1082","severity":1,"message":"1188","line":79,"column":9,"nodeType":"1084","messageId":"1085","endLine":79,"endColumn":27},{"ruleId":"1090","severity":1,"message":"1091","line":11,"column":1,"nodeType":"1092","endLine":22,"endColumn":2},{"ruleId":"1090","severity":1,"message":"1091","line":11,"column":1,"nodeType":"1092","endLine":22,"endColumn":2},{"ruleId":"1090","severity":1,"message":"1091","line":23,"column":1,"nodeType":"1092","endLine":34,"endColumn":2},{"ruleId":"1090","severity":1,"message":"1091","line":8,"column":1,"nodeType":"1092","endLine":26,"endColumn":2},{"ruleId":"1090","severity":1,"message":"1091","line":4,"column":1,"nodeType":"1092","endLine":19,"endColumn":3},{"ruleId":"1082","severity":1,"message":"1102","line":1,"column":27,"nodeType":"1084","messageId":"1085","endLine":1,"endColumn":36},{"ruleId":"1082","severity":1,"message":"1104","line":4,"column":8,"nodeType":"1084","messageId":"1085","endLine":4,"endColumn":12},{"ruleId":"1082","severity":1,"message":"1174","line":42,"column":9,"nodeType":"1084","messageId":"1085","endLine":42,"endColumn":25},{"ruleId":"1090","severity":1,"message":"1091","line":10,"column":3,"nodeType":"1092","endLine":22,"endColumn":5},{"ruleId":"1090","severity":1,"message":"1091","line":10,"column":3,"nodeType":"1092","endLine":21,"endColumn":4},{"ruleId":"1090","severity":1,"message":"1091","line":13,"column":1,"nodeType":"1092","endLine":24,"endColumn":2},{"ruleId":"1082","severity":1,"message":"1123","line":27,"column":10,"nodeType":"1084","messageId":"1085","endLine":27,"endColumn":18},{"ruleId":"1082","severity":1,"message":"1124","line":27,"column":20,"nodeType":"1084","messageId":"1085","endLine":27,"endColumn":31},{"ruleId":"1114","severity":1,"message":"1147","line":48,"column":5,"nodeType":"1116","endLine":48,"endColumn":12,"suggestions":"1219"},{"ruleId":"1114","severity":1,"message":"1125","line":52,"column":6,"nodeType":"1116","endLine":52,"endColumn":8,"suggestions":"1220"},{"ruleId":"1128","severity":1,"message":"1129","line":55,"column":27,"nodeType":"1130","messageId":"1131","endLine":55,"endColumn":29},{"ruleId":"1082","severity":1,"message":"1102","line":1,"column":27,"nodeType":"1084","messageId":"1085","endLine":1,"endColumn":36},{"ruleId":"1082","severity":1,"message":"1104","line":4,"column":8,"nodeType":"1084","messageId":"1085","endLine":4,"endColumn":12},{"ruleId":"1082","severity":1,"message":"1174","line":42,"column":9,"nodeType":"1084","messageId":"1085","endLine":42,"endColumn":25},{"ruleId":"1082","severity":1,"message":"1178","line":77,"column":9,"nodeType":"1084","messageId":"1085","endLine":77,"endColumn":18},{"ruleId":"1090","severity":1,"message":"1091","line":8,"column":1,"nodeType":"1092","endLine":26,"endColumn":2},"no-unused-vars","'_' is defined but never used.","Identifier","unusedVar","no-native-reassign",["1221"],"no-negated-in-lhs",["1222"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'response' is assigned a value but never used.",["1221"],["1222"],["1221"],["1222"],["1221"],["1222"],["1221"],["1222"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'Form' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Button' is defined but never used.","'ReactDataSheet' is defined but never used.","'isNumber' is defined but never used.","'saveSurveysToReduxStore' is defined but never used.",["1221"],["1222"],"'setActiveWell' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getWellsFromDynamoDb', 'getWellsFromJSONDb', 'getWellsWithHardLinesFromJSONDb', 'getWellsWithLeaseLinesFromJSONDb', and 'getWellsWithSurveysFromJSONDb'. Either include them or remove the dependency array. If 'getWellsFromJSONDb' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["1223"],"'Tabs' is defined but never used.","'Tab' is defined but never used.","'Jumbotron' is defined but never used.","'Container' is defined but never used.","'connect' is defined but never used.","'editGrid' is assigned a value but never used.","'setEditGrid' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleAddRows'. Either include it or remove the dependency array.",["1224"],"'performCalculations' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'get' is defined but never used.","'wells' is defined but never used.","'getWellsFromJSONDb' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["1221"],["1222"],["1221"],["1222"],["1221"],["1222"],["1221"],["1222"],"React Hook useEffect has a missing dependency: 'performCalculations'. Either include it or remove the dependency array.",["1225"],["1226"],["1221"],["1222"],["1221"],["1222"],"'initial' is defined but never used.",["1221"],["1222"],"'grid' is assigned a value but never used.","'setGrid' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getSurveysFromJSONDbReducer.response'. Either include it or remove the dependency array.",["1227"],"'gridFromSurveys' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getWellPlansFromJSONDbReducer.response'. Either include it or remove the dependency array.",["1228"],"'plansCopy' is assigned a value but never used.","'gridFromPlans' is assigned a value but never used.","'leaseLines' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getLeaseLinesFromJSONDbReducer.response'. Either include it or remove the dependency array.",["1229"],"'operator' is assigned a value but never used.","'rig' is assigned a value but never used.","'well' is assigned a value but never used.",["1221"],["1222"],"'renderWellHeader' is assigned a value but never used.","'hardLines' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getHardLinesFromJSONDbReducer.response'. Either include it or remove the dependency array.",["1230"],"'checkTest' is assigned a value but never used.",["1221"],["1222"],"'Nav' is defined but never used.","'Redirect' is defined but never used.","'createAccount' is assigned a value but never used.","'userNeedsToCreateAccount' is defined but never used.","'CognitoUserAttribute' is defined but never used.","'CognitoUser' is defined but never used.","'AuthenticationDetails' is defined but never used.","'renderCodeResponse' is assigned a value but never used.","'LeaseLines' is defined but never used.","'ExistingLeaseLines' is defined but never used.","'savePlansToReduxStore' is defined but never used.","'SignInHome' is defined but never used.","'Link' is defined but never used.","'getHardLinesFromJSONDb' is defined but never used.",["1221"],["1222"],"'moment' is defined but never used.",["1221"],["1222"],["1221"],["1222"],["1221"],["1222"],["1231"],["1232"],["1233"],["1221"],["1222"],["1234"],"React Hook useEffect has a missing dependency: 'getWellsFromDynamoDb'. Either include it or remove the dependency array. If 'getWellsFromDynamoDb' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1235"],"'PVA' is defined but never used.","'ExistingPVA' is defined but never used.","'Surveys' is defined but never used.","'ExistingSurveys' is defined but never used.","'ExistingPolyLines' is defined but never used.","'PolyLines' is defined but never used.",["1236"],["1237"],["1238"],"no-global-assign","no-unsafe-negation",{"desc":"1239","fix":"1240"},{"desc":"1241","fix":"1242"},{"desc":"1243","fix":"1244"},{"desc":"1241","fix":"1245"},{"desc":"1246","fix":"1247"},{"desc":"1248","fix":"1249"},{"desc":"1250","fix":"1251"},{"desc":"1252","fix":"1253"},{"desc":"1241","fix":"1254"},{"desc":"1246","fix":"1255"},{"desc":"1248","fix":"1256"},{"desc":"1250","fix":"1257"},{"desc":"1258","fix":"1259"},{"desc":"1252","fix":"1260"},{"desc":"1243","fix":"1261"},{"desc":"1241","fix":"1262"},"Update the dependencies array to be: [getWellsFromDynamoDb, getWellsFromJSONDb, getWellsWithHardLinesFromJSONDb, getWellsWithLeaseLinesFromJSONDb, getWellsWithSurveysFromJSONDb]",{"range":"1263","text":"1264"},"Update the dependencies array to be: [handleAddRows]",{"range":"1265","text":"1266"},"Update the dependencies array to be: [input, performCalculations]",{"range":"1267","text":"1268"},{"range":"1269","text":"1266"},"Update the dependencies array to be: [getSurveysFromJSONDbReducer.response, getSurveysFromJSONDbReducer.status]",{"range":"1270","text":"1271"},"Update the dependencies array to be: [getWellPlansFromJSONDbReducer.response, getWellPlansFromJSONDbReducer.status]",{"range":"1272","text":"1273"},"Update the dependencies array to be: [getLeaseLinesFromJSONDbReducer.response, getLeaseLinesFromJSONDbReducer.status]",{"range":"1274","text":"1275"},"Update the dependencies array to be: [getHardLinesFromJSONDbReducer.response, getHardLinesFromJSONDbReducer.status]",{"range":"1276","text":"1277"},{"range":"1278","text":"1266"},{"range":"1279","text":"1271"},{"range":"1280","text":"1273"},{"range":"1281","text":"1275"},"Update the dependencies array to be: [getWellsFromDynamoDb]",{"range":"1282","text":"1283"},{"range":"1284","text":"1277"},{"range":"1285","text":"1268"},{"range":"1286","text":"1266"},[2703,2705],"[getWellsFromDynamoDb, getWellsFromJSONDb, getWellsWithHardLinesFromJSONDb, getWellsWithLeaseLinesFromJSONDb, getWellsWithSurveysFromJSONDb]",[2797,2799],"[handleAddRows]",[2813,2820],"[input, performCalculations]",[2868,2870],[920,956],"[getSurveysFromJSONDbReducer.response, getSurveysFromJSONDbReducer.status]",[838,876],"[getWellPlansFromJSONDbReducer.response, getWellPlansFromJSONDbReducer.status]",[821,860],"[getLeaseLinesFromJSONDbReducer.response, getLeaseLinesFromJSONDbReducer.status]",[812,850],"[getHardLinesFromJSONDbReducer.response, getHardLinesFromJSONDbReducer.status]",[2797,2799],[920,956],[838,876],[821,860],[2596,2598],"[getWellsFromDynamoDb]",[812,850],[2813,2820],[2868,2870]]