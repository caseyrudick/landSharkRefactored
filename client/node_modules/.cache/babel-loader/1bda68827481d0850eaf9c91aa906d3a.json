{"ast":null,"code":"import wells from \"../APIs/wells\";\nimport { POST_WELLINFO_TO_JSONDB_REQUESTED, POST_WELLINFO_TO_JSONDB_RECEIVED, POST_WELLINFO_TO_JSONDB_FAILED } from './types';\nexport default (wellInfo => {\n  console.log(newWell);\n  return async (dispatch, getState) => {\n    let wellList = getState().getWellsFromJSONDbReducer.response;\n    console.log(wellList);\n    const response = await wells.post(\"/wells\", wellInfo);\n    dispatch({\n      type: POST_WELLINFO_TO_JSONDB_REQUESTED\n    });\n\n    try {\n      dispatch({\n        type: POST_WELLINFO_TO_JSONDB_RECEIVED,\n        payload: wellInfo\n      });\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: POST_WELLINFO_TO_JSONDB_FAILED,\n        payload: error\n      });\n    }\n  };\n});","map":{"version":3,"sources":["/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/postWellInfoToJSONDb.js"],"names":["wells","POST_WELLINFO_TO_JSONDB_REQUESTED","POST_WELLINFO_TO_JSONDB_RECEIVED","POST_WELLINFO_TO_JSONDB_FAILED","wellInfo","console","log","newWell","dispatch","getState","wellList","getWellsFromJSONDbReducer","response","post","type","payload","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,eAAlB;AAEA,SAASC,iCAAT,EACEC,gCADF,EAEEC,8BAFF,QAEwC,SAFxC;AAIE,gBAAgBC,QAAD,IAAc;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AACA,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACnC,QAAIC,QAAQ,GAAGD,QAAQ,GAAGE,yBAAX,CAAqCC,QAApD;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;AACA,UAAME,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAN,CAAW,QAAX,EAAqBT,QAArB,CAAvB;AACAI,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEb;AADC,KAAD,CAAR;;AAIA,QAAI;AACFO,MAAAA,QAAQ,CAAC;AACPM,QAAAA,IAAI,EAAEZ,gCADC;AAEPa,QAAAA,OAAO,EAAEX;AAFF,OAAD,CAAR;AAID,KALD,CAKE,OAAOY,KAAP,EAAc;AACdX,MAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACAR,MAAAA,QAAQ,CAAC;AACPM,QAAAA,IAAI,EAAEX,8BADC;AAEPY,QAAAA,OAAO,EAAEC;AAFF,OAAD,CAAR;AAID;AACF,GApBD;AAqBD,CAvBD","sourcesContent":["import wells from \"../APIs/wells\"\n\nimport { POST_WELLINFO_TO_JSONDB_REQUESTED,\n  POST_WELLINFO_TO_JSONDB_RECEIVED,\n  POST_WELLINFO_TO_JSONDB_FAILED } from './types';\n  \n  export default (wellInfo) => {\n    console.log(newWell)\n    return async (dispatch, getState) => {\n      let wellList = getState().getWellsFromJSONDbReducer.response\n      console.log(wellList)\n      const response = await wells.post(\"/wells\", wellInfo)\n      dispatch({\n        type: POST_WELLINFO_TO_JSONDB_REQUESTED,\n      });\n  \n      try {\n        dispatch({\n          type: POST_WELLINFO_TO_JSONDB_RECEIVED,\n          payload: wellInfo,\n        });\n      } catch (error) {\n        console.log(error)\n        dispatch({\n          type: POST_WELLINFO_TO_JSONDB_FAILED,\n          payload: error,\n        });\n      }\n    };\n  };\n  "]},"metadata":{},"sourceType":"module"}