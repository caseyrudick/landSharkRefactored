{"ast":null,"code":"const AWS = require(\"aws-sdk\"); // const dynamodb = new AWS.DynamoDB({region: \"us-east-2\", apiVersion: \"2012-08-10\" })\n\n\nAWS.config.update({\n  region: \"us-east-2\"\n});\nconst docClient = new AWS.DynamoDB.DocumentClient();\n\nexports.handler = (event, context, callback) => {\n  const {\n    operator,\n    rig,\n    well,\n    usState,\n    county,\n    date\n  } = event;\n  const wellId = operator + \"_\" + rig + \"_\" + well;\n  console.log(event.leaseLines);\n  const records = [...event.leaseLines];\n  const writeCycles = Math.ceil(records.length / 25);\n  let putItemsArray = [];\n\n  for (let idx = 1; idx <= writeCycles; idx++) {\n    let startSlice = idx * 25 - 25;\n    let endSlice = idx * 25;\n    let currentIntervalOfRecords = records.slice(startSlice, endSlice);\n    currentIntervalOfRecords.forEach((LeaseLineItem, LeaseLineIdx) => {\n      if (LeaseLineIdx === 0) {\n        return null;\n      }\n\n      let item = {\n        \"LeaseLineId\": wellId + \"_\" + String(LeaseLineItem[0].value),\n        \"LeaseLineNumber\": LeaseLineItem[0].value,\n        \"Operator\": operator,\n        \"Rig\": rig,\n        \"Well\": well,\n        \"County\": county,\n        \"State\": usState,\n        \"Date\": date,\n        \"Northing\": String(LeaseLineItem[1].value),\n        \"Easting\": String(LeaseLineItem[2].value)\n      };\n      putItemsArray.push({\n        \"PutRequest\": {\n          \"Item\": item\n        }\n      });\n    });\n  }\n\n  return docClient.batchWrite({\n    RequestItems: {\n      \"LeaseLines\": putItemsArray\n    }\n  }, function (err, data) {\n    if (err) {\n      console.log(err);\n      callback(err);\n    } else {\n      console.log(\"successfully pushed LeaseLines\");\n      callback(null, data);\n    }\n  });\n};","map":{"version":3,"sources":["/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Reducers/postLeaseLinesToDynamoDbReducer.js"],"names":["AWS","require","config","update","region","docClient","DynamoDB","DocumentClient","exports","handler","event","context","callback","operator","rig","well","usState","county","date","wellId","console","log","leaseLines","records","writeCycles","Math","ceil","length","putItemsArray","idx","startSlice","endSlice","currentIntervalOfRecords","slice","forEach","LeaseLineItem","LeaseLineIdx","item","String","value","push","batchWrite","RequestItems","err","data"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,SAAD,CAAnB,C,CACA;;;AACAD,GAAG,CAACE,MAAJ,CAAWC,MAAX,CAAkB;AAACC,EAAAA,MAAM,EAAE;AAAT,CAAlB;AACA,MAAMC,SAAS,GAAG,IAAIL,GAAG,CAACM,QAAJ,CAAaC,cAAjB,EAAlB;;AAEAC,OAAO,CAACC,OAAR,GAAkB,CAACC,KAAD,EAAQC,OAAR,EAAiBC,QAAjB,KAA8B;AAC5C,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA,GAAX;AAAgBC,IAAAA,IAAhB;AAAsBC,IAAAA,OAAtB;AAA+BC,IAAAA,MAA/B;AAAuCC,IAAAA;AAAvC,MAA+CR,KAArD;AACA,QAAMS,MAAM,GAAGN,QAAQ,GAAG,GAAX,GAAiBC,GAAjB,GAAuB,GAAvB,GAA6BC,IAA5C;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYX,KAAK,CAACY,UAAlB;AACA,QAAMC,OAAO,GAAG,CAAC,GAAGb,KAAK,CAACY,UAAV,CAAhB;AACA,QAAME,WAAW,GAAGC,IAAI,CAACC,IAAL,CAAUH,OAAO,CAACI,MAAR,GAAe,EAAzB,CAApB;AACA,MAAIC,aAAa,GAAG,EAApB;;AACA,OAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,IAAIL,WAAzB,EAAsCK,GAAG,EAAzC,EAA6C;AACxC,QAAIC,UAAU,GAAID,GAAG,GAAG,EAAP,GAAa,EAA9B;AACA,QAAIE,QAAQ,GAAGF,GAAG,GAAG,EAArB;AACA,QAAIG,wBAAwB,GAAGT,OAAO,CAACU,KAAR,CAAcH,UAAd,EAA0BC,QAA1B,CAA/B;AACAC,IAAAA,wBAAwB,CAACE,OAAzB,CAAiC,CAACC,aAAD,EAAgBC,YAAhB,KAAiC;AAC9D,UAAIA,YAAY,KAAK,CAArB,EAAwB;AACpB,eAAO,IAAP;AACH;;AACD,UAAIC,IAAI,GAAG;AACP,uBAAelB,MAAM,GAAG,GAAT,GAAemB,MAAM,CAACH,aAAa,CAAC,CAAD,CAAb,CAAiBI,KAAlB,CAD7B;AAEP,2BAAmBJ,aAAa,CAAC,CAAD,CAAb,CAAiBI,KAF7B;AAGP,oBAAY1B,QAHL;AAIP,eAAOC,GAJA;AAKP,gBAAQC,IALD;AAMP,kBAAUE,MANH;AAOP,iBAASD,OAPF;AAQP,gBAAQE,IARD;AASP,oBAAYoB,MAAM,CAACH,aAAa,CAAC,CAAD,CAAb,CAAiBI,KAAlB,CATX;AAUP,mBAAWD,MAAM,CAACH,aAAa,CAAC,CAAD,CAAb,CAAiBI,KAAlB;AAVV,OAAX;AAYAX,MAAAA,aAAa,CAACY,IAAd,CAAmB;AACf,sBAAc;AAAC,kBAAQH;AAAT;AADC,OAAnB;AAGH,KAnBD;AAoBJ;;AAED,SAAOhC,SAAS,CAACoC,UAAV,CAAqB;AAACC,IAAAA,YAAY,EAAE;AAAC,oBAAcd;AAAf;AAAf,GAArB,EAAoE,UAASe,GAAT,EAAcC,IAAd,EAAoB;AAC3F,QAAID,GAAJ,EAAS;AACLvB,MAAAA,OAAO,CAACC,GAAR,CAAYsB,GAAZ;AACA/B,MAAAA,QAAQ,CAAC+B,GAAD,CAAR;AACH,KAHD,MAGO;AACHvB,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACAT,MAAAA,QAAQ,CAAC,IAAD,EAAOgC,IAAP,CAAR;AACH;AACJ,GARM,CAAP;AASH,CA1CD","sourcesContent":["const AWS = require(\"aws-sdk\")\n// const dynamodb = new AWS.DynamoDB({region: \"us-east-2\", apiVersion: \"2012-08-10\" })\nAWS.config.update({region: \"us-east-2\"})\nconst docClient = new AWS.DynamoDB.DocumentClient()\n\nexports.handler = (event, context, callback) => {\n    const {operator, rig, well, usState, county, date} = event\n    const wellId = operator + \"_\" + rig + \"_\" + well\n    console.log(event.leaseLines)\n    const records = [...event.leaseLines]\n    const writeCycles = Math.ceil(records.length/25)\n    let putItemsArray = []\n    for (let idx = 1; idx <= writeCycles; idx++) {\n         let startSlice = (idx * 25) - 25;\n         let endSlice = idx * 25\n         let currentIntervalOfRecords = records.slice(startSlice, endSlice)\n         currentIntervalOfRecords.forEach((LeaseLineItem, LeaseLineIdx) => {\n             if (LeaseLineIdx === 0) {\n                 return null\n             }\n             let item = {\n                 \"LeaseLineId\": wellId + \"_\" + String(LeaseLineItem[0].value),\n                 \"LeaseLineNumber\": LeaseLineItem[0].value,\n                 \"Operator\": operator,\n                 \"Rig\": rig,\n                 \"Well\": well,\n                 \"County\": county,\n                 \"State\": usState,\n                 \"Date\": date,\n                 \"Northing\": String(LeaseLineItem[1].value),\n                 \"Easting\": String(LeaseLineItem[2].value)\n             }\n             putItemsArray.push({\n                 \"PutRequest\": {\"Item\": item}\n             })\n         })\n    }\n    \n    return docClient.batchWrite({RequestItems: {\"LeaseLines\": putItemsArray}}, function(err, data) {\n        if (err) {\n            console.log(err)\n            callback(err)\n        } else {\n            console.log(\"successfully pushed LeaseLines\")\n            callback(null, data)\n        }\n    })\n};\n"]},"metadata":{},"sourceType":"module"}