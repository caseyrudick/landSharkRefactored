{"ast":null,"code":"/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict'; // Modified from https://github.com/ArthurClemens/Javascript-Undo-Manager\n// Copyright (c) 2010-2013 Arthur Clemens, arthur@visiblearea.com\n\nmodule.exports = function UndoManager() {\n  var undoCommands = [];\n  var index = -1;\n  var isExecuting = false;\n  var callback;\n\n  function execute(command, action) {\n    if (!command) return this;\n    isExecuting = true;\n    command[action]();\n    isExecuting = false;\n    return this;\n  }\n\n  return {\n    add: function (command) {\n      if (isExecuting) return this;\n      undoCommands.splice(index + 1, undoCommands.length - index);\n      undoCommands.push(command);\n      index = undoCommands.length - 1;\n      return this;\n    },\n    setCallback: function (callbackFunc) {\n      callback = callbackFunc;\n    },\n    undo: function () {\n      var command = undoCommands[index];\n      if (!command) return this;\n      execute(command, 'undo');\n      index -= 1;\n      if (callback) callback(command.undo);\n      return this;\n    },\n    redo: function () {\n      var command = undoCommands[index + 1];\n      if (!command) return this;\n      execute(command, 'redo');\n      index += 1;\n      if (callback) callback(command.redo);\n      return this;\n    },\n    clear: function () {\n      undoCommands = [];\n      index = -1;\n    },\n    hasUndo: function () {\n      return index !== -1;\n    },\n    hasRedo: function () {\n      return index < undoCommands.length - 1;\n    },\n    getCommands: function () {\n      return undoCommands;\n    },\n    getPreviousCommand: function () {\n      return undoCommands[index - 1];\n    },\n    getIndex: function () {\n      return index;\n    }\n  };\n};","map":{"version":3,"sources":["/Users/caseyrudick/Documents/landsharkrefactored-copy/client/node_modules/plotly.js/src/plots/polar/legacy/undo_manager.js"],"names":["module","exports","UndoManager","undoCommands","index","isExecuting","callback","execute","command","action","add","splice","length","push","setCallback","callbackFunc","undo","redo","clear","hasUndo","hasRedo","getCommands","getPreviousCommand","getIndex"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,a,CAEA;AACA;;AACAA,MAAM,CAACC,OAAP,GAAiB,SAASC,WAAT,GAAuB;AACpC,MAAIC,YAAY,GAAG,EAAnB;AACA,MAAIC,KAAK,GAAG,CAAC,CAAb;AACA,MAAIC,WAAW,GAAG,KAAlB;AACA,MAAIC,QAAJ;;AAEA,WAASC,OAAT,CAAiBC,OAAjB,EAA0BC,MAA1B,EAAkC;AAC9B,QAAG,CAACD,OAAJ,EAAa,OAAO,IAAP;AAEbH,IAAAA,WAAW,GAAG,IAAd;AACAG,IAAAA,OAAO,CAACC,MAAD,CAAP;AACAJ,IAAAA,WAAW,GAAG,KAAd;AAEA,WAAO,IAAP;AACH;;AAED,SAAO;AACHK,IAAAA,GAAG,EAAE,UAASF,OAAT,EAAkB;AACnB,UAAGH,WAAH,EAAgB,OAAO,IAAP;AAChBF,MAAAA,YAAY,CAACQ,MAAb,CAAoBP,KAAK,GAAG,CAA5B,EAA+BD,YAAY,CAACS,MAAb,GAAsBR,KAArD;AACAD,MAAAA,YAAY,CAACU,IAAb,CAAkBL,OAAlB;AACAJ,MAAAA,KAAK,GAAGD,YAAY,CAACS,MAAb,GAAsB,CAA9B;AACA,aAAO,IAAP;AACH,KAPE;AAQHE,IAAAA,WAAW,EAAE,UAASC,YAAT,EAAuB;AAAET,MAAAA,QAAQ,GAAGS,YAAX;AAA0B,KAR7D;AASHC,IAAAA,IAAI,EAAE,YAAW;AACb,UAAIR,OAAO,GAAGL,YAAY,CAACC,KAAD,CAA1B;AACA,UAAG,CAACI,OAAJ,EAAa,OAAO,IAAP;AACbD,MAAAA,OAAO,CAACC,OAAD,EAAU,MAAV,CAAP;AACAJ,MAAAA,KAAK,IAAI,CAAT;AACA,UAAGE,QAAH,EAAaA,QAAQ,CAACE,OAAO,CAACQ,IAAT,CAAR;AACb,aAAO,IAAP;AACH,KAhBE;AAiBHC,IAAAA,IAAI,EAAE,YAAW;AACb,UAAIT,OAAO,GAAGL,YAAY,CAACC,KAAK,GAAG,CAAT,CAA1B;AACA,UAAG,CAACI,OAAJ,EAAa,OAAO,IAAP;AACbD,MAAAA,OAAO,CAACC,OAAD,EAAU,MAAV,CAAP;AACAJ,MAAAA,KAAK,IAAI,CAAT;AACA,UAAGE,QAAH,EAAaA,QAAQ,CAACE,OAAO,CAACS,IAAT,CAAR;AACb,aAAO,IAAP;AACH,KAxBE;AAyBHC,IAAAA,KAAK,EAAE,YAAW;AACdf,MAAAA,YAAY,GAAG,EAAf;AACAC,MAAAA,KAAK,GAAG,CAAC,CAAT;AACH,KA5BE;AA6BHe,IAAAA,OAAO,EAAE,YAAW;AAAE,aAAOf,KAAK,KAAK,CAAC,CAAlB;AAAsB,KA7BzC;AA8BHgB,IAAAA,OAAO,EAAE,YAAW;AAAE,aAAOhB,KAAK,GAAID,YAAY,CAACS,MAAb,GAAsB,CAAtC;AAA2C,KA9B9D;AA+BHS,IAAAA,WAAW,EAAE,YAAW;AAAE,aAAOlB,YAAP;AAAsB,KA/B7C;AAgCHmB,IAAAA,kBAAkB,EAAE,YAAW;AAAE,aAAOnB,YAAY,CAACC,KAAK,GAAG,CAAT,CAAnB;AAAiC,KAhC/D;AAiCHmB,IAAAA,QAAQ,EAAE,YAAW;AAAE,aAAOnB,KAAP;AAAe;AAjCnC,GAAP;AAmCH,CAnDD","sourcesContent":["/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\n// Modified from https://github.com/ArthurClemens/Javascript-Undo-Manager\n// Copyright (c) 2010-2013 Arthur Clemens, arthur@visiblearea.com\nmodule.exports = function UndoManager() {\n    var undoCommands = [];\n    var index = -1;\n    var isExecuting = false;\n    var callback;\n\n    function execute(command, action) {\n        if(!command) return this;\n\n        isExecuting = true;\n        command[action]();\n        isExecuting = false;\n\n        return this;\n    }\n\n    return {\n        add: function(command) {\n            if(isExecuting) return this;\n            undoCommands.splice(index + 1, undoCommands.length - index);\n            undoCommands.push(command);\n            index = undoCommands.length - 1;\n            return this;\n        },\n        setCallback: function(callbackFunc) { callback = callbackFunc; },\n        undo: function() {\n            var command = undoCommands[index];\n            if(!command) return this;\n            execute(command, 'undo');\n            index -= 1;\n            if(callback) callback(command.undo);\n            return this;\n        },\n        redo: function() {\n            var command = undoCommands[index + 1];\n            if(!command) return this;\n            execute(command, 'redo');\n            index += 1;\n            if(callback) callback(command.redo);\n            return this;\n        },\n        clear: function() {\n            undoCommands = [];\n            index = -1;\n        },\n        hasUndo: function() { return index !== -1; },\n        hasRedo: function() { return index < (undoCommands.length - 1); },\n        getCommands: function() { return undoCommands; },\n        getPreviousCommand: function() { return undoCommands[index - 1]; },\n        getIndex: function() { return index; }\n    };\n};\n"]},"metadata":{},"sourceType":"script"}