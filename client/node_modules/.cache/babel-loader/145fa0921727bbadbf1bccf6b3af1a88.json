{"ast":null,"code":"/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar baseAttrs = require('../../plots/attributes');\n\nvar hovertemplateAttrs = require('../../plots/template_attributes').hovertemplateAttrs;\n\nvar extendFlat = require('../../lib/extend').extendFlat;\n\nvar colormodel = require('./constants').colormodel;\n\nvar cm = ['rgb', 'rgba', 'rgba256', 'hsl', 'hsla'];\nvar zminDesc = [];\nvar zmaxDesc = [];\n\nfor (var i = 0; i < cm.length; i++) {\n  var cr = colormodel[cm[i]];\n  zminDesc.push('For the `' + cm[i] + '` colormodel, it is [' + (cr.zminDflt || cr.min).join(', ') + '].');\n  zmaxDesc.push('For the `' + cm[i] + '` colormodel, it is [' + (cr.zmaxDflt || cr.max).join(', ') + '].');\n}\n\nmodule.exports = extendFlat({\n  source: {\n    valType: 'string',\n    role: 'info',\n    editType: 'calc',\n    description: ['Specifies the data URI of the image to be visualized.', 'The URI consists of \"data:image/[<media subtype>][;base64],<data>\"'].join(' ')\n  },\n  z: {\n    valType: 'data_array',\n    role: 'info',\n    editType: 'calc',\n    description: ['A 2-dimensional array in which each element is an array of 3 or 4 numbers representing a color.'].join(' ')\n  },\n  colormodel: {\n    valType: 'enumerated',\n    values: cm,\n    role: 'info',\n    editType: 'calc',\n    description: ['Color model used to map the numerical color components described in `z` into colors.', 'If `source` is specified, this attribute will be set to `rgba256`', 'otherwise it defaults to `rgb`.'].join(' ')\n  },\n  zmin: {\n    valType: 'info_array',\n    items: [{\n      valType: 'number',\n      editType: 'calc'\n    }, {\n      valType: 'number',\n      editType: 'calc'\n    }, {\n      valType: 'number',\n      editType: 'calc'\n    }, {\n      valType: 'number',\n      editType: 'calc'\n    }],\n    role: 'info',\n    editType: 'calc',\n    description: ['Array defining the lower bound for each color component.', 'Note that the default value will depend on the colormodel.', zminDesc.join(' ')].join(' ')\n  },\n  zmax: {\n    valType: 'info_array',\n    items: [{\n      valType: 'number',\n      editType: 'calc'\n    }, {\n      valType: 'number',\n      editType: 'calc'\n    }, {\n      valType: 'number',\n      editType: 'calc'\n    }, {\n      valType: 'number',\n      editType: 'calc'\n    }],\n    role: 'info',\n    editType: 'calc',\n    description: ['Array defining the higher bound for each color component.', 'Note that the default value will depend on the colormodel.', zmaxDesc.join(' ')].join(' ')\n  },\n  x0: {\n    valType: 'any',\n    dflt: 0,\n    role: 'info',\n    editType: 'calc+clearAxisTypes',\n    description: 'Set the image\\'s x position.'\n  },\n  y0: {\n    valType: 'any',\n    dflt: 0,\n    role: 'info',\n    editType: 'calc+clearAxisTypes',\n    description: 'Set the image\\'s y position.'\n  },\n  dx: {\n    valType: 'number',\n    dflt: 1,\n    role: 'info',\n    editType: 'calc',\n    description: 'Set the pixel\\'s horizontal size.'\n  },\n  dy: {\n    valType: 'number',\n    dflt: 1,\n    role: 'info',\n    editType: 'calc',\n    description: 'Set the pixel\\'s vertical size'\n  },\n  text: {\n    valType: 'data_array',\n    editType: 'plot',\n    description: 'Sets the text elements associated with each z value.'\n  },\n  hovertext: {\n    valType: 'data_array',\n    editType: 'plot',\n    description: 'Same as `text`.'\n  },\n  hoverinfo: extendFlat({}, baseAttrs.hoverinfo, {\n    flags: ['x', 'y', 'z', 'color', 'name', 'text'],\n    dflt: 'x+y+z+text+name'\n  }),\n  hovertemplate: hovertemplateAttrs({}, {\n    keys: ['z', 'color', 'colormodel']\n  }),\n  transforms: undefined\n});","map":{"version":3,"sources":["/Users/caseyrudick/Documents/landsharkrefactored-copy/client/node_modules/plotly.js/src/traces/image/attributes.js"],"names":["baseAttrs","require","hovertemplateAttrs","extendFlat","colormodel","cm","zminDesc","zmaxDesc","i","length","cr","push","zminDflt","min","join","zmaxDflt","max","module","exports","source","valType","role","editType","description","z","values","zmin","items","zmax","x0","dflt","y0","dx","dy","text","hovertext","hoverinfo","flags","hovertemplate","keys","transforms","undefined"],"mappings":"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","sourcesContent":["/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar baseAttrs = require('../../plots/attributes');\nvar hovertemplateAttrs = require('../../plots/template_attributes').hovertemplateAttrs;\nvar extendFlat = require('../../lib/extend').extendFlat;\nvar colormodel = require('./constants').colormodel;\n\nvar cm = ['rgb', 'rgba', 'rgba256', 'hsl', 'hsla'];\nvar zminDesc = [];\nvar zmaxDesc = [];\nfor(var i = 0; i < cm.length; i++) {\n    var cr = colormodel[cm[i]];\n    zminDesc.push('For the `' + cm[i] + '` colormodel, it is [' + (cr.zminDflt || cr.min).join(', ') + '].');\n    zmaxDesc.push('For the `' + cm[i] + '` colormodel, it is [' + (cr.zmaxDflt || cr.max).join(', ') + '].');\n}\n\nmodule.exports = extendFlat({\n    source: {\n        valType: 'string',\n        role: 'info',\n        editType: 'calc',\n        description: [\n            'Specifies the data URI of the image to be visualized.',\n            'The URI consists of \"data:image/[<media subtype>][;base64],<data>\"'\n        ].join(' ')\n    },\n    z: {\n        valType: 'data_array',\n        role: 'info',\n        editType: 'calc',\n        description: [\n            'A 2-dimensional array in which each element is an array of 3 or 4 numbers representing a color.',\n        ].join(' ')\n    },\n    colormodel: {\n        valType: 'enumerated',\n        values: cm,\n        role: 'info',\n        editType: 'calc',\n        description: [\n            'Color model used to map the numerical color components described in `z` into colors.',\n            'If `source` is specified, this attribute will be set to `rgba256`',\n            'otherwise it defaults to `rgb`.'\n        ].join(' ')\n    },\n    zmin: {\n        valType: 'info_array',\n        items: [\n            {valType: 'number', editType: 'calc'},\n            {valType: 'number', editType: 'calc'},\n            {valType: 'number', editType: 'calc'},\n            {valType: 'number', editType: 'calc'}\n        ],\n        role: 'info',\n        editType: 'calc',\n        description: [\n            'Array defining the lower bound for each color component.',\n            'Note that the default value will depend on the colormodel.',\n            zminDesc.join(' ')\n        ].join(' ')\n    },\n    zmax: {\n        valType: 'info_array',\n        items: [\n            {valType: 'number', editType: 'calc'},\n            {valType: 'number', editType: 'calc'},\n            {valType: 'number', editType: 'calc'},\n            {valType: 'number', editType: 'calc'}\n        ],\n        role: 'info',\n        editType: 'calc',\n        description: [\n            'Array defining the higher bound for each color component.',\n            'Note that the default value will depend on the colormodel.',\n            zmaxDesc.join(' ')\n        ].join(' ')\n    },\n    x0: {\n        valType: 'any',\n        dflt: 0,\n        role: 'info',\n        editType: 'calc+clearAxisTypes',\n        description: 'Set the image\\'s x position.'\n    },\n    y0: {\n        valType: 'any',\n        dflt: 0,\n        role: 'info',\n        editType: 'calc+clearAxisTypes',\n        description: 'Set the image\\'s y position.'\n    },\n    dx: {\n        valType: 'number',\n        dflt: 1,\n        role: 'info',\n        editType: 'calc',\n        description: 'Set the pixel\\'s horizontal size.'\n    },\n    dy: {\n        valType: 'number',\n        dflt: 1,\n        role: 'info',\n        editType: 'calc',\n        description: 'Set the pixel\\'s vertical size'\n    },\n    text: {\n        valType: 'data_array',\n        editType: 'plot',\n        description: 'Sets the text elements associated with each z value.'\n    },\n    hovertext: {\n        valType: 'data_array',\n        editType: 'plot',\n        description: 'Same as `text`.'\n    },\n    hoverinfo: extendFlat({}, baseAttrs.hoverinfo, {\n        flags: ['x', 'y', 'z', 'color', 'name', 'text'],\n        dflt: 'x+y+z+text+name'\n    }),\n    hovertemplate: hovertemplateAttrs({}, {\n        keys: ['z', 'color', 'colormodel']\n    }),\n\n    transforms: undefined\n});\n"]},"metadata":{},"sourceType":"script"}