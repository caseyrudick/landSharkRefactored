{"ast":null,"code":"import { CREATE_NEW_PLAN } from \"./types\";\nexport default ((currentWell, newPlan) => {\n  return (dispatch, getState) => {\n    let val = {};\n    let key = getState().wells[currentWell.plans];\n    val.key = newPlan;\n    console.log(val); // getState().wells[currentWell.plans] = newPlan \n    // console.log(getState().wells)\n    // console.log(getState().wells[currentWell.plans])\n    //   const currentPlanNumber = currentWellId.plan.slice(-1).planNumber ? currentWellId.plan.slice(-1).planNumber : 0;\n    // const currentPlan = currentWellId.plan.slice(-1).plan ? currentWellId.plan.slice(-1).plan : {};\n\n    dispatch({\n      type: CREATE_NEW_PLAN,\n      payload: ['to be added']\n    });\n  };\n});","map":{"version":3,"sources":["/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/ActionCreators/saveNewPlanToReduxStore.js"],"names":["CREATE_NEW_PLAN","currentWell","newPlan","dispatch","getState","val","key","wells","plans","console","log","type","payload"],"mappings":"AAAA,SAASA,eAAT,QAAgC,SAAhC;AAEA,gBAAe,CAACC,WAAD,EAAcC,OAAd,KAA0B;AACvC,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC7B,QAAIC,GAAG,GAAG,EAAV;AACA,QAAIC,GAAG,GAAGF,QAAQ,GAAGG,KAAX,CAAiBN,WAAW,CAACO,KAA7B,CAAV;AACAH,IAAAA,GAAG,CAACC,GAAJ,GAAUJ,OAAV;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ,EAJ6B,CAK7B;AACA;AACA;AACF;AACA;;AACEF,IAAAA,QAAQ,CAAC;AACPQ,MAAAA,IAAI,EAAEX,eADC;AAEPY,MAAAA,OAAO,EAAE,CAAC,aAAD;AAFF,KAAD,CAAR;AAID,GAdD;AAgBD,CAjBD","sourcesContent":["import { CREATE_NEW_PLAN } from \"./types\"\n\nexport default (currentWell, newPlan) => {\n  return (dispatch, getState) => {\n    let val = {}\n    let key = getState().wells[currentWell.plans]\n    val.key = newPlan\n    console.log(val)\n    // getState().wells[currentWell.plans] = newPlan \n    // console.log(getState().wells)\n    // console.log(getState().wells[currentWell.plans])\n  //   const currentPlanNumber = currentWellId.plan.slice(-1).planNumber ? currentWellId.plan.slice(-1).planNumber : 0;\n  // const currentPlan = currentWellId.plan.slice(-1).plan ? currentWellId.plan.slice(-1).plan : {};\n    dispatch({\n      type: CREATE_NEW_PLAN, \n      payload: ['to be added']\n    })\n  }\n\n}"]},"metadata":{},"sourceType":"module"}