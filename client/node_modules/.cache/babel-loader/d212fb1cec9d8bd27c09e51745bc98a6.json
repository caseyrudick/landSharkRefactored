{"ast":null,"code":"/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar cartesianConstants = require('../../plots/cartesian/constants');\n\nvar templatedArray = require('../../plot_api/plot_template').templatedArray;\n\nvar axisPlaceableObjs = require('../../constants/axis_placeable_objects');\n\nmodule.exports = templatedArray('image', {\n  visible: {\n    valType: 'boolean',\n    role: 'info',\n    dflt: true,\n    editType: 'arraydraw',\n    description: ['Determines whether or not this image is visible.'].join(' ')\n  },\n  source: {\n    valType: 'string',\n    role: 'info',\n    editType: 'arraydraw',\n    description: ['Specifies the URL of the image to be used.', 'The URL must be accessible from the domain where the', 'plot code is run, and can be either relative or absolute.'].join(' ')\n  },\n  layer: {\n    valType: 'enumerated',\n    values: ['below', 'above'],\n    dflt: 'above',\n    role: 'info',\n    editType: 'arraydraw',\n    description: ['Specifies whether images are drawn below or above traces.', 'When `xref` and `yref` are both set to `paper`,', 'image is drawn below the entire plot area.'].join(' ')\n  },\n  sizex: {\n    valType: 'number',\n    role: 'info',\n    dflt: 0,\n    editType: 'arraydraw',\n    description: ['Sets the image container size horizontally.', 'The image will be sized based on the `position` value.', 'When `xref` is set to `paper`, units are sized relative', 'to the plot width.', 'When `xref` ends with ` domain`, units are sized relative', 'to the axis width.'].join(' ')\n  },\n  sizey: {\n    valType: 'number',\n    role: 'info',\n    dflt: 0,\n    editType: 'arraydraw',\n    description: ['Sets the image container size vertically.', 'The image will be sized based on the `position` value.', 'When `yref` is set to `paper`, units are sized relative', 'to the plot height.', 'When `yref` ends with ` domain`, units are sized relative', 'to the axis height.'].join(' ')\n  },\n  sizing: {\n    valType: 'enumerated',\n    values: ['fill', 'contain', 'stretch'],\n    dflt: 'contain',\n    role: 'info',\n    editType: 'arraydraw',\n    description: ['Specifies which dimension of the image to constrain.'].join(' ')\n  },\n  opacity: {\n    valType: 'number',\n    role: 'info',\n    min: 0,\n    max: 1,\n    dflt: 1,\n    editType: 'arraydraw',\n    description: 'Sets the opacity of the image.'\n  },\n  x: {\n    valType: 'any',\n    role: 'info',\n    dflt: 0,\n    editType: 'arraydraw',\n    description: ['Sets the image\\'s x position.', 'When `xref` is set to `paper`, units are sized relative', 'to the plot height.', 'See `xref` for more info'].join(' ')\n  },\n  y: {\n    valType: 'any',\n    role: 'info',\n    dflt: 0,\n    editType: 'arraydraw',\n    description: ['Sets the image\\'s y position.', 'When `yref` is set to `paper`, units are sized relative', 'to the plot height.', 'See `yref` for more info'].join(' ')\n  },\n  xanchor: {\n    valType: 'enumerated',\n    values: ['left', 'center', 'right'],\n    dflt: 'left',\n    role: 'info',\n    editType: 'arraydraw',\n    description: 'Sets the anchor for the x position'\n  },\n  yanchor: {\n    valType: 'enumerated',\n    values: ['top', 'middle', 'bottom'],\n    dflt: 'top',\n    role: 'info',\n    editType: 'arraydraw',\n    description: 'Sets the anchor for the y position.'\n  },\n  xref: {\n    valType: 'enumerated',\n    values: ['paper', cartesianConstants.idRegex.x.toString()],\n    dflt: 'paper',\n    role: 'info',\n    editType: 'arraydraw',\n    description: ['Sets the images\\'s x coordinate axis.', axisPlaceableObjs.axisRefDescription('x', 'left', 'right')].join(' ')\n  },\n  yref: {\n    valType: 'enumerated',\n    values: ['paper', cartesianConstants.idRegex.y.toString()],\n    dflt: 'paper',\n    role: 'info',\n    editType: 'arraydraw',\n    description: ['Sets the images\\'s y coordinate axis.', axisPlaceableObjs.axisRefDescription('y', 'bottom', 'top')].join(' ')\n  },\n  editType: 'arraydraw'\n});","map":{"version":3,"sources":["/Users/caseyrudick/Documents/landsharkrefactored-copy/client/node_modules/plotly.js/src/components/images/attributes.js"],"names":["cartesianConstants","require","templatedArray","axisPlaceableObjs","module","exports","visible","valType","role","dflt","editType","description","join","source","layer","values","sizex","sizey","sizing","opacity","min","max","x","y","xanchor","yanchor","xref","idRegex","toString","axisRefDescription","yref"],"mappings":"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","sourcesContent":["/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar cartesianConstants = require('../../plots/cartesian/constants');\nvar templatedArray = require('../../plot_api/plot_template').templatedArray;\nvar axisPlaceableObjs = require('../../constants/axis_placeable_objects');\n\n\nmodule.exports = templatedArray('image', {\n    visible: {\n        valType: 'boolean',\n        role: 'info',\n        dflt: true,\n        editType: 'arraydraw',\n        description: [\n            'Determines whether or not this image is visible.'\n        ].join(' ')\n    },\n\n    source: {\n        valType: 'string',\n        role: 'info',\n        editType: 'arraydraw',\n        description: [\n            'Specifies the URL of the image to be used.',\n            'The URL must be accessible from the domain where the',\n            'plot code is run, and can be either relative or absolute.'\n\n        ].join(' ')\n    },\n\n    layer: {\n        valType: 'enumerated',\n        values: ['below', 'above'],\n        dflt: 'above',\n        role: 'info',\n        editType: 'arraydraw',\n        description: [\n            'Specifies whether images are drawn below or above traces.',\n            'When `xref` and `yref` are both set to `paper`,',\n            'image is drawn below the entire plot area.'\n        ].join(' ')\n    },\n\n    sizex: {\n        valType: 'number',\n        role: 'info',\n        dflt: 0,\n        editType: 'arraydraw',\n        description: [\n            'Sets the image container size horizontally.',\n            'The image will be sized based on the `position` value.',\n            'When `xref` is set to `paper`, units are sized relative',\n            'to the plot width.',\n            'When `xref` ends with ` domain`, units are sized relative',\n            'to the axis width.',\n        ].join(' ')\n    },\n\n    sizey: {\n        valType: 'number',\n        role: 'info',\n        dflt: 0,\n        editType: 'arraydraw',\n        description: [\n            'Sets the image container size vertically.',\n            'The image will be sized based on the `position` value.',\n            'When `yref` is set to `paper`, units are sized relative',\n            'to the plot height.',\n            'When `yref` ends with ` domain`, units are sized relative',\n            'to the axis height.'\n        ].join(' ')\n    },\n\n    sizing: {\n        valType: 'enumerated',\n        values: ['fill', 'contain', 'stretch'],\n        dflt: 'contain',\n        role: 'info',\n        editType: 'arraydraw',\n        description: [\n            'Specifies which dimension of the image to constrain.'\n        ].join(' ')\n    },\n\n    opacity: {\n        valType: 'number',\n        role: 'info',\n        min: 0,\n        max: 1,\n        dflt: 1,\n        editType: 'arraydraw',\n        description: 'Sets the opacity of the image.'\n    },\n\n    x: {\n        valType: 'any',\n        role: 'info',\n        dflt: 0,\n        editType: 'arraydraw',\n        description: [\n            'Sets the image\\'s x position.',\n            'When `xref` is set to `paper`, units are sized relative',\n            'to the plot height.',\n            'See `xref` for more info'\n        ].join(' ')\n    },\n\n    y: {\n        valType: 'any',\n        role: 'info',\n        dflt: 0,\n        editType: 'arraydraw',\n        description: [\n            'Sets the image\\'s y position.',\n            'When `yref` is set to `paper`, units are sized relative',\n            'to the plot height.',\n            'See `yref` for more info'\n        ].join(' ')\n    },\n\n    xanchor: {\n        valType: 'enumerated',\n        values: ['left', 'center', 'right'],\n        dflt: 'left',\n        role: 'info',\n        editType: 'arraydraw',\n        description: 'Sets the anchor for the x position'\n    },\n\n    yanchor: {\n        valType: 'enumerated',\n        values: ['top', 'middle', 'bottom'],\n        dflt: 'top',\n        role: 'info',\n        editType: 'arraydraw',\n        description: 'Sets the anchor for the y position.'\n    },\n\n    xref: {\n        valType: 'enumerated',\n        values: [\n            'paper',\n            cartesianConstants.idRegex.x.toString()\n        ],\n        dflt: 'paper',\n        role: 'info',\n        editType: 'arraydraw',\n        description: [\n            'Sets the images\\'s x coordinate axis.',\n            axisPlaceableObjs.axisRefDescription('x', 'left', 'right'),\n        ].join(' ')\n    },\n\n    yref: {\n        valType: 'enumerated',\n        values: [\n            'paper',\n            cartesianConstants.idRegex.y.toString()\n        ],\n        dflt: 'paper',\n        role: 'info',\n        editType: 'arraydraw',\n        description: [\n            'Sets the images\\'s y coordinate axis.',\n            axisPlaceableObjs.axisRefDescription('y', 'bottom', 'top'),\n        ].join(' ')\n    },\n    editType: 'arraydraw'\n});\n"]},"metadata":{},"sourceType":"script"}