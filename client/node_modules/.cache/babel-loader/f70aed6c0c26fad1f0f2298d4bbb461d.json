{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/ExistingPlans.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Container from \"react-bootstrap/esm/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport 'react-datasheet/lib/react-datasheet.css';\nimport ReactDataSheet from \"react-datasheet\";\nimport saveWellPlansToJSONDb from \"../ActionCreators/saveWellPlansToJSONDb\";\n\nconst ExistingWellPlans = ({\n  saveWellPlansToJSONDb,\n  saveActiveWellToReduxStoreReducer,\n  getWellsFromJSONDbReducer\n}) => {\n  _s();\n\n  const [grid, setGrid] = useState([]);\n  const initialGrid = saveActiveWellToReduxStoreReducer;\n\n  const onCellsChanged = changes => {\n    const newGrid = grid.map(row => [...row]);\n    changes.forEach(({\n      cell,\n      row,\n      col,\n      value\n    }) => {\n      newGrid[row][col] = { ...grid[row][col],\n        value\n      };\n    });\n    setGrid(newGrid);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      children: \"Insert Name of well\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactDataSheet, {\n      data: grid,\n      valueRenderer: cell => cell.value,\n      onCellsChanged: onCellsChanged\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        className: \"mt-4 mb-4\",\n        onClick: () => addNewRow(),\n        children: \"Add a Row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"danger\",\n        className: \"my-4 ml-4\",\n        onClick: () => removeRow(),\n        children: \"Remove a Row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"info\",\n        className: \"my-4 ml-4\",\n        onClick: () => editPlans(),\n        children: \"Edit Plans\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"info\",\n        className: \"my-4 ml-4\",\n        onClick: () => createNewPlan(),\n        children: \"Create New Plan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ExistingWellPlans, \"zbxHjYUlcafBSI2zQAX7t9XwGao=\");\n\n_c = ExistingWellPlans;\n\nconst mapStateToProps = ({\n  saveActiveWellToReduxStoreReducer,\n  getWellsFromJSONDbReducer\n}) => {\n  return {\n    saveActiveWellToReduxStoreReducer,\n    getWellsFromJSONDbReducer\n  };\n};\n\nexport default connect(mapStateToProps)(ExistingWellPlans);\n\nvar _c;\n\n$RefreshReg$(_c, \"ExistingWellPlans\");","map":{"version":3,"sources":["/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/ExistingPlans.js"],"names":["React","useState","connect","Container","Form","Row","Col","Button","ReactDataSheet","saveWellPlansToJSONDb","ExistingWellPlans","saveActiveWellToReduxStoreReducer","getWellsFromJSONDbReducer","grid","setGrid","initialGrid","onCellsChanged","changes","newGrid","map","row","forEach","cell","col","value","addNewRow","removeRow","editPlans","createNewPlan","mapStateToProps"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AAEA,OAAO,yCAAP;AACA,OAAOC,cAAP,MAA2B,iBAA3B;AACA,OAAOC,qBAAP,MAAkC,yCAAlC;;AAGA,MAAMC,iBAAiB,GAAG,CAAC;AAACD,EAAAA,qBAAD;AAAwBE,EAAAA,iCAAxB;AAA2DC,EAAAA;AAA3D,CAAD,KAA2F;AAAA;;AACnH,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMc,WAAW,GAAGJ,iCAApB;;AAEA,QAAMK,cAAc,GAAIC,OAAD,IAAa;AAClC,UAAMC,OAAO,GAAGL,IAAI,CAACM,GAAL,CAASC,GAAG,IAAI,CAAC,GAAGA,GAAJ,CAAhB,CAAhB;AACAH,IAAAA,OAAO,CAACI,OAAR,CAAgB,CAAC;AAACC,MAAAA,IAAD;AAAOF,MAAAA,GAAP;AAAYG,MAAAA,GAAZ;AAAiBC,MAAAA;AAAjB,KAAD,KAA6B;AAC3CN,MAAAA,OAAO,CAACE,GAAD,CAAP,CAAaG,GAAb,IAAoB,EAAC,GAAGV,IAAI,CAACO,GAAD,CAAJ,CAAUG,GAAV,CAAJ;AAAoBC,QAAAA;AAApB,OAApB;AACD,KAFD;AAGAV,IAAAA,OAAO,CAACI,OAAD,CAAP;AACD,GAND;;AAOA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,cAAD;AACE,MAAA,IAAI,EAAEL,IADR;AAEE,MAAA,aAAa,EAAGS,IAAD,IAASA,IAAI,CAACE,KAF/B;AAGE,MAAA,cAAc,EAAER;AAHlB;AAAA;AAAA;AAAA;AAAA,YAHF,eAQE,QAAC,GAAD;AAAA,8BACF,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,SAAS,EAAC,WAApC;AAAgD,QAAA,OAAO,EAAE,MAAIS,SAAS,EAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADE,eAEF,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,QAAhB;AAAyB,QAAA,SAAS,EAAC,WAAnC;AAA+C,QAAA,OAAO,EAAE,MAAIC,SAAS,EAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFE,eAGF,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,MAAhB;AAAuB,QAAA,SAAS,EAAC,WAAjC;AAA6C,QAAA,OAAO,EAAE,MAAIC,SAAS,EAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHE,eAIF,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,MAAhB;AAAuB,QAAA,SAAS,EAAC,WAAjC;AAA6C,QAAA,OAAO,EAAE,MAAIC,aAAa,EAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJE;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA9BD;;GAAMlB,iB;;KAAAA,iB;;AAgCN,MAAMmB,eAAe,GAAG,CAAC;AAAClB,EAAAA,iCAAD;AAAoCC,EAAAA;AAApC,CAAD,KAAoE;AAC1F,SAAO;AACLD,IAAAA,iCADK;AAELC,IAAAA;AAFK,GAAP;AAID,CALD;;AAOA,eAAeV,OAAO,CAAC2B,eAAD,CAAP,CAAyBnB,iBAAzB,CAAf","sourcesContent":["import React, { useState } from \"react\"\nimport { connect } from \"react-redux\"\n\nimport Container from \"react-bootstrap/esm/Container\"\nimport Form from \"react-bootstrap/Form\"\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\nimport Button from \"react-bootstrap/Button\"\n\nimport 'react-datasheet/lib/react-datasheet.css'\nimport ReactDataSheet from \"react-datasheet\"\nimport saveWellPlansToJSONDb from \"../ActionCreators/saveWellPlansToJSONDb\"\n\n\nconst ExistingWellPlans = ({saveWellPlansToJSONDb, saveActiveWellToReduxStoreReducer, getWellsFromJSONDbReducer}) => {\n  const [grid, setGrid] = useState([])\n\n  const initialGrid = saveActiveWellToReduxStoreReducer\n  \n  const onCellsChanged = (changes) => {\n    const newGrid = grid.map(row => [...row])\n    changes.forEach(({cell, row, col, value}) => {\n      newGrid[row][col] = {...grid[row][col], value}\n    })\n    setGrid(newGrid)\n  }\n  return (\n    <Container>\n      <Col>Insert Name of well</Col>\n\n      <ReactDataSheet\n        data={grid}\n        valueRenderer={(cell)=> cell.value}\n        onCellsChanged={onCellsChanged}\n      ></ReactDataSheet>\n      <Col>\n    <Button variant=\"primary\" className=\"mt-4 mb-4\" onClick={()=>addNewRow()}>Add a Row</Button>\n    <Button variant=\"danger\" className=\"my-4 ml-4\" onClick={()=>removeRow()}>Remove a Row</Button>\n    <Button variant=\"info\" className=\"my-4 ml-4\" onClick={()=>editPlans()}>Edit Plans</Button>\n    <Button variant=\"info\" className=\"my-4 ml-4\" onClick={()=>createNewPlan()}>Create New Plan</Button>\n    \n      </Col>\n    </Container>\n  )\n}\n\nconst mapStateToProps = ({saveActiveWellToReduxStoreReducer, getWellsFromJSONDbReducer}) => {\n  return {\n    saveActiveWellToReduxStoreReducer,\n    getWellsFromJSONDbReducer\n  }\n}\n\nexport default connect(mapStateToProps)(ExistingWellPlans)"]},"metadata":{},"sourceType":"module"}