{"ast":null,"code":"/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar d3 = require('d3');\n\nvar isNumeric = require('fast-isnumeric');\n\nvar Plots = require('../../plots/plots');\n\nvar Registry = require('../../registry');\n\nvar Lib = require('../../lib');\n\nvar strTranslate = Lib.strTranslate;\n\nvar svgTextUtils = require('../../lib/svg_text_utils');\n\nvar Titles = require('../../components/titles');\n\nvar Color = require('../../components/color');\n\nvar Drawing = require('../../components/drawing');\n\nvar axAttrs = require('./layout_attributes');\n\nvar cleanTicks = require('./clean_ticks');\n\nvar constants = require('../../constants/numerical');\n\nvar ONEMAXYEAR = constants.ONEMAXYEAR;\nvar ONEAVGYEAR = constants.ONEAVGYEAR;\nvar ONEMINYEAR = constants.ONEMINYEAR;\nvar ONEMAXQUARTER = constants.ONEMAXQUARTER;\nvar ONEAVGQUARTER = constants.ONEAVGQUARTER;\nvar ONEMINQUARTER = constants.ONEMINQUARTER;\nvar ONEMAXMONTH = constants.ONEMAXMONTH;\nvar ONEAVGMONTH = constants.ONEAVGMONTH;\nvar ONEMINMONTH = constants.ONEMINMONTH;\nvar ONEWEEK = constants.ONEWEEK;\nvar ONEDAY = constants.ONEDAY;\nvar HALFDAY = ONEDAY / 2;\nvar ONEHOUR = constants.ONEHOUR;\nvar ONEMIN = constants.ONEMIN;\nvar ONESEC = constants.ONESEC;\nvar MINUS_SIGN = constants.MINUS_SIGN;\nvar BADNUM = constants.BADNUM;\n\nvar alignmentConstants = require('../../constants/alignment');\n\nvar MID_SHIFT = alignmentConstants.MID_SHIFT;\nvar CAP_SHIFT = alignmentConstants.CAP_SHIFT;\nvar LINE_SPACING = alignmentConstants.LINE_SPACING;\nvar OPPOSITE_SIDE = alignmentConstants.OPPOSITE_SIDE;\nvar TEXTPAD = 3;\nvar axes = module.exports = {};\naxes.setConvert = require('./set_convert');\n\nvar autoType = require('./axis_autotype');\n\nvar axisIds = require('./axis_ids');\n\nvar idSort = axisIds.idSort;\nvar isLinked = axisIds.isLinked; // tight coupling to chart studio\n\naxes.id2name = axisIds.id2name;\naxes.name2id = axisIds.name2id;\naxes.cleanId = axisIds.cleanId;\naxes.list = axisIds.list;\naxes.listIds = axisIds.listIds;\naxes.getFromId = axisIds.getFromId;\naxes.getFromTrace = axisIds.getFromTrace;\n\nvar autorange = require('./autorange');\n\naxes.getAutoRange = autorange.getAutoRange;\naxes.findExtremes = autorange.findExtremes;\nvar epsilon = 0.0001;\n\nfunction expandRange(range) {\n  var delta = (range[1] - range[0]) * epsilon;\n  return [range[0] - delta, range[1] + delta];\n}\n/*\n * find the list of possible axes to reference with an xref or yref attribute\n * and coerce it to that list\n *\n * attr: the attribute we're generating a reference for. Should end in 'x' or 'y'\n *     but can be prefixed, like 'ax' for annotation's arrow x\n * dflt: the default to coerce to, or blank to use the first axis (falling back on\n *     extraOption if there is no axis)\n * extraOption: aside from existing axes with this letter, what non-axis value is allowed?\n *     Only required if it's different from `dflt`\n */\n\n\naxes.coerceRef = function (containerIn, containerOut, gd, attr, dflt, extraOption) {\n  var axLetter = attr.charAt(attr.length - 1);\n  var axlist = gd._fullLayout._subplots[axLetter + 'axis'];\n  var refAttr = attr + 'ref';\n  var attrDef = {};\n  if (!dflt) dflt = axlist[0] || (typeof extraOption === 'string' ? extraOption : extraOption[0]);\n  if (!extraOption) extraOption = dflt;\n  axlist = axlist.concat(axlist.map(function (x) {\n    return x + ' domain';\n  })); // data-ref annotations are not supported in gl2d yet\n\n  attrDef[refAttr] = {\n    valType: 'enumerated',\n    values: axlist.concat(extraOption ? typeof extraOption === 'string' ? [extraOption] : extraOption : []),\n    dflt: dflt\n  }; // xref, yref\n\n  return Lib.coerce(containerIn, containerOut, attrDef, refAttr);\n};\n/*\n * Get the type of an axis reference. This can be 'range', 'domain', or 'paper'.\n * This assumes ar is a valid axis reference and returns 'range' if it doesn't\n * match the patterns for 'paper' or 'domain'.\n *\n * ar: the axis reference string\n *\n */\n\n\naxes.getRefType = function (ar) {\n  if (ar === undefined) {\n    return ar;\n  }\n\n  if (ar === 'paper') {\n    return 'paper';\n  }\n\n  if (ar === 'pixel') {\n    return 'pixel';\n  }\n\n  if (/( domain)$/.test(ar)) {\n    return 'domain';\n  } else {\n    return 'range';\n  }\n};\n/*\n * coerce position attributes (range-type) that can be either on axes or absolute\n * (paper or pixel) referenced. The biggest complication here is that we don't know\n * before looking at the axis whether the value must be a number or not (it may be\n * a date string), so we can't use the regular valType='number' machinery\n *\n * axRef (string): the axis this position is referenced to, or:\n *     paper: fraction of the plot area\n *     pixel: pixels relative to some starting position\n * attr (string): the attribute in containerOut we are coercing\n * dflt (number): the default position, as a fraction or pixels. If the attribute\n *     is to be axis-referenced, this will be converted to an axis data value\n *\n * Also cleans the values, since the attribute definition itself has to say\n * valType: 'any' to handle date axes. This allows us to accept:\n * - for category axes: category names, and convert them here into serial numbers.\n *   Note that this will NOT work for axis range endpoints, because we don't know\n *   the category list yet (it's set by ax.makeCalcdata during calc)\n *   but it works for component (note, shape, images) positions.\n * - for date axes: JS Dates or milliseconds, and convert to date strings\n * - for other types: coerce them to numbers\n */\n\n\naxes.coercePosition = function (containerOut, gd, coerce, axRef, attr, dflt) {\n  var cleanPos, pos;\n  var axRefType = axes.getRefType(axRef);\n\n  if (axRefType !== 'range') {\n    cleanPos = Lib.ensureNumber;\n    pos = coerce(attr, dflt);\n  } else {\n    var ax = axes.getFromId(gd, axRef);\n    dflt = ax.fraction2r(dflt);\n    pos = coerce(attr, dflt);\n    cleanPos = ax.cleanPos;\n  }\n\n  containerOut[attr] = cleanPos(pos);\n};\n\naxes.cleanPosition = function (pos, gd, axRef) {\n  var cleanPos = axRef === 'paper' || axRef === 'pixel' ? Lib.ensureNumber : axes.getFromId(gd, axRef).cleanPos;\n  return cleanPos(pos);\n};\n\naxes.redrawComponents = function (gd, axIds) {\n  axIds = axIds ? axIds : axes.listIds(gd);\n  var fullLayout = gd._fullLayout;\n\n  function _redrawOneComp(moduleName, methodName, stashName, shortCircuit) {\n    var method = Registry.getComponentMethod(moduleName, methodName);\n    var stash = {};\n\n    for (var i = 0; i < axIds.length; i++) {\n      var ax = fullLayout[axes.id2name(axIds[i])];\n      var indices = ax[stashName];\n\n      for (var j = 0; j < indices.length; j++) {\n        var ind = indices[j];\n\n        if (!stash[ind]) {\n          method(gd, ind);\n          stash[ind] = 1; // once is enough for images (which doesn't use the `i` arg anyway)\n\n          if (shortCircuit) return;\n        }\n      }\n    }\n  } // annotations and shapes 'draw' method is slow,\n  // use the finer-grained 'drawOne' method instead\n\n\n  _redrawOneComp('annotations', 'drawOne', '_annIndices');\n\n  _redrawOneComp('shapes', 'drawOne', '_shapeIndices');\n\n  _redrawOneComp('images', 'draw', '_imgIndices', true);\n};\n\nvar getDataConversions = axes.getDataConversions = function (gd, trace, target, targetArray) {\n  var ax; // If target points to an axis, use the type we already have for that\n  // axis to find the data type. Otherwise use the values to autotype.\n\n  var d2cTarget = target === 'x' || target === 'y' || target === 'z' ? target : targetArray; // In the case of an array target, make a mock data array\n  // and call supplyDefaults to the data type and\n  // setup the data-to-calc method.\n\n  if (Array.isArray(d2cTarget)) {\n    ax = {\n      type: autoType(targetArray, undefined, {\n        autotypenumbers: gd._fullLayout.autotypenumbers\n      }),\n      _categories: []\n    };\n    axes.setConvert(ax); // build up ax._categories (usually done during ax.makeCalcdata()\n\n    if (ax.type === 'category') {\n      for (var i = 0; i < targetArray.length; i++) {\n        ax.d2c(targetArray[i]);\n      }\n    } // TODO what to do for transforms?\n\n  } else {\n    ax = axes.getFromTrace(gd, trace, d2cTarget);\n  } // if 'target' has corresponding axis\n  // -> use setConvert method\n\n\n  if (ax) return {\n    d2c: ax.d2c,\n    c2d: ax.c2d\n  }; // special case for 'ids'\n  // -> cast to String\n\n  if (d2cTarget === 'ids') return {\n    d2c: toString,\n    c2d: toString\n  }; // otherwise (e.g. numeric-array of 'marker.color' or 'marker.size')\n  // -> cast to Number\n\n  return {\n    d2c: toNum,\n    c2d: toNum\n  };\n};\n\nfunction toNum(v) {\n  return +v;\n}\n\nfunction toString(v) {\n  return String(v);\n}\n\naxes.getDataToCoordFunc = function (gd, trace, target, targetArray) {\n  return getDataConversions(gd, trace, target, targetArray).d2c;\n}; // get counteraxis letter for this axis (name or id)\n// this can also be used as the id for default counter axis\n\n\naxes.counterLetter = function (id) {\n  var axLetter = id.charAt(0);\n  if (axLetter === 'x') return 'y';\n  if (axLetter === 'y') return 'x';\n}; // incorporate a new minimum difference and first tick into\n// forced\n// note that _forceTick0 is linearized, so needs to be turned into\n// a range value for setting tick0\n\n\naxes.minDtick = function (ax, newDiff, newFirst, allow) {\n  // doesn't make sense to do forced min dTick on log or category axes,\n  // and the plot itself may decide to cancel (ie non-grouped bars)\n  if (['log', 'category', 'multicategory'].indexOf(ax.type) !== -1 || !allow) {\n    ax._minDtick = 0;\n  } else if (ax._minDtick === undefined) {\n    // undefined means there's nothing there yet\n    ax._minDtick = newDiff;\n    ax._forceTick0 = newFirst;\n  } else if (ax._minDtick) {\n    if ((ax._minDtick / newDiff + 1e-6) % 1 < 2e-6 && // existing minDtick is an integer multiple of newDiff\n    // (within rounding err)\n    // and forceTick0 can be shifted to newFirst\n    ((newFirst - ax._forceTick0) / newDiff % 1 + 1.000001) % 1 < 2e-6) {\n      ax._minDtick = newDiff;\n      ax._forceTick0 = newFirst;\n    } else if ((newDiff / ax._minDtick + 1e-6) % 1 > 2e-6 || // if the converse is true (newDiff is a multiple of minDtick and\n    // newFirst can be shifted to forceTick0) then do nothing - same\n    // forcing stands. Otherwise, cancel forced minimum\n    ((newFirst - ax._forceTick0) / ax._minDtick % 1 + 1.000001) % 1 > 2e-6) {\n      ax._minDtick = 0;\n    }\n  }\n}; // save a copy of the initial axis ranges in fullLayout\n// use them in mode bar and dblclick events\n\n\naxes.saveRangeInitial = function (gd, overwrite) {\n  var axList = axes.list(gd, '', true);\n  var hasOneAxisChanged = false;\n\n  for (var i = 0; i < axList.length; i++) {\n    var ax = axList[i];\n    var isNew = ax._rangeInitial === undefined;\n    var hasChanged = isNew || !(ax.range[0] === ax._rangeInitial[0] && ax.range[1] === ax._rangeInitial[1]);\n\n    if (isNew && ax.autorange === false || overwrite && hasChanged) {\n      ax._rangeInitial = ax.range.slice();\n      hasOneAxisChanged = true;\n    }\n  }\n\n  return hasOneAxisChanged;\n}; // save a copy of the initial spike visibility\n\n\naxes.saveShowSpikeInitial = function (gd, overwrite) {\n  var axList = axes.list(gd, '', true);\n  var hasOneAxisChanged = false;\n  var allSpikesEnabled = 'on';\n\n  for (var i = 0; i < axList.length; i++) {\n    var ax = axList[i];\n    var isNew = ax._showSpikeInitial === undefined;\n    var hasChanged = isNew || !(ax.showspikes === ax._showspikes);\n\n    if (isNew || overwrite && hasChanged) {\n      ax._showSpikeInitial = ax.showspikes;\n      hasOneAxisChanged = true;\n    }\n\n    if (allSpikesEnabled === 'on' && !ax.showspikes) {\n      allSpikesEnabled = 'off';\n    }\n  }\n\n  gd._fullLayout._cartesianSpikesEnabled = allSpikesEnabled;\n  return hasOneAxisChanged;\n};\n\naxes.autoBin = function (data, ax, nbins, is2d, calendar, size) {\n  var dataMin = Lib.aggNums(Math.min, null, data);\n  var dataMax = Lib.aggNums(Math.max, null, data);\n\n  if (ax.type === 'category' || ax.type === 'multicategory') {\n    return {\n      start: dataMin - 0.5,\n      end: dataMax + 0.5,\n      size: Math.max(1, Math.round(size) || 1),\n      _dataSpan: dataMax - dataMin\n    };\n  }\n\n  if (!calendar) calendar = ax.calendar; // piggyback off tick code to make \"nice\" bin sizes and edges\n\n  var dummyAx;\n\n  if (ax.type === 'log') {\n    dummyAx = {\n      type: 'linear',\n      range: [dataMin, dataMax]\n    };\n  } else {\n    dummyAx = {\n      type: ax.type,\n      range: Lib.simpleMap([dataMin, dataMax], ax.c2r, 0, calendar),\n      calendar: calendar\n    };\n  }\n\n  axes.setConvert(dummyAx);\n  size = size && cleanTicks.dtick(size, dummyAx.type);\n\n  if (size) {\n    dummyAx.dtick = size;\n    dummyAx.tick0 = cleanTicks.tick0(undefined, dummyAx.type, calendar);\n  } else {\n    var size0;\n    if (nbins) size0 = (dataMax - dataMin) / nbins;else {\n      // totally auto: scale off std deviation so the highest bin is\n      // somewhat taller than the total number of bins, but don't let\n      // the size get smaller than the 'nice' rounded down minimum\n      // difference between values\n      var distinctData = Lib.distinctVals(data);\n      var msexp = Math.pow(10, Math.floor(Math.log(distinctData.minDiff) / Math.LN10));\n      var minSize = msexp * Lib.roundUp(distinctData.minDiff / msexp, [0.9, 1.9, 4.9, 9.9], true);\n      size0 = Math.max(minSize, 2 * Lib.stdev(data) / Math.pow(data.length, is2d ? 0.25 : 0.4)); // fallback if ax.d2c output BADNUMs\n      // e.g. when user try to plot categorical bins\n      // on a layout.xaxis.type: 'linear'\n\n      if (!isNumeric(size0)) size0 = 1;\n    }\n    axes.autoTicks(dummyAx, size0);\n  }\n\n  var finalSize = dummyAx.dtick;\n  var binStart = axes.tickIncrement(axes.tickFirst(dummyAx), finalSize, 'reverse', calendar);\n  var binEnd, bincount; // check for too many data points right at the edges of bins\n  // (>50% within 1% of bin edges) or all data points integral\n  // and offset the bins accordingly\n\n  if (typeof finalSize === 'number') {\n    binStart = autoShiftNumericBins(binStart, data, dummyAx, dataMin, dataMax);\n    bincount = 1 + Math.floor((dataMax - binStart) / finalSize);\n    binEnd = binStart + bincount * finalSize;\n  } else {\n    // month ticks - should be the only nonlinear kind we have at this point.\n    // dtick (as supplied by axes.autoTick) only has nonlinear values on\n    // date and log axes, but even if you display a histogram on a log axis\n    // we bin it on a linear axis (which one could argue against, but that's\n    // a separate issue)\n    if (dummyAx.dtick.charAt(0) === 'M') {\n      binStart = autoShiftMonthBins(binStart, data, finalSize, dataMin, calendar);\n    } // calculate the endpoint for nonlinear ticks - you have to\n    // just increment until you're done\n\n\n    binEnd = binStart;\n    bincount = 0;\n\n    while (binEnd <= dataMax) {\n      binEnd = axes.tickIncrement(binEnd, finalSize, false, calendar);\n      bincount++;\n    }\n  }\n\n  return {\n    start: ax.c2r(binStart, 0, calendar),\n    end: ax.c2r(binEnd, 0, calendar),\n    size: finalSize,\n    _dataSpan: dataMax - dataMin\n  };\n};\n\nfunction autoShiftNumericBins(binStart, data, ax, dataMin, dataMax) {\n  var edgecount = 0;\n  var midcount = 0;\n  var intcount = 0;\n  var blankCount = 0;\n\n  function nearEdge(v) {\n    // is a value within 1% of a bin edge?\n    return (1 + (v - binStart) * 100 / ax.dtick) % 100 < 2;\n  }\n\n  for (var i = 0; i < data.length; i++) {\n    if (data[i] % 1 === 0) intcount++;else if (!isNumeric(data[i])) blankCount++;\n    if (nearEdge(data[i])) edgecount++;\n    if (nearEdge(data[i] + ax.dtick / 2)) midcount++;\n  }\n\n  var dataCount = data.length - blankCount;\n\n  if (intcount === dataCount && ax.type !== 'date') {\n    if (ax.dtick < 1) {\n      // all integers: if bin size is <1, it's because\n      // that was specifically requested (large nbins)\n      // so respect that... but center the bins containing\n      // integers on those integers\n      binStart = dataMin - 0.5 * ax.dtick;\n    } else {\n      // otherwise start half an integer down regardless of\n      // the bin size, just enough to clear up endpoint\n      // ambiguity about which integers are in which bins.\n      binStart -= 0.5;\n      if (binStart + ax.dtick < dataMin) binStart += ax.dtick;\n    }\n  } else if (midcount < dataCount * 0.1) {\n    if (edgecount > dataCount * 0.3 || nearEdge(dataMin) || nearEdge(dataMax)) {\n      // lots of points at the edge, not many in the middle\n      // shift half a bin\n      var binshift = ax.dtick / 2;\n      binStart += binStart + binshift < dataMin ? binshift : -binshift;\n    }\n  }\n\n  return binStart;\n}\n\nfunction autoShiftMonthBins(binStart, data, dtick, dataMin, calendar) {\n  var stats = Lib.findExactDates(data, calendar); // number of data points that needs to be an exact value\n  // to shift that increment to (near) the bin center\n\n  var threshold = 0.8;\n\n  if (stats.exactDays > threshold) {\n    var numMonths = Number(dtick.substr(1));\n\n    if (stats.exactYears > threshold && numMonths % 12 === 0) {\n      // The exact middle of a non-leap-year is 1.5 days into July\n      // so if we start the bins here, all but leap years will\n      // get hover-labeled as exact years.\n      binStart = axes.tickIncrement(binStart, 'M6', 'reverse') + ONEDAY * 1.5;\n    } else if (stats.exactMonths > threshold) {\n      // Months are not as clean, but if we shift half the *longest*\n      // month (31/2 days) then 31-day months will get labeled exactly\n      // and shorter months will get labeled with the correct month\n      // but shifted 12-36 hours into it.\n      binStart = axes.tickIncrement(binStart, 'M1', 'reverse') + ONEDAY * 15.5;\n    } else {\n      // Shifting half a day is exact, but since these are month bins it\n      // will always give a somewhat odd-looking label, until we do something\n      // smarter like showing the bin boundaries (or the bounds of the actual\n      // data in each bin)\n      binStart -= HALFDAY;\n    }\n\n    var nextBinStart = axes.tickIncrement(binStart, dtick);\n    if (nextBinStart <= dataMin) return nextBinStart;\n  }\n\n  return binStart;\n} // ----------------------------------------------------\n// Ticks and grids\n// ----------------------------------------------------\n// ensure we have tick0, dtick, and tick rounding calculated\n\n\naxes.prepTicks = function (ax, opts) {\n  var rng = Lib.simpleMap(ax.range, ax.r2l, undefined, undefined, opts);\n  ax._dtickInit = ax.dtick;\n  ax._tick0Init = ax.tick0; // calculate max number of (auto) ticks to display based on plot size\n\n  if (ax.tickmode === 'auto' || !ax.dtick) {\n    var nt = ax.nticks;\n    var minPx;\n\n    if (!nt) {\n      if (ax.type === 'category' || ax.type === 'multicategory') {\n        minPx = ax.tickfont ? (ax.tickfont.size || 12) * 1.2 : 15;\n        nt = ax._length / minPx;\n      } else {\n        minPx = ax._id.charAt(0) === 'y' ? 40 : 80;\n        nt = Lib.constrain(ax._length / minPx, 4, 9) + 1;\n      } // radial axes span half their domain,\n      // multiply nticks value by two to get correct number of auto ticks.\n\n\n      if (ax._name === 'radialaxis') nt *= 2;\n    } // add a couple of extra digits for filling in ticks when we\n    // have explicit tickvals without tick text\n\n\n    if (ax.tickmode === 'array') nt *= 100;\n    ax._roughDTick = Math.abs(rng[1] - rng[0]) / nt;\n    axes.autoTicks(ax, ax._roughDTick); // check for a forced minimum dtick\n\n    if (ax._minDtick > 0 && ax.dtick < ax._minDtick * 2) {\n      ax.dtick = ax._minDtick;\n      ax.tick0 = ax.l2r(ax._forceTick0);\n    }\n  }\n\n  if (ax.ticklabelmode === 'period') {\n    adjustPeriodDelta(ax);\n  } // check for missing tick0\n\n\n  if (!ax.tick0) {\n    ax.tick0 = ax.type === 'date' ? '2000-01-01' : 0;\n  } // ensure we don't try to make ticks below our minimum precision\n  // see https://github.com/plotly/plotly.js/issues/2892\n\n\n  if (ax.type === 'date' && ax.dtick < 0.1) ax.dtick = 0.1; // now figure out rounding of tick values\n\n  autoTickRound(ax);\n};\n\nfunction nMonths(dtick) {\n  return +dtick.substring(1);\n}\n\nfunction adjustPeriodDelta(ax) {\n  // adjusts ax.dtick and sets ax._definedDelta\n  var definedDelta;\n\n  function mDate() {\n    return !(isNumeric(ax.dtick) || ax.dtick.charAt(0) !== 'M');\n  }\n\n  var isMDate = mDate();\n  var tickformat = axes.getTickFormat(ax);\n\n  if (tickformat) {\n    var noDtick = ax._dtickInit !== ax.dtick;\n\n    if (!/%[fLQsSMX]/.test(tickformat) // %f: microseconds as a decimal number [000000, 999999]\n    // %L: milliseconds as a decimal number [000, 999]\n    // %Q: milliseconds since UNIX epoch\n    // %s: seconds since UNIX epoch\n    // %S: second as a decimal number [00,61]\n    // %M: minute as a decimal number [00,59]\n    // %X: the locale’s time, such as %-I:%M:%S %p\n    ) {\n        if (/%[HI]/.test(tickformat) // %H: hour (24-hour clock) as a decimal number [00,23]\n        // %I: hour (12-hour clock) as a decimal number [01,12]\n        ) {\n            definedDelta = ONEHOUR;\n            if (noDtick && !isMDate && ax.dtick < ONEHOUR) ax.dtick = ONEHOUR;\n          } else if (/%p/.test(tickformat) // %p: either AM or PM\n        ) {\n            definedDelta = HALFDAY;\n            if (noDtick && !isMDate && ax.dtick < HALFDAY) ax.dtick = HALFDAY;\n          } else if (/%[Aadejuwx]/.test(tickformat) // %A: full weekday name\n        // %a: abbreviated weekday name\n        // %d: zero-padded day of the month as a decimal number [01,31]\n        // %e: space-padded day of the month as a decimal number [ 1,31]\n        // %j: day of the year as a decimal number [001,366]\n        // %u: Monday-based (ISO 8601) weekday as a decimal number [1,7]\n        // %w: Sunday-based weekday as a decimal number [0,6]\n        // %x: the locale’s date, such as %-m/%-d/%Y\n        ) {\n            definedDelta = ONEDAY;\n            if (noDtick && !isMDate && ax.dtick < ONEDAY) ax.dtick = ONEDAY;\n          } else if (/%[UVW]/.test(tickformat) // %U: Sunday-based week of the year as a decimal number [00,53]\n        // %V: ISO 8601 week of the year as a decimal number [01, 53]\n        // %W: Monday-based week of the year as a decimal number [00,53]\n        ) {\n            definedDelta = ONEWEEK;\n            if (noDtick && !isMDate && ax.dtick < ONEWEEK) ax.dtick = ONEWEEK;\n          } else if (/%[Bbm]/.test(tickformat) // %B: full month name\n        // %b: abbreviated month name\n        // %m: month as a decimal number [01,12]\n        ) {\n            definedDelta = ONEAVGMONTH;\n            if (noDtick && (isMDate ? nMonths(ax.dtick) < 1 : ax.dtick < ONEMINMONTH)) ax.dtick = 'M1';\n          } else if (/%[q]/.test(tickformat) // %q: quarter of the year as a decimal number [1,4]\n        ) {\n            definedDelta = ONEAVGQUARTER;\n            if (noDtick && (isMDate ? nMonths(ax.dtick) < 3 : ax.dtick < ONEMINQUARTER)) ax.dtick = 'M3';\n          } else if (/%[Yy]/.test(tickformat) // %Y: year with century as a decimal number, such as 1999\n        // %y: year without century as a decimal number [00,99]\n        ) {\n            definedDelta = ONEAVGYEAR;\n            if (noDtick && (isMDate ? nMonths(ax.dtick) < 12 : ax.dtick < ONEMINYEAR)) ax.dtick = 'M12';\n          }\n      }\n  }\n\n  isMDate = mDate();\n\n  if (isMDate && ax.tick0 === ax._dowTick0) {\n    // discard Sunday/Monday tweaks\n    ax.tick0 = ax._rawTick0;\n  }\n\n  ax._definedDelta = definedDelta;\n}\n\nfunction positionPeriodTicks(tickVals, ax, definedDelta) {\n  for (var i = 0; i < tickVals.length; i++) {\n    var v = tickVals[i].value;\n    var a = i;\n    var b = i + 1;\n\n    if (i < tickVals.length - 1) {\n      a = i;\n      b = i + 1;\n    } else if (i > 0) {\n      a = i - 1;\n      b = i;\n    } else {\n      a = i;\n      b = i;\n    }\n\n    var A = tickVals[a].value;\n    var B = tickVals[b].value;\n    var actualDelta = Math.abs(B - A);\n    var delta = definedDelta || actualDelta;\n    var periodLength = 0;\n\n    if (delta >= ONEMINYEAR) {\n      if (actualDelta >= ONEMINYEAR && actualDelta <= ONEMAXYEAR) {\n        periodLength = actualDelta;\n      } else {\n        periodLength = ONEAVGYEAR;\n      }\n    } else if (definedDelta === ONEAVGQUARTER && delta >= ONEMINQUARTER) {\n      if (actualDelta >= ONEMINQUARTER && actualDelta <= ONEMAXQUARTER) {\n        periodLength = actualDelta;\n      } else {\n        periodLength = ONEAVGQUARTER;\n      }\n    } else if (delta >= ONEMINMONTH) {\n      if (actualDelta >= ONEMINMONTH && actualDelta <= ONEMAXMONTH) {\n        periodLength = actualDelta;\n      } else {\n        periodLength = ONEAVGMONTH;\n      }\n    } else if (definedDelta === ONEWEEK && delta >= ONEWEEK) {\n      periodLength = ONEWEEK;\n    } else if (delta >= ONEDAY) {\n      periodLength = ONEDAY;\n    } else if (definedDelta === HALFDAY && delta >= HALFDAY) {\n      periodLength = HALFDAY;\n    } else if (definedDelta === ONEHOUR && delta >= ONEHOUR) {\n      periodLength = ONEHOUR;\n    }\n\n    var inBetween;\n\n    if (periodLength >= actualDelta) {\n      // ensure new label positions remain between ticks\n      periodLength = actualDelta;\n      inBetween = true;\n    }\n\n    var endPeriod = v + periodLength;\n\n    if (ax.rangebreaks && periodLength > 0) {\n      var nAll = 84; // highly divisible 7 * 12\n\n      var n = 0;\n\n      for (var c = 0; c < nAll; c++) {\n        var r = (c + 0.5) / nAll;\n        if (ax.maskBreaks(v * (1 - r) + r * endPeriod) !== BADNUM) n++;\n      }\n\n      periodLength *= n / nAll;\n\n      if (!periodLength) {\n        tickVals[i].drop = true;\n      }\n\n      if (inBetween && actualDelta > ONEWEEK) periodLength = actualDelta; // center monthly & longer periods\n    }\n\n    if (periodLength > 0 || // not instant\n    i === 0 // taking care first tick added\n    ) {\n        tickVals[i].periodX = v + periodLength / 2;\n      }\n  }\n} // calculate the ticks: text, values, positioning\n// if ticks are set to automatic, determine the right values (tick0,dtick)\n// in any case, set tickround to # of digits to round tick labels to,\n// or codes to this effect for log and date scales\n\n\naxes.calcTicks = function calcTicks(ax, opts) {\n  axes.prepTicks(ax, opts);\n  var rng = Lib.simpleMap(ax.range, ax.r2l, undefined, undefined, opts); // now that we've figured out the auto values for formatting\n  // in case we're missing some ticktext, we can break out for array ticks\n\n  if (ax.tickmode === 'array') return arrayTicks(ax); // add a tiny bit so we get ticks which may have rounded out\n\n  var exRng = expandRange(rng);\n  var startTick = exRng[0];\n  var endTick = exRng[1]; // check for reversed axis\n\n  var axrev = rng[1] < rng[0];\n  var minRange = Math.min(rng[0], rng[1]);\n  var maxRange = Math.max(rng[0], rng[1]);\n  var isDLog = ax.type === 'log' && !(isNumeric(ax.dtick) || ax.dtick.charAt(0) === 'L');\n  var isPeriod = ax.ticklabelmode === 'period'; // find the first tick\n\n  ax._tmin = axes.tickFirst(ax, opts); // No visible ticks? Quit.\n  // I've only seen this on category axes with all categories off the edge.\n\n  if (ax._tmin < startTick !== axrev) return []; // return the full set of tick vals\n\n  if (ax.type === 'category' || ax.type === 'multicategory') {\n    endTick = axrev ? Math.max(-0.5, endTick) : Math.min(ax._categories.length - 0.5, endTick);\n  }\n\n  var x = ax._tmin;\n\n  if (ax.rangebreaks && ax._tick0Init !== ax.tick0) {\n    // adjust tick0\n    x = moveOutsideBreak(x, ax);\n\n    if (!axrev) {\n      x = axes.tickIncrement(x, ax.dtick, !axrev, ax.calendar);\n    }\n  }\n\n  if (isPeriod) {\n    // add one item to label period before tick0\n    x = axes.tickIncrement(x, ax.dtick, !axrev, ax.calendar);\n  }\n\n  var maxTicks = Math.max(1000, ax._length || 0);\n  var tickVals = [];\n  var xPrevious = null;\n\n  for (; axrev ? x >= endTick : x <= endTick; x = axes.tickIncrement(x, ax.dtick, axrev, ax.calendar)) {\n    if (ax.rangebreaks) {\n      if (!axrev) {\n        if (x < startTick) continue;\n        if (ax.maskBreaks(x) === BADNUM && moveOutsideBreak(x, ax) >= maxRange) break;\n      }\n    } // prevent infinite loops - no more than one tick per pixel,\n    // and make sure each value is different from the previous\n\n\n    if (tickVals.length > maxTicks || x === xPrevious) break;\n    xPrevious = x;\n    var minor = false;\n\n    if (isDLog && x !== (x | 0)) {\n      minor = true;\n    }\n\n    tickVals.push({\n      minor: minor,\n      value: x\n    });\n  }\n\n  if (isPeriod) positionPeriodTicks(tickVals, ax, ax._definedDelta);\n  var i;\n\n  if (ax.rangebreaks) {\n    var flip = ax._id.charAt(0) === 'y';\n    var fontSize = 1; // one pixel minimum\n\n    if (ax.tickmode === 'auto') {\n      fontSize = ax.tickfont ? ax.tickfont.size : 12;\n    }\n\n    var prevL = NaN;\n\n    for (i = tickVals.length - 1; i > -1; i--) {\n      if (tickVals[i].drop) {\n        tickVals.splice(i, 1);\n        continue;\n      }\n\n      tickVals[i].value = moveOutsideBreak(tickVals[i].value, ax); // avoid overlaps\n\n      var l = ax.c2p(tickVals[i].value);\n\n      if (flip ? prevL > l - fontSize : prevL < l + fontSize) {\n        // ensure one pixel minimum\n        tickVals.splice(axrev ? i + 1 : i, 1);\n      } else {\n        prevL = l;\n      }\n    }\n  } // If same angle over a full circle, the last tick vals is a duplicate.\n  // TODO must do something similar for angular date axes.\n\n\n  if (isAngular(ax) && Math.abs(rng[1] - rng[0]) === 360) {\n    tickVals.pop();\n  } // save the last tick as well as first, so we can\n  // show the exponent only on the last one\n\n\n  ax._tmax = (tickVals[tickVals.length - 1] || {}).value; // for showing the rest of a date when the main tick label is only the\n  // latter part: ax._prevDateHead holds what we showed most recently.\n  // Start with it cleared and mark that we're in calcTicks (ie calculating a\n  // whole string of these so we should care what the previous date head was!)\n\n  ax._prevDateHead = '';\n  ax._inCalcTicks = true;\n  var ticksOut = [];\n  var t, p;\n\n  for (i = 0; i < tickVals.length; i++) {\n    var _minor = tickVals[i].minor;\n    var _value = tickVals[i].value;\n    t = axes.tickText(ax, _value, false, // hover\n    _minor // noSuffixPrefix\n    );\n    p = tickVals[i].periodX;\n\n    if (p !== undefined) {\n      t.periodX = p;\n\n      if (p > maxRange || p < minRange) {\n        // hide label if outside the range\n        if (p > maxRange) t.periodX = maxRange;\n        if (p < minRange) t.periodX = minRange;\n        t.text = ' '; // don't use an empty string here which can confuse automargin (issue 5132)\n\n        ax._prevDateHead = '';\n      }\n    }\n\n    ticksOut.push(t);\n  }\n\n  ax._inCalcTicks = false;\n  return ticksOut;\n};\n\nfunction arrayTicks(ax) {\n  var vals = ax.tickvals;\n  var text = ax.ticktext;\n  var ticksOut = new Array(vals.length);\n  var rng = Lib.simpleMap(ax.range, ax.r2l);\n  var exRng = expandRange(rng);\n  var tickMin = Math.min(exRng[0], exRng[1]);\n  var tickMax = Math.max(exRng[0], exRng[1]);\n  var j = 0; // without a text array, just format the given values as any other ticks\n  // except with more precision to the numbers\n\n  if (!Array.isArray(text)) text = []; // make sure showing ticks doesn't accidentally add new categories\n  // TODO multicategory, if we allow ticktext / tickvals\n\n  var tickVal2l = ax.type === 'category' ? ax.d2l_noadd : ax.d2l; // array ticks on log axes always show the full number\n  // (if no explicit ticktext overrides it)\n\n  if (ax.type === 'log' && String(ax.dtick).charAt(0) !== 'L') {\n    ax.dtick = 'L' + Math.pow(10, Math.floor(Math.min(ax.range[0], ax.range[1])) - 1);\n  }\n\n  for (var i = 0; i < vals.length; i++) {\n    var vali = tickVal2l(vals[i]);\n\n    if (vali > tickMin && vali < tickMax) {\n      if (text[i] === undefined) ticksOut[j] = axes.tickText(ax, vali);else ticksOut[j] = tickTextObj(ax, vali, String(text[i]));\n      j++;\n    }\n  }\n\n  if (j < vals.length) ticksOut.splice(j, vals.length - j);\n\n  if (ax.rangebreaks) {\n    // remove ticks falling inside rangebreaks\n    ticksOut = ticksOut.filter(function (d) {\n      return ax.maskBreaks(d.x) !== BADNUM;\n    });\n  }\n\n  return ticksOut;\n}\n\nvar roundBase10 = [2, 5, 10];\nvar roundBase24 = [1, 2, 3, 6, 12];\nvar roundBase60 = [1, 2, 5, 10, 15, 30]; // 2&3 day ticks are weird, but need something btwn 1&7\n\nvar roundDays = [1, 2, 3, 7, 14]; // approx. tick positions for log axes, showing all (1) and just 1, 2, 5 (2)\n// these don't have to be exact, just close enough to round to the right value\n\nvar roundLog1 = [-0.046, 0, 0.301, 0.477, 0.602, 0.699, 0.778, 0.845, 0.903, 0.954, 1];\nvar roundLog2 = [-0.301, 0, 0.301, 0.699, 1]; // N.B. `thetaunit; 'radians' angular axes must be converted to degrees\n\nvar roundAngles = [15, 30, 45, 90, 180];\n\nfunction roundDTick(roughDTick, base, roundingSet) {\n  return base * Lib.roundUp(roughDTick / base, roundingSet);\n} // autoTicks: calculate best guess at pleasant ticks for this axis\n// inputs:\n//      ax - an axis object\n//      roughDTick - rough tick spacing (to be turned into a nice round number)\n// outputs (into ax):\n//   tick0: starting point for ticks (not necessarily on the graph)\n//      usually 0 for numeric (=10^0=1 for log) or jan 1, 2000 for dates\n//   dtick: the actual, nice round tick spacing, usually a little larger than roughDTick\n//      if the ticks are spaced linearly (linear scale, categories,\n//          log with only full powers, date ticks < month),\n//          this will just be a number\n//      months: M#\n//      years: M# where # is 12*number of years\n//      log with linear ticks: L# where # is the linear tick spacing\n//      log showing powers plus some intermediates:\n//          D1 shows all digits, D2 shows 2 and 5\n\n\naxes.autoTicks = function (ax, roughDTick) {\n  var base;\n\n  function getBase(v) {\n    return Math.pow(v, Math.floor(Math.log(roughDTick) / Math.LN10));\n  }\n\n  if (ax.type === 'date') {\n    ax.tick0 = Lib.dateTick0(ax.calendar, 0); // the criteria below are all based on the rough spacing we calculate\n    // being > half of the final unit - so precalculate twice the rough val\n\n    var roughX2 = 2 * roughDTick;\n\n    if (roughX2 > ONEAVGYEAR) {\n      roughDTick /= ONEAVGYEAR;\n      base = getBase(10);\n      ax.dtick = 'M' + 12 * roundDTick(roughDTick, base, roundBase10);\n    } else if (roughX2 > ONEAVGMONTH) {\n      roughDTick /= ONEAVGMONTH;\n      ax.dtick = 'M' + roundDTick(roughDTick, 1, roundBase24);\n    } else if (roughX2 > ONEDAY) {\n      ax.dtick = roundDTick(roughDTick, ONEDAY, ax._hasDayOfWeekBreaks ? [1, 2, 7, 14] : roundDays); // get week ticks on sunday\n      // this will also move the base tick off 2000-01-01 if dtick is\n      // 2 or 3 days... but that's a weird enough case that we'll ignore it.\n\n      var tickformat = axes.getTickFormat(ax);\n      var isPeriod = ax.ticklabelmode === 'period';\n      if (isPeriod) ax._rawTick0 = ax.tick0;\n\n      if (/%[uVW]/.test(tickformat)) {\n        ax.tick0 = Lib.dateTick0(ax.calendar, 2); // Monday\n      } else {\n        ax.tick0 = Lib.dateTick0(ax.calendar, 1); // Sunday\n      }\n\n      if (isPeriod) ax._dowTick0 = ax.tick0;\n    } else if (roughX2 > ONEHOUR) {\n      ax.dtick = roundDTick(roughDTick, ONEHOUR, roundBase24);\n    } else if (roughX2 > ONEMIN) {\n      ax.dtick = roundDTick(roughDTick, ONEMIN, roundBase60);\n    } else if (roughX2 > ONESEC) {\n      ax.dtick = roundDTick(roughDTick, ONESEC, roundBase60);\n    } else {\n      // milliseconds\n      base = getBase(10);\n      ax.dtick = roundDTick(roughDTick, base, roundBase10);\n    }\n  } else if (ax.type === 'log') {\n    ax.tick0 = 0;\n    var rng = Lib.simpleMap(ax.range, ax.r2l);\n\n    if (roughDTick > 0.7) {\n      // only show powers of 10\n      ax.dtick = Math.ceil(roughDTick);\n    } else if (Math.abs(rng[1] - rng[0]) < 1) {\n      // span is less than one power of 10\n      var nt = 1.5 * Math.abs((rng[1] - rng[0]) / roughDTick); // ticks on a linear scale, labeled fully\n\n      roughDTick = Math.abs(Math.pow(10, rng[1]) - Math.pow(10, rng[0])) / nt;\n      base = getBase(10);\n      ax.dtick = 'L' + roundDTick(roughDTick, base, roundBase10);\n    } else {\n      // include intermediates between powers of 10,\n      // labeled with small digits\n      // ax.dtick = \"D2\" (show 2 and 5) or \"D1\" (show all digits)\n      ax.dtick = roughDTick > 0.3 ? 'D2' : 'D1';\n    }\n  } else if (ax.type === 'category' || ax.type === 'multicategory') {\n    ax.tick0 = 0;\n    ax.dtick = Math.ceil(Math.max(roughDTick, 1));\n  } else if (isAngular(ax)) {\n    ax.tick0 = 0;\n    base = 1;\n    ax.dtick = roundDTick(roughDTick, base, roundAngles);\n  } else {\n    // auto ticks always start at 0\n    ax.tick0 = 0;\n    base = getBase(10);\n    ax.dtick = roundDTick(roughDTick, base, roundBase10);\n  } // prevent infinite loops\n\n\n  if (ax.dtick === 0) ax.dtick = 1; // TODO: this is from log axis histograms with autorange off\n\n  if (!isNumeric(ax.dtick) && typeof ax.dtick !== 'string') {\n    var olddtick = ax.dtick;\n    ax.dtick = 1;\n    throw 'ax.dtick error: ' + String(olddtick);\n  }\n}; // after dtick is already known, find tickround = precision\n// to display in tick labels\n//   for numeric ticks, integer # digits after . to round to\n//   for date ticks, the last date part to show (y,m,d,H,M,S)\n//      or an integer # digits past seconds\n\n\nfunction autoTickRound(ax) {\n  var dtick = ax.dtick;\n  ax._tickexponent = 0;\n\n  if (!isNumeric(dtick) && typeof dtick !== 'string') {\n    dtick = 1;\n  }\n\n  if (ax.type === 'category' || ax.type === 'multicategory') {\n    ax._tickround = null;\n  }\n\n  if (ax.type === 'date') {\n    // If tick0 is unusual, give tickround a bit more information\n    // not necessarily *all* the information in tick0 though, if it's really odd\n    // minimal string length for tick0: 'd' is 10, 'M' is 16, 'S' is 19\n    // take off a leading minus (year < 0) and i (intercalary month) so length is consistent\n    var tick0ms = ax.r2l(ax.tick0);\n    var tick0str = ax.l2r(tick0ms).replace(/(^-|i)/g, '');\n    var tick0len = tick0str.length;\n\n    if (String(dtick).charAt(0) === 'M') {\n      // any tick0 more specific than a year: alway show the full date\n      if (tick0len > 10 || tick0str.substr(5) !== '01-01') ax._tickround = 'd'; // show the month unless ticks are full multiples of a year\n      else ax._tickround = +dtick.substr(1) % 12 === 0 ? 'y' : 'm';\n    } else if (dtick >= ONEDAY && tick0len <= 10 || dtick >= ONEDAY * 15) ax._tickround = 'd';else if (dtick >= ONEMIN && tick0len <= 16 || dtick >= ONEHOUR) ax._tickround = 'M';else if (dtick >= ONESEC && tick0len <= 19 || dtick >= ONEMIN) ax._tickround = 'S';else {\n      // tickround is a number of digits of fractional seconds\n      // of any two adjacent ticks, at least one will have the maximum fractional digits\n      // of all possible ticks - so take the max. length of tick0 and the next one\n      var tick1len = ax.l2r(tick0ms + dtick).replace(/^-/, '').length;\n      ax._tickround = Math.max(tick0len, tick1len) - 20; // We shouldn't get here... but in case there's a situation I'm\n      // not thinking of where tick0str and tick1str are identical or\n      // something, fall back on maximum precision\n\n      if (ax._tickround < 0) ax._tickround = 4;\n    }\n  } else if (isNumeric(dtick) || dtick.charAt(0) === 'L') {\n    // linear or log (except D1, D2)\n    var rng = ax.range.map(ax.r2d || Number);\n    if (!isNumeric(dtick)) dtick = Number(dtick.substr(1)); // 2 digits past largest digit of dtick\n\n    ax._tickround = 2 - Math.floor(Math.log(dtick) / Math.LN10 + 0.01);\n    var maxend = Math.max(Math.abs(rng[0]), Math.abs(rng[1]));\n    var rangeexp = Math.floor(Math.log(maxend) / Math.LN10 + 0.01);\n    var minexponent = ax.minexponent === undefined ? 3 : ax.minexponent;\n\n    if (Math.abs(rangeexp) > minexponent) {\n      if (isSIFormat(ax.exponentformat) && !beyondSI(rangeexp)) {\n        ax._tickexponent = 3 * Math.round((rangeexp - 1) / 3);\n      } else ax._tickexponent = rangeexp;\n    }\n  } else {\n    // D1 or D2 (log)\n    ax._tickround = null;\n  }\n} // months and years don't have constant millisecond values\n// (but a year is always 12 months so we only need months)\n// log-scale ticks are also not consistently spaced, except\n// for pure powers of 10\n// numeric ticks always have constant differences, other datetime ticks\n// can all be calculated as constant number of milliseconds\n\n\naxes.tickIncrement = function (x, dtick, axrev, calendar) {\n  var axSign = axrev ? -1 : 1; // includes linear, all dates smaller than month, and pure 10^n in log\n\n  if (isNumeric(dtick)) return Lib.increment(x, axSign * dtick); // everything else is a string, one character plus a number\n\n  var tType = dtick.charAt(0);\n  var dtSigned = axSign * Number(dtick.substr(1)); // Dates: months (or years - see Lib.incrementMonth)\n\n  if (tType === 'M') return Lib.incrementMonth(x, dtSigned, calendar); // Log scales: Linear, Digits\n\n  if (tType === 'L') return Math.log(Math.pow(10, x) + dtSigned) / Math.LN10; // log10 of 2,5,10, or all digits (logs just have to be\n  // close enough to round)\n\n  if (tType === 'D') {\n    var tickset = dtick === 'D2' ? roundLog2 : roundLog1;\n    var x2 = x + axSign * 0.01;\n    var frac = Lib.roundUp(Lib.mod(x2, 1), tickset, axrev);\n    return Math.floor(x2) + Math.log(d3.round(Math.pow(10, frac), 1)) / Math.LN10;\n  }\n\n  throw 'unrecognized dtick ' + String(dtick);\n}; // calculate the first tick on an axis\n\n\naxes.tickFirst = function (ax, opts) {\n  var r2l = ax.r2l || Number;\n  var rng = Lib.simpleMap(ax.range, r2l, undefined, undefined, opts);\n  var axrev = rng[1] < rng[0];\n  var sRound = axrev ? Math.floor : Math.ceil; // add a tiny extra bit to make sure we get ticks\n  // that may have been rounded out\n\n  var r0 = expandRange(rng)[0];\n  var dtick = ax.dtick;\n  var tick0 = r2l(ax.tick0);\n\n  if (isNumeric(dtick)) {\n    var tmin = sRound((r0 - tick0) / dtick) * dtick + tick0; // make sure no ticks outside the category list\n\n    if (ax.type === 'category' || ax.type === 'multicategory') {\n      tmin = Lib.constrain(tmin, 0, ax._categories.length - 1);\n    }\n\n    return tmin;\n  }\n\n  var tType = dtick.charAt(0);\n  var dtNum = Number(dtick.substr(1)); // Dates: months (or years)\n\n  if (tType === 'M') {\n    var cnt = 0;\n    var t0 = tick0;\n    var t1, mult, newDTick; // This algorithm should work for *any* nonlinear (but close to linear!)\n    // tick spacing. Limit to 10 iterations, for gregorian months it's normally <=3.\n\n    while (cnt < 10) {\n      t1 = axes.tickIncrement(t0, dtick, axrev, ax.calendar);\n\n      if ((t1 - r0) * (t0 - r0) <= 0) {\n        // t1 and t0 are on opposite sides of r0! we've succeeded!\n        if (axrev) return Math.min(t0, t1);\n        return Math.max(t0, t1);\n      }\n\n      mult = (r0 - (t0 + t1) / 2) / (t1 - t0);\n      newDTick = tType + (Math.abs(Math.round(mult)) || 1) * dtNum;\n      t0 = axes.tickIncrement(t0, newDTick, mult < 0 ? !axrev : axrev, ax.calendar);\n      cnt++;\n    }\n\n    Lib.error('tickFirst did not converge', ax);\n    return t0;\n  } else if (tType === 'L') {\n    // Log scales: Linear, Digits\n    return Math.log(sRound((Math.pow(10, r0) - tick0) / dtNum) * dtNum + tick0) / Math.LN10;\n  } else if (tType === 'D') {\n    var tickset = dtick === 'D2' ? roundLog2 : roundLog1;\n    var frac = Lib.roundUp(Lib.mod(r0, 1), tickset, axrev);\n    return Math.floor(r0) + Math.log(d3.round(Math.pow(10, frac), 1)) / Math.LN10;\n  } else throw 'unrecognized dtick ' + String(dtick);\n}; // draw the text for one tick.\n// px,py are the location on gd.paper\n// prefix is there so the x axis ticks can be dropped a line\n// ax is the axis layout, x is the tick value\n// hover is a (truthy) flag for whether to show numbers with a bit\n// more precision for hovertext\n\n\naxes.tickText = function (ax, x, hover, noSuffixPrefix) {\n  var out = tickTextObj(ax, x);\n  var arrayMode = ax.tickmode === 'array';\n  var extraPrecision = hover || arrayMode;\n  var axType = ax.type; // TODO multicategory, if we allow ticktext / tickvals\n\n  var tickVal2l = axType === 'category' ? ax.d2l_noadd : ax.d2l;\n  var i;\n\n  if (arrayMode && Array.isArray(ax.ticktext)) {\n    var rng = Lib.simpleMap(ax.range, ax.r2l);\n    var minDiff = (Math.abs(rng[1] - rng[0]) - (ax._lBreaks || 0)) / 10000;\n\n    for (i = 0; i < ax.ticktext.length; i++) {\n      if (Math.abs(x - tickVal2l(ax.tickvals[i])) < minDiff) break;\n    }\n\n    if (i < ax.ticktext.length) {\n      out.text = String(ax.ticktext[i]);\n      return out;\n    }\n  }\n\n  function isHidden(showAttr) {\n    if (showAttr === undefined) return true;\n    if (hover) return showAttr === 'none';\n    var firstOrLast = {\n      first: ax._tmin,\n      last: ax._tmax\n    }[showAttr];\n    return showAttr !== 'all' && x !== firstOrLast;\n  }\n\n  var hideexp = hover ? 'never' : ax.exponentformat !== 'none' && isHidden(ax.showexponent) ? 'hide' : '';\n  if (axType === 'date') formatDate(ax, out, hover, extraPrecision);else if (axType === 'log') formatLog(ax, out, hover, extraPrecision, hideexp);else if (axType === 'category') formatCategory(ax, out);else if (axType === 'multicategory') formatMultiCategory(ax, out, hover);else if (isAngular(ax)) formatAngle(ax, out, hover, extraPrecision, hideexp);else formatLinear(ax, out, hover, extraPrecision, hideexp); // add prefix and suffix\n\n  if (!noSuffixPrefix) {\n    if (ax.tickprefix && !isHidden(ax.showtickprefix)) out.text = ax.tickprefix + out.text;\n    if (ax.ticksuffix && !isHidden(ax.showticksuffix)) out.text += ax.ticksuffix;\n  } // Setup ticks and grid lines boundaries\n  // at 1/2 a 'category' to the left/bottom\n\n\n  if (ax.tickson === 'boundaries' || ax.showdividers) {\n    var inbounds = function (v) {\n      var p = ax.l2p(v);\n      return p >= 0 && p <= ax._length ? v : null;\n    };\n\n    out.xbnd = [inbounds(out.x - 0.5), inbounds(out.x + ax.dtick - 0.5)];\n  }\n\n  return out;\n};\n/**\n * create text for a hover label on this axis, with special handling of\n * log axes (where negative values can't be displayed but can appear in hover text)\n *\n * @param {object} ax: the axis to format text for\n * @param {number} val: calcdata value to format\n * @param {Optional(number)} val2: a second value to display\n *\n * @returns {string} `val` formatted as a string appropriate to this axis, or\n *     `val` and `val2` as a range (ie '<val> - <val2>') if `val2` is provided and\n *     it's different from `val`.\n */\n\n\naxes.hoverLabelText = function (ax, val, val2) {\n  if (val2 !== BADNUM && val2 !== val) {\n    return axes.hoverLabelText(ax, val) + ' - ' + axes.hoverLabelText(ax, val2);\n  }\n\n  var logOffScale = ax.type === 'log' && val <= 0;\n  var tx = axes.tickText(ax, ax.c2l(logOffScale ? -val : val), 'hover').text;\n\n  if (logOffScale) {\n    return val === 0 ? '0' : MINUS_SIGN + tx;\n  } // TODO: should we do something special if the axis calendar and\n  // the data calendar are different? Somehow display both dates with\n  // their system names? Right now it will just display in the axis calendar\n  // but users could add the other one as text.\n\n\n  return tx;\n};\n\nfunction tickTextObj(ax, x, text) {\n  var tf = ax.tickfont || {};\n  return {\n    x: x,\n    dx: 0,\n    dy: 0,\n    text: text || '',\n    fontSize: tf.size,\n    font: tf.family,\n    fontColor: tf.color\n  };\n}\n\nfunction formatDate(ax, out, hover, extraPrecision) {\n  var tr = ax._tickround;\n  var fmt = hover && ax.hoverformat || axes.getTickFormat(ax);\n\n  if (extraPrecision) {\n    // second or sub-second precision: extra always shows max digits.\n    // for other fields, extra precision just adds one field.\n    if (isNumeric(tr)) tr = 4;else tr = {\n      y: 'm',\n      m: 'd',\n      d: 'M',\n      M: 'S',\n      S: 4\n    }[tr];\n  }\n\n  var dateStr = Lib.formatDate(out.x, fmt, tr, ax._dateFormat, ax.calendar, ax._extraFormat);\n  var headStr;\n  var splitIndex = dateStr.indexOf('\\n');\n\n  if (splitIndex !== -1) {\n    headStr = dateStr.substr(splitIndex + 1);\n    dateStr = dateStr.substr(0, splitIndex);\n  }\n\n  if (extraPrecision) {\n    // if extraPrecision led to trailing zeros, strip them off\n    // actually, this can lead to removing even more zeros than\n    // in the original rounding, but that's fine because in these\n    // contexts uniformity is not so important (if there's even\n    // anything to be uniform with!)\n    // can we remove the whole time part?\n    if (dateStr === '00:00:00' || dateStr === '00:00') {\n      dateStr = headStr;\n      headStr = '';\n    } else if (dateStr.length === 8) {\n      // strip off seconds if they're zero (zero fractional seconds\n      // are already omitted)\n      // but we never remove minutes and leave just hours\n      dateStr = dateStr.replace(/:00$/, '');\n    }\n  }\n\n  if (headStr) {\n    if (hover) {\n      // hover puts it all on one line, so headPart works best up front\n      // except for year headPart: turn this into \"Jan 1, 2000\" etc.\n      if (tr === 'd') dateStr += ', ' + headStr;else dateStr = headStr + (dateStr ? ', ' + dateStr : '');\n    } else {\n      if (!ax._inCalcTicks || ax._prevDateHead !== headStr) {\n        ax._prevDateHead = headStr;\n        dateStr += '<br>' + headStr;\n      } else {\n        var isInside = (ax.ticklabelposition || '').indexOf('inside') !== -1;\n        var side = ax._realSide || ax.side; // polar mocks the side of the radial axis\n\n        if (!isInside && side === 'top' || isInside && side === 'bottom') {\n          dateStr += '<br> ';\n        }\n      }\n    }\n  }\n\n  out.text = dateStr;\n}\n\nfunction formatLog(ax, out, hover, extraPrecision, hideexp) {\n  var dtick = ax.dtick;\n  var x = out.x;\n  var tickformat = ax.tickformat;\n  var dtChar0 = typeof dtick === 'string' && dtick.charAt(0);\n\n  if (hideexp === 'never') {\n    // If this is a hover label, then we must *never* hide the exponent\n    // for the sake of display, which could give the wrong value by\n    // potentially many orders of magnitude. If hideexp was 'never', then\n    // it's now succeeded by preventing the other condition from automating\n    // this choice. Thus we can unset it so that the axis formatting takes\n    // precedence.\n    hideexp = '';\n  }\n\n  if (extraPrecision && dtChar0 !== 'L') {\n    dtick = 'L3';\n    dtChar0 = 'L';\n  }\n\n  if (tickformat || dtChar0 === 'L') {\n    out.text = numFormat(Math.pow(10, x), ax, hideexp, extraPrecision);\n  } else if (isNumeric(dtick) || dtChar0 === 'D' && Lib.mod(x + 0.01, 1) < 0.1) {\n    var p = Math.round(x);\n    var absP = Math.abs(p);\n    var exponentFormat = ax.exponentformat;\n\n    if (exponentFormat === 'power' || isSIFormat(exponentFormat) && beyondSI(p)) {\n      if (p === 0) out.text = 1;else if (p === 1) out.text = '10';else out.text = '10<sup>' + (p > 1 ? '' : MINUS_SIGN) + absP + '</sup>';\n      out.fontSize *= 1.25;\n    } else if ((exponentFormat === 'e' || exponentFormat === 'E') && absP > 2) {\n      out.text = '1' + exponentFormat + (p > 0 ? '+' : MINUS_SIGN) + absP;\n    } else {\n      out.text = numFormat(Math.pow(10, x), ax, '', 'fakehover');\n\n      if (dtick === 'D1' && ax._id.charAt(0) === 'y') {\n        out.dy -= out.fontSize / 6;\n      }\n    }\n  } else if (dtChar0 === 'D') {\n    out.text = String(Math.round(Math.pow(10, Lib.mod(x, 1))));\n    out.fontSize *= 0.75;\n  } else throw 'unrecognized dtick ' + String(dtick); // if 9's are printed on log scale, move the 10's away a bit\n\n\n  if (ax.dtick === 'D1') {\n    var firstChar = String(out.text).charAt(0);\n\n    if (firstChar === '0' || firstChar === '1') {\n      if (ax._id.charAt(0) === 'y') {\n        out.dx -= out.fontSize / 4;\n      } else {\n        out.dy += out.fontSize / 2;\n        out.dx += (ax.range[1] > ax.range[0] ? 1 : -1) * out.fontSize * (x < 0 ? 0.5 : 0.25);\n      }\n    }\n  }\n}\n\nfunction formatCategory(ax, out) {\n  var tt = ax._categories[Math.round(out.x)];\n\n  if (tt === undefined) tt = '';\n  out.text = String(tt);\n}\n\nfunction formatMultiCategory(ax, out, hover) {\n  var v = Math.round(out.x);\n  var cats = ax._categories[v] || [];\n  var tt = cats[1] === undefined ? '' : String(cats[1]);\n  var tt2 = cats[0] === undefined ? '' : String(cats[0]);\n\n  if (hover) {\n    // TODO is this what we want?\n    out.text = tt2 + ' - ' + tt;\n  } else {\n    // setup for secondary labels\n    out.text = tt;\n    out.text2 = tt2;\n  }\n}\n\nfunction formatLinear(ax, out, hover, extraPrecision, hideexp) {\n  if (hideexp === 'never') {\n    // If this is a hover label, then we must *never* hide the exponent\n    // for the sake of display, which could give the wrong value by\n    // potentially many orders of magnitude. If hideexp was 'never', then\n    // it's now succeeded by preventing the other condition from automating\n    // this choice. Thus we can unset it so that the axis formatting takes\n    // precedence.\n    hideexp = '';\n  } else if (ax.showexponent === 'all' && Math.abs(out.x / ax.dtick) < 1e-6) {\n    // don't add an exponent to zero if we're showing all exponents\n    // so the only reason you'd show an exponent on zero is if it's the\n    // ONLY tick to get an exponent (first or last)\n    hideexp = 'hide';\n  }\n\n  out.text = numFormat(out.x, ax, hideexp, extraPrecision);\n}\n\nfunction formatAngle(ax, out, hover, extraPrecision, hideexp) {\n  if (ax.thetaunit === 'radians' && !hover) {\n    var num = out.x / 180;\n\n    if (num === 0) {\n      out.text = '0';\n    } else {\n      var frac = num2frac(num);\n\n      if (frac[1] >= 100) {\n        out.text = numFormat(Lib.deg2rad(out.x), ax, hideexp, extraPrecision);\n      } else {\n        var isNeg = out.x < 0;\n\n        if (frac[1] === 1) {\n          if (frac[0] === 1) out.text = 'π';else out.text = frac[0] + 'π';\n        } else {\n          out.text = ['<sup>', frac[0], '</sup>', '⁄', '<sub>', frac[1], '</sub>', 'π'].join('');\n        }\n\n        if (isNeg) out.text = MINUS_SIGN + out.text;\n      }\n    }\n  } else {\n    out.text = numFormat(out.x, ax, hideexp, extraPrecision);\n  }\n} // inspired by\n// https://github.com/yisibl/num2fraction/blob/master/index.js\n\n\nfunction num2frac(num) {\n  function almostEq(a, b) {\n    return Math.abs(a - b) <= 1e-6;\n  }\n\n  function findGCD(a, b) {\n    return almostEq(b, 0) ? a : findGCD(b, a % b);\n  }\n\n  function findPrecision(n) {\n    var e = 1;\n\n    while (!almostEq(Math.round(n * e) / e, n)) {\n      e *= 10;\n    }\n\n    return e;\n  }\n\n  var precision = findPrecision(num);\n  var number = num * precision;\n  var gcd = Math.abs(findGCD(number, precision));\n  return [// numerator\n  Math.round(number / gcd), // denominator\n  Math.round(precision / gcd)];\n} // format a number (tick value) according to the axis settings\n// new, more reliable procedure than d3.round or similar:\n// add half the rounding increment, then stringify and truncate\n// also automatically switch to sci. notation\n\n\nvar SIPREFIXES = ['f', 'p', 'n', 'μ', 'm', '', 'k', 'M', 'G', 'T'];\n\nfunction isSIFormat(exponentFormat) {\n  return exponentFormat === 'SI' || exponentFormat === 'B';\n} // are we beyond the range of common SI prefixes?\n// 10^-16 -> 1x10^-16\n// 10^-15 -> 1f\n// ...\n// 10^14 -> 100T\n// 10^15 -> 1x10^15\n// 10^16 -> 1x10^16\n\n\nfunction beyondSI(exponent) {\n  return exponent > 14 || exponent < -15;\n}\n\nfunction numFormat(v, ax, fmtoverride, hover) {\n  var isNeg = v < 0; // max number of digits past decimal point to show\n\n  var tickRound = ax._tickround;\n  var exponentFormat = fmtoverride || ax.exponentformat || 'B';\n  var exponent = ax._tickexponent;\n  var tickformat = axes.getTickFormat(ax);\n  var separatethousands = ax.separatethousands; // special case for hover: set exponent just for this value, and\n  // add a couple more digits of precision over tick labels\n\n  if (hover) {\n    // make a dummy axis obj to get the auto rounding and exponent\n    var ah = {\n      exponentformat: exponentFormat,\n      minexponent: ax.minexponent,\n      dtick: ax.showexponent === 'none' ? ax.dtick : isNumeric(v) ? Math.abs(v) || 1 : 1,\n      // if not showing any exponents, don't change the exponent\n      // from what we calculate\n      range: ax.showexponent === 'none' ? ax.range.map(ax.r2d) : [0, v || 1]\n    };\n    autoTickRound(ah);\n    tickRound = (Number(ah._tickround) || 0) + 4;\n    exponent = ah._tickexponent;\n    if (ax.hoverformat) tickformat = ax.hoverformat;\n  }\n\n  if (tickformat) return ax._numFormat(tickformat)(v).replace(/-/g, MINUS_SIGN); // 'epsilon' - rounding increment\n\n  var e = Math.pow(10, -tickRound) / 2; // exponentFormat codes:\n  // 'e' (1.2e+6, default)\n  // 'E' (1.2E+6)\n  // 'SI' (1.2M)\n  // 'B' (same as SI except 10^9=B not G)\n  // 'none' (1200000)\n  // 'power' (1.2x10^6)\n  // 'hide' (1.2, use 3rd argument=='hide' to eg\n  //      only show exponent on last tick)\n\n  if (exponentFormat === 'none') exponent = 0; // take the sign out, put it back manually at the end\n  // - makes cases easier\n\n  v = Math.abs(v);\n\n  if (v < e) {\n    // 0 is just 0, but may get exponent if it's the last tick\n    v = '0';\n    isNeg = false;\n  } else {\n    v += e; // take out a common exponent, if any\n\n    if (exponent) {\n      v *= Math.pow(10, -exponent);\n      tickRound += exponent;\n    } // round the mantissa\n\n\n    if (tickRound === 0) v = String(Math.floor(v));else if (tickRound < 0) {\n      v = String(Math.round(v));\n      v = v.substr(0, v.length + tickRound);\n\n      for (var i = tickRound; i < 0; i++) v += '0';\n    } else {\n      v = String(v);\n      var dp = v.indexOf('.') + 1;\n      if (dp) v = v.substr(0, dp + tickRound).replace(/\\.?0+$/, '');\n    } // insert appropriate decimal point and thousands separator\n\n    v = Lib.numSeparate(v, ax._separators, separatethousands);\n  } // add exponent\n\n\n  if (exponent && exponentFormat !== 'hide') {\n    if (isSIFormat(exponentFormat) && beyondSI(exponent)) exponentFormat = 'power';\n    var signedExponent;\n    if (exponent < 0) signedExponent = MINUS_SIGN + -exponent;else if (exponentFormat !== 'power') signedExponent = '+' + exponent;else signedExponent = String(exponent);\n\n    if (exponentFormat === 'e' || exponentFormat === 'E') {\n      v += exponentFormat + signedExponent;\n    } else if (exponentFormat === 'power') {\n      v += '×10<sup>' + signedExponent + '</sup>';\n    } else if (exponentFormat === 'B' && exponent === 9) {\n      v += 'B';\n    } else if (isSIFormat(exponentFormat)) {\n      v += SIPREFIXES[exponent / 3 + 5];\n    }\n  } // put sign back in and return\n  // replace standard minus character (which is technically a hyphen)\n  // with a true minus sign\n\n\n  if (isNeg) return MINUS_SIGN + v;\n  return v;\n}\n\naxes.getTickFormat = function (ax) {\n  var i;\n\n  function convertToMs(dtick) {\n    return typeof dtick !== 'string' ? dtick : Number(dtick.replace('M', '')) * ONEAVGMONTH;\n  }\n\n  function compareLogTicks(left, right) {\n    var priority = ['L', 'D'];\n\n    if (typeof left === typeof right) {\n      if (typeof left === 'number') {\n        return left - right;\n      } else {\n        var leftPriority = priority.indexOf(left.charAt(0));\n        var rightPriority = priority.indexOf(right.charAt(0));\n\n        if (leftPriority === rightPriority) {\n          return Number(left.replace(/(L|D)/g, '')) - Number(right.replace(/(L|D)/g, ''));\n        } else {\n          return leftPriority - rightPriority;\n        }\n      }\n    } else {\n      return typeof left === 'number' ? 1 : -1;\n    }\n  }\n\n  function isProperStop(dtick, range, convert) {\n    var convertFn = convert || function (x) {\n      return x;\n    };\n\n    var leftDtick = range[0];\n    var rightDtick = range[1];\n    return (!leftDtick && typeof leftDtick !== 'number' || convertFn(leftDtick) <= convertFn(dtick)) && (!rightDtick && typeof rightDtick !== 'number' || convertFn(rightDtick) >= convertFn(dtick));\n  }\n\n  function isProperLogStop(dtick, range) {\n    var isLeftDtickNull = range[0] === null;\n    var isRightDtickNull = range[1] === null;\n    var isDtickInRangeLeft = compareLogTicks(dtick, range[0]) >= 0;\n    var isDtickInRangeRight = compareLogTicks(dtick, range[1]) <= 0;\n    return (isLeftDtickNull || isDtickInRangeLeft) && (isRightDtickNull || isDtickInRangeRight);\n  }\n\n  var tickstop, stopi;\n\n  if (ax.tickformatstops && ax.tickformatstops.length > 0) {\n    switch (ax.type) {\n      case 'date':\n      case 'linear':\n        {\n          for (i = 0; i < ax.tickformatstops.length; i++) {\n            stopi = ax.tickformatstops[i];\n\n            if (stopi.enabled && isProperStop(ax.dtick, stopi.dtickrange, convertToMs)) {\n              tickstop = stopi;\n              break;\n            }\n          }\n\n          break;\n        }\n\n      case 'log':\n        {\n          for (i = 0; i < ax.tickformatstops.length; i++) {\n            stopi = ax.tickformatstops[i];\n\n            if (stopi.enabled && isProperLogStop(ax.dtick, stopi.dtickrange)) {\n              tickstop = stopi;\n              break;\n            }\n          }\n\n          break;\n        }\n\n      default:\n    }\n  }\n\n  return tickstop ? tickstop.value : ax.tickformat;\n}; // getSubplots - extract all subplot IDs we need\n// as an array of items like 'xy', 'x2y', 'x2y2'...\n// sorted by x (x,x2,x3...) then y\n// optionally restrict to only subplots containing axis object ax\n//\n// NOTE: this is currently only used OUTSIDE plotly.js (toolpanel, webapp)\n// ideally we get rid of it there (or just copy this there) and remove it here\n\n\naxes.getSubplots = function (gd, ax) {\n  var subplotObj = gd._fullLayout._subplots;\n  var allSubplots = subplotObj.cartesian.concat(subplotObj.gl2d || []);\n  var out = ax ? axes.findSubplotsWithAxis(allSubplots, ax) : allSubplots;\n  out.sort(function (a, b) {\n    var aParts = a.substr(1).split('y');\n    var bParts = b.substr(1).split('y');\n    if (aParts[0] === bParts[0]) return +aParts[1] - +bParts[1];\n    return +aParts[0] - +bParts[0];\n  });\n  return out;\n}; // find all subplots with axis 'ax'\n// NOTE: this is only used in axes.getSubplots (only used outside plotly.js) and\n// gl2d/convert (where it restricts axis subplots to only those with gl2d)\n\n\naxes.findSubplotsWithAxis = function (subplots, ax) {\n  var axMatch = new RegExp(ax._id.charAt(0) === 'x' ? '^' + ax._id + 'y' : ax._id + '$');\n  var subplotsWithAx = [];\n\n  for (var i = 0; i < subplots.length; i++) {\n    var sp = subplots[i];\n    if (axMatch.test(sp)) subplotsWithAx.push(sp);\n  }\n\n  return subplotsWithAx;\n}; // makeClipPaths: prepare clipPaths for all single axes and all possible xy pairings\n\n\naxes.makeClipPaths = function (gd) {\n  var fullLayout = gd._fullLayout; // for more info: https://github.com/plotly/plotly.js/issues/2595\n\n  if (fullLayout._hasOnlyLargeSploms) return;\n  var fullWidth = {\n    _offset: 0,\n    _length: fullLayout.width,\n    _id: ''\n  };\n  var fullHeight = {\n    _offset: 0,\n    _length: fullLayout.height,\n    _id: ''\n  };\n  var xaList = axes.list(gd, 'x', true);\n  var yaList = axes.list(gd, 'y', true);\n  var clipList = [];\n  var i, j;\n\n  for (i = 0; i < xaList.length; i++) {\n    clipList.push({\n      x: xaList[i],\n      y: fullHeight\n    });\n\n    for (j = 0; j < yaList.length; j++) {\n      if (i === 0) clipList.push({\n        x: fullWidth,\n        y: yaList[j]\n      });\n      clipList.push({\n        x: xaList[i],\n        y: yaList[j]\n      });\n    }\n  } // selectors don't work right with camelCase tags,\n  // have to use class instead\n  // https://groups.google.com/forum/#!topic/d3-js/6EpAzQ2gU9I\n\n\n  var axClips = fullLayout._clips.selectAll('.axesclip').data(clipList, function (d) {\n    return d.x._id + d.y._id;\n  });\n\n  axClips.enter().append('clipPath').classed('axesclip', true).attr('id', function (d) {\n    return 'clip' + fullLayout._uid + d.x._id + d.y._id;\n  }).append('rect');\n  axClips.exit().remove();\n  axClips.each(function (d) {\n    d3.select(this).select('rect').attr({\n      x: d.x._offset || 0,\n      y: d.y._offset || 0,\n      width: d.x._length || 1,\n      height: d.y._length || 1\n    });\n  });\n};\n/**\n * Main multi-axis drawing routine!\n *\n * @param {DOM element} gd : graph div\n * @param {string or array of strings} arg : polymorphic argument\n * @param {object} opts:\n * - @param {boolean} skipTitle : optional flag to skip axis title draw/update\n *\n * Signature 1: Axes.draw(gd, 'redraw')\n *   use this to clear and redraw all axes on graph\n *\n * Signature 2: Axes.draw(gd, '')\n *   use this to draw all axes on graph w/o the selectAll().remove()\n *   of the 'redraw' signature\n *\n * Signature 3: Axes.draw(gd, [axId, axId2, ...])\n *   where the items are axis id string,\n *   use this to update multiple axes in one call\n *\n * N.B draw updates:\n * - ax._r (stored range for use by zoom/pan)\n * - ax._rl (stored linearized range for use by zoom/pan)\n */\n\n\naxes.draw = function (gd, arg, opts) {\n  var fullLayout = gd._fullLayout;\n\n  if (arg === 'redraw') {\n    fullLayout._paper.selectAll('g.subplot').each(function (d) {\n      var id = d[0];\n      var plotinfo = fullLayout._plots[id];\n\n      if (plotinfo) {\n        var xa = plotinfo.xaxis;\n        var ya = plotinfo.yaxis;\n        plotinfo.xaxislayer.selectAll('.' + xa._id + 'tick').remove();\n        plotinfo.yaxislayer.selectAll('.' + ya._id + 'tick').remove();\n        plotinfo.xaxislayer.selectAll('.' + xa._id + 'tick2').remove();\n        plotinfo.yaxislayer.selectAll('.' + ya._id + 'tick2').remove();\n        plotinfo.xaxislayer.selectAll('.' + xa._id + 'divider').remove();\n        plotinfo.yaxislayer.selectAll('.' + ya._id + 'divider').remove();\n        if (plotinfo.gridlayer) plotinfo.gridlayer.selectAll('path').remove();\n        if (plotinfo.zerolinelayer) plotinfo.zerolinelayer.selectAll('path').remove();\n\n        fullLayout._infolayer.select('.g-' + xa._id + 'title').remove();\n\n        fullLayout._infolayer.select('.g-' + ya._id + 'title').remove();\n      }\n    });\n  }\n\n  var axList = !arg || arg === 'redraw' ? axes.listIds(gd) : arg;\n  return Lib.syncOrAsync(axList.map(function (axId) {\n    return function () {\n      if (!axId) return;\n      var ax = axes.getFromId(gd, axId);\n      var axDone = axes.drawOne(gd, ax, opts);\n      ax._r = ax.range.slice();\n      ax._rl = Lib.simpleMap(ax._r, ax.r2l);\n      return axDone;\n    };\n  }));\n};\n/**\n * Draw one cartesian axis\n *\n * @param {DOM element} gd\n * @param {object} ax (full) axis object\n * @param {object} opts\n * - @param {boolean} skipTitle (set to true to skip axis title draw call)\n *\n * Depends on:\n * - ax._mainSubplot (from linkSubplots)\n * - ax._mainAxis\n * - ax._anchorAxis\n * - ax._subplotsWith\n * - ax._counterDomainMin, ax._counterDomainMax (optionally, from linkSubplots)\n * - ax._tickAngles (on redraw only, old value relinked during supplyDefaults)\n * - ax._mainLinePosition (from lsInner)\n * - ax._mainMirrorPosition\n * - ax._linepositions\n *\n * Fills in:\n * - ax._vals:\n * - ax._gridVals:\n * - ax._selections:\n * - ax._tickAngles:\n * - ax._depth (when required only):\n * - and calls ax.setScale\n */\n\n\naxes.drawOne = function (gd, ax, opts) {\n  opts = opts || {};\n  var i, sp, plotinfo;\n  ax.setScale();\n  var fullLayout = gd._fullLayout;\n  var axId = ax._id;\n  var axLetter = axId.charAt(0);\n  var counterLetter = axes.counterLetter(axId);\n  var mainPlotinfo = fullLayout._plots[ax._mainSubplot]; // this happens when updating matched group with 'missing' axes\n\n  if (!mainPlotinfo) return;\n  var mainAxLayer = mainPlotinfo[axLetter + 'axislayer'];\n  var mainLinePosition = ax._mainLinePosition;\n  var mainMirrorPosition = ax._mainMirrorPosition;\n  var vals = ax._vals = axes.calcTicks(ax); // Add a couple of axis properties that should cause us to recreate\n  // elements. Used in d3 data function.\n\n  var axInfo = [ax.mirror, mainLinePosition, mainMirrorPosition].join('_');\n\n  for (i = 0; i < vals.length; i++) {\n    vals[i].axInfo = axInfo;\n  } // stash selections to avoid DOM queries e.g.\n  // - stash tickLabels selection, so that drawTitle can use it to scoot title\n\n\n  ax._selections = {}; // stash tick angle (including the computed 'auto' values) per tick-label class\n  // linkup 'previous' tick angles on redraws\n\n  if (ax._tickAngles) ax._prevTickAngles = ax._tickAngles;\n  ax._tickAngles = {}; // measure [in px] between axis position and outward-most part of bounding box\n  // (touching either the tick label or ticks)\n  // depth can be expansive to compute, so we only do so when required\n\n  ax._depth = null; // calcLabelLevelBbox can be expensive,\n  // so make sure to not call it twice during the same Axes.drawOne call\n  // by stashing label-level bounding boxes per tick-label class\n\n  var llbboxes = {};\n\n  function getLabelLevelBbox(suffix) {\n    var cls = axId + (suffix || 'tick');\n    if (!llbboxes[cls]) llbboxes[cls] = calcLabelLevelBbox(ax, cls);\n    return llbboxes[cls];\n  }\n\n  if (!ax.visible) return;\n  var transTickFn = axes.makeTransTickFn(ax);\n  var transTickLabelFn = axes.makeTransTickLabelFn(ax);\n  var tickVals; // We remove zero lines, grid lines, and inside ticks if they're within 1px of the end\n  // The key case here is removing zero lines when the axis bound is zero\n\n  var valsClipped;\n  var insideTicks = ax.ticks === 'inside';\n  var outsideTicks = ax.ticks === 'outside';\n\n  if (ax.tickson === 'boundaries') {\n    var boundaryVals = getBoundaryVals(ax, vals);\n    valsClipped = axes.clipEnds(ax, boundaryVals);\n    tickVals = insideTicks ? valsClipped : boundaryVals;\n  } else {\n    valsClipped = axes.clipEnds(ax, vals);\n    tickVals = insideTicks && ax.ticklabelmode !== 'period' ? valsClipped : vals;\n  }\n\n  var gridVals = ax._gridVals = valsClipped;\n  var dividerVals = getDividerVals(ax, vals);\n\n  if (!fullLayout._hasOnlyLargeSploms) {\n    var subplotsWithAx = ax._subplotsWith; // keep track of which subplots (by main counter axis) we've already\n    // drawn grids for, so we don't overdraw overlaying subplots\n\n    var finishedGrids = {};\n\n    for (i = 0; i < subplotsWithAx.length; i++) {\n      sp = subplotsWithAx[i];\n      plotinfo = fullLayout._plots[sp];\n      var counterAxis = plotinfo[counterLetter + 'axis'];\n      var mainCounterID = counterAxis._mainAxis._id;\n      if (finishedGrids[mainCounterID]) continue;\n      finishedGrids[mainCounterID] = 1;\n      var gridPath = axLetter === 'x' ? 'M0,' + counterAxis._offset + 'v' + counterAxis._length : 'M' + counterAxis._offset + ',0h' + counterAxis._length;\n      axes.drawGrid(gd, ax, {\n        vals: gridVals,\n        counterAxis: counterAxis,\n        layer: plotinfo.gridlayer.select('.' + axId),\n        path: gridPath,\n        transFn: transTickFn\n      });\n      axes.drawZeroLine(gd, ax, {\n        counterAxis: counterAxis,\n        layer: plotinfo.zerolinelayer,\n        path: gridPath,\n        transFn: transTickFn\n      });\n    }\n  }\n\n  var tickSigns = axes.getTickSigns(ax);\n  var tickSubplots = [];\n\n  if (ax.ticks) {\n    var mainTickPath = axes.makeTickPath(ax, mainLinePosition, tickSigns[2]);\n    var mirrorTickPath;\n    var fullTickPath;\n\n    if (ax._anchorAxis && ax.mirror && ax.mirror !== true) {\n      mirrorTickPath = axes.makeTickPath(ax, mainMirrorPosition, tickSigns[3]);\n      fullTickPath = mainTickPath + mirrorTickPath;\n    } else {\n      mirrorTickPath = '';\n      fullTickPath = mainTickPath;\n    }\n\n    var tickPath;\n\n    if (ax.showdividers && outsideTicks && ax.tickson === 'boundaries') {\n      var dividerLookup = {};\n\n      for (i = 0; i < dividerVals.length; i++) {\n        dividerLookup[dividerVals[i].x] = 1;\n      }\n\n      tickPath = function (d) {\n        return dividerLookup[d.x] ? mirrorTickPath : fullTickPath;\n      };\n    } else {\n      tickPath = fullTickPath;\n    }\n\n    axes.drawTicks(gd, ax, {\n      vals: tickVals,\n      layer: mainAxLayer,\n      path: tickPath,\n      transFn: transTickFn\n    });\n\n    if (ax.mirror === 'allticks') {\n      tickSubplots = Object.keys(ax._linepositions || {});\n    }\n  }\n\n  for (i = 0; i < tickSubplots.length; i++) {\n    sp = tickSubplots[i];\n    plotinfo = fullLayout._plots[sp]; // [bottom or left, top or right], free and main are handled above\n\n    var linepositions = ax._linepositions[sp] || [];\n    var spTickPath = axes.makeTickPath(ax, linepositions[0], tickSigns[0]) + axes.makeTickPath(ax, linepositions[1], tickSigns[1]);\n    axes.drawTicks(gd, ax, {\n      vals: tickVals,\n      layer: plotinfo[axLetter + 'axislayer'],\n      path: spTickPath,\n      transFn: transTickFn\n    });\n  }\n\n  var seq = []; // tick labels - for now just the main labels.\n  // TODO: mirror labels, esp for subplots\n\n  seq.push(function () {\n    return axes.drawLabels(gd, ax, {\n      vals: vals,\n      layer: mainAxLayer,\n      transFn: transTickLabelFn,\n      labelFns: axes.makeLabelFns(ax, mainLinePosition)\n    });\n  });\n\n  if (ax.type === 'multicategory') {\n    var pad = {\n      x: 2,\n      y: 10\n    }[axLetter];\n    seq.push(function () {\n      var bboxKey = {\n        x: 'height',\n        y: 'width'\n      }[axLetter];\n      var standoff = getLabelLevelBbox()[bboxKey] + pad + (ax._tickAngles[axId + 'tick'] ? ax.tickfont.size * LINE_SPACING : 0);\n      return axes.drawLabels(gd, ax, {\n        vals: getSecondaryLabelVals(ax, vals),\n        layer: mainAxLayer,\n        cls: axId + 'tick2',\n        repositionOnUpdate: true,\n        secondary: true,\n        transFn: transTickFn,\n        labelFns: axes.makeLabelFns(ax, mainLinePosition + standoff * tickSigns[4])\n      });\n    });\n    seq.push(function () {\n      ax._depth = tickSigns[4] * (getLabelLevelBbox('tick2')[ax.side] - mainLinePosition);\n      return drawDividers(gd, ax, {\n        vals: dividerVals,\n        layer: mainAxLayer,\n        path: axes.makeTickPath(ax, mainLinePosition, tickSigns[4], ax._depth),\n        transFn: transTickFn\n      });\n    });\n  } else if (ax.title.hasOwnProperty('standoff')) {\n    seq.push(function () {\n      ax._depth = tickSigns[4] * (getLabelLevelBbox()[ax.side] - mainLinePosition);\n    });\n  }\n\n  var hasRangeSlider = Registry.getComponentMethod('rangeslider', 'isVisible')(ax);\n  seq.push(function () {\n    var s = ax.side.charAt(0);\n    var sMirror = OPPOSITE_SIDE[ax.side].charAt(0);\n    var pos = axes.getPxPosition(gd, ax);\n    var outsideTickLen = outsideTicks ? ax.ticklen : 0;\n    var llbbox;\n    var push;\n    var mirrorPush;\n    var rangeSliderPush;\n\n    if (ax.automargin || hasRangeSlider) {\n      if (ax.type === 'multicategory') {\n        llbbox = getLabelLevelBbox('tick2');\n      } else {\n        llbbox = getLabelLevelBbox();\n\n        if (axLetter === 'x' && s === 'b') {\n          ax._depth = Math.max(llbbox.width > 0 ? llbbox.bottom - pos : 0, outsideTickLen);\n        }\n      }\n    }\n\n    if (ax.automargin) {\n      push = {\n        x: 0,\n        y: 0,\n        r: 0,\n        l: 0,\n        t: 0,\n        b: 0\n      };\n      var domainIndices = [0, 1];\n\n      if (axLetter === 'x') {\n        if (s === 'b') {\n          push[s] = ax._depth;\n        } else {\n          push[s] = ax._depth = Math.max(llbbox.width > 0 ? pos - llbbox.top : 0, outsideTickLen);\n          domainIndices.reverse();\n        }\n\n        if (llbbox.width > 0) {\n          var rExtra = llbbox.right - (ax._offset + ax._length);\n\n          if (rExtra > 0) {\n            push.xr = 1;\n            push.r = rExtra;\n          }\n\n          var lExtra = ax._offset - llbbox.left;\n\n          if (lExtra > 0) {\n            push.xl = 0;\n            push.l = lExtra;\n          }\n        }\n      } else {\n        if (s === 'l') {\n          push[s] = ax._depth = Math.max(llbbox.height > 0 ? pos - llbbox.left : 0, outsideTickLen);\n        } else {\n          push[s] = ax._depth = Math.max(llbbox.height > 0 ? llbbox.right - pos : 0, outsideTickLen);\n          domainIndices.reverse();\n        }\n\n        if (llbbox.height > 0) {\n          var bExtra = llbbox.bottom - (ax._offset + ax._length);\n\n          if (bExtra > 0) {\n            push.yb = 0;\n            push.b = bExtra;\n          }\n\n          var tExtra = ax._offset - llbbox.top;\n\n          if (tExtra > 0) {\n            push.yt = 1;\n            push.t = tExtra;\n          }\n        }\n      }\n\n      push[counterLetter] = ax.anchor === 'free' ? ax.position : ax._anchorAxis.domain[domainIndices[0]];\n\n      if (ax.title.text !== fullLayout._dfltTitle[axLetter]) {\n        push[s] += approxTitleDepth(ax) + (ax.title.standoff || 0);\n      }\n\n      if (ax.mirror && ax.anchor !== 'free') {\n        mirrorPush = {\n          x: 0,\n          y: 0,\n          r: 0,\n          l: 0,\n          t: 0,\n          b: 0\n        };\n        mirrorPush[sMirror] = ax.linewidth;\n        if (ax.mirror && ax.mirror !== true) mirrorPush[sMirror] += outsideTickLen;\n\n        if (ax.mirror === true || ax.mirror === 'ticks') {\n          mirrorPush[counterLetter] = ax._anchorAxis.domain[domainIndices[1]];\n        } else if (ax.mirror === 'all' || ax.mirror === 'allticks') {\n          mirrorPush[counterLetter] = [ax._counterDomainMin, ax._counterDomainMax][domainIndices[1]];\n        }\n      }\n    }\n\n    if (hasRangeSlider) {\n      rangeSliderPush = Registry.getComponentMethod('rangeslider', 'autoMarginOpts')(gd, ax);\n    }\n\n    Plots.autoMargin(gd, axAutoMarginID(ax), push);\n    Plots.autoMargin(gd, axMirrorAutoMarginID(ax), mirrorPush);\n    Plots.autoMargin(gd, rangeSliderAutoMarginID(ax), rangeSliderPush);\n  });\n\n  if (!opts.skipTitle && !(hasRangeSlider && ax.side === 'bottom')) {\n    seq.push(function () {\n      return drawTitle(gd, ax);\n    });\n  }\n\n  return Lib.syncOrAsync(seq);\n};\n\nfunction getBoundaryVals(ax, vals) {\n  var out = [];\n  var i; // boundaryVals are never used for labels;\n  // no need to worry about the other tickTextObj keys\n\n  var _push = function (d, bndIndex) {\n    var xb = d.xbnd[bndIndex];\n\n    if (xb !== null) {\n      out.push(Lib.extendFlat({}, d, {\n        x: xb\n      }));\n    }\n  };\n\n  if (vals.length) {\n    for (i = 0; i < vals.length; i++) {\n      _push(vals[i], 0);\n    }\n\n    _push(vals[i - 1], 1);\n  }\n\n  return out;\n}\n\nfunction getSecondaryLabelVals(ax, vals) {\n  var out = [];\n  var lookup = {};\n\n  for (var i = 0; i < vals.length; i++) {\n    var d = vals[i];\n\n    if (lookup[d.text2]) {\n      lookup[d.text2].push(d.x);\n    } else {\n      lookup[d.text2] = [d.x];\n    }\n  }\n\n  for (var k in lookup) {\n    out.push(tickTextObj(ax, Lib.interp(lookup[k], 0.5), k));\n  }\n\n  return out;\n}\n\nfunction getDividerVals(ax, vals) {\n  var out = [];\n  var i, current;\n  var reversed = vals.length && vals[vals.length - 1].x < vals[0].x; // never used for labels;\n  // no need to worry about the other tickTextObj keys\n\n  var _push = function (d, bndIndex) {\n    var xb = d.xbnd[bndIndex];\n\n    if (xb !== null) {\n      out.push(Lib.extendFlat({}, d, {\n        x: xb\n      }));\n    }\n  };\n\n  if (ax.showdividers && vals.length) {\n    for (i = 0; i < vals.length; i++) {\n      var d = vals[i];\n\n      if (d.text2 !== current) {\n        _push(d, reversed ? 1 : 0);\n      }\n\n      current = d.text2;\n    }\n\n    _push(vals[i - 1], reversed ? 0 : 1);\n  }\n\n  return out;\n}\n\nfunction calcLabelLevelBbox(ax, cls) {\n  var top, bottom;\n  var left, right;\n\n  if (ax._selections[cls].size()) {\n    top = Infinity;\n    bottom = -Infinity;\n    left = Infinity;\n    right = -Infinity;\n\n    ax._selections[cls].each(function () {\n      var thisLabel = selectTickLabel(this); // Use parent node <g.(x|y)tick>, to make Drawing.bBox\n      // retrieve a bbox computed with transform info\n      //\n      // To improve perf, it would be nice to use `thisLabel.node()`\n      // (like in fixLabelOverlaps) instead and use Axes.getPxPosition\n      // together with the makeLabelFns outputs and `tickangle`\n      // to compute one bbox per (tick value x tick style)\n\n      var bb = Drawing.bBox(thisLabel.node().parentNode);\n      top = Math.min(top, bb.top);\n      bottom = Math.max(bottom, bb.bottom);\n      left = Math.min(left, bb.left);\n      right = Math.max(right, bb.right);\n    });\n  } else {\n    top = 0;\n    bottom = 0;\n    left = 0;\n    right = 0;\n  }\n\n  return {\n    top: top,\n    bottom: bottom,\n    left: left,\n    right: right,\n    height: bottom - top,\n    width: right - left\n  };\n}\n/**\n * Which direction do the 'ax.side' values, and free ticks go?\n *\n * @param {object} ax (full) axis object\n *  - {string} _id (starting with 'x' or 'y')\n *  - {string} side\n *  - {string} ticks\n * @return {array} all entries are either -1 or 1\n *  - [0]: sign for top/right ticks (i.e. negative SVG direction)\n *  - [1]: sign for bottom/left ticks (i.e. positive SVG direction)\n *  - [2]: sign for ticks corresponding to 'ax.side'\n *  - [3]: sign for ticks mirroring 'ax.side'\n *  - [4]: sign of arrow starting at axis pointing towards margin\n */\n\n\naxes.getTickSigns = function (ax) {\n  var axLetter = ax._id.charAt(0);\n\n  var sideOpposite = {\n    x: 'top',\n    y: 'right'\n  }[axLetter];\n  var main = ax.side === sideOpposite ? 1 : -1;\n  var out = [-1, 1, main, -main]; // then we flip if outside XOR y axis\n\n  if (ax.ticks !== 'inside' === (axLetter === 'x')) {\n    out = out.map(function (v) {\n      return -v;\n    });\n  } // independent of `ticks`; do not flip this one\n\n\n  if (ax.side) {\n    out.push({\n      l: -1,\n      t: -1,\n      r: 1,\n      b: 1\n    }[ax.side.charAt(0)]);\n  }\n\n  return out;\n};\n/**\n * Make axis translate transform function\n *\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {number} _offset\n *  - {fn} l2p\n * @return {fn} function of calcTicks items\n */\n\n\naxes.makeTransTickFn = function (ax) {\n  return ax._id.charAt(0) === 'x' ? function (d) {\n    return strTranslate(ax._offset + ax.l2p(d.x), 0);\n  } : function (d) {\n    return strTranslate(0, ax._offset + ax.l2p(d.x));\n  };\n};\n\naxes.makeTransTickLabelFn = function (ax) {\n  var uv = getTickLabelUV(ax);\n  var u = uv[0];\n  var v = uv[1];\n  return ax._id.charAt(0) === 'x' ? function (d) {\n    return strTranslate(u + ax._offset + ax.l2p(getPosX(d)), v);\n  } : function (d) {\n    return strTranslate(v, u + ax._offset + ax.l2p(getPosX(d)));\n  };\n};\n\nfunction getPosX(d) {\n  return d.periodX !== undefined ? d.periodX : d.x;\n} // u is a shift along the axis,\n// v is a shift perpendicular to the axis\n\n\nfunction getTickLabelUV(ax) {\n  var ticklabelposition = ax.ticklabelposition || '';\n\n  var has = function (str) {\n    return ticklabelposition.indexOf(str) !== -1;\n  };\n\n  var isTop = has('top');\n  var isLeft = has('left');\n  var isRight = has('right');\n  var isBottom = has('bottom');\n  var isInside = has('inside');\n  var isAligned = isBottom || isLeft || isTop || isRight; // early return\n\n  if (!isAligned && !isInside) return [0, 0];\n  var side = ax.side;\n  var u = isAligned ? (ax.tickwidth || 0) / 2 : 0;\n  var v = TEXTPAD;\n  var fontSize = ax.tickfont ? ax.tickfont.size : 12;\n\n  if (isBottom || isTop) {\n    u += fontSize * CAP_SHIFT;\n    v += (ax.linewidth || 0) / 2;\n  }\n\n  if (isLeft || isRight) {\n    u += (ax.linewidth || 0) / 2;\n    v += TEXTPAD;\n  }\n\n  if (isInside && side === 'top') {\n    v -= fontSize * (1 - CAP_SHIFT);\n  }\n\n  if (isLeft || isTop) u = -u;\n  if (side === 'bottom' || side === 'right') v = -v;\n  return [isAligned ? u : 0, isInside ? v : 0];\n}\n/**\n * Make axis tick path string\n *\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {number} ticklen\n *  - {number} linewidth\n * @param {number} shift along direction of ticklen\n * @param {1 or -1} sgn tick sign\n * @param {number (optional)} len tick length\n * @return {string}\n */\n\n\naxes.makeTickPath = function (ax, shift, sgn, len) {\n  len = len !== undefined ? len : ax.ticklen;\n\n  var axLetter = ax._id.charAt(0);\n\n  var pad = (ax.linewidth || 1) / 2;\n  return axLetter === 'x' ? 'M0,' + (shift + pad * sgn) + 'v' + len * sgn : 'M' + (shift + pad * sgn) + ',0h' + len * sgn;\n};\n/**\n * Make axis tick label x, y and anchor functions\n *\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {string} ticks\n *  - {number} ticklen\n *  - {string} side\n *  - {number} linewidth\n *  - {number} tickfont.size\n *  - {boolean} showline\n * @param {number} shift\n * @param {number} angle [in degrees] ...\n * @return {object}\n *  - {fn} xFn\n *  - {fn} yFn\n *  - {fn} anchorFn\n *  - {fn} heightFn\n *  - {number} labelStandoff (gap parallel to ticks)\n *  - {number} labelShift (gap perpendicular to ticks)\n */\n\n\naxes.makeLabelFns = function (ax, shift, angle) {\n  var ticklabelposition = ax.ticklabelposition || '';\n\n  var has = function (str) {\n    return ticklabelposition.indexOf(str) !== -1;\n  };\n\n  var isTop = has('top');\n  var isLeft = has('left');\n  var isRight = has('right');\n  var isBottom = has('bottom');\n  var isAligned = isBottom || isLeft || isTop || isRight;\n  var insideTickLabels = has('inside');\n  var labelsOverTicks = ticklabelposition === 'inside' && ax.ticks === 'inside' || !insideTickLabels && ax.ticks === 'outside' && ax.tickson !== 'boundaries';\n  var labelStandoff = 0;\n  var labelShift = 0;\n  var tickLen = labelsOverTicks ? ax.ticklen : 0;\n\n  if (insideTickLabels) {\n    tickLen *= -1;\n  } else if (isAligned) {\n    tickLen = 0;\n  }\n\n  if (labelsOverTicks) {\n    labelStandoff += tickLen;\n\n    if (angle) {\n      var rad = Lib.deg2rad(angle);\n      labelStandoff = tickLen * Math.cos(rad) + 1;\n      labelShift = tickLen * Math.sin(rad);\n    }\n  }\n\n  if (ax.showticklabels && (labelsOverTicks || ax.showline)) {\n    labelStandoff += 0.2 * ax.tickfont.size;\n  }\n\n  labelStandoff += (ax.linewidth || 1) / 2 * (insideTickLabels ? -1 : 1);\n  var out = {\n    labelStandoff: labelStandoff,\n    labelShift: labelShift\n  };\n  var x0, y0, ff, flipIt;\n  var xQ = 0;\n  var side = ax.side;\n\n  var axLetter = ax._id.charAt(0);\n\n  var tickangle = ax.tickangle;\n  var endSide;\n\n  if (axLetter === 'x') {\n    endSide = !insideTickLabels && side === 'bottom' || insideTickLabels && side === 'top';\n    flipIt = endSide ? 1 : -1;\n    if (insideTickLabels) flipIt *= -1;\n    x0 = labelShift * flipIt;\n    y0 = shift + labelStandoff * flipIt;\n    ff = endSide ? 1 : -0.2;\n\n    if (Math.abs(tickangle) === 90) {\n      if (insideTickLabels) {\n        ff += MID_SHIFT;\n      } else {\n        if (tickangle === -90 && side === 'bottom') {\n          ff = CAP_SHIFT;\n        } else if (tickangle === 90 && side === 'top') {\n          ff = MID_SHIFT;\n        } else {\n          ff = 0.5;\n        }\n      }\n\n      xQ = MID_SHIFT / 2 * (tickangle / 90);\n    }\n\n    out.xFn = function (d) {\n      return d.dx + x0 + xQ * d.fontSize;\n    };\n\n    out.yFn = function (d) {\n      return d.dy + y0 + d.fontSize * ff;\n    };\n\n    out.anchorFn = function (d, a) {\n      if (isAligned) {\n        if (isLeft) return 'end';\n        if (isRight) return 'start';\n      }\n\n      if (!isNumeric(a) || a === 0 || a === 180) {\n        return 'middle';\n      }\n\n      return a * flipIt < 0 !== insideTickLabels ? 'end' : 'start';\n    };\n\n    out.heightFn = function (d, a, h) {\n      return a < -60 || a > 60 ? -0.5 * h : ax.side === 'top' !== insideTickLabels ? -h : 0;\n    };\n  } else if (axLetter === 'y') {\n    endSide = !insideTickLabels && side === 'left' || insideTickLabels && side === 'right';\n    flipIt = endSide ? 1 : -1;\n    if (insideTickLabels) flipIt *= -1;\n    x0 = labelStandoff;\n    y0 = labelShift * flipIt;\n    ff = 0;\n\n    if (!insideTickLabels && Math.abs(tickangle) === 90) {\n      if (tickangle === -90 && side === 'left' || tickangle === 90 && side === 'right') {\n        ff = CAP_SHIFT;\n      } else {\n        ff = 0.5;\n      }\n    }\n\n    if (insideTickLabels) {\n      var ang = isNumeric(tickangle) ? +tickangle : 0;\n\n      if (ang !== 0) {\n        var rA = Lib.deg2rad(ang);\n        xQ = Math.abs(Math.sin(rA)) * CAP_SHIFT * flipIt;\n        ff = 0;\n      }\n    }\n\n    out.xFn = function (d) {\n      return d.dx + shift - (x0 + d.fontSize * ff) * flipIt + xQ * d.fontSize;\n    };\n\n    out.yFn = function (d) {\n      return d.dy + y0 + d.fontSize * MID_SHIFT;\n    };\n\n    out.anchorFn = function (d, a) {\n      if (isNumeric(a) && Math.abs(a) === 90) {\n        return 'middle';\n      }\n\n      return endSide ? 'end' : 'start';\n    };\n\n    out.heightFn = function (d, a, h) {\n      if (ax.side === 'right') a *= -1;\n      return a < -30 ? -h : a < 30 ? -0.5 * h : 0;\n    };\n  }\n\n  return out;\n};\n\nfunction tickDataFn(d) {\n  return [d.text, d.x, d.axInfo, d.font, d.fontSize, d.fontColor].join('_');\n}\n/**\n * Draw axis ticks\n *\n * @param {DOM element} gd\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {string} ticks\n *  - {number} linewidth\n *  - {string} tickcolor\n * @param {object} opts\n * - {array of object} vals (calcTicks output-like)\n * - {d3 selection} layer\n * - {string or fn} path\n * - {fn} transFn\n * - {boolean} crisp (set to false to unset crisp-edge SVG rendering)\n */\n\n\naxes.drawTicks = function (gd, ax, opts) {\n  opts = opts || {};\n  var cls = ax._id + 'tick';\n  var vals = opts.vals;\n\n  if (ax.ticklabelmode === 'period') {\n    // drop very first tick that we added to handle period\n    vals = vals.slice();\n    vals.shift();\n  }\n\n  var ticks = opts.layer.selectAll('path.' + cls).data(ax.ticks ? vals : [], tickDataFn);\n  ticks.exit().remove();\n  ticks.enter().append('path').classed(cls, 1).classed('ticks', 1).classed('crisp', opts.crisp !== false).call(Color.stroke, ax.tickcolor).style('stroke-width', Drawing.crispRound(gd, ax.tickwidth, 1) + 'px').attr('d', opts.path);\n  ticks.attr('transform', opts.transFn);\n};\n/**\n * Draw axis grid\n *\n * @param {DOM element} gd\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {boolean} showgrid\n *  - {string} gridcolor\n *  - {string} gridwidth\n *  - {boolean} zeroline\n *  - {string} type\n *  - {string} dtick\n * @param {object} opts\n * - {array of object} vals (calcTicks output-like)\n * - {d3 selection} layer\n * - {object} counterAxis (full axis object corresponding to counter axis)\n *     optional - only required if this axis supports zero lines\n * - {string or fn} path\n * - {fn} transFn\n * - {boolean} crisp (set to false to unset crisp-edge SVG rendering)\n */\n\n\naxes.drawGrid = function (gd, ax, opts) {\n  opts = opts || {};\n  var cls = ax._id + 'grid';\n  var vals = opts.vals;\n  var counterAx = opts.counterAxis;\n\n  if (ax.showgrid === false) {\n    vals = [];\n  } else if (counterAx && axes.shouldShowZeroLine(gd, ax, counterAx)) {\n    var isArrayMode = ax.tickmode === 'array';\n\n    for (var i = 0; i < vals.length; i++) {\n      var xi = vals[i].x;\n\n      if (isArrayMode ? !xi : Math.abs(xi) < ax.dtick / 100) {\n        vals = vals.slice(0, i).concat(vals.slice(i + 1)); // In array mode you can in principle have multiple\n        // ticks at 0, so test them all. Otherwise once we found\n        // one we can stop.\n\n        if (isArrayMode) i--;else break;\n      }\n    }\n  }\n\n  var grid = opts.layer.selectAll('path.' + cls).data(vals, tickDataFn);\n  grid.exit().remove();\n  grid.enter().append('path').classed(cls, 1).classed('crisp', opts.crisp !== false);\n  ax._gw = Drawing.crispRound(gd, ax.gridwidth, 1);\n  grid.attr('transform', opts.transFn).attr('d', opts.path).call(Color.stroke, ax.gridcolor || '#ddd').style('stroke-width', ax._gw + 'px');\n  if (typeof opts.path === 'function') grid.attr('d', opts.path);\n};\n/**\n * Draw axis zero-line\n *\n * @param {DOM element} gd\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {boolean} zeroline\n *  - {number} zerolinewidth\n *  - {string} zerolinecolor\n *  - {number (optional)} _gridWidthCrispRound\n * @param {object} opts\n * - {d3 selection} layer\n * - {object} counterAxis (full axis object corresponding to counter axis)\n * - {string or fn} path\n * - {fn} transFn\n * - {boolean} crisp (set to false to unset crisp-edge SVG rendering)\n */\n\n\naxes.drawZeroLine = function (gd, ax, opts) {\n  opts = opts || opts;\n  var cls = ax._id + 'zl';\n  var show = axes.shouldShowZeroLine(gd, ax, opts.counterAxis);\n  var zl = opts.layer.selectAll('path.' + cls).data(show ? [{\n    x: 0,\n    id: ax._id\n  }] : []);\n  zl.exit().remove();\n  zl.enter().append('path').classed(cls, 1).classed('zl', 1).classed('crisp', opts.crisp !== false).each(function () {\n    // use the fact that only one element can enter to trigger a sort.\n    // If several zerolines enter at the same time we will sort once per,\n    // but generally this should be a minimal overhead.\n    opts.layer.selectAll('path').sort(function (da, db) {\n      return idSort(da.id, db.id);\n    });\n  });\n  zl.attr('transform', opts.transFn).attr('d', opts.path).call(Color.stroke, ax.zerolinecolor || Color.defaultLine).style('stroke-width', Drawing.crispRound(gd, ax.zerolinewidth, ax._gw || 1) + 'px');\n};\n/**\n * Draw axis tick labels\n *\n * @param {DOM element} gd\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {boolean} showticklabels\n *  - {number} tickangle\n *  - {object (optional)} _selections\n *  - {object} (optional)} _tickAngles\n *  - {object} (optional)} _prevTickAngles\n * @param {object} opts\n * - {array of object} vals (calcTicks output-like)\n * - {d3 selection} layer\n * - {string (optional)} cls (node className)\n * - {boolean} repositionOnUpdate (set to true to reposition update selection)\n * - {boolean} secondary\n * - {fn} transFn\n * - {object} labelFns\n *  + {fn} xFn\n *  + {fn} yFn\n *  + {fn} anchorFn\n *  + {fn} heightFn\n */\n\n\naxes.drawLabels = function (gd, ax, opts) {\n  opts = opts || {};\n  var fullLayout = gd._fullLayout;\n  var axId = ax._id;\n  var axLetter = axId.charAt(0);\n  var cls = opts.cls || axId + 'tick';\n  var vals = opts.vals;\n  var labelFns = opts.labelFns;\n  var tickAngle = opts.secondary ? 0 : ax.tickangle;\n  var prevAngle = (ax._prevTickAngles || {})[cls];\n  var tickLabels = opts.layer.selectAll('g.' + cls).data(ax.showticklabels ? vals : [], tickDataFn);\n  var labelsReady = [];\n  tickLabels.enter().append('g').classed(cls, 1).append('text') // only so tex has predictable alignment that we can\n  // alter later\n  .attr('text-anchor', 'middle').each(function (d) {\n    var thisLabel = d3.select(this);\n    var newPromise = gd._promises.length;\n    thisLabel.call(svgTextUtils.positionText, labelFns.xFn(d), labelFns.yFn(d)).call(Drawing.font, d.font, d.fontSize, d.fontColor).text(d.text).call(svgTextUtils.convertToTspans, gd);\n\n    if (gd._promises[newPromise]) {\n      // if we have an async label, we'll deal with that\n      // all here so take it out of gd._promises and\n      // instead position the label and promise this in\n      // labelsReady\n      labelsReady.push(gd._promises.pop().then(function () {\n        positionLabels(thisLabel, tickAngle);\n      }));\n    } else {\n      // sync label: just position it now.\n      positionLabels(thisLabel, tickAngle);\n    }\n  });\n  tickLabels.exit().remove();\n\n  if (opts.repositionOnUpdate) {\n    tickLabels.each(function (d) {\n      d3.select(this).select('text').call(svgTextUtils.positionText, labelFns.xFn(d), labelFns.yFn(d));\n    });\n  }\n\n  function positionLabels(s, angle) {\n    var isInside = (ax.ticklabelposition || '').indexOf('inside') !== -1;\n    s.each(function (d) {\n      var thisLabel = d3.select(this);\n      var mathjaxGroup = thisLabel.select('.text-math-group');\n      var anchor = labelFns.anchorFn(d, angle);\n      var transform = opts.transFn.call(thisLabel.node(), d) + (isNumeric(angle) && +angle !== 0 ? ' rotate(' + angle + ',' + labelFns.xFn(d) + ',' + (labelFns.yFn(d) - d.fontSize / 2) + ')' : ''); // how much to shift a multi-line label to center it vertically.\n\n      var nLines = svgTextUtils.lineCount(thisLabel);\n      var lineHeight = LINE_SPACING * d.fontSize;\n      var anchorHeight = labelFns.heightFn(d, isNumeric(angle) ? +angle : 0, (nLines - 1) * lineHeight);\n\n      if (anchorHeight) {\n        transform += strTranslate(0, anchorHeight);\n      }\n\n      if (mathjaxGroup.empty()) {\n        var thisText = thisLabel.select('text');\n        thisText.attr({\n          transform: transform,\n          'text-anchor': anchor\n        });\n\n        if (isInside) {\n          // ensure visible\n          thisText.style({\n            opacity: 100\n          });\n\n          if (ax._hideOutOfRangeInsideTickLabels) {\n            ax._hideOutOfRangeInsideTickLabels();\n          }\n        }\n      } else {\n        var mjWidth = Drawing.bBox(mathjaxGroup.node()).width;\n        var mjShift = mjWidth * {\n          end: -0.5,\n          start: 0.5\n        }[anchor];\n        mathjaxGroup.attr('transform', transform + strTranslate(mjShift, 0));\n      }\n    });\n  }\n\n  ax._hideOutOfRangeInsideTickLabels = undefined;\n\n  if ((ax.ticklabelposition || '').indexOf('inside') !== -1) {\n    ax._hideOutOfRangeInsideTickLabels = function () {\n      var rl = Lib.simpleMap(ax.range, ax.r2l); // hide inside tick labels that go outside axis end points\n\n      var p0 = ax.l2p(rl[0]);\n      var p1 = ax.l2p(rl[1]);\n\n      var min = Math.min(p0, p1) + ax._offset;\n\n      var max = Math.max(p0, p1) + ax._offset;\n\n      var isX = ax._id.charAt(0) === 'x';\n      tickLabels.each(function (d) {\n        var thisLabel = d3.select(this);\n        var mathjaxGroup = thisLabel.select('.text-math-group');\n\n        if (mathjaxGroup.empty()) {\n          var bb = Drawing.bBox(thisLabel.node());\n          var hide = false;\n\n          if (isX) {\n            if (bb.right > max) hide = true;else if (bb.left < min) hide = true;\n          } else {\n            if (bb.bottom > max) hide = true;else if (bb.top + (ax.tickangle ? 0 : d.fontSize / 4) < min) hide = true;\n          }\n\n          if (hide) thisLabel.select('text').style({\n            opacity: 0\n          });\n        } // TODO: hide mathjax?\n\n      });\n    };\n  } // make sure all labels are correctly positioned at their base angle\n  // the positionLabels call above is only for newly drawn labels.\n  // do this without waiting, using the last calculated angle to\n  // minimize flicker, then do it again when we know all labels are\n  // there, putting back the prescribed angle to check for overlaps.\n\n\n  positionLabels(tickLabels, prevAngle + 1 ? prevAngle : tickAngle);\n\n  function allLabelsReady() {\n    return labelsReady.length && Promise.all(labelsReady);\n  }\n\n  var autoangle = null;\n\n  function fixLabelOverlaps() {\n    positionLabels(tickLabels, tickAngle); // check for auto-angling if x labels overlap\n    // don't auto-angle at all for log axes with\n    // base and digit format\n\n    if (vals.length && axLetter === 'x' && !isNumeric(tickAngle) && (ax.type !== 'log' || String(ax.dtick).charAt(0) !== 'D')) {\n      autoangle = 0;\n      var maxFontSize = 0;\n      var lbbArray = [];\n      var i;\n      tickLabels.each(function (d) {\n        maxFontSize = Math.max(maxFontSize, d.fontSize);\n        var x = ax.l2p(d.x);\n        var thisLabel = selectTickLabel(this);\n        var bb = Drawing.bBox(thisLabel.node());\n        lbbArray.push({\n          // ignore about y, just deal with x overlaps\n          top: 0,\n          bottom: 10,\n          height: 10,\n          left: x - bb.width / 2,\n          // impose a 2px gap\n          right: x + bb.width / 2 + 2,\n          width: bb.width + 2\n        });\n      });\n\n      if ((ax.tickson === 'boundaries' || ax.showdividers) && !opts.secondary) {\n        var gap = 2;\n        if (ax.ticks) gap += ax.tickwidth / 2; // TODO should secondary labels also fall into this fix-overlap regime?\n\n        for (i = 0; i < lbbArray.length; i++) {\n          var xbnd = vals[i].xbnd;\n          var lbb = lbbArray[i];\n\n          if (xbnd[0] !== null && lbb.left - ax.l2p(xbnd[0]) < gap || xbnd[1] !== null && ax.l2p(xbnd[1]) - lbb.right < gap) {\n            autoangle = 90;\n            break;\n          }\n        }\n      } else {\n        var vLen = vals.length;\n        var tickSpacing = Math.abs((vals[vLen - 1].x - vals[0].x) * ax._m) / (vLen - 1);\n        var ticklabelposition = ax.ticklabelposition || '';\n\n        var has = function (str) {\n          return ticklabelposition.indexOf(str) !== -1;\n        };\n\n        var isTop = has('top');\n        var isLeft = has('left');\n        var isRight = has('right');\n        var isBottom = has('bottom');\n        var isAligned = isBottom || isLeft || isTop || isRight;\n        var pad = !isAligned ? 0 : (ax.tickwidth || 0) + 2 * TEXTPAD;\n        var rotate90 = tickSpacing < maxFontSize * 2.5 || ax.type === 'multicategory'; // any overlap at all - set 30 degrees or 90 degrees\n\n        for (i = 0; i < lbbArray.length - 1; i++) {\n          if (Lib.bBoxIntersect(lbbArray[i], lbbArray[i + 1], pad)) {\n            autoangle = rotate90 ? 90 : 30;\n            break;\n          }\n        }\n      }\n\n      if (autoangle) {\n        positionLabels(tickLabels, autoangle);\n      }\n    }\n  }\n\n  if (ax._selections) {\n    ax._selections[cls] = tickLabels;\n  }\n\n  var seq = [allLabelsReady]; // N.B. during auto-margin redraws, if the axis fixed its label overlaps\n  // by rotating 90 degrees, do not attempt to re-fix its label overlaps\n  // as this can lead to infinite redraw loops!\n\n  if (ax.automargin && fullLayout._redrawFromAutoMarginCount && prevAngle === 90) {\n    autoangle = 90;\n    seq.push(function () {\n      positionLabels(tickLabels, prevAngle);\n    });\n  } else {\n    seq.push(fixLabelOverlaps);\n  } // save current tick angle for future redraws\n\n\n  if (ax._tickAngles) {\n    seq.push(function () {\n      ax._tickAngles[cls] = autoangle === null ? isNumeric(tickAngle) ? tickAngle : 0 : autoangle;\n    });\n  }\n\n  var anchorAx = ax._anchorAxis;\n\n  if (anchorAx && anchorAx.autorange && (ax.ticklabelposition || '').indexOf('inside') !== -1 && !isLinked(fullLayout, ax._id)) {\n    if (!fullLayout._insideTickLabelsAutorange) {\n      fullLayout._insideTickLabelsAutorange = {};\n    }\n\n    fullLayout._insideTickLabelsAutorange[anchorAx._name + '.autorange'] = anchorAx.autorange;\n    seq.push(function computeFinalTickLabelBoundingBoxes() {\n      tickLabels.each(function (d, i) {\n        var thisLabel = selectTickLabel(this);\n        ax._vals[i].bb = Drawing.bBox(thisLabel.node());\n      });\n    });\n  }\n\n  var done = Lib.syncOrAsync(seq);\n  if (done && done.then) gd._promises.push(done);\n  return done;\n};\n/**\n * Draw axis dividers\n *\n * @param {DOM element} gd\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {string} showdividers\n *  - {number} dividerwidth\n *  - {string} dividercolor\n * @param {object} opts\n * - {array of object} vals (calcTicks output-like)\n * - {d3 selection} layer\n * - {fn} path\n * - {fn} transFn\n */\n\n\nfunction drawDividers(gd, ax, opts) {\n  var cls = ax._id + 'divider';\n  var vals = opts.vals;\n  var dividers = opts.layer.selectAll('path.' + cls).data(vals, tickDataFn);\n  dividers.exit().remove();\n  dividers.enter().insert('path', ':first-child').classed(cls, 1).classed('crisp', 1).call(Color.stroke, ax.dividercolor).style('stroke-width', Drawing.crispRound(gd, ax.dividerwidth, 1) + 'px');\n  dividers.attr('transform', opts.transFn).attr('d', opts.path);\n}\n/**\n * Get axis position in px, that is the distance for the graph's\n * top (left) edge for x (y) axes.\n *\n * @param {DOM element} gd\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {string} side\n *  if anchored:\n *  - {object} _anchorAxis\n *  Otherwise:\n *  - {number} position\n * @return {number}\n */\n\n\naxes.getPxPosition = function (gd, ax) {\n  var gs = gd._fullLayout._size;\n\n  var axLetter = ax._id.charAt(0);\n\n  var side = ax.side;\n  var anchorAxis;\n\n  if (ax.anchor !== 'free') {\n    anchorAxis = ax._anchorAxis;\n  } else if (axLetter === 'x') {\n    anchorAxis = {\n      _offset: gs.t + (1 - (ax.position || 0)) * gs.h,\n      _length: 0\n    };\n  } else if (axLetter === 'y') {\n    anchorAxis = {\n      _offset: gs.l + (ax.position || 0) * gs.w,\n      _length: 0\n    };\n  }\n\n  if (side === 'top' || side === 'left') {\n    return anchorAxis._offset;\n  } else if (side === 'bottom' || side === 'right') {\n    return anchorAxis._offset + anchorAxis._length;\n  }\n};\n/**\n * Approximate axis title depth (w/o computing its bounding box)\n *\n * @param {object} ax (full) axis object\n *  - {string} title.text\n *  - {number} title.font.size\n *  - {number} title.standoff\n * @return {number} (in px)\n */\n\n\nfunction approxTitleDepth(ax) {\n  var fontSize = ax.title.font.size;\n  var extraLines = (ax.title.text.match(svgTextUtils.BR_TAG_ALL) || []).length;\n\n  if (ax.title.hasOwnProperty('standoff')) {\n    return extraLines ? fontSize * (CAP_SHIFT + extraLines * LINE_SPACING) : fontSize * CAP_SHIFT;\n  } else {\n    return extraLines ? fontSize * (extraLines + 1) * LINE_SPACING : fontSize;\n  }\n}\n/**\n * Draw axis title, compute default standoff if necessary\n *\n * @param {DOM element} gd\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {string} _name\n *  - {string} side\n *  - {number} title.font.size\n *  - {object} _selections\n *\n *  - {number} _depth\n *  - {number} title.standoff\n *  OR\n *  - {number} linewidth\n *  - {boolean} showticklabels\n */\n\n\nfunction drawTitle(gd, ax) {\n  var fullLayout = gd._fullLayout;\n  var axId = ax._id;\n  var axLetter = axId.charAt(0);\n  var fontSize = ax.title.font.size;\n  var titleStandoff;\n\n  if (ax.title.hasOwnProperty('standoff')) {\n    titleStandoff = ax._depth + ax.title.standoff + approxTitleDepth(ax);\n  } else {\n    var isInside = (ax.ticklabelposition || '').indexOf('inside') !== -1;\n\n    if (ax.type === 'multicategory') {\n      titleStandoff = ax._depth;\n    } else {\n      var offsetBase = 1.5 * fontSize;\n\n      if (isInside) {\n        offsetBase = 0.5 * fontSize;\n\n        if (ax.ticks === 'outside') {\n          offsetBase += ax.ticklen;\n        }\n      }\n\n      titleStandoff = 10 + offsetBase + (ax.linewidth ? ax.linewidth - 1 : 0);\n    }\n\n    if (!isInside) {\n      if (axLetter === 'x') {\n        titleStandoff += ax.side === 'top' ? fontSize * (ax.showticklabels ? 1 : 0) : fontSize * (ax.showticklabels ? 1.5 : 0.5);\n      } else {\n        titleStandoff += ax.side === 'right' ? fontSize * (ax.showticklabels ? 1 : 0.5) : fontSize * (ax.showticklabels ? 0.5 : 0);\n      }\n    }\n  }\n\n  var pos = axes.getPxPosition(gd, ax);\n  var transform, x, y;\n\n  if (axLetter === 'x') {\n    x = ax._offset + ax._length / 2;\n    y = ax.side === 'top' ? pos - titleStandoff : pos + titleStandoff;\n  } else {\n    y = ax._offset + ax._length / 2;\n    x = ax.side === 'right' ? pos + titleStandoff : pos - titleStandoff;\n    transform = {\n      rotate: '-90',\n      offset: 0\n    };\n  }\n\n  var avoid;\n\n  if (ax.type !== 'multicategory') {\n    var tickLabels = ax._selections[ax._id + 'tick'];\n    avoid = {\n      selection: tickLabels,\n      side: ax.side\n    };\n\n    if (tickLabels && tickLabels.node() && tickLabels.node().parentNode) {\n      var translation = Drawing.getTranslate(tickLabels.node().parentNode);\n      avoid.offsetLeft = translation.x;\n      avoid.offsetTop = translation.y;\n    }\n\n    if (ax.title.hasOwnProperty('standoff')) {\n      avoid.pad = 0;\n    }\n  }\n\n  return Titles.draw(gd, axId + 'title', {\n    propContainer: ax,\n    propName: ax._name + '.title.text',\n    placeholder: fullLayout._dfltTitle[axLetter],\n    avoid: avoid,\n    transform: transform,\n    attributes: {\n      x: x,\n      y: y,\n      'text-anchor': 'middle'\n    }\n  });\n}\n\naxes.shouldShowZeroLine = function (gd, ax, counterAxis) {\n  var rng = Lib.simpleMap(ax.range, ax.r2l);\n  return rng[0] * rng[1] <= 0 && ax.zeroline && (ax.type === 'linear' || ax.type === '-') && !(ax.rangebreaks && ax.maskBreaks(0) === BADNUM) && (clipEnds(ax, 0) || !anyCounterAxLineAtZero(gd, ax, counterAxis, rng) || hasBarsOrFill(gd, ax));\n};\n\naxes.clipEnds = function (ax, vals) {\n  return vals.filter(function (d) {\n    return clipEnds(ax, d.x);\n  });\n};\n\nfunction clipEnds(ax, l) {\n  var p = ax.l2p(l);\n  return p > 1 && p < ax._length - 1;\n}\n\nfunction anyCounterAxLineAtZero(gd, ax, counterAxis, rng) {\n  var mainCounterAxis = counterAxis._mainAxis;\n  if (!mainCounterAxis) return;\n  var fullLayout = gd._fullLayout;\n\n  var axLetter = ax._id.charAt(0);\n\n  var counterLetter = axes.counterLetter(ax._id);\n  var zeroPosition = ax._offset + (Math.abs(rng[0]) < Math.abs(rng[1]) === (axLetter === 'x') ? 0 : ax._length);\n\n  function lineNearZero(ax2) {\n    if (!ax2.showline || !ax2.linewidth) return false;\n    var tolerance = Math.max((ax2.linewidth + ax.zerolinewidth) / 2, 1);\n\n    function closeEnough(pos2) {\n      return typeof pos2 === 'number' && Math.abs(pos2 - zeroPosition) < tolerance;\n    }\n\n    if (closeEnough(ax2._mainLinePosition) || closeEnough(ax2._mainMirrorPosition)) {\n      return true;\n    }\n\n    var linePositions = ax2._linepositions || {};\n\n    for (var k in linePositions) {\n      if (closeEnough(linePositions[k][0]) || closeEnough(linePositions[k][1])) {\n        return true;\n      }\n    }\n  }\n\n  var plotinfo = fullLayout._plots[counterAxis._mainSubplot];\n\n  if (!(plotinfo.mainplotinfo || plotinfo).overlays.length) {\n    return lineNearZero(counterAxis, zeroPosition);\n  }\n\n  var counterLetterAxes = axes.list(gd, counterLetter);\n\n  for (var i = 0; i < counterLetterAxes.length; i++) {\n    var counterAxis2 = counterLetterAxes[i];\n\n    if (counterAxis2._mainAxis === mainCounterAxis && lineNearZero(counterAxis2, zeroPosition)) {\n      return true;\n    }\n  }\n}\n\nfunction hasBarsOrFill(gd, ax) {\n  var fullData = gd._fullData;\n  var subplot = ax._mainSubplot;\n\n  var axLetter = ax._id.charAt(0);\n\n  for (var i = 0; i < fullData.length; i++) {\n    var trace = fullData[i];\n\n    if (trace.visible === true && trace.xaxis + trace.yaxis === subplot) {\n      if (Registry.traceIs(trace, 'bar-like') && trace.orientation === {\n        x: 'h',\n        y: 'v'\n      }[axLetter]) return true;\n      if (trace.fill && trace.fill.charAt(trace.fill.length - 1) === axLetter) return true;\n    }\n  }\n\n  return false;\n}\n\nfunction selectTickLabel(gTick) {\n  var s = d3.select(gTick);\n  var mj = s.select('.text-math-group');\n  return mj.empty() ? s.select('text') : mj;\n}\n/**\n * Find all margin pushers for 2D axes and reserve them for later use\n * Both label and rangeslider automargin calculations happen later so\n * we need to explicitly allow their ids in order to not delete them.\n *\n * TODO: can we pull the actual automargin calls forward to avoid this hack?\n * We're probably also doing multiple redraws in this case, would be faster\n * if we can just do the whole calculation ahead of time and draw once.\n */\n\n\naxes.allowAutoMargin = function (gd) {\n  var axList = axes.list(gd, '', true);\n\n  for (var i = 0; i < axList.length; i++) {\n    var ax = axList[i];\n\n    if (ax.automargin) {\n      Plots.allowAutoMargin(gd, axAutoMarginID(ax));\n\n      if (ax.mirror) {\n        Plots.allowAutoMargin(gd, axMirrorAutoMarginID(ax));\n      }\n    }\n\n    if (Registry.getComponentMethod('rangeslider', 'isVisible')(ax)) {\n      Plots.allowAutoMargin(gd, rangeSliderAutoMarginID(ax));\n    }\n  }\n};\n\nfunction axAutoMarginID(ax) {\n  return ax._id + '.automargin';\n}\n\nfunction axMirrorAutoMarginID(ax) {\n  return axAutoMarginID(ax) + '.mirror';\n}\n\nfunction rangeSliderAutoMarginID(ax) {\n  return ax._id + '.rangeslider';\n} // swap all the presentation attributes of the axes showing these traces\n\n\naxes.swap = function (gd, traces) {\n  var axGroups = makeAxisGroups(gd, traces);\n\n  for (var i = 0; i < axGroups.length; i++) {\n    swapAxisGroup(gd, axGroups[i].x, axGroups[i].y);\n  }\n};\n\nfunction makeAxisGroups(gd, traces) {\n  var groups = [];\n  var i, j;\n\n  for (i = 0; i < traces.length; i++) {\n    var groupsi = [];\n    var xi = gd._fullData[traces[i]].xaxis;\n    var yi = gd._fullData[traces[i]].yaxis;\n    if (!xi || !yi) continue; // not a 2D cartesian trace?\n\n    for (j = 0; j < groups.length; j++) {\n      if (groups[j].x.indexOf(xi) !== -1 || groups[j].y.indexOf(yi) !== -1) {\n        groupsi.push(j);\n      }\n    }\n\n    if (!groupsi.length) {\n      groups.push({\n        x: [xi],\n        y: [yi]\n      });\n      continue;\n    }\n\n    var group0 = groups[groupsi[0]];\n    var groupj;\n\n    if (groupsi.length > 1) {\n      for (j = 1; j < groupsi.length; j++) {\n        groupj = groups[groupsi[j]];\n        mergeAxisGroups(group0.x, groupj.x);\n        mergeAxisGroups(group0.y, groupj.y);\n      }\n    }\n\n    mergeAxisGroups(group0.x, [xi]);\n    mergeAxisGroups(group0.y, [yi]);\n  }\n\n  return groups;\n}\n\nfunction mergeAxisGroups(intoSet, fromSet) {\n  for (var i = 0; i < fromSet.length; i++) {\n    if (intoSet.indexOf(fromSet[i]) === -1) intoSet.push(fromSet[i]);\n  }\n}\n\nfunction swapAxisGroup(gd, xIds, yIds) {\n  var xFullAxes = [];\n  var yFullAxes = [];\n  var layout = gd.layout;\n  var i, j;\n\n  for (i = 0; i < xIds.length; i++) xFullAxes.push(axes.getFromId(gd, xIds[i]));\n\n  for (i = 0; i < yIds.length; i++) yFullAxes.push(axes.getFromId(gd, yIds[i]));\n\n  var allAxKeys = Object.keys(axAttrs);\n  var noSwapAttrs = ['anchor', 'domain', 'overlaying', 'position', 'side', 'tickangle', 'editType'];\n  var numericTypes = ['linear', 'log'];\n\n  for (i = 0; i < allAxKeys.length; i++) {\n    var keyi = allAxKeys[i];\n    var xVal = xFullAxes[0][keyi];\n    var yVal = yFullAxes[0][keyi];\n    var allEqual = true;\n    var coerceLinearX = false;\n    var coerceLinearY = false;\n\n    if (keyi.charAt(0) === '_' || typeof xVal === 'function' || noSwapAttrs.indexOf(keyi) !== -1) {\n      continue;\n    }\n\n    for (j = 1; j < xFullAxes.length && allEqual; j++) {\n      var xVali = xFullAxes[j][keyi];\n\n      if (keyi === 'type' && numericTypes.indexOf(xVal) !== -1 && numericTypes.indexOf(xVali) !== -1 && xVal !== xVali) {\n        // type is special - if we find a mixture of linear and log,\n        // coerce them all to linear on flipping\n        coerceLinearX = true;\n      } else if (xVali !== xVal) allEqual = false;\n    }\n\n    for (j = 1; j < yFullAxes.length && allEqual; j++) {\n      var yVali = yFullAxes[j][keyi];\n\n      if (keyi === 'type' && numericTypes.indexOf(yVal) !== -1 && numericTypes.indexOf(yVali) !== -1 && yVal !== yVali) {\n        // type is special - if we find a mixture of linear and log,\n        // coerce them all to linear on flipping\n        coerceLinearY = true;\n      } else if (yFullAxes[j][keyi] !== yVal) allEqual = false;\n    }\n\n    if (allEqual) {\n      if (coerceLinearX) layout[xFullAxes[0]._name].type = 'linear';\n      if (coerceLinearY) layout[yFullAxes[0]._name].type = 'linear';\n      swapAxisAttrs(layout, keyi, xFullAxes, yFullAxes, gd._fullLayout._dfltTitle);\n    }\n  } // now swap x&y for any annotations anchored to these x & y\n\n\n  for (i = 0; i < gd._fullLayout.annotations.length; i++) {\n    var ann = gd._fullLayout.annotations[i];\n\n    if (xIds.indexOf(ann.xref) !== -1 && yIds.indexOf(ann.yref) !== -1) {\n      Lib.swapAttrs(layout.annotations[i], ['?']);\n    }\n  }\n}\n\nfunction swapAxisAttrs(layout, key, xFullAxes, yFullAxes, dfltTitle) {\n  // in case the value is the default for either axis,\n  // look at the first axis in each list and see if\n  // this key's value is undefined\n  var np = Lib.nestedProperty;\n  var xVal = np(layout[xFullAxes[0]._name], key).get();\n  var yVal = np(layout[yFullAxes[0]._name], key).get();\n  var i;\n\n  if (key === 'title') {\n    // special handling of placeholder titles\n    if (xVal && xVal.text === dfltTitle.x) {\n      xVal.text = dfltTitle.y;\n    }\n\n    if (yVal && yVal.text === dfltTitle.y) {\n      yVal.text = dfltTitle.x;\n    }\n  }\n\n  for (i = 0; i < xFullAxes.length; i++) {\n    np(layout, xFullAxes[i]._name + '.' + key).set(yVal);\n  }\n\n  for (i = 0; i < yFullAxes.length; i++) {\n    np(layout, yFullAxes[i]._name + '.' + key).set(xVal);\n  }\n}\n\nfunction isAngular(ax) {\n  return ax._id === 'angularaxis';\n}\n\nfunction moveOutsideBreak(v, ax) {\n  var len = ax._rangebreaks.length;\n\n  for (var k = 0; k < len; k++) {\n    var brk = ax._rangebreaks[k];\n\n    if (v >= brk.min && v < brk.max) {\n      return brk.max;\n    }\n  }\n\n  return v;\n}","map":{"version":3,"sources":["/Users/caseyrudick/Documents/landsharkrefactored-copy/client/node_modules/plotly.js/src/plots/cartesian/axes.js"],"names":["d3","require","isNumeric","Plots","Registry","Lib","strTranslate","svgTextUtils","Titles","Color","Drawing","axAttrs","cleanTicks","constants","ONEMAXYEAR","ONEAVGYEAR","ONEMINYEAR","ONEMAXQUARTER","ONEAVGQUARTER","ONEMINQUARTER","ONEMAXMONTH","ONEAVGMONTH","ONEMINMONTH","ONEWEEK","ONEDAY","HALFDAY","ONEHOUR","ONEMIN","ONESEC","MINUS_SIGN","BADNUM","alignmentConstants","MID_SHIFT","CAP_SHIFT","LINE_SPACING","OPPOSITE_SIDE","TEXTPAD","axes","module","exports","setConvert","autoType","axisIds","idSort","isLinked","id2name","name2id","cleanId","list","listIds","getFromId","getFromTrace","autorange","getAutoRange","findExtremes","epsilon","expandRange","range","delta","coerceRef","containerIn","containerOut","gd","attr","dflt","extraOption","axLetter","charAt","length","axlist","_fullLayout","_subplots","refAttr","attrDef","concat","map","x","valType","values","coerce","getRefType","ar","undefined","test","coercePosition","axRef","cleanPos","pos","axRefType","ensureNumber","ax","fraction2r","cleanPosition","redrawComponents","axIds","fullLayout","_redrawOneComp","moduleName","methodName","stashName","shortCircuit","method","getComponentMethod","stash","i","indices","j","ind","getDataConversions","trace","target","targetArray","d2cTarget","Array","isArray","type","autotypenumbers","_categories","d2c","c2d","toString","toNum","v","String","getDataToCoordFunc","counterLetter","id","minDtick","newDiff","newFirst","allow","indexOf","_minDtick","_forceTick0","saveRangeInitial","overwrite","axList","hasOneAxisChanged","isNew","_rangeInitial","hasChanged","slice","saveShowSpikeInitial","allSpikesEnabled","_showSpikeInitial","showspikes","_showspikes","_cartesianSpikesEnabled","autoBin","data","nbins","is2d","calendar","size","dataMin","aggNums","Math","min","dataMax","max","start","end","round","_dataSpan","dummyAx","simpleMap","c2r","dtick","tick0","size0","distinctData","distinctVals","msexp","pow","floor","log","minDiff","LN10","minSize","roundUp","stdev","autoTicks","finalSize","binStart","tickIncrement","tickFirst","binEnd","bincount","autoShiftNumericBins","autoShiftMonthBins","edgecount","midcount","intcount","blankCount","nearEdge","dataCount","binshift","stats","findExactDates","threshold","exactDays","numMonths","Number","substr","exactYears","exactMonths","nextBinStart","prepTicks","opts","rng","r2l","_dtickInit","_tick0Init","tickmode","nt","nticks","minPx","tickfont","_length","_id","constrain","_name","_roughDTick","abs","l2r","ticklabelmode","adjustPeriodDelta","autoTickRound","nMonths","substring","definedDelta","mDate","isMDate","tickformat","getTickFormat","noDtick","_dowTick0","_rawTick0","_definedDelta","positionPeriodTicks","tickVals","value","a","b","A","B","actualDelta","periodLength","inBetween","endPeriod","rangebreaks","nAll","n","c","r","maskBreaks","drop","periodX","calcTicks","arrayTicks","exRng","startTick","endTick","axrev","minRange","maxRange","isDLog","isPeriod","_tmin","moveOutsideBreak","maxTicks","xPrevious","minor","push","flip","fontSize","prevL","NaN","splice","l","c2p","isAngular","pop","_tmax","_prevDateHead","_inCalcTicks","ticksOut","t","p","_minor","_value","tickText","text","vals","tickvals","ticktext","tickMin","tickMax","tickVal2l","d2l_noadd","d2l","vali","tickTextObj","filter","d","roundBase10","roundBase24","roundBase60","roundDays","roundLog1","roundLog2","roundAngles","roundDTick","roughDTick","base","roundingSet","getBase","dateTick0","roughX2","_hasDayOfWeekBreaks","ceil","olddtick","_tickexponent","_tickround","tick0ms","tick0str","replace","tick0len","tick1len","r2d","maxend","rangeexp","minexponent","isSIFormat","exponentformat","beyondSI","axSign","increment","tType","dtSigned","incrementMonth","tickset","x2","frac","mod","sRound","r0","tmin","dtNum","cnt","t0","t1","mult","newDTick","error","hover","noSuffixPrefix","out","arrayMode","extraPrecision","axType","_lBreaks","isHidden","showAttr","firstOrLast","first","last","hideexp","showexponent","formatDate","formatLog","formatCategory","formatMultiCategory","formatAngle","formatLinear","tickprefix","showtickprefix","ticksuffix","showticksuffix","tickson","showdividers","inbounds","l2p","xbnd","hoverLabelText","val","val2","logOffScale","tx","c2l","tf","dx","dy","font","family","fontColor","color","tr","fmt","hoverformat","y","m","M","S","dateStr","_dateFormat","_extraFormat","headStr","splitIndex","isInside","ticklabelposition","side","_realSide","dtChar0","numFormat","absP","exponentFormat","firstChar","tt","cats","tt2","text2","thetaunit","num","num2frac","deg2rad","isNeg","join","almostEq","findGCD","findPrecision","e","precision","number","gcd","SIPREFIXES","exponent","fmtoverride","tickRound","separatethousands","ah","_numFormat","dp","numSeparate","_separators","signedExponent","convertToMs","compareLogTicks","left","right","priority","leftPriority","rightPriority","isProperStop","convert","convertFn","leftDtick","rightDtick","isProperLogStop","isLeftDtickNull","isRightDtickNull","isDtickInRangeLeft","isDtickInRangeRight","tickstop","stopi","tickformatstops","enabled","dtickrange","getSubplots","subplotObj","allSubplots","cartesian","gl2d","findSubplotsWithAxis","sort","aParts","split","bParts","subplots","axMatch","RegExp","subplotsWithAx","sp","makeClipPaths","_hasOnlyLargeSploms","fullWidth","_offset","width","fullHeight","height","xaList","yaList","clipList","axClips","_clips","selectAll","enter","append","classed","_uid","exit","remove","each","select","draw","arg","_paper","plotinfo","_plots","xa","xaxis","ya","yaxis","xaxislayer","yaxislayer","gridlayer","zerolinelayer","_infolayer","syncOrAsync","axId","axDone","drawOne","_r","_rl","setScale","mainPlotinfo","_mainSubplot","mainAxLayer","mainLinePosition","_mainLinePosition","mainMirrorPosition","_mainMirrorPosition","_vals","axInfo","mirror","_selections","_tickAngles","_prevTickAngles","_depth","llbboxes","getLabelLevelBbox","suffix","cls","calcLabelLevelBbox","visible","transTickFn","makeTransTickFn","transTickLabelFn","makeTransTickLabelFn","valsClipped","insideTicks","ticks","outsideTicks","boundaryVals","getBoundaryVals","clipEnds","gridVals","_gridVals","dividerVals","getDividerVals","_subplotsWith","finishedGrids","counterAxis","mainCounterID","_mainAxis","gridPath","drawGrid","layer","path","transFn","drawZeroLine","tickSigns","getTickSigns","tickSubplots","mainTickPath","makeTickPath","mirrorTickPath","fullTickPath","_anchorAxis","tickPath","dividerLookup","drawTicks","Object","keys","_linepositions","linepositions","spTickPath","seq","drawLabels","labelFns","makeLabelFns","pad","bboxKey","standoff","getSecondaryLabelVals","repositionOnUpdate","secondary","drawDividers","title","hasOwnProperty","hasRangeSlider","s","sMirror","getPxPosition","outsideTickLen","ticklen","llbbox","mirrorPush","rangeSliderPush","automargin","bottom","domainIndices","top","reverse","rExtra","xr","lExtra","xl","bExtra","yb","tExtra","yt","anchor","position","domain","_dfltTitle","approxTitleDepth","linewidth","_counterDomainMin","_counterDomainMax","autoMargin","axAutoMarginID","axMirrorAutoMarginID","rangeSliderAutoMarginID","skipTitle","drawTitle","_push","bndIndex","xb","extendFlat","lookup","k","interp","current","reversed","Infinity","thisLabel","selectTickLabel","bb","bBox","node","parentNode","sideOpposite","main","uv","getTickLabelUV","u","getPosX","has","str","isTop","isLeft","isRight","isBottom","isAligned","tickwidth","shift","sgn","len","angle","insideTickLabels","labelsOverTicks","labelStandoff","labelShift","tickLen","rad","cos","sin","showticklabels","showline","x0","y0","ff","flipIt","xQ","tickangle","endSide","xFn","yFn","anchorFn","heightFn","h","ang","rA","tickDataFn","crisp","call","stroke","tickcolor","style","crispRound","counterAx","showgrid","shouldShowZeroLine","isArrayMode","xi","grid","_gw","gridwidth","gridcolor","show","zl","da","db","zerolinecolor","defaultLine","zerolinewidth","tickAngle","prevAngle","tickLabels","labelsReady","newPromise","_promises","positionText","convertToTspans","then","positionLabels","mathjaxGroup","transform","nLines","lineCount","lineHeight","anchorHeight","empty","thisText","opacity","_hideOutOfRangeInsideTickLabels","mjWidth","mjShift","rl","p0","p1","isX","hide","allLabelsReady","Promise","all","autoangle","fixLabelOverlaps","maxFontSize","lbbArray","gap","lbb","vLen","tickSpacing","_m","rotate90","bBoxIntersect","_redrawFromAutoMarginCount","anchorAx","_insideTickLabelsAutorange","computeFinalTickLabelBoundingBoxes","done","dividers","insert","dividercolor","dividerwidth","gs","_size","anchorAxis","w","extraLines","match","BR_TAG_ALL","titleStandoff","offsetBase","rotate","offset","avoid","selection","translation","getTranslate","offsetLeft","offsetTop","propContainer","propName","placeholder","attributes","zeroline","anyCounterAxLineAtZero","hasBarsOrFill","mainCounterAxis","zeroPosition","lineNearZero","ax2","tolerance","closeEnough","pos2","linePositions","mainplotinfo","overlays","counterLetterAxes","counterAxis2","fullData","_fullData","subplot","traceIs","orientation","fill","gTick","mj","allowAutoMargin","swap","traces","axGroups","makeAxisGroups","swapAxisGroup","groups","groupsi","yi","group0","groupj","mergeAxisGroups","intoSet","fromSet","xIds","yIds","xFullAxes","yFullAxes","layout","allAxKeys","noSwapAttrs","numericTypes","keyi","xVal","yVal","allEqual","coerceLinearX","coerceLinearY","xVali","yVali","swapAxisAttrs","annotations","ann","xref","yref","swapAttrs","key","dfltTitle","np","nestedProperty","get","set","_rangebreaks","brk"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,gBAAD,CAAvB;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,mBAAD,CAAnB;;AAEA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,gBAAD,CAAtB;;AACA,IAAII,GAAG,GAAGJ,OAAO,CAAC,WAAD,CAAjB;;AACA,IAAIK,YAAY,GAAGD,GAAG,CAACC,YAAvB;;AACA,IAAIC,YAAY,GAAGN,OAAO,CAAC,0BAAD,CAA1B;;AACA,IAAIO,MAAM,GAAGP,OAAO,CAAC,yBAAD,CAApB;;AACA,IAAIQ,KAAK,GAAGR,OAAO,CAAC,wBAAD,CAAnB;;AACA,IAAIS,OAAO,GAAGT,OAAO,CAAC,0BAAD,CAArB;;AAEA,IAAIU,OAAO,GAAGV,OAAO,CAAC,qBAAD,CAArB;;AACA,IAAIW,UAAU,GAAGX,OAAO,CAAC,eAAD,CAAxB;;AAEA,IAAIY,SAAS,GAAGZ,OAAO,CAAC,2BAAD,CAAvB;;AACA,IAAIa,UAAU,GAAGD,SAAS,CAACC,UAA3B;AACA,IAAIC,UAAU,GAAGF,SAAS,CAACE,UAA3B;AACA,IAAIC,UAAU,GAAGH,SAAS,CAACG,UAA3B;AACA,IAAIC,aAAa,GAAGJ,SAAS,CAACI,aAA9B;AACA,IAAIC,aAAa,GAAGL,SAAS,CAACK,aAA9B;AACA,IAAIC,aAAa,GAAGN,SAAS,CAACM,aAA9B;AACA,IAAIC,WAAW,GAAGP,SAAS,CAACO,WAA5B;AACA,IAAIC,WAAW,GAAGR,SAAS,CAACQ,WAA5B;AACA,IAAIC,WAAW,GAAGT,SAAS,CAACS,WAA5B;AACA,IAAIC,OAAO,GAAGV,SAAS,CAACU,OAAxB;AACA,IAAIC,MAAM,GAAGX,SAAS,CAACW,MAAvB;AACA,IAAIC,OAAO,GAAGD,MAAM,GAAG,CAAvB;AACA,IAAIE,OAAO,GAAGb,SAAS,CAACa,OAAxB;AACA,IAAIC,MAAM,GAAGd,SAAS,CAACc,MAAvB;AACA,IAAIC,MAAM,GAAGf,SAAS,CAACe,MAAvB;AACA,IAAIC,UAAU,GAAGhB,SAAS,CAACgB,UAA3B;AACA,IAAIC,MAAM,GAAGjB,SAAS,CAACiB,MAAvB;;AAEA,IAAIC,kBAAkB,GAAG9B,OAAO,CAAC,2BAAD,CAAhC;;AACA,IAAI+B,SAAS,GAAGD,kBAAkB,CAACC,SAAnC;AACA,IAAIC,SAAS,GAAGF,kBAAkB,CAACE,SAAnC;AACA,IAAIC,YAAY,GAAGH,kBAAkB,CAACG,YAAtC;AACA,IAAIC,aAAa,GAAGJ,kBAAkB,CAACI,aAAvC;AAEA,IAAIC,OAAO,GAAG,CAAd;AAEA,IAAIC,IAAI,GAAGC,MAAM,CAACC,OAAP,GAAiB,EAA5B;AAEAF,IAAI,CAACG,UAAL,GAAkBvC,OAAO,CAAC,eAAD,CAAzB;;AACA,IAAIwC,QAAQ,GAAGxC,OAAO,CAAC,iBAAD,CAAtB;;AAEA,IAAIyC,OAAO,GAAGzC,OAAO,CAAC,YAAD,CAArB;;AACA,IAAI0C,MAAM,GAAGD,OAAO,CAACC,MAArB;AACA,IAAIC,QAAQ,GAAGF,OAAO,CAACE,QAAvB,C,CAEA;;AACAP,IAAI,CAACQ,OAAL,GAAeH,OAAO,CAACG,OAAvB;AACAR,IAAI,CAACS,OAAL,GAAeJ,OAAO,CAACI,OAAvB;AACAT,IAAI,CAACU,OAAL,GAAeL,OAAO,CAACK,OAAvB;AACAV,IAAI,CAACW,IAAL,GAAYN,OAAO,CAACM,IAApB;AACAX,IAAI,CAACY,OAAL,GAAeP,OAAO,CAACO,OAAvB;AACAZ,IAAI,CAACa,SAAL,GAAiBR,OAAO,CAACQ,SAAzB;AACAb,IAAI,CAACc,YAAL,GAAoBT,OAAO,CAACS,YAA5B;;AAEA,IAAIC,SAAS,GAAGnD,OAAO,CAAC,aAAD,CAAvB;;AACAoC,IAAI,CAACgB,YAAL,GAAoBD,SAAS,CAACC,YAA9B;AACAhB,IAAI,CAACiB,YAAL,GAAoBF,SAAS,CAACE,YAA9B;AAEA,IAAIC,OAAO,GAAG,MAAd;;AACA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACxB,MAAIC,KAAK,GAAG,CAACD,KAAK,CAAC,CAAD,CAAL,GAAWA,KAAK,CAAC,CAAD,CAAjB,IAAwBF,OAApC;AACA,SAAO,CACHE,KAAK,CAAC,CAAD,CAAL,GAAWC,KADR,EAEHD,KAAK,CAAC,CAAD,CAAL,GAAWC,KAFR,CAAP;AAIH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACArB,IAAI,CAACsB,SAAL,GAAiB,UAASC,WAAT,EAAsBC,YAAtB,EAAoCC,EAApC,EAAwCC,IAAxC,EAA8CC,IAA9C,EAAoDC,WAApD,EAAiE;AAC9E,MAAIC,QAAQ,GAAGH,IAAI,CAACI,MAAL,CAAYJ,IAAI,CAACK,MAAL,GAAc,CAA1B,CAAf;AACA,MAAIC,MAAM,GAAGP,EAAE,CAACQ,WAAH,CAAeC,SAAf,CAAyBL,QAAQ,GAAG,MAApC,CAAb;AACA,MAAIM,OAAO,GAAGT,IAAI,GAAG,KAArB;AACA,MAAIU,OAAO,GAAG,EAAd;AAEA,MAAG,CAACT,IAAJ,EAAUA,IAAI,GAAGK,MAAM,CAAC,CAAD,CAAN,KAAc,OAAOJ,WAAP,KAAuB,QAAvB,GAAkCA,WAAlC,GAAgDA,WAAW,CAAC,CAAD,CAAzE,CAAP;AACV,MAAG,CAACA,WAAJ,EAAiBA,WAAW,GAAGD,IAAd;AACjBK,EAAAA,MAAM,GAAGA,MAAM,CAACK,MAAP,CAAcL,MAAM,CAACM,GAAP,CAAW,UAASC,CAAT,EAAY;AAAE,WAAOA,CAAC,GAAG,SAAX;AAAuB,GAAhD,CAAd,CAAT,CAR8E,CAU9E;;AAEAH,EAAAA,OAAO,CAACD,OAAD,CAAP,GAAmB;AACfK,IAAAA,OAAO,EAAE,YADM;AAEfC,IAAAA,MAAM,EAAET,MAAM,CAACK,MAAP,CAAcT,WAAW,GAC5B,OAAOA,WAAP,KAAuB,QAAvB,GAAkC,CAACA,WAAD,CAAlC,GAAkDA,WADtB,GAE7B,EAFI,CAFO;AAKfD,IAAAA,IAAI,EAAEA;AALS,GAAnB,CAZ8E,CAoB9E;;AACA,SAAO3D,GAAG,CAAC0E,MAAJ,CAAWnB,WAAX,EAAwBC,YAAxB,EAAsCY,OAAtC,EAA+CD,OAA/C,CAAP;AACH,CAtBD;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAnC,IAAI,CAAC2C,UAAL,GAAkB,UAASC,EAAT,EAAa;AAC3B,MAAGA,EAAE,KAAKC,SAAV,EAAqB;AAAE,WAAOD,EAAP;AAAY;;AACnC,MAAGA,EAAE,KAAK,OAAV,EAAmB;AAAE,WAAO,OAAP;AAAiB;;AACtC,MAAGA,EAAE,KAAK,OAAV,EAAmB;AAAE,WAAO,OAAP;AAAiB;;AACtC,MAAG,aAAaE,IAAb,CAAkBF,EAAlB,CAAH,EAA0B;AAAE,WAAO,QAAP;AAAkB,GAA9C,MAAoD;AAAE,WAAO,OAAP;AAAiB;AAC1E,CALD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA5C,IAAI,CAAC+C,cAAL,GAAsB,UAASvB,YAAT,EAAuBC,EAAvB,EAA2BiB,MAA3B,EAAmCM,KAAnC,EAA0CtB,IAA1C,EAAgDC,IAAhD,EAAsD;AACxE,MAAIsB,QAAJ,EAAcC,GAAd;AACA,MAAIC,SAAS,GAAGnD,IAAI,CAAC2C,UAAL,CAAgBK,KAAhB,CAAhB;;AACA,MAAGG,SAAS,KAAK,OAAjB,EAA0B;AACtBF,IAAAA,QAAQ,GAAGjF,GAAG,CAACoF,YAAf;AACAF,IAAAA,GAAG,GAAGR,MAAM,CAAChB,IAAD,EAAOC,IAAP,CAAZ;AACH,GAHD,MAGO;AACH,QAAI0B,EAAE,GAAGrD,IAAI,CAACa,SAAL,CAAeY,EAAf,EAAmBuB,KAAnB,CAAT;AACArB,IAAAA,IAAI,GAAG0B,EAAE,CAACC,UAAH,CAAc3B,IAAd,CAAP;AACAuB,IAAAA,GAAG,GAAGR,MAAM,CAAChB,IAAD,EAAOC,IAAP,CAAZ;AACAsB,IAAAA,QAAQ,GAAGI,EAAE,CAACJ,QAAd;AACH;;AACDzB,EAAAA,YAAY,CAACE,IAAD,CAAZ,GAAqBuB,QAAQ,CAACC,GAAD,CAA7B;AACH,CAbD;;AAeAlD,IAAI,CAACuD,aAAL,GAAqB,UAASL,GAAT,EAAczB,EAAd,EAAkBuB,KAAlB,EAAyB;AAC1C,MAAIC,QAAQ,GAAID,KAAK,KAAK,OAAV,IAAqBA,KAAK,KAAK,OAAhC,GACXhF,GAAG,CAACoF,YADO,GAEXpD,IAAI,CAACa,SAAL,CAAeY,EAAf,EAAmBuB,KAAnB,EAA0BC,QAF9B;AAIA,SAAOA,QAAQ,CAACC,GAAD,CAAf;AACH,CAND;;AAQAlD,IAAI,CAACwD,gBAAL,GAAwB,UAAS/B,EAAT,EAAagC,KAAb,EAAoB;AACxCA,EAAAA,KAAK,GAAGA,KAAK,GAAGA,KAAH,GAAWzD,IAAI,CAACY,OAAL,CAAaa,EAAb,CAAxB;AAEA,MAAIiC,UAAU,GAAGjC,EAAE,CAACQ,WAApB;;AAEA,WAAS0B,cAAT,CAAwBC,UAAxB,EAAoCC,UAApC,EAAgDC,SAAhD,EAA2DC,YAA3D,EAAyE;AACrE,QAAIC,MAAM,GAAGjG,QAAQ,CAACkG,kBAAT,CAA4BL,UAA5B,EAAwCC,UAAxC,CAAb;AACA,QAAIK,KAAK,GAAG,EAAZ;;AAEA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGV,KAAK,CAAC1B,MAAzB,EAAiCoC,CAAC,EAAlC,EAAsC;AAClC,UAAId,EAAE,GAAGK,UAAU,CAAC1D,IAAI,CAACQ,OAAL,CAAaiD,KAAK,CAACU,CAAD,CAAlB,CAAD,CAAnB;AACA,UAAIC,OAAO,GAAGf,EAAE,CAACS,SAAD,CAAhB;;AAEA,WAAI,IAAIO,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,OAAO,CAACrC,MAA3B,EAAmCsC,CAAC,EAApC,EAAwC;AACpC,YAAIC,GAAG,GAAGF,OAAO,CAACC,CAAD,CAAjB;;AAEA,YAAG,CAACH,KAAK,CAACI,GAAD,CAAT,EAAgB;AACZN,UAAAA,MAAM,CAACvC,EAAD,EAAK6C,GAAL,CAAN;AACAJ,UAAAA,KAAK,CAACI,GAAD,CAAL,GAAa,CAAb,CAFY,CAGZ;;AACA,cAAGP,YAAH,EAAiB;AACpB;AACJ;AACJ;AACJ,GAxBuC,CA0BxC;AACA;;;AACAJ,EAAAA,cAAc,CAAC,aAAD,EAAgB,SAAhB,EAA2B,aAA3B,CAAd;;AACAA,EAAAA,cAAc,CAAC,QAAD,EAAW,SAAX,EAAsB,eAAtB,CAAd;;AACAA,EAAAA,cAAc,CAAC,QAAD,EAAW,MAAX,EAAmB,aAAnB,EAAkC,IAAlC,CAAd;AACH,CA/BD;;AAiCA,IAAIY,kBAAkB,GAAGvE,IAAI,CAACuE,kBAAL,GAA0B,UAAS9C,EAAT,EAAa+C,KAAb,EAAoBC,MAApB,EAA4BC,WAA5B,EAAyC;AACxF,MAAIrB,EAAJ,CADwF,CAGxF;AACA;;AACA,MAAIsB,SAAS,GAAIF,MAAM,KAAK,GAAX,IAAkBA,MAAM,KAAK,GAA7B,IAAoCA,MAAM,KAAK,GAAhD,GACZA,MADY,GAEZC,WAFJ,CALwF,CASxF;AACA;AACA;;AACA,MAAGE,KAAK,CAACC,OAAN,CAAcF,SAAd,CAAH,EAA6B;AACzBtB,IAAAA,EAAE,GAAG;AACDyB,MAAAA,IAAI,EAAE1E,QAAQ,CAACsE,WAAD,EAAc7B,SAAd,EAAyB;AACnCkC,QAAAA,eAAe,EAAEtD,EAAE,CAACQ,WAAH,CAAe8C;AADG,OAAzB,CADb;AAIDC,MAAAA,WAAW,EAAE;AAJZ,KAAL;AAMAhF,IAAAA,IAAI,CAACG,UAAL,CAAgBkD,EAAhB,EAPyB,CASzB;;AACA,QAAGA,EAAE,CAACyB,IAAH,KAAY,UAAf,EAA2B;AACvB,WAAI,IAAIX,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGO,WAAW,CAAC3C,MAA/B,EAAuCoC,CAAC,EAAxC,EAA4C;AACxCd,QAAAA,EAAE,CAAC4B,GAAH,CAAOP,WAAW,CAACP,CAAD,CAAlB;AACH;AACJ,KAdwB,CAezB;;AACH,GAhBD,MAgBO;AACHd,IAAAA,EAAE,GAAGrD,IAAI,CAACc,YAAL,CAAkBW,EAAlB,EAAsB+C,KAAtB,EAA6BG,SAA7B,CAAL;AACH,GA9BuF,CAgCxF;AACA;;;AACA,MAAGtB,EAAH,EAAO,OAAO;AAAC4B,IAAAA,GAAG,EAAE5B,EAAE,CAAC4B,GAAT;AAAcC,IAAAA,GAAG,EAAE7B,EAAE,CAAC6B;AAAtB,GAAP,CAlCiF,CAoCxF;AACA;;AACA,MAAGP,SAAS,KAAK,KAAjB,EAAwB,OAAO;AAACM,IAAAA,GAAG,EAAEE,QAAN;AAAgBD,IAAAA,GAAG,EAAEC;AAArB,GAAP,CAtCgE,CAwCxF;AACA;;AAEA,SAAO;AAACF,IAAAA,GAAG,EAAEG,KAAN;AAAaF,IAAAA,GAAG,EAAEE;AAAlB,GAAP;AACH,CA5CD;;AA8CA,SAASA,KAAT,CAAeC,CAAf,EAAkB;AAAE,SAAO,CAACA,CAAR;AAAY;;AAChC,SAASF,QAAT,CAAkBE,CAAlB,EAAqB;AAAE,SAAOC,MAAM,CAACD,CAAD,CAAb;AAAmB;;AAE1CrF,IAAI,CAACuF,kBAAL,GAA0B,UAAS9D,EAAT,EAAa+C,KAAb,EAAoBC,MAApB,EAA4BC,WAA5B,EAAyC;AAC/D,SAAOH,kBAAkB,CAAC9C,EAAD,EAAK+C,KAAL,EAAYC,MAAZ,EAAoBC,WAApB,CAAlB,CAAmDO,GAA1D;AACH,CAFD,C,CAIA;AACA;;;AACAjF,IAAI,CAACwF,aAAL,GAAqB,UAASC,EAAT,EAAa;AAC9B,MAAI5D,QAAQ,GAAG4D,EAAE,CAAC3D,MAAH,CAAU,CAAV,CAAf;AACA,MAAGD,QAAQ,KAAK,GAAhB,EAAqB,OAAO,GAAP;AACrB,MAAGA,QAAQ,KAAK,GAAhB,EAAqB,OAAO,GAAP;AACxB,CAJD,C,CAMA;AACA;AACA;AACA;;;AACA7B,IAAI,CAAC0F,QAAL,GAAgB,UAASrC,EAAT,EAAasC,OAAb,EAAsBC,QAAtB,EAAgCC,KAAhC,EAAuC;AACnD;AACA;AACA,MAAG,CAAC,KAAD,EAAQ,UAAR,EAAoB,eAApB,EAAqCC,OAArC,CAA6CzC,EAAE,CAACyB,IAAhD,MAA0D,CAAC,CAA3D,IAAgE,CAACe,KAApE,EAA2E;AACvExC,IAAAA,EAAE,CAAC0C,SAAH,GAAe,CAAf;AACH,GAFD,MAEO,IAAG1C,EAAE,CAAC0C,SAAH,KAAiBlD,SAApB,EAA+B;AAClC;AAEAQ,IAAAA,EAAE,CAAC0C,SAAH,GAAeJ,OAAf;AACAtC,IAAAA,EAAE,CAAC2C,WAAH,GAAiBJ,QAAjB;AACH,GALM,MAKA,IAAGvC,EAAE,CAAC0C,SAAN,EAAiB;AACpB,QAAG,CAAC1C,EAAE,CAAC0C,SAAH,GAAeJ,OAAf,GAAyB,IAA1B,IAAkC,CAAlC,GAAsC,IAAtC,IACC;AACA;AACA;AAEI,KAAE,CAACC,QAAQ,GAAGvC,EAAE,CAAC2C,WAAf,IAA8BL,OAA9B,GAAwC,CAAzC,GACG,QADJ,IACgB,CADhB,GACoB,IAN5B,EAMkC;AAC9BtC,MAAAA,EAAE,CAAC0C,SAAH,GAAeJ,OAAf;AACAtC,MAAAA,EAAE,CAAC2C,WAAH,GAAiBJ,QAAjB;AACH,KATD,MASO,IAAG,CAACD,OAAO,GAAGtC,EAAE,CAAC0C,SAAb,GAAyB,IAA1B,IAAkC,CAAlC,GAAsC,IAAtC,IACN;AACA;AACA;AAEI,KAAE,CAACH,QAAQ,GAAGvC,EAAE,CAAC2C,WAAf,IAA8B3C,EAAE,CAAC0C,SAAjC,GAA6C,CAA9C,GACG,QADJ,IACgB,CADhB,GACoB,IANrB,EAM2B;AAC9B1C,MAAAA,EAAE,CAAC0C,SAAH,GAAe,CAAf;AACH;AACJ;AACJ,CA9BD,C,CAgCA;AACA;;;AACA/F,IAAI,CAACiG,gBAAL,GAAwB,UAASxE,EAAT,EAAayE,SAAb,EAAwB;AAC5C,MAAIC,MAAM,GAAGnG,IAAI,CAACW,IAAL,CAAUc,EAAV,EAAc,EAAd,EAAkB,IAAlB,CAAb;AACA,MAAI2E,iBAAiB,GAAG,KAAxB;;AAEA,OAAI,IAAIjC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGgC,MAAM,CAACpE,MAA1B,EAAkCoC,CAAC,EAAnC,EAAuC;AACnC,QAAId,EAAE,GAAG8C,MAAM,CAAChC,CAAD,CAAf;AACA,QAAIkC,KAAK,GAAIhD,EAAE,CAACiD,aAAH,KAAqBzD,SAAlC;AACA,QAAI0D,UAAU,GAAGF,KAAK,IAAI,EACtBhD,EAAE,CAACjC,KAAH,CAAS,CAAT,MAAgBiC,EAAE,CAACiD,aAAH,CAAiB,CAAjB,CAAhB,IACAjD,EAAE,CAACjC,KAAH,CAAS,CAAT,MAAgBiC,EAAE,CAACiD,aAAH,CAAiB,CAAjB,CAFM,CAA1B;;AAKA,QAAID,KAAK,IAAIhD,EAAE,CAACtC,SAAH,KAAiB,KAA3B,IAAsCmF,SAAS,IAAIK,UAAtD,EAAmE;AAC/DlD,MAAAA,EAAE,CAACiD,aAAH,GAAmBjD,EAAE,CAACjC,KAAH,CAASoF,KAAT,EAAnB;AACAJ,MAAAA,iBAAiB,GAAG,IAApB;AACH;AACJ;;AAED,SAAOA,iBAAP;AACH,CAnBD,C,CAqBA;;;AACApG,IAAI,CAACyG,oBAAL,GAA4B,UAAShF,EAAT,EAAayE,SAAb,EAAwB;AAChD,MAAIC,MAAM,GAAGnG,IAAI,CAACW,IAAL,CAAUc,EAAV,EAAc,EAAd,EAAkB,IAAlB,CAAb;AACA,MAAI2E,iBAAiB,GAAG,KAAxB;AACA,MAAIM,gBAAgB,GAAG,IAAvB;;AAEA,OAAI,IAAIvC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGgC,MAAM,CAACpE,MAA1B,EAAkCoC,CAAC,EAAnC,EAAuC;AACnC,QAAId,EAAE,GAAG8C,MAAM,CAAChC,CAAD,CAAf;AACA,QAAIkC,KAAK,GAAIhD,EAAE,CAACsD,iBAAH,KAAyB9D,SAAtC;AACA,QAAI0D,UAAU,GAAGF,KAAK,IAAI,EAAEhD,EAAE,CAACuD,UAAH,KAAkBvD,EAAE,CAACwD,WAAvB,CAA1B;;AAEA,QAAGR,KAAK,IAAKH,SAAS,IAAIK,UAA1B,EAAuC;AACnClD,MAAAA,EAAE,CAACsD,iBAAH,GAAuBtD,EAAE,CAACuD,UAA1B;AACAR,MAAAA,iBAAiB,GAAG,IAApB;AACH;;AAED,QAAGM,gBAAgB,KAAK,IAArB,IAA6B,CAACrD,EAAE,CAACuD,UAApC,EAAgD;AAC5CF,MAAAA,gBAAgB,GAAG,KAAnB;AACH;AACJ;;AACDjF,EAAAA,EAAE,CAACQ,WAAH,CAAe6E,uBAAf,GAAyCJ,gBAAzC;AACA,SAAON,iBAAP;AACH,CArBD;;AAuBApG,IAAI,CAAC+G,OAAL,GAAe,UAASC,IAAT,EAAe3D,EAAf,EAAmB4D,KAAnB,EAA0BC,IAA1B,EAAgCC,QAAhC,EAA0CC,IAA1C,EAAgD;AAC3D,MAAIC,OAAO,GAAGrJ,GAAG,CAACsJ,OAAJ,CAAYC,IAAI,CAACC,GAAjB,EAAsB,IAAtB,EAA4BR,IAA5B,CAAd;AACA,MAAIS,OAAO,GAAGzJ,GAAG,CAACsJ,OAAJ,CAAYC,IAAI,CAACG,GAAjB,EAAsB,IAAtB,EAA4BV,IAA5B,CAAd;;AAEA,MAAG3D,EAAE,CAACyB,IAAH,KAAY,UAAZ,IAA0BzB,EAAE,CAACyB,IAAH,KAAY,eAAzC,EAA0D;AACtD,WAAO;AACH6C,MAAAA,KAAK,EAAEN,OAAO,GAAG,GADd;AAEHO,MAAAA,GAAG,EAAEH,OAAO,GAAG,GAFZ;AAGHL,MAAAA,IAAI,EAAEG,IAAI,CAACG,GAAL,CAAS,CAAT,EAAYH,IAAI,CAACM,KAAL,CAAWT,IAAX,KAAoB,CAAhC,CAHH;AAIHU,MAAAA,SAAS,EAAEL,OAAO,GAAGJ;AAJlB,KAAP;AAMH;;AAED,MAAG,CAACF,QAAJ,EAAcA,QAAQ,GAAG9D,EAAE,CAAC8D,QAAd,CAb6C,CAe3D;;AACA,MAAIY,OAAJ;;AACA,MAAG1E,EAAE,CAACyB,IAAH,KAAY,KAAf,EAAsB;AAClBiD,IAAAA,OAAO,GAAG;AACNjD,MAAAA,IAAI,EAAE,QADA;AAEN1D,MAAAA,KAAK,EAAE,CAACiG,OAAD,EAAUI,OAAV;AAFD,KAAV;AAIH,GALD,MAKO;AACHM,IAAAA,OAAO,GAAG;AACNjD,MAAAA,IAAI,EAAEzB,EAAE,CAACyB,IADH;AAEN1D,MAAAA,KAAK,EAAEpD,GAAG,CAACgK,SAAJ,CAAc,CAACX,OAAD,EAAUI,OAAV,CAAd,EAAkCpE,EAAE,CAAC4E,GAArC,EAA0C,CAA1C,EAA6Cd,QAA7C,CAFD;AAGNA,MAAAA,QAAQ,EAAEA;AAHJ,KAAV;AAKH;;AACDnH,EAAAA,IAAI,CAACG,UAAL,CAAgB4H,OAAhB;AAEAX,EAAAA,IAAI,GAAGA,IAAI,IAAI7I,UAAU,CAAC2J,KAAX,CAAiBd,IAAjB,EAAuBW,OAAO,CAACjD,IAA/B,CAAf;;AAEA,MAAGsC,IAAH,EAAS;AACLW,IAAAA,OAAO,CAACG,KAAR,GAAgBd,IAAhB;AACAW,IAAAA,OAAO,CAACI,KAAR,GAAgB5J,UAAU,CAAC4J,KAAX,CAAiBtF,SAAjB,EAA4BkF,OAAO,CAACjD,IAApC,EAA0CqC,QAA1C,CAAhB;AACH,GAHD,MAGO;AACH,QAAIiB,KAAJ;AACA,QAAGnB,KAAH,EAAUmB,KAAK,GAAI,CAACX,OAAO,GAAGJ,OAAX,IAAsBJ,KAA/B,CAAV,KACK;AACD;AACA;AACA;AACA;AACA,UAAIoB,YAAY,GAAGrK,GAAG,CAACsK,YAAJ,CAAiBtB,IAAjB,CAAnB;AACA,UAAIuB,KAAK,GAAGhB,IAAI,CAACiB,GAAL,CAAS,EAAT,EAAajB,IAAI,CAACkB,KAAL,CACrBlB,IAAI,CAACmB,GAAL,CAASL,YAAY,CAACM,OAAtB,IAAiCpB,IAAI,CAACqB,IADjB,CAAb,CAAZ;AAEA,UAAIC,OAAO,GAAGN,KAAK,GAAGvK,GAAG,CAAC8K,OAAJ,CAClBT,YAAY,CAACM,OAAb,GAAuBJ,KADL,EACY,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CADZ,EACkC,IADlC,CAAtB;AAEAH,MAAAA,KAAK,GAAGb,IAAI,CAACG,GAAL,CAASmB,OAAT,EAAkB,IAAI7K,GAAG,CAAC+K,KAAJ,CAAU/B,IAAV,CAAJ,GACtBO,IAAI,CAACiB,GAAL,CAASxB,IAAI,CAACjF,MAAd,EAAsBmF,IAAI,GAAG,IAAH,GAAU,GAApC,CADI,CAAR,CAVC,CAaD;AACA;AACA;;AACA,UAAG,CAACrJ,SAAS,CAACuK,KAAD,CAAb,EAAsBA,KAAK,GAAG,CAAR;AACzB;AAEDpI,IAAAA,IAAI,CAACgJ,SAAL,CAAejB,OAAf,EAAwBK,KAAxB;AACH;;AAED,MAAIa,SAAS,GAAGlB,OAAO,CAACG,KAAxB;AACA,MAAIgB,QAAQ,GAAGlJ,IAAI,CAACmJ,aAAL,CACPnJ,IAAI,CAACoJ,SAAL,CAAerB,OAAf,CADO,EACkBkB,SADlB,EAC6B,SAD7B,EACwC9B,QADxC,CAAf;AAEA,MAAIkC,MAAJ,EAAYC,QAAZ,CAhE2D,CAkE3D;AACA;AACA;;AACA,MAAG,OAAOL,SAAP,KAAqB,QAAxB,EAAkC;AAC9BC,IAAAA,QAAQ,GAAGK,oBAAoB,CAACL,QAAD,EAAWlC,IAAX,EAAiBe,OAAjB,EAA0BV,OAA1B,EAAmCI,OAAnC,CAA/B;AAEA6B,IAAAA,QAAQ,GAAG,IAAI/B,IAAI,CAACkB,KAAL,CAAW,CAAChB,OAAO,GAAGyB,QAAX,IAAuBD,SAAlC,CAAf;AACAI,IAAAA,MAAM,GAAGH,QAAQ,GAAGI,QAAQ,GAAGL,SAA/B;AACH,GALD,MAKO;AACH;AACA;AACA;AACA;AACA;AACA,QAAGlB,OAAO,CAACG,KAAR,CAAcpG,MAAd,CAAqB,CAArB,MAA4B,GAA/B,EAAoC;AAChCoH,MAAAA,QAAQ,GAAGM,kBAAkB,CAACN,QAAD,EAAWlC,IAAX,EAAiBiC,SAAjB,EAA4B5B,OAA5B,EAAqCF,QAArC,CAA7B;AACH,KARE,CAUH;AACA;;;AACAkC,IAAAA,MAAM,GAAGH,QAAT;AACAI,IAAAA,QAAQ,GAAG,CAAX;;AACA,WAAMD,MAAM,IAAI5B,OAAhB,EAAyB;AACrB4B,MAAAA,MAAM,GAAGrJ,IAAI,CAACmJ,aAAL,CAAmBE,MAAnB,EAA2BJ,SAA3B,EAAsC,KAAtC,EAA6C9B,QAA7C,CAAT;AACAmC,MAAAA,QAAQ;AACX;AACJ;;AAED,SAAO;AACH3B,IAAAA,KAAK,EAAEtE,EAAE,CAAC4E,GAAH,CAAOiB,QAAP,EAAiB,CAAjB,EAAoB/B,QAApB,CADJ;AAEHS,IAAAA,GAAG,EAAEvE,EAAE,CAAC4E,GAAH,CAAOoB,MAAP,EAAe,CAAf,EAAkBlC,QAAlB,CAFF;AAGHC,IAAAA,IAAI,EAAE6B,SAHH;AAIHnB,IAAAA,SAAS,EAAEL,OAAO,GAAGJ;AAJlB,GAAP;AAMH,CApGD;;AAuGA,SAASkC,oBAAT,CAA8BL,QAA9B,EAAwClC,IAAxC,EAA8C3D,EAA9C,EAAkDgE,OAAlD,EAA2DI,OAA3D,EAAoE;AAChE,MAAIgC,SAAS,GAAG,CAAhB;AACA,MAAIC,QAAQ,GAAG,CAAf;AACA,MAAIC,QAAQ,GAAG,CAAf;AACA,MAAIC,UAAU,GAAG,CAAjB;;AAEA,WAASC,QAAT,CAAkBxE,CAAlB,EAAqB;AACjB;AACA,WAAO,CAAC,IAAI,CAACA,CAAC,GAAG6D,QAAL,IAAiB,GAAjB,GAAuB7F,EAAE,CAAC6E,KAA/B,IAAwC,GAAxC,GAA8C,CAArD;AACH;;AAED,OAAI,IAAI/D,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG6C,IAAI,CAACjF,MAAxB,EAAgCoC,CAAC,EAAjC,EAAqC;AACjC,QAAG6C,IAAI,CAAC7C,CAAD,CAAJ,GAAU,CAAV,KAAgB,CAAnB,EAAsBwF,QAAQ,GAA9B,KACK,IAAG,CAAC9L,SAAS,CAACmJ,IAAI,CAAC7C,CAAD,CAAL,CAAb,EAAwByF,UAAU;AAEvC,QAAGC,QAAQ,CAAC7C,IAAI,CAAC7C,CAAD,CAAL,CAAX,EAAsBsF,SAAS;AAC/B,QAAGI,QAAQ,CAAC7C,IAAI,CAAC7C,CAAD,CAAJ,GAAUd,EAAE,CAAC6E,KAAH,GAAW,CAAtB,CAAX,EAAqCwB,QAAQ;AAChD;;AACD,MAAII,SAAS,GAAG9C,IAAI,CAACjF,MAAL,GAAc6H,UAA9B;;AAEA,MAAGD,QAAQ,KAAKG,SAAb,IAA0BzG,EAAE,CAACyB,IAAH,KAAY,MAAzC,EAAiD;AAC7C,QAAGzB,EAAE,CAAC6E,KAAH,GAAW,CAAd,EAAiB;AACb;AACA;AACA;AACA;AAEAgB,MAAAA,QAAQ,GAAG7B,OAAO,GAAG,MAAMhE,EAAE,CAAC6E,KAA9B;AACH,KAPD,MAOO;AACH;AACA;AACA;AAEAgB,MAAAA,QAAQ,IAAI,GAAZ;AACA,UAAGA,QAAQ,GAAG7F,EAAE,CAAC6E,KAAd,GAAsBb,OAAzB,EAAkC6B,QAAQ,IAAI7F,EAAE,CAAC6E,KAAf;AACrC;AACJ,GAhBD,MAgBO,IAAGwB,QAAQ,GAAGI,SAAS,GAAG,GAA1B,EAA+B;AAClC,QAAGL,SAAS,GAAGK,SAAS,GAAG,GAAxB,IACKD,QAAQ,CAACxC,OAAD,CADb,IAC0BwC,QAAQ,CAACpC,OAAD,CADrC,EACgD;AAC5C;AACA;AACA,UAAIsC,QAAQ,GAAG1G,EAAE,CAAC6E,KAAH,GAAW,CAA1B;AACAgB,MAAAA,QAAQ,IAAKA,QAAQ,GAAGa,QAAX,GAAsB1C,OAAvB,GAAkC0C,QAAlC,GAA6C,CAACA,QAA1D;AACH;AACJ;;AACD,SAAOb,QAAP;AACH;;AAGD,SAASM,kBAAT,CAA4BN,QAA5B,EAAsClC,IAAtC,EAA4CkB,KAA5C,EAAmDb,OAAnD,EAA4DF,QAA5D,EAAsE;AAClE,MAAI6C,KAAK,GAAGhM,GAAG,CAACiM,cAAJ,CAAmBjD,IAAnB,EAAyBG,QAAzB,CAAZ,CADkE,CAElE;AACA;;AACA,MAAI+C,SAAS,GAAG,GAAhB;;AAEA,MAAGF,KAAK,CAACG,SAAN,GAAkBD,SAArB,EAAgC;AAC5B,QAAIE,SAAS,GAAGC,MAAM,CAACnC,KAAK,CAACoC,MAAN,CAAa,CAAb,CAAD,CAAtB;;AAEA,QAAIN,KAAK,CAACO,UAAN,GAAmBL,SAApB,IAAmCE,SAAS,GAAG,EAAZ,KAAmB,CAAzD,EAA6D;AACzD;AACA;AACA;AACAlB,MAAAA,QAAQ,GAAGlJ,IAAI,CAACmJ,aAAL,CAAmBD,QAAnB,EAA6B,IAA7B,EAAmC,SAAnC,IAAgD/J,MAAM,GAAG,GAApE;AACH,KALD,MAKO,IAAG6K,KAAK,CAACQ,WAAN,GAAoBN,SAAvB,EAAkC;AACrC;AACA;AACA;AACA;AACAhB,MAAAA,QAAQ,GAAGlJ,IAAI,CAACmJ,aAAL,CAAmBD,QAAnB,EAA6B,IAA7B,EAAmC,SAAnC,IAAgD/J,MAAM,GAAG,IAApE;AACH,KANM,MAMA;AACH;AACA;AACA;AACA;AACA+J,MAAAA,QAAQ,IAAI9J,OAAZ;AACH;;AACD,QAAIqL,YAAY,GAAGzK,IAAI,CAACmJ,aAAL,CAAmBD,QAAnB,EAA6BhB,KAA7B,CAAnB;AAEA,QAAGuC,YAAY,IAAIpD,OAAnB,EAA4B,OAAOoD,YAAP;AAC/B;;AACD,SAAOvB,QAAP;AACH,C,CAED;AACA;AACA;AAEA;;;AACAlJ,IAAI,CAAC0K,SAAL,GAAiB,UAASrH,EAAT,EAAasH,IAAb,EAAmB;AAChC,MAAIC,GAAG,GAAG5M,GAAG,CAACgK,SAAJ,CAAc3E,EAAE,CAACjC,KAAjB,EAAwBiC,EAAE,CAACwH,GAA3B,EAAgChI,SAAhC,EAA2CA,SAA3C,EAAsD8H,IAAtD,CAAV;AAEAtH,EAAAA,EAAE,CAACyH,UAAH,GAAgBzH,EAAE,CAAC6E,KAAnB;AACA7E,EAAAA,EAAE,CAAC0H,UAAH,GAAgB1H,EAAE,CAAC8E,KAAnB,CAJgC,CAMhC;;AACA,MAAG9E,EAAE,CAAC2H,QAAH,KAAgB,MAAhB,IAA0B,CAAC3H,EAAE,CAAC6E,KAAjC,EAAwC;AACpC,QAAI+C,EAAE,GAAG5H,EAAE,CAAC6H,MAAZ;AACA,QAAIC,KAAJ;;AAEA,QAAG,CAACF,EAAJ,EAAQ;AACJ,UAAG5H,EAAE,CAACyB,IAAH,KAAY,UAAZ,IAA0BzB,EAAE,CAACyB,IAAH,KAAY,eAAzC,EAA0D;AACtDqG,QAAAA,KAAK,GAAG9H,EAAE,CAAC+H,QAAH,GAAc,CAAC/H,EAAE,CAAC+H,QAAH,CAAYhE,IAAZ,IAAoB,EAArB,IAA2B,GAAzC,GAA+C,EAAvD;AACA6D,QAAAA,EAAE,GAAG5H,EAAE,CAACgI,OAAH,GAAaF,KAAlB;AACH,OAHD,MAGO;AACHA,QAAAA,KAAK,GAAG9H,EAAE,CAACiI,GAAH,CAAOxJ,MAAP,CAAc,CAAd,MAAqB,GAArB,GAA2B,EAA3B,GAAgC,EAAxC;AACAmJ,QAAAA,EAAE,GAAGjN,GAAG,CAACuN,SAAJ,CAAclI,EAAE,CAACgI,OAAH,GAAaF,KAA3B,EAAkC,CAAlC,EAAqC,CAArC,IAA0C,CAA/C;AACH,OAPG,CASJ;AACA;;;AACA,UAAG9H,EAAE,CAACmI,KAAH,KAAa,YAAhB,EAA8BP,EAAE,IAAI,CAAN;AACjC,KAhBmC,CAkBpC;AACA;;;AACA,QAAG5H,EAAE,CAAC2H,QAAH,KAAgB,OAAnB,EAA4BC,EAAE,IAAI,GAAN;AAG5B5H,IAAAA,EAAE,CAACoI,WAAH,GAAiBlE,IAAI,CAACmE,GAAL,CAASd,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAArB,IAA4BK,EAA7C;AACAjL,IAAAA,IAAI,CAACgJ,SAAL,CAAe3F,EAAf,EAAmBA,EAAE,CAACoI,WAAtB,EAxBoC,CA0BpC;;AACA,QAAGpI,EAAE,CAAC0C,SAAH,GAAe,CAAf,IAAoB1C,EAAE,CAAC6E,KAAH,GAAW7E,EAAE,CAAC0C,SAAH,GAAe,CAAjD,EAAoD;AAChD1C,MAAAA,EAAE,CAAC6E,KAAH,GAAW7E,EAAE,CAAC0C,SAAd;AACA1C,MAAAA,EAAE,CAAC8E,KAAH,GAAW9E,EAAE,CAACsI,GAAH,CAAOtI,EAAE,CAAC2C,WAAV,CAAX;AACH;AACJ;;AAED,MAAG3C,EAAE,CAACuI,aAAH,KAAqB,QAAxB,EAAkC;AAC9BC,IAAAA,iBAAiB,CAACxI,EAAD,CAAjB;AACH,GA1C+B,CA4ChC;;;AACA,MAAG,CAACA,EAAE,CAAC8E,KAAP,EAAc;AACV9E,IAAAA,EAAE,CAAC8E,KAAH,GAAY9E,EAAE,CAACyB,IAAH,KAAY,MAAb,GAAuB,YAAvB,GAAsC,CAAjD;AACH,GA/C+B,CAiDhC;AACA;;;AACA,MAAGzB,EAAE,CAACyB,IAAH,KAAY,MAAZ,IAAsBzB,EAAE,CAAC6E,KAAH,GAAW,GAApC,EAAyC7E,EAAE,CAAC6E,KAAH,GAAW,GAAX,CAnDT,CAqDhC;;AACA4D,EAAAA,aAAa,CAACzI,EAAD,CAAb;AACH,CAvDD;;AAyDA,SAAS0I,OAAT,CAAiB7D,KAAjB,EAAwB;AACpB,SAAO,CAAEA,KAAK,CAAC8D,SAAN,CAAgB,CAAhB,CAAT;AACH;;AAED,SAASH,iBAAT,CAA2BxI,EAA3B,EAA+B;AAAE;AAC7B,MAAI4I,YAAJ;;AAEA,WAASC,KAAT,GAAiB;AACb,WAAO,EACHrO,SAAS,CAACwF,EAAE,CAAC6E,KAAJ,CAAT,IACA7E,EAAE,CAAC6E,KAAH,CAASpG,MAAT,CAAgB,CAAhB,MAAuB,GAFpB,CAAP;AAIH;;AACD,MAAIqK,OAAO,GAAGD,KAAK,EAAnB;AACA,MAAIE,UAAU,GAAGpM,IAAI,CAACqM,aAAL,CAAmBhJ,EAAnB,CAAjB;;AACA,MAAG+I,UAAH,EAAe;AACX,QAAIE,OAAO,GAAGjJ,EAAE,CAACyH,UAAH,KAAkBzH,EAAE,CAAC6E,KAAnC;;AACA,QACI,CAAE,aAAapF,IAAb,CAAkBsJ,UAAlB,CADN,CAEI;AACA;AACA;AACA;AACA;AACA;AACA;AARJ,MASE;AACE,YACI,QAAQtJ,IAAR,CAAasJ,UAAb,CADJ,CAEI;AACA;AAHJ,UAIE;AACEH,YAAAA,YAAY,GAAG5M,OAAf;AACA,gBAAGiN,OAAO,IAAI,CAACH,OAAZ,IAAuB9I,EAAE,CAAC6E,KAAH,GAAW7I,OAArC,EAA8CgE,EAAE,CAAC6E,KAAH,GAAW7I,OAAX;AACjD,WAPD,MAOO,IACH,KAAKyD,IAAL,CAAUsJ,UAAV,CADG,CACmB;AADnB,UAEL;AACEH,YAAAA,YAAY,GAAG7M,OAAf;AACA,gBAAGkN,OAAO,IAAI,CAACH,OAAZ,IAAuB9I,EAAE,CAAC6E,KAAH,GAAW9I,OAArC,EAA8CiE,EAAE,CAAC6E,KAAH,GAAW9I,OAAX;AACjD,WALM,MAKA,IACH,cAAc0D,IAAd,CAAmBsJ,UAAnB,CADG,CAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATG,UAUL;AACEH,YAAAA,YAAY,GAAG9M,MAAf;AACA,gBAAGmN,OAAO,IAAI,CAACH,OAAZ,IAAuB9I,EAAE,CAAC6E,KAAH,GAAW/I,MAArC,EAA6CkE,EAAE,CAAC6E,KAAH,GAAW/I,MAAX;AAChD,WAbM,MAaA,IACH,SAAS2D,IAAT,CAAcsJ,UAAd,CADG,CAEH;AACA;AACA;AAJG,UAKL;AACEH,YAAAA,YAAY,GAAG/M,OAAf;AACA,gBAAGoN,OAAO,IAAI,CAACH,OAAZ,IAAuB9I,EAAE,CAAC6E,KAAH,GAAWhJ,OAArC,EAA8CmE,EAAE,CAAC6E,KAAH,GAAWhJ,OAAX;AACjD,WARM,MAQA,IACH,SAAS4D,IAAT,CAAcsJ,UAAd,CADG,CAEH;AACA;AACA;AAJG,UAKL;AACEH,YAAAA,YAAY,GAAGjN,WAAf;AACA,gBAAGsN,OAAO,KACNH,OAAO,GAAGJ,OAAO,CAAC1I,EAAE,CAAC6E,KAAJ,CAAP,GAAoB,CAAvB,GAA2B7E,EAAE,CAAC6E,KAAH,GAAWjJ,WADvC,CAAV,EAEEoE,EAAE,CAAC6E,KAAH,GAAW,IAAX;AACL,WAVM,MAUA,IACH,OAAOpF,IAAP,CAAYsJ,UAAZ,CADG,CAEH;AAFG,UAGL;AACEH,YAAAA,YAAY,GAAGpN,aAAf;AACA,gBAAGyN,OAAO,KACNH,OAAO,GAAGJ,OAAO,CAAC1I,EAAE,CAAC6E,KAAJ,CAAP,GAAoB,CAAvB,GAA2B7E,EAAE,CAAC6E,KAAH,GAAWpJ,aADvC,CAAV,EAEEuE,EAAE,CAAC6E,KAAH,GAAW,IAAX;AACL,WARM,MAQA,IACH,QAAQpF,IAAR,CAAasJ,UAAb,CADG,CAEH;AACA;AAHG,UAIL;AACEH,YAAAA,YAAY,GAAGvN,UAAf;AACA,gBAAG4N,OAAO,KACNH,OAAO,GAAGJ,OAAO,CAAC1I,EAAE,CAAC6E,KAAJ,CAAP,GAAoB,EAAvB,GAA4B7E,EAAE,CAAC6E,KAAH,GAAWvJ,UADxC,CAAV,EAEE0E,EAAE,CAAC6E,KAAH,GAAW,KAAX;AACL;AACJ;AACJ;;AAEDiE,EAAAA,OAAO,GAAGD,KAAK,EAAf;;AACA,MAAGC,OAAO,IAAI9I,EAAE,CAAC8E,KAAH,KAAa9E,EAAE,CAACkJ,SAA9B,EAAyC;AACrC;AACAlJ,IAAAA,EAAE,CAAC8E,KAAH,GAAW9E,EAAE,CAACmJ,SAAd;AACH;;AAEDnJ,EAAAA,EAAE,CAACoJ,aAAH,GAAmBR,YAAnB;AACH;;AAED,SAASS,mBAAT,CAA6BC,QAA7B,EAAuCtJ,EAAvC,EAA2C4I,YAA3C,EAAyD;AACrD,OAAI,IAAI9H,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGwI,QAAQ,CAAC5K,MAA5B,EAAoCoC,CAAC,EAArC,EAAyC;AACrC,QAAIkB,CAAC,GAAGsH,QAAQ,CAACxI,CAAD,CAAR,CAAYyI,KAApB;AAEA,QAAIC,CAAC,GAAG1I,CAAR;AACA,QAAI2I,CAAC,GAAG3I,CAAC,GAAG,CAAZ;;AACA,QAAGA,CAAC,GAAGwI,QAAQ,CAAC5K,MAAT,GAAkB,CAAzB,EAA4B;AACxB8K,MAAAA,CAAC,GAAG1I,CAAJ;AACA2I,MAAAA,CAAC,GAAG3I,CAAC,GAAG,CAAR;AACH,KAHD,MAGO,IAAGA,CAAC,GAAG,CAAP,EAAU;AACb0I,MAAAA,CAAC,GAAG1I,CAAC,GAAG,CAAR;AACA2I,MAAAA,CAAC,GAAG3I,CAAJ;AACH,KAHM,MAGA;AACH0I,MAAAA,CAAC,GAAG1I,CAAJ;AACA2I,MAAAA,CAAC,GAAG3I,CAAJ;AACH;;AAED,QAAI4I,CAAC,GAAGJ,QAAQ,CAACE,CAAD,CAAR,CAAYD,KAApB;AACA,QAAII,CAAC,GAAGL,QAAQ,CAACG,CAAD,CAAR,CAAYF,KAApB;AACA,QAAIK,WAAW,GAAG1F,IAAI,CAACmE,GAAL,CAASsB,CAAC,GAAGD,CAAb,CAAlB;AACA,QAAI1L,KAAK,GAAG4K,YAAY,IAAIgB,WAA5B;AACA,QAAIC,YAAY,GAAG,CAAnB;;AAEA,QAAG7L,KAAK,IAAI1C,UAAZ,EAAwB;AACpB,UAAGsO,WAAW,IAAItO,UAAf,IAA6BsO,WAAW,IAAIxO,UAA/C,EAA2D;AACvDyO,QAAAA,YAAY,GAAGD,WAAf;AACH,OAFD,MAEO;AACHC,QAAAA,YAAY,GAAGxO,UAAf;AACH;AACJ,KAND,MAMO,IAAGuN,YAAY,KAAKpN,aAAjB,IAAkCwC,KAAK,IAAIvC,aAA9C,EAA6D;AAChE,UAAGmO,WAAW,IAAInO,aAAf,IAAgCmO,WAAW,IAAIrO,aAAlD,EAAiE;AAC7DsO,QAAAA,YAAY,GAAGD,WAAf;AACH,OAFD,MAEO;AACHC,QAAAA,YAAY,GAAGrO,aAAf;AACH;AACJ,KANM,MAMA,IAAGwC,KAAK,IAAIpC,WAAZ,EAAyB;AAC5B,UAAGgO,WAAW,IAAIhO,WAAf,IAA8BgO,WAAW,IAAIlO,WAAhD,EAA6D;AACzDmO,QAAAA,YAAY,GAAGD,WAAf;AACH,OAFD,MAEO;AACHC,QAAAA,YAAY,GAAGlO,WAAf;AACH;AACJ,KANM,MAMA,IAAGiN,YAAY,KAAK/M,OAAjB,IAA4BmC,KAAK,IAAInC,OAAxC,EAAiD;AACpDgO,MAAAA,YAAY,GAAGhO,OAAf;AACH,KAFM,MAEA,IAAGmC,KAAK,IAAIlC,MAAZ,EAAoB;AACvB+N,MAAAA,YAAY,GAAG/N,MAAf;AACH,KAFM,MAEA,IAAG8M,YAAY,KAAK7M,OAAjB,IAA4BiC,KAAK,IAAIjC,OAAxC,EAAiD;AACpD8N,MAAAA,YAAY,GAAG9N,OAAf;AACH,KAFM,MAEA,IAAG6M,YAAY,KAAK5M,OAAjB,IAA4BgC,KAAK,IAAIhC,OAAxC,EAAiD;AACpD6N,MAAAA,YAAY,GAAG7N,OAAf;AACH;;AAED,QAAI8N,SAAJ;;AACA,QAAGD,YAAY,IAAID,WAAnB,EAAgC;AAC5B;AACAC,MAAAA,YAAY,GAAGD,WAAf;AACAE,MAAAA,SAAS,GAAG,IAAZ;AACH;;AAED,QAAIC,SAAS,GAAG/H,CAAC,GAAG6H,YAApB;;AACA,QAAG7J,EAAE,CAACgK,WAAH,IAAkBH,YAAY,GAAG,CAApC,EAAuC;AACnC,UAAII,IAAI,GAAG,EAAX,CADmC,CACpB;;AACf,UAAIC,CAAC,GAAG,CAAR;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,IAAnB,EAAyBE,CAAC,EAA1B,EAA8B;AAC1B,YAAIC,CAAC,GAAG,CAACD,CAAC,GAAG,GAAL,IAAYF,IAApB;AACA,YAAGjK,EAAE,CAACqK,UAAH,CAAcrI,CAAC,IAAI,IAAIoI,CAAR,CAAD,GAAcA,CAAC,GAAGL,SAAhC,MAA+C3N,MAAlD,EAA0D8N,CAAC;AAC9D;;AACDL,MAAAA,YAAY,IAAIK,CAAC,GAAGD,IAApB;;AAEA,UAAG,CAACJ,YAAJ,EAAkB;AACdP,QAAAA,QAAQ,CAACxI,CAAD,CAAR,CAAYwJ,IAAZ,GAAmB,IAAnB;AACH;;AAED,UAAGR,SAAS,IAAIF,WAAW,GAAG/N,OAA9B,EAAuCgO,YAAY,GAAGD,WAAf,CAbJ,CAagC;AACtE;;AAED,QACIC,YAAY,GAAG,CAAf,IAAoB;AACpB/I,IAAAA,CAAC,KAAK,CAFV,CAEY;AAFZ,MAGE;AACEwI,QAAAA,QAAQ,CAACxI,CAAD,CAAR,CAAYyJ,OAAZ,GAAsBvI,CAAC,GAAG6H,YAAY,GAAG,CAAzC;AACH;AACJ;AACJ,C,CAED;AACA;AACA;AACA;;;AACAlN,IAAI,CAAC6N,SAAL,GAAiB,SAASA,SAAT,CAAmBxK,EAAnB,EAAuBsH,IAAvB,EAA6B;AAC1C3K,EAAAA,IAAI,CAAC0K,SAAL,CAAerH,EAAf,EAAmBsH,IAAnB;AACA,MAAIC,GAAG,GAAG5M,GAAG,CAACgK,SAAJ,CAAc3E,EAAE,CAACjC,KAAjB,EAAwBiC,EAAE,CAACwH,GAA3B,EAAgChI,SAAhC,EAA2CA,SAA3C,EAAsD8H,IAAtD,CAAV,CAF0C,CAI1C;AACA;;AACA,MAAGtH,EAAE,CAAC2H,QAAH,KAAgB,OAAnB,EAA4B,OAAO8C,UAAU,CAACzK,EAAD,CAAjB,CANc,CAQ1C;;AACA,MAAI0K,KAAK,GAAG5M,WAAW,CAACyJ,GAAD,CAAvB;AACA,MAAIoD,SAAS,GAAGD,KAAK,CAAC,CAAD,CAArB;AACA,MAAIE,OAAO,GAAGF,KAAK,CAAC,CAAD,CAAnB,CAX0C,CAY1C;;AACA,MAAIG,KAAK,GAAItD,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAzB;AACA,MAAIuD,QAAQ,GAAG5G,IAAI,CAACC,GAAL,CAASoD,GAAG,CAAC,CAAD,CAAZ,EAAiBA,GAAG,CAAC,CAAD,CAApB,CAAf;AACA,MAAIwD,QAAQ,GAAG7G,IAAI,CAACG,GAAL,CAASkD,GAAG,CAAC,CAAD,CAAZ,EAAiBA,GAAG,CAAC,CAAD,CAApB,CAAf;AAEA,MAAIyD,MAAM,GAAIhL,EAAE,CAACyB,IAAH,KAAY,KAAb,IAAuB,EAAEjH,SAAS,CAACwF,EAAE,CAAC6E,KAAJ,CAAT,IAAuB7E,EAAE,CAAC6E,KAAH,CAASpG,MAAT,CAAgB,CAAhB,MAAuB,GAAhD,CAApC;AACA,MAAIwM,QAAQ,GAAGjL,EAAE,CAACuI,aAAH,KAAqB,QAApC,CAlB0C,CAoB1C;;AACAvI,EAAAA,EAAE,CAACkL,KAAH,GAAWvO,IAAI,CAACoJ,SAAL,CAAe/F,EAAf,EAAmBsH,IAAnB,CAAX,CArB0C,CAuB1C;AACA;;AACA,MAAItH,EAAE,CAACkL,KAAH,GAAWP,SAAZ,KAA2BE,KAA9B,EAAqC,OAAO,EAAP,CAzBK,CA2B1C;;AACA,MAAG7K,EAAE,CAACyB,IAAH,KAAY,UAAZ,IAA0BzB,EAAE,CAACyB,IAAH,KAAY,eAAzC,EAA0D;AACtDmJ,IAAAA,OAAO,GAAIC,KAAD,GAAU3G,IAAI,CAACG,GAAL,CAAS,CAAC,GAAV,EAAeuG,OAAf,CAAV,GACN1G,IAAI,CAACC,GAAL,CAASnE,EAAE,CAAC2B,WAAH,CAAejD,MAAf,GAAwB,GAAjC,EAAsCkM,OAAtC,CADJ;AAEH;;AAED,MAAI1L,CAAC,GAAGc,EAAE,CAACkL,KAAX;;AAEA,MAAGlL,EAAE,CAACgK,WAAH,IAAkBhK,EAAE,CAAC0H,UAAH,KAAkB1H,EAAE,CAAC8E,KAA1C,EAAiD;AAC7C;AACA5F,IAAAA,CAAC,GAAGiM,gBAAgB,CAACjM,CAAD,EAAIc,EAAJ,CAApB;;AACA,QAAG,CAAC6K,KAAJ,EAAW;AACP3L,MAAAA,CAAC,GAAGvC,IAAI,CAACmJ,aAAL,CAAmB5G,CAAnB,EAAsBc,EAAE,CAAC6E,KAAzB,EAAgC,CAACgG,KAAjC,EAAwC7K,EAAE,CAAC8D,QAA3C,CAAJ;AACH;AACJ;;AAED,MAAGmH,QAAH,EAAa;AACT;AACA/L,IAAAA,CAAC,GAAGvC,IAAI,CAACmJ,aAAL,CAAmB5G,CAAnB,EAAsBc,EAAE,CAAC6E,KAAzB,EAAgC,CAACgG,KAAjC,EAAwC7K,EAAE,CAAC8D,QAA3C,CAAJ;AACH;;AAED,MAAIsH,QAAQ,GAAGlH,IAAI,CAACG,GAAL,CAAS,IAAT,EAAerE,EAAE,CAACgI,OAAH,IAAc,CAA7B,CAAf;AACA,MAAIsB,QAAQ,GAAG,EAAf;AACA,MAAI+B,SAAS,GAAG,IAAhB;;AACA,SACKR,KAAD,GAAW3L,CAAC,IAAI0L,OAAhB,GAA4B1L,CAAC,IAAI0L,OADrC,EAEI1L,CAAC,GAAGvC,IAAI,CAACmJ,aAAL,CAAmB5G,CAAnB,EAAsBc,EAAE,CAAC6E,KAAzB,EAAgCgG,KAAhC,EAAuC7K,EAAE,CAAC8D,QAA1C,CAFR,EAGE;AACE,QAAG9D,EAAE,CAACgK,WAAN,EAAmB;AACf,UAAG,CAACa,KAAJ,EAAW;AACP,YAAG3L,CAAC,GAAGyL,SAAP,EAAkB;AAClB,YAAG3K,EAAE,CAACqK,UAAH,CAAcnL,CAAd,MAAqB9C,MAArB,IAA+B+O,gBAAgB,CAACjM,CAAD,EAAIc,EAAJ,CAAhB,IAA2B+K,QAA7D,EAAuE;AAC1E;AACJ,KANH,CAQE;AACA;;;AACA,QAAGzB,QAAQ,CAAC5K,MAAT,GAAkB0M,QAAlB,IAA8BlM,CAAC,KAAKmM,SAAvC,EAAkD;AAClDA,IAAAA,SAAS,GAAGnM,CAAZ;AAEA,QAAIoM,KAAK,GAAG,KAAZ;;AACA,QAAGN,MAAM,IAAK9L,CAAC,MAAMA,CAAC,GAAG,CAAV,CAAf,EAA8B;AAC1BoM,MAAAA,KAAK,GAAG,IAAR;AACH;;AAEDhC,IAAAA,QAAQ,CAACiC,IAAT,CAAc;AACVD,MAAAA,KAAK,EAAEA,KADG;AAEV/B,MAAAA,KAAK,EAAErK;AAFG,KAAd;AAIH;;AAED,MAAG+L,QAAH,EAAa5B,mBAAmB,CAACC,QAAD,EAAWtJ,EAAX,EAAeA,EAAE,CAACoJ,aAAlB,CAAnB;AAEb,MAAItI,CAAJ;;AACA,MAAGd,EAAE,CAACgK,WAAN,EAAmB;AACf,QAAIwB,IAAI,GAAGxL,EAAE,CAACiI,GAAH,CAAOxJ,MAAP,CAAc,CAAd,MAAqB,GAAhC;AAEA,QAAIgN,QAAQ,GAAG,CAAf,CAHe,CAGG;;AAClB,QAAGzL,EAAE,CAAC2H,QAAH,KAAgB,MAAnB,EAA2B;AACvB8D,MAAAA,QAAQ,GAAGzL,EAAE,CAAC+H,QAAH,GAAc/H,EAAE,CAAC+H,QAAH,CAAYhE,IAA1B,GAAiC,EAA5C;AACH;;AAED,QAAI2H,KAAK,GAAGC,GAAZ;;AACA,SAAI7K,CAAC,GAAGwI,QAAQ,CAAC5K,MAAT,GAAkB,CAA1B,EAA6BoC,CAAC,GAAG,CAAC,CAAlC,EAAqCA,CAAC,EAAtC,EAA0C;AACtC,UAAGwI,QAAQ,CAACxI,CAAD,CAAR,CAAYwJ,IAAf,EAAqB;AACjBhB,QAAAA,QAAQ,CAACsC,MAAT,CAAgB9K,CAAhB,EAAmB,CAAnB;AACA;AACH;;AAEDwI,MAAAA,QAAQ,CAACxI,CAAD,CAAR,CAAYyI,KAAZ,GAAoB4B,gBAAgB,CAAC7B,QAAQ,CAACxI,CAAD,CAAR,CAAYyI,KAAb,EAAoBvJ,EAApB,CAApC,CANsC,CAQtC;;AACA,UAAI6L,CAAC,GAAG7L,EAAE,CAAC8L,GAAH,CAAOxC,QAAQ,CAACxI,CAAD,CAAR,CAAYyI,KAAnB,CAAR;;AACA,UAAGiC,IAAI,GACFE,KAAK,GAAGG,CAAC,GAAGJ,QADV,GAEFC,KAAK,GAAGG,CAAC,GAAGJ,QAFjB,EAGE;AAAE;AACAnC,QAAAA,QAAQ,CAACsC,MAAT,CAAgBf,KAAK,GAAG/J,CAAC,GAAG,CAAP,GAAWA,CAAhC,EAAmC,CAAnC;AACH,OALD,MAKO;AACH4K,QAAAA,KAAK,GAAGG,CAAR;AACH;AACJ;AACJ,GA7GyC,CA+G1C;AACA;;;AACA,MAAGE,SAAS,CAAC/L,EAAD,CAAT,IAAiBkE,IAAI,CAACmE,GAAL,CAASd,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAArB,MAA8B,GAAlD,EAAuD;AACnD+B,IAAAA,QAAQ,CAAC0C,GAAT;AACH,GAnHyC,CAqH1C;AACA;;;AACAhM,EAAAA,EAAE,CAACiM,KAAH,GAAW,CAAC3C,QAAQ,CAACA,QAAQ,CAAC5K,MAAT,GAAkB,CAAnB,CAAR,IAAiC,EAAlC,EAAsC6K,KAAjD,CAvH0C,CAyH1C;AACA;AACA;AACA;;AACAvJ,EAAAA,EAAE,CAACkM,aAAH,GAAmB,EAAnB;AACAlM,EAAAA,EAAE,CAACmM,YAAH,GAAkB,IAAlB;AAEA,MAAIC,QAAQ,GAAG,EAAf;AACA,MAAIC,CAAJ,EAAOC,CAAP;;AACA,OAAIxL,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAGwI,QAAQ,CAAC5K,MAAxB,EAAgCoC,CAAC,EAAjC,EAAqC;AACjC,QAAIyL,MAAM,GAAGjD,QAAQ,CAACxI,CAAD,CAAR,CAAYwK,KAAzB;AACA,QAAIkB,MAAM,GAAGlD,QAAQ,CAACxI,CAAD,CAAR,CAAYyI,KAAzB;AAEA8C,IAAAA,CAAC,GAAG1P,IAAI,CAAC8P,QAAL,CACAzM,EADA,EAEAwM,MAFA,EAGA,KAHA,EAGO;AACPD,IAAAA,MAJA,CAIO;AAJP,KAAJ;AAOAD,IAAAA,CAAC,GAAGhD,QAAQ,CAACxI,CAAD,CAAR,CAAYyJ,OAAhB;;AACA,QAAG+B,CAAC,KAAK9M,SAAT,EAAoB;AAChB6M,MAAAA,CAAC,CAAC9B,OAAF,GAAY+B,CAAZ;;AACA,UAAGA,CAAC,GAAGvB,QAAJ,IAAgBuB,CAAC,GAAGxB,QAAvB,EAAiC;AAAE;AAC/B,YAAGwB,CAAC,GAAGvB,QAAP,EAAiBsB,CAAC,CAAC9B,OAAF,GAAYQ,QAAZ;AACjB,YAAGuB,CAAC,GAAGxB,QAAP,EAAiBuB,CAAC,CAAC9B,OAAF,GAAYO,QAAZ;AAEjBuB,QAAAA,CAAC,CAACK,IAAF,GAAS,GAAT,CAJ6B,CAIf;;AACd1M,QAAAA,EAAE,CAACkM,aAAH,GAAmB,EAAnB;AACH;AACJ;;AAEDE,IAAAA,QAAQ,CAACb,IAAT,CAAcc,CAAd;AACH;;AAEDrM,EAAAA,EAAE,CAACmM,YAAH,GAAkB,KAAlB;AAEA,SAAOC,QAAP;AACH,CA/JD;;AAiKA,SAAS3B,UAAT,CAAoBzK,EAApB,EAAwB;AACpB,MAAI2M,IAAI,GAAG3M,EAAE,CAAC4M,QAAd;AACA,MAAIF,IAAI,GAAG1M,EAAE,CAAC6M,QAAd;AACA,MAAIT,QAAQ,GAAG,IAAI7K,KAAJ,CAAUoL,IAAI,CAACjO,MAAf,CAAf;AACA,MAAI6I,GAAG,GAAG5M,GAAG,CAACgK,SAAJ,CAAc3E,EAAE,CAACjC,KAAjB,EAAwBiC,EAAE,CAACwH,GAA3B,CAAV;AACA,MAAIkD,KAAK,GAAG5M,WAAW,CAACyJ,GAAD,CAAvB;AACA,MAAIuF,OAAO,GAAG5I,IAAI,CAACC,GAAL,CAASuG,KAAK,CAAC,CAAD,CAAd,EAAmBA,KAAK,CAAC,CAAD,CAAxB,CAAd;AACA,MAAIqC,OAAO,GAAG7I,IAAI,CAACG,GAAL,CAASqG,KAAK,CAAC,CAAD,CAAd,EAAmBA,KAAK,CAAC,CAAD,CAAxB,CAAd;AACA,MAAI1J,CAAC,GAAG,CAAR,CARoB,CAUpB;AACA;;AACA,MAAG,CAACO,KAAK,CAACC,OAAN,CAAckL,IAAd,CAAJ,EAAyBA,IAAI,GAAG,EAAP,CAZL,CAcpB;AACA;;AACA,MAAIM,SAAS,GAAGhN,EAAE,CAACyB,IAAH,KAAY,UAAZ,GAAyBzB,EAAE,CAACiN,SAA5B,GAAwCjN,EAAE,CAACkN,GAA3D,CAhBoB,CAkBpB;AACA;;AACA,MAAGlN,EAAE,CAACyB,IAAH,KAAY,KAAZ,IAAqBQ,MAAM,CAACjC,EAAE,CAAC6E,KAAJ,CAAN,CAAiBpG,MAAjB,CAAwB,CAAxB,MAA+B,GAAvD,EAA4D;AACxDuB,IAAAA,EAAE,CAAC6E,KAAH,GAAW,MAAMX,IAAI,CAACiB,GAAL,CAAS,EAAT,EAAajB,IAAI,CAACkB,KAAL,CAAWlB,IAAI,CAACC,GAAL,CAASnE,EAAE,CAACjC,KAAH,CAAS,CAAT,CAAT,EAAsBiC,EAAE,CAACjC,KAAH,CAAS,CAAT,CAAtB,CAAX,IAAiD,CAA9D,CAAjB;AACH;;AAED,OAAI,IAAI+C,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG6L,IAAI,CAACjO,MAAxB,EAAgCoC,CAAC,EAAjC,EAAqC;AACjC,QAAIqM,IAAI,GAAGH,SAAS,CAACL,IAAI,CAAC7L,CAAD,CAAL,CAApB;;AACA,QAAGqM,IAAI,GAAGL,OAAP,IAAkBK,IAAI,GAAGJ,OAA5B,EAAqC;AACjC,UAAGL,IAAI,CAAC5L,CAAD,CAAJ,KAAYtB,SAAf,EAA0B4M,QAAQ,CAACpL,CAAD,CAAR,GAAcrE,IAAI,CAAC8P,QAAL,CAAczM,EAAd,EAAkBmN,IAAlB,CAAd,CAA1B,KACKf,QAAQ,CAACpL,CAAD,CAAR,GAAcoM,WAAW,CAACpN,EAAD,EAAKmN,IAAL,EAAWlL,MAAM,CAACyK,IAAI,CAAC5L,CAAD,CAAL,CAAjB,CAAzB;AACLE,MAAAA,CAAC;AACJ;AACJ;;AAED,MAAGA,CAAC,GAAG2L,IAAI,CAACjO,MAAZ,EAAoB0N,QAAQ,CAACR,MAAT,CAAgB5K,CAAhB,EAAmB2L,IAAI,CAACjO,MAAL,GAAcsC,CAAjC;;AAEpB,MAAGhB,EAAE,CAACgK,WAAN,EAAmB;AACf;AACAoC,IAAAA,QAAQ,GAAGA,QAAQ,CAACiB,MAAT,CAAgB,UAASC,CAAT,EAAY;AACnC,aAAOtN,EAAE,CAACqK,UAAH,CAAciD,CAAC,CAACpO,CAAhB,MAAuB9C,MAA9B;AACH,KAFU,CAAX;AAGH;;AAED,SAAOgQ,QAAP;AACH;;AAED,IAAImB,WAAW,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,CAAlB;AACA,IAAIC,WAAW,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,EAAb,CAAlB;AACA,IAAIC,WAAW,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,EAAV,EAAc,EAAd,EAAkB,EAAlB,CAAlB,C,CACA;;AACA,IAAIC,SAAS,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,EAAb,CAAhB,C,CACA;AACA;;AACA,IAAIC,SAAS,GAAG,CAAC,CAAC,KAAF,EAAS,CAAT,EAAY,KAAZ,EAAmB,KAAnB,EAA0B,KAA1B,EAAiC,KAAjC,EAAwC,KAAxC,EAA+C,KAA/C,EAAsD,KAAtD,EAA6D,KAA7D,EAAoE,CAApE,CAAhB;AACA,IAAIC,SAAS,GAAG,CAAC,CAAC,KAAF,EAAS,CAAT,EAAY,KAAZ,EAAmB,KAAnB,EAA0B,CAA1B,CAAhB,C,CACA;;AACA,IAAIC,WAAW,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,GAAjB,CAAlB;;AAEA,SAASC,UAAT,CAAoBC,UAApB,EAAgCC,IAAhC,EAAsCC,WAAtC,EAAmD;AAC/C,SAAOD,IAAI,GAAGrT,GAAG,CAAC8K,OAAJ,CAAYsI,UAAU,GAAGC,IAAzB,EAA+BC,WAA/B,CAAd;AACH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAtR,IAAI,CAACgJ,SAAL,GAAiB,UAAS3F,EAAT,EAAa+N,UAAb,EAAyB;AACtC,MAAIC,IAAJ;;AAEA,WAASE,OAAT,CAAiBlM,CAAjB,EAAoB;AAChB,WAAOkC,IAAI,CAACiB,GAAL,CAASnD,CAAT,EAAYkC,IAAI,CAACkB,KAAL,CAAWlB,IAAI,CAACmB,GAAL,CAAS0I,UAAT,IAAuB7J,IAAI,CAACqB,IAAvC,CAAZ,CAAP;AACH;;AAED,MAAGvF,EAAE,CAACyB,IAAH,KAAY,MAAf,EAAuB;AACnBzB,IAAAA,EAAE,CAAC8E,KAAH,GAAWnK,GAAG,CAACwT,SAAJ,CAAcnO,EAAE,CAAC8D,QAAjB,EAA2B,CAA3B,CAAX,CADmB,CAGnB;AACA;;AACA,QAAIsK,OAAO,GAAG,IAAIL,UAAlB;;AAEA,QAAGK,OAAO,GAAG/S,UAAb,EAAyB;AACrB0S,MAAAA,UAAU,IAAI1S,UAAd;AACA2S,MAAAA,IAAI,GAAGE,OAAO,CAAC,EAAD,CAAd;AACAlO,MAAAA,EAAE,CAAC6E,KAAH,GAAW,MAAO,KAAKiJ,UAAU,CAACC,UAAD,EAAaC,IAAb,EAAmBT,WAAnB,CAAjC;AACH,KAJD,MAIO,IAAGa,OAAO,GAAGzS,WAAb,EAA0B;AAC7BoS,MAAAA,UAAU,IAAIpS,WAAd;AACAqE,MAAAA,EAAE,CAAC6E,KAAH,GAAW,MAAMiJ,UAAU,CAACC,UAAD,EAAa,CAAb,EAAgBP,WAAhB,CAA3B;AACH,KAHM,MAGA,IAAGY,OAAO,GAAGtS,MAAb,EAAqB;AACxBkE,MAAAA,EAAE,CAAC6E,KAAH,GAAWiJ,UAAU,CAACC,UAAD,EAAajS,MAAb,EAAqBkE,EAAE,CAACqO,mBAAH,GAAyB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,EAAV,CAAzB,GAAyCX,SAA9D,CAArB,CADwB,CAExB;AACA;AACA;;AACA,UAAI3E,UAAU,GAAGpM,IAAI,CAACqM,aAAL,CAAmBhJ,EAAnB,CAAjB;AACA,UAAIiL,QAAQ,GAAGjL,EAAE,CAACuI,aAAH,KAAqB,QAApC;AACA,UAAG0C,QAAH,EAAajL,EAAE,CAACmJ,SAAH,GAAenJ,EAAE,CAAC8E,KAAlB;;AAEb,UAAG,SAASrF,IAAT,CAAcsJ,UAAd,CAAH,EAA8B;AAC1B/I,QAAAA,EAAE,CAAC8E,KAAH,GAAWnK,GAAG,CAACwT,SAAJ,CAAcnO,EAAE,CAAC8D,QAAjB,EAA2B,CAA3B,CAAX,CAD0B,CACgB;AAC7C,OAFD,MAEO;AACH9D,QAAAA,EAAE,CAAC8E,KAAH,GAAWnK,GAAG,CAACwT,SAAJ,CAAcnO,EAAE,CAAC8D,QAAjB,EAA2B,CAA3B,CAAX,CADG,CACuC;AAC7C;;AAED,UAAGmH,QAAH,EAAajL,EAAE,CAACkJ,SAAH,GAAelJ,EAAE,CAAC8E,KAAlB;AAChB,KAhBM,MAgBA,IAAGsJ,OAAO,GAAGpS,OAAb,EAAsB;AACzBgE,MAAAA,EAAE,CAAC6E,KAAH,GAAWiJ,UAAU,CAACC,UAAD,EAAa/R,OAAb,EAAsBwR,WAAtB,CAArB;AACH,KAFM,MAEA,IAAGY,OAAO,GAAGnS,MAAb,EAAqB;AACxB+D,MAAAA,EAAE,CAAC6E,KAAH,GAAWiJ,UAAU,CAACC,UAAD,EAAa9R,MAAb,EAAqBwR,WAArB,CAArB;AACH,KAFM,MAEA,IAAGW,OAAO,GAAGlS,MAAb,EAAqB;AACxB8D,MAAAA,EAAE,CAAC6E,KAAH,GAAWiJ,UAAU,CAACC,UAAD,EAAa7R,MAAb,EAAqBuR,WAArB,CAArB;AACH,KAFM,MAEA;AACH;AACAO,MAAAA,IAAI,GAAGE,OAAO,CAAC,EAAD,CAAd;AACAlO,MAAAA,EAAE,CAAC6E,KAAH,GAAWiJ,UAAU,CAACC,UAAD,EAAaC,IAAb,EAAmBT,WAAnB,CAArB;AACH;AACJ,GAzCD,MAyCO,IAAGvN,EAAE,CAACyB,IAAH,KAAY,KAAf,EAAsB;AACzBzB,IAAAA,EAAE,CAAC8E,KAAH,GAAW,CAAX;AACA,QAAIyC,GAAG,GAAG5M,GAAG,CAACgK,SAAJ,CAAc3E,EAAE,CAACjC,KAAjB,EAAwBiC,EAAE,CAACwH,GAA3B,CAAV;;AAEA,QAAGuG,UAAU,GAAG,GAAhB,EAAqB;AACjB;AACA/N,MAAAA,EAAE,CAAC6E,KAAH,GAAWX,IAAI,CAACoK,IAAL,CAAUP,UAAV,CAAX;AACH,KAHD,MAGO,IAAG7J,IAAI,CAACmE,GAAL,CAASd,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAArB,IAA4B,CAA/B,EAAkC;AACrC;AACA,UAAIK,EAAE,GAAG,MAAM1D,IAAI,CAACmE,GAAL,CAAS,CAACd,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAb,IAAoBwG,UAA7B,CAAf,CAFqC,CAIrC;;AACAA,MAAAA,UAAU,GAAG7J,IAAI,CAACmE,GAAL,CAASnE,IAAI,CAACiB,GAAL,CAAS,EAAT,EAAaoC,GAAG,CAAC,CAAD,CAAhB,IAClBrD,IAAI,CAACiB,GAAL,CAAS,EAAT,EAAaoC,GAAG,CAAC,CAAD,CAAhB,CADS,IACeK,EAD5B;AAEAoG,MAAAA,IAAI,GAAGE,OAAO,CAAC,EAAD,CAAd;AACAlO,MAAAA,EAAE,CAAC6E,KAAH,GAAW,MAAMiJ,UAAU,CAACC,UAAD,EAAaC,IAAb,EAAmBT,WAAnB,CAA3B;AACH,KATM,MASA;AACH;AACA;AACA;AACAvN,MAAAA,EAAE,CAAC6E,KAAH,GAAYkJ,UAAU,GAAG,GAAd,GAAqB,IAArB,GAA4B,IAAvC;AACH;AACJ,GAtBM,MAsBA,IAAG/N,EAAE,CAACyB,IAAH,KAAY,UAAZ,IAA0BzB,EAAE,CAACyB,IAAH,KAAY,eAAzC,EAA0D;AAC7DzB,IAAAA,EAAE,CAAC8E,KAAH,GAAW,CAAX;AACA9E,IAAAA,EAAE,CAAC6E,KAAH,GAAWX,IAAI,CAACoK,IAAL,CAAUpK,IAAI,CAACG,GAAL,CAAS0J,UAAT,EAAqB,CAArB,CAAV,CAAX;AACH,GAHM,MAGA,IAAGhC,SAAS,CAAC/L,EAAD,CAAZ,EAAkB;AACrBA,IAAAA,EAAE,CAAC8E,KAAH,GAAW,CAAX;AACAkJ,IAAAA,IAAI,GAAG,CAAP;AACAhO,IAAAA,EAAE,CAAC6E,KAAH,GAAWiJ,UAAU,CAACC,UAAD,EAAaC,IAAb,EAAmBH,WAAnB,CAArB;AACH,GAJM,MAIA;AACH;AACA7N,IAAAA,EAAE,CAAC8E,KAAH,GAAW,CAAX;AACAkJ,IAAAA,IAAI,GAAGE,OAAO,CAAC,EAAD,CAAd;AACAlO,IAAAA,EAAE,CAAC6E,KAAH,GAAWiJ,UAAU,CAACC,UAAD,EAAaC,IAAb,EAAmBT,WAAnB,CAArB;AACH,GAlFqC,CAoFtC;;;AACA,MAAGvN,EAAE,CAAC6E,KAAH,KAAa,CAAhB,EAAmB7E,EAAE,CAAC6E,KAAH,GAAW,CAAX,CArFmB,CAuFtC;;AACA,MAAG,CAACrK,SAAS,CAACwF,EAAE,CAAC6E,KAAJ,CAAV,IAAwB,OAAO7E,EAAE,CAAC6E,KAAV,KAAoB,QAA/C,EAAyD;AACrD,QAAI0J,QAAQ,GAAGvO,EAAE,CAAC6E,KAAlB;AACA7E,IAAAA,EAAE,CAAC6E,KAAH,GAAW,CAAX;AACA,UAAM,qBAAqB5C,MAAM,CAACsM,QAAD,CAAjC;AACH;AACJ,CA7FD,C,CA+FA;AACA;AACA;AACA;AACA;;;AACA,SAAS9F,aAAT,CAAuBzI,EAAvB,EAA2B;AACvB,MAAI6E,KAAK,GAAG7E,EAAE,CAAC6E,KAAf;AAEA7E,EAAAA,EAAE,CAACwO,aAAH,GAAmB,CAAnB;;AACA,MAAG,CAAChU,SAAS,CAACqK,KAAD,CAAV,IAAqB,OAAOA,KAAP,KAAiB,QAAzC,EAAmD;AAC/CA,IAAAA,KAAK,GAAG,CAAR;AACH;;AAED,MAAG7E,EAAE,CAACyB,IAAH,KAAY,UAAZ,IAA0BzB,EAAE,CAACyB,IAAH,KAAY,eAAzC,EAA0D;AACtDzB,IAAAA,EAAE,CAACyO,UAAH,GAAgB,IAAhB;AACH;;AACD,MAAGzO,EAAE,CAACyB,IAAH,KAAY,MAAf,EAAuB;AACnB;AACA;AACA;AACA;AACA,QAAIiN,OAAO,GAAG1O,EAAE,CAACwH,GAAH,CAAOxH,EAAE,CAAC8E,KAAV,CAAd;AACA,QAAI6J,QAAQ,GAAG3O,EAAE,CAACsI,GAAH,CAAOoG,OAAP,EAAgBE,OAAhB,CAAwB,SAAxB,EAAmC,EAAnC,CAAf;AACA,QAAIC,QAAQ,GAAGF,QAAQ,CAACjQ,MAAxB;;AAEA,QAAGuD,MAAM,CAAC4C,KAAD,CAAN,CAAcpG,MAAd,CAAqB,CAArB,MAA4B,GAA/B,EAAoC;AAChC;AACA,UAAGoQ,QAAQ,GAAG,EAAX,IAAiBF,QAAQ,CAAC1H,MAAT,CAAgB,CAAhB,MAAuB,OAA3C,EAAoDjH,EAAE,CAACyO,UAAH,GAAgB,GAAhB,CAApD,CACA;AADA,WAEKzO,EAAE,CAACyO,UAAH,GAAiB,CAAE5J,KAAK,CAACoC,MAAN,CAAa,CAAb,CAAF,GAAqB,EAArB,KAA4B,CAA7B,GAAkC,GAAlC,GAAwC,GAAxD;AACR,KALD,MAKO,IAAIpC,KAAK,IAAI/I,MAAT,IAAmB+S,QAAQ,IAAI,EAAhC,IAAwChK,KAAK,IAAI/I,MAAM,GAAG,EAA7D,EAAkEkE,EAAE,CAACyO,UAAH,GAAgB,GAAhB,CAAlE,KACF,IAAI5J,KAAK,IAAI5I,MAAT,IAAmB4S,QAAQ,IAAI,EAAhC,IAAwChK,KAAK,IAAI7I,OAApD,EAA8DgE,EAAE,CAACyO,UAAH,GAAgB,GAAhB,CAA9D,KACA,IAAI5J,KAAK,IAAI3I,MAAT,IAAmB2S,QAAQ,IAAI,EAAhC,IAAwChK,KAAK,IAAI5I,MAApD,EAA6D+D,EAAE,CAACyO,UAAH,GAAgB,GAAhB,CAA7D,KACA;AACD;AACA;AACA;AACA,UAAIK,QAAQ,GAAG9O,EAAE,CAACsI,GAAH,CAAOoG,OAAO,GAAG7J,KAAjB,EAAwB+J,OAAxB,CAAgC,IAAhC,EAAsC,EAAtC,EAA0ClQ,MAAzD;AACAsB,MAAAA,EAAE,CAACyO,UAAH,GAAgBvK,IAAI,CAACG,GAAL,CAASwK,QAAT,EAAmBC,QAAnB,IAA+B,EAA/C,CALC,CAOD;AACA;AACA;;AACA,UAAG9O,EAAE,CAACyO,UAAH,GAAgB,CAAnB,EAAsBzO,EAAE,CAACyO,UAAH,GAAgB,CAAhB;AACzB;AACJ,GA7BD,MA6BO,IAAGjU,SAAS,CAACqK,KAAD,CAAT,IAAoBA,KAAK,CAACpG,MAAN,CAAa,CAAb,MAAoB,GAA3C,EAAgD;AACnD;AACA,QAAI8I,GAAG,GAAGvH,EAAE,CAACjC,KAAH,CAASkB,GAAT,CAAae,EAAE,CAAC+O,GAAH,IAAU/H,MAAvB,CAAV;AACA,QAAG,CAACxM,SAAS,CAACqK,KAAD,CAAb,EAAsBA,KAAK,GAAGmC,MAAM,CAACnC,KAAK,CAACoC,MAAN,CAAa,CAAb,CAAD,CAAd,CAH6B,CAInD;;AACAjH,IAAAA,EAAE,CAACyO,UAAH,GAAgB,IAAIvK,IAAI,CAACkB,KAAL,CAAWlB,IAAI,CAACmB,GAAL,CAASR,KAAT,IAAkBX,IAAI,CAACqB,IAAvB,GAA8B,IAAzC,CAApB;AAEA,QAAIyJ,MAAM,GAAG9K,IAAI,CAACG,GAAL,CAASH,IAAI,CAACmE,GAAL,CAASd,GAAG,CAAC,CAAD,CAAZ,CAAT,EAA2BrD,IAAI,CAACmE,GAAL,CAASd,GAAG,CAAC,CAAD,CAAZ,CAA3B,CAAb;AACA,QAAI0H,QAAQ,GAAG/K,IAAI,CAACkB,KAAL,CAAWlB,IAAI,CAACmB,GAAL,CAAS2J,MAAT,IAAmB9K,IAAI,CAACqB,IAAxB,GAA+B,IAA1C,CAAf;AACA,QAAI2J,WAAW,GAAGlP,EAAE,CAACkP,WAAH,KAAmB1P,SAAnB,GAA+B,CAA/B,GAAmCQ,EAAE,CAACkP,WAAxD;;AACA,QAAGhL,IAAI,CAACmE,GAAL,CAAS4G,QAAT,IAAqBC,WAAxB,EAAqC;AACjC,UAAGC,UAAU,CAACnP,EAAE,CAACoP,cAAJ,CAAV,IAAiC,CAACC,QAAQ,CAACJ,QAAD,CAA7C,EAAyD;AACrDjP,QAAAA,EAAE,CAACwO,aAAH,GAAmB,IAAItK,IAAI,CAACM,KAAL,CAAW,CAACyK,QAAQ,GAAG,CAAZ,IAAiB,CAA5B,CAAvB;AACH,OAFD,MAEOjP,EAAE,CAACwO,aAAH,GAAmBS,QAAnB;AACV;AACJ,GAfM,MAeA;AACH;AACAjP,IAAAA,EAAE,CAACyO,UAAH,GAAgB,IAAhB;AACH;AACJ,C,CAED;AACA;AACA;AACA;AACA;AACA;;;AACA9R,IAAI,CAACmJ,aAAL,GAAqB,UAAS5G,CAAT,EAAY2F,KAAZ,EAAmBgG,KAAnB,EAA0B/G,QAA1B,EAAoC;AACrD,MAAIwL,MAAM,GAAGzE,KAAK,GAAG,CAAC,CAAJ,GAAQ,CAA1B,CADqD,CAGrD;;AACA,MAAGrQ,SAAS,CAACqK,KAAD,CAAZ,EAAqB,OAAOlK,GAAG,CAAC4U,SAAJ,CAAcrQ,CAAd,EAAiBoQ,MAAM,GAAGzK,KAA1B,CAAP,CAJgC,CAMrD;;AACA,MAAI2K,KAAK,GAAG3K,KAAK,CAACpG,MAAN,CAAa,CAAb,CAAZ;AACA,MAAIgR,QAAQ,GAAGH,MAAM,GAAGtI,MAAM,CAACnC,KAAK,CAACoC,MAAN,CAAa,CAAb,CAAD,CAA9B,CARqD,CAUrD;;AACA,MAAGuI,KAAK,KAAK,GAAb,EAAkB,OAAO7U,GAAG,CAAC+U,cAAJ,CAAmBxQ,CAAnB,EAAsBuQ,QAAtB,EAAgC3L,QAAhC,CAAP,CAXmC,CAarD;;AACA,MAAG0L,KAAK,KAAK,GAAb,EAAkB,OAAOtL,IAAI,CAACmB,GAAL,CAASnB,IAAI,CAACiB,GAAL,CAAS,EAAT,EAAajG,CAAb,IAAkBuQ,QAA3B,IAAuCvL,IAAI,CAACqB,IAAnD,CAdmC,CAgBrD;AACA;;AACA,MAAGiK,KAAK,KAAK,GAAb,EAAkB;AACd,QAAIG,OAAO,GAAI9K,KAAK,KAAK,IAAX,GAAmB+I,SAAnB,GAA+BD,SAA7C;AACA,QAAIiC,EAAE,GAAG1Q,CAAC,GAAGoQ,MAAM,GAAG,IAAtB;AACA,QAAIO,IAAI,GAAGlV,GAAG,CAAC8K,OAAJ,CAAY9K,GAAG,CAACmV,GAAJ,CAAQF,EAAR,EAAY,CAAZ,CAAZ,EAA4BD,OAA5B,EAAqC9E,KAArC,CAAX;AAEA,WAAO3G,IAAI,CAACkB,KAAL,CAAWwK,EAAX,IACH1L,IAAI,CAACmB,GAAL,CAAS/K,EAAE,CAACkK,KAAH,CAASN,IAAI,CAACiB,GAAL,CAAS,EAAT,EAAa0K,IAAb,CAAT,EAA6B,CAA7B,CAAT,IAA4C3L,IAAI,CAACqB,IADrD;AAEH;;AAED,QAAM,wBAAwBtD,MAAM,CAAC4C,KAAD,CAApC;AACH,CA5BD,C,CA8BA;;;AACAlI,IAAI,CAACoJ,SAAL,GAAiB,UAAS/F,EAAT,EAAasH,IAAb,EAAmB;AAChC,MAAIE,GAAG,GAAGxH,EAAE,CAACwH,GAAH,IAAUR,MAApB;AACA,MAAIO,GAAG,GAAG5M,GAAG,CAACgK,SAAJ,CAAc3E,EAAE,CAACjC,KAAjB,EAAwByJ,GAAxB,EAA6BhI,SAA7B,EAAwCA,SAAxC,EAAmD8H,IAAnD,CAAV;AACA,MAAIuD,KAAK,GAAGtD,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAxB;AACA,MAAIwI,MAAM,GAAGlF,KAAK,GAAG3G,IAAI,CAACkB,KAAR,GAAgBlB,IAAI,CAACoK,IAAvC,CAJgC,CAKhC;AACA;;AACA,MAAI0B,EAAE,GAAGlS,WAAW,CAACyJ,GAAD,CAAX,CAAiB,CAAjB,CAAT;AACA,MAAI1C,KAAK,GAAG7E,EAAE,CAAC6E,KAAf;AACA,MAAIC,KAAK,GAAG0C,GAAG,CAACxH,EAAE,CAAC8E,KAAJ,CAAf;;AAEA,MAAGtK,SAAS,CAACqK,KAAD,CAAZ,EAAqB;AACjB,QAAIoL,IAAI,GAAGF,MAAM,CAAC,CAACC,EAAE,GAAGlL,KAAN,IAAeD,KAAhB,CAAN,GAA+BA,KAA/B,GAAuCC,KAAlD,CADiB,CAGjB;;AACA,QAAG9E,EAAE,CAACyB,IAAH,KAAY,UAAZ,IAA0BzB,EAAE,CAACyB,IAAH,KAAY,eAAzC,EAA0D;AACtDwO,MAAAA,IAAI,GAAGtV,GAAG,CAACuN,SAAJ,CAAc+H,IAAd,EAAoB,CAApB,EAAuBjQ,EAAE,CAAC2B,WAAH,CAAejD,MAAf,GAAwB,CAA/C,CAAP;AACH;;AACD,WAAOuR,IAAP;AACH;;AAED,MAAIT,KAAK,GAAG3K,KAAK,CAACpG,MAAN,CAAa,CAAb,CAAZ;AACA,MAAIyR,KAAK,GAAGlJ,MAAM,CAACnC,KAAK,CAACoC,MAAN,CAAa,CAAb,CAAD,CAAlB,CAtBgC,CAwBhC;;AACA,MAAGuI,KAAK,KAAK,GAAb,EAAkB;AACd,QAAIW,GAAG,GAAG,CAAV;AACA,QAAIC,EAAE,GAAGtL,KAAT;AACA,QAAIuL,EAAJ,EAAQC,IAAR,EAAcC,QAAd,CAHc,CAKd;AACA;;AACA,WAAMJ,GAAG,GAAG,EAAZ,EAAgB;AACZE,MAAAA,EAAE,GAAG1T,IAAI,CAACmJ,aAAL,CAAmBsK,EAAnB,EAAuBvL,KAAvB,EAA8BgG,KAA9B,EAAqC7K,EAAE,CAAC8D,QAAxC,CAAL;;AACA,UAAG,CAACuM,EAAE,GAAGL,EAAN,KAAaI,EAAE,GAAGJ,EAAlB,KAAyB,CAA5B,EAA+B;AAC3B;AACA,YAAGnF,KAAH,EAAU,OAAO3G,IAAI,CAACC,GAAL,CAASiM,EAAT,EAAaC,EAAb,CAAP;AACV,eAAOnM,IAAI,CAACG,GAAL,CAAS+L,EAAT,EAAaC,EAAb,CAAP;AACH;;AACDC,MAAAA,IAAI,GAAG,CAACN,EAAE,GAAI,CAACI,EAAE,GAAGC,EAAN,IAAY,CAAnB,KAA0BA,EAAE,GAAGD,EAA/B,CAAP;AACAG,MAAAA,QAAQ,GAAGf,KAAK,GAAI,CAACtL,IAAI,CAACmE,GAAL,CAASnE,IAAI,CAACM,KAAL,CAAW8L,IAAX,CAAT,KAA8B,CAA/B,IAAoCJ,KAAxD;AACAE,MAAAA,EAAE,GAAGzT,IAAI,CAACmJ,aAAL,CAAmBsK,EAAnB,EAAuBG,QAAvB,EAAiCD,IAAI,GAAG,CAAP,GAAW,CAACzF,KAAZ,GAAoBA,KAArD,EAA4D7K,EAAE,CAAC8D,QAA/D,CAAL;AACAqM,MAAAA,GAAG;AACN;;AACDxV,IAAAA,GAAG,CAAC6V,KAAJ,CAAU,4BAAV,EAAwCxQ,EAAxC;AACA,WAAOoQ,EAAP;AACH,GArBD,MAqBO,IAAGZ,KAAK,KAAK,GAAb,EAAkB;AACrB;AAEA,WAAOtL,IAAI,CAACmB,GAAL,CAAS0K,MAAM,CAClB,CAAC7L,IAAI,CAACiB,GAAL,CAAS,EAAT,EAAa6K,EAAb,IAAmBlL,KAApB,IAA6BoL,KADX,CAAN,GAC0BA,KAD1B,GACkCpL,KAD3C,IACoDZ,IAAI,CAACqB,IADhE;AAEH,GALM,MAKA,IAAGiK,KAAK,KAAK,GAAb,EAAkB;AACrB,QAAIG,OAAO,GAAI9K,KAAK,KAAK,IAAX,GAAmB+I,SAAnB,GAA+BD,SAA7C;AACA,QAAIkC,IAAI,GAAGlV,GAAG,CAAC8K,OAAJ,CAAY9K,GAAG,CAACmV,GAAJ,CAAQE,EAAR,EAAY,CAAZ,CAAZ,EAA4BL,OAA5B,EAAqC9E,KAArC,CAAX;AAEA,WAAO3G,IAAI,CAACkB,KAAL,CAAW4K,EAAX,IACH9L,IAAI,CAACmB,GAAL,CAAS/K,EAAE,CAACkK,KAAH,CAASN,IAAI,CAACiB,GAAL,CAAS,EAAT,EAAa0K,IAAb,CAAT,EAA6B,CAA7B,CAAT,IAA4C3L,IAAI,CAACqB,IADrD;AAEH,GANM,MAMA,MAAM,wBAAwBtD,MAAM,CAAC4C,KAAD,CAApC;AACV,CA1DD,C,CA4DA;AACA;AACA;AACA;AACA;AACA;;;AACAlI,IAAI,CAAC8P,QAAL,GAAgB,UAASzM,EAAT,EAAad,CAAb,EAAgBuR,KAAhB,EAAuBC,cAAvB,EAAuC;AACnD,MAAIC,GAAG,GAAGvD,WAAW,CAACpN,EAAD,EAAKd,CAAL,CAArB;AACA,MAAI0R,SAAS,GAAG5Q,EAAE,CAAC2H,QAAH,KAAgB,OAAhC;AACA,MAAIkJ,cAAc,GAAGJ,KAAK,IAAIG,SAA9B;AACA,MAAIE,MAAM,GAAG9Q,EAAE,CAACyB,IAAhB,CAJmD,CAKnD;;AACA,MAAIuL,SAAS,GAAG8D,MAAM,KAAK,UAAX,GAAwB9Q,EAAE,CAACiN,SAA3B,GAAuCjN,EAAE,CAACkN,GAA1D;AACA,MAAIpM,CAAJ;;AAEA,MAAG8P,SAAS,IAAIrP,KAAK,CAACC,OAAN,CAAcxB,EAAE,CAAC6M,QAAjB,CAAhB,EAA4C;AACxC,QAAItF,GAAG,GAAG5M,GAAG,CAACgK,SAAJ,CAAc3E,EAAE,CAACjC,KAAjB,EAAwBiC,EAAE,CAACwH,GAA3B,CAAV;AACA,QAAIlC,OAAO,GAAG,CAACpB,IAAI,CAACmE,GAAL,CAASd,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAArB,KAA6BvH,EAAE,CAAC+Q,QAAH,IAAe,CAA5C,CAAD,IAAmD,KAAjE;;AAEA,SAAIjQ,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAGd,EAAE,CAAC6M,QAAH,CAAYnO,MAA3B,EAAmCoC,CAAC,EAApC,EAAwC;AACpC,UAAGoD,IAAI,CAACmE,GAAL,CAASnJ,CAAC,GAAG8N,SAAS,CAAChN,EAAE,CAAC4M,QAAH,CAAY9L,CAAZ,CAAD,CAAtB,IAA0CwE,OAA7C,EAAsD;AACzD;;AACD,QAAGxE,CAAC,GAAGd,EAAE,CAAC6M,QAAH,CAAYnO,MAAnB,EAA2B;AACvBiS,MAAAA,GAAG,CAACjE,IAAJ,GAAWzK,MAAM,CAACjC,EAAE,CAAC6M,QAAH,CAAY/L,CAAZ,CAAD,CAAjB;AACA,aAAO6P,GAAP;AACH;AACJ;;AAED,WAASK,QAAT,CAAkBC,QAAlB,EAA4B;AACxB,QAAGA,QAAQ,KAAKzR,SAAhB,EAA2B,OAAO,IAAP;AAC3B,QAAGiR,KAAH,EAAU,OAAOQ,QAAQ,KAAK,MAApB;AAEV,QAAIC,WAAW,GAAG;AACdC,MAAAA,KAAK,EAAEnR,EAAE,CAACkL,KADI;AAEdkG,MAAAA,IAAI,EAAEpR,EAAE,CAACiM;AAFK,MAGhBgF,QAHgB,CAAlB;AAKA,WAAOA,QAAQ,KAAK,KAAb,IAAsB/R,CAAC,KAAKgS,WAAnC;AACH;;AAED,MAAIG,OAAO,GAAGZ,KAAK,GACf,OADe,GAEfzQ,EAAE,CAACoP,cAAH,KAAsB,MAAtB,IAAgC4B,QAAQ,CAAChR,EAAE,CAACsR,YAAJ,CAAxC,GAA4D,MAA5D,GAAqE,EAFzE;AAIA,MAAGR,MAAM,KAAK,MAAd,EAAsBS,UAAU,CAACvR,EAAD,EAAK2Q,GAAL,EAAUF,KAAV,EAAiBI,cAAjB,CAAV,CAAtB,KACK,IAAGC,MAAM,KAAK,KAAd,EAAqBU,SAAS,CAACxR,EAAD,EAAK2Q,GAAL,EAAUF,KAAV,EAAiBI,cAAjB,EAAiCQ,OAAjC,CAAT,CAArB,KACA,IAAGP,MAAM,KAAK,UAAd,EAA0BW,cAAc,CAACzR,EAAD,EAAK2Q,GAAL,CAAd,CAA1B,KACA,IAAGG,MAAM,KAAK,eAAd,EAA+BY,mBAAmB,CAAC1R,EAAD,EAAK2Q,GAAL,EAAUF,KAAV,CAAnB,CAA/B,KACA,IAAG1E,SAAS,CAAC/L,EAAD,CAAZ,EAAkB2R,WAAW,CAAC3R,EAAD,EAAK2Q,GAAL,EAAUF,KAAV,EAAiBI,cAAjB,EAAiCQ,OAAjC,CAAX,CAAlB,KACAO,YAAY,CAAC5R,EAAD,EAAK2Q,GAAL,EAAUF,KAAV,EAAiBI,cAAjB,EAAiCQ,OAAjC,CAAZ,CA3C8C,CA6CnD;;AACA,MAAG,CAACX,cAAJ,EAAoB;AAChB,QAAG1Q,EAAE,CAAC6R,UAAH,IAAiB,CAACb,QAAQ,CAAChR,EAAE,CAAC8R,cAAJ,CAA7B,EAAkDnB,GAAG,CAACjE,IAAJ,GAAW1M,EAAE,CAAC6R,UAAH,GAAgBlB,GAAG,CAACjE,IAA/B;AAClD,QAAG1M,EAAE,CAAC+R,UAAH,IAAiB,CAACf,QAAQ,CAAChR,EAAE,CAACgS,cAAJ,CAA7B,EAAkDrB,GAAG,CAACjE,IAAJ,IAAY1M,EAAE,CAAC+R,UAAf;AACrD,GAjDkD,CAmDnD;AACA;;;AACA,MAAG/R,EAAE,CAACiS,OAAH,KAAe,YAAf,IAA+BjS,EAAE,CAACkS,YAArC,EAAmD;AAC/C,QAAIC,QAAQ,GAAG,UAASnQ,CAAT,EAAY;AACvB,UAAIsK,CAAC,GAAGtM,EAAE,CAACoS,GAAH,CAAOpQ,CAAP,CAAR;AACA,aAAOsK,CAAC,IAAI,CAAL,IAAUA,CAAC,IAAItM,EAAE,CAACgI,OAAlB,GAA4BhG,CAA5B,GAAgC,IAAvC;AACH,KAHD;;AAKA2O,IAAAA,GAAG,CAAC0B,IAAJ,GAAW,CACPF,QAAQ,CAACxB,GAAG,CAACzR,CAAJ,GAAQ,GAAT,CADD,EAEPiT,QAAQ,CAACxB,GAAG,CAACzR,CAAJ,GAAQc,EAAE,CAAC6E,KAAX,GAAmB,GAApB,CAFD,CAAX;AAIH;;AAED,SAAO8L,GAAP;AACH,CAlED;AAoEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAhU,IAAI,CAAC2V,cAAL,GAAsB,UAAStS,EAAT,EAAauS,GAAb,EAAkBC,IAAlB,EAAwB;AAC1C,MAAGA,IAAI,KAAKpW,MAAT,IAAmBoW,IAAI,KAAKD,GAA/B,EAAoC;AAChC,WAAO5V,IAAI,CAAC2V,cAAL,CAAoBtS,EAApB,EAAwBuS,GAAxB,IAA+B,KAA/B,GAAuC5V,IAAI,CAAC2V,cAAL,CAAoBtS,EAApB,EAAwBwS,IAAxB,CAA9C;AACH;;AAED,MAAIC,WAAW,GAAIzS,EAAE,CAACyB,IAAH,KAAY,KAAZ,IAAqB8Q,GAAG,IAAI,CAA/C;AACA,MAAIG,EAAE,GAAG/V,IAAI,CAAC8P,QAAL,CAAczM,EAAd,EAAkBA,EAAE,CAAC2S,GAAH,CAAOF,WAAW,GAAG,CAACF,GAAJ,GAAUA,GAA5B,CAAlB,EAAoD,OAApD,EAA6D7F,IAAtE;;AAEA,MAAG+F,WAAH,EAAgB;AACZ,WAAOF,GAAG,KAAK,CAAR,GAAY,GAAZ,GAAkBpW,UAAU,GAAGuW,EAAtC;AACH,GAVyC,CAY1C;AACA;AACA;AACA;;;AACA,SAAOA,EAAP;AACH,CAjBD;;AAmBA,SAAStF,WAAT,CAAqBpN,EAArB,EAAyBd,CAAzB,EAA4BwN,IAA5B,EAAkC;AAC9B,MAAIkG,EAAE,GAAG5S,EAAE,CAAC+H,QAAH,IAAe,EAAxB;AAEA,SAAO;AACH7I,IAAAA,CAAC,EAAEA,CADA;AAEH2T,IAAAA,EAAE,EAAE,CAFD;AAGHC,IAAAA,EAAE,EAAE,CAHD;AAIHpG,IAAAA,IAAI,EAAEA,IAAI,IAAI,EAJX;AAKHjB,IAAAA,QAAQ,EAAEmH,EAAE,CAAC7O,IALV;AAMHgP,IAAAA,IAAI,EAAEH,EAAE,CAACI,MANN;AAOHC,IAAAA,SAAS,EAAEL,EAAE,CAACM;AAPX,GAAP;AASH;;AAED,SAAS3B,UAAT,CAAoBvR,EAApB,EAAwB2Q,GAAxB,EAA6BF,KAA7B,EAAoCI,cAApC,EAAoD;AAChD,MAAIsC,EAAE,GAAGnT,EAAE,CAACyO,UAAZ;AACA,MAAI2E,GAAG,GAAI3C,KAAK,IAAIzQ,EAAE,CAACqT,WAAb,IAA6B1W,IAAI,CAACqM,aAAL,CAAmBhJ,EAAnB,CAAvC;;AAEA,MAAG6Q,cAAH,EAAmB;AACf;AACA;AACA,QAAGrW,SAAS,CAAC2Y,EAAD,CAAZ,EAAkBA,EAAE,GAAG,CAAL,CAAlB,KACKA,EAAE,GAAG;AAACG,MAAAA,CAAC,EAAE,GAAJ;AAASC,MAAAA,CAAC,EAAE,GAAZ;AAAiBjG,MAAAA,CAAC,EAAE,GAApB;AAAyBkG,MAAAA,CAAC,EAAE,GAA5B;AAAiCC,MAAAA,CAAC,EAAE;AAApC,MAAuCN,EAAvC,CAAL;AACR;;AAED,MAAIO,OAAO,GAAG/Y,GAAG,CAAC4W,UAAJ,CAAeZ,GAAG,CAACzR,CAAnB,EAAsBkU,GAAtB,EAA2BD,EAA3B,EAA+BnT,EAAE,CAAC2T,WAAlC,EAA+C3T,EAAE,CAAC8D,QAAlD,EAA4D9D,EAAE,CAAC4T,YAA/D,CAAd;AACA,MAAIC,OAAJ;AAEA,MAAIC,UAAU,GAAGJ,OAAO,CAACjR,OAAR,CAAgB,IAAhB,CAAjB;;AACA,MAAGqR,UAAU,KAAK,CAAC,CAAnB,EAAsB;AAClBD,IAAAA,OAAO,GAAGH,OAAO,CAACzM,MAAR,CAAe6M,UAAU,GAAG,CAA5B,CAAV;AACAJ,IAAAA,OAAO,GAAGA,OAAO,CAACzM,MAAR,CAAe,CAAf,EAAkB6M,UAAlB,CAAV;AACH;;AAED,MAAGjD,cAAH,EAAmB;AACf;AACA;AACA;AACA;AACA;AAEA;AACA,QAAG6C,OAAO,KAAK,UAAZ,IAA0BA,OAAO,KAAK,OAAzC,EAAkD;AAC9CA,MAAAA,OAAO,GAAGG,OAAV;AACAA,MAAAA,OAAO,GAAG,EAAV;AACH,KAHD,MAGO,IAAGH,OAAO,CAAChV,MAAR,KAAmB,CAAtB,EAAyB;AAC5B;AACA;AACA;AACAgV,MAAAA,OAAO,GAAGA,OAAO,CAAC9E,OAAR,CAAgB,MAAhB,EAAwB,EAAxB,CAAV;AACH;AACJ;;AAED,MAAGiF,OAAH,EAAY;AACR,QAAGpD,KAAH,EAAU;AACN;AACA;AACA,UAAG0C,EAAE,KAAK,GAAV,EAAeO,OAAO,IAAI,OAAOG,OAAlB,CAAf,KACKH,OAAO,GAAGG,OAAO,IAAIH,OAAO,GAAG,OAAOA,OAAV,GAAoB,EAA/B,CAAjB;AACR,KALD,MAKO;AACH,UACI,CAAC1T,EAAE,CAACmM,YAAJ,IACAnM,EAAE,CAACkM,aAAH,KAAqB2H,OAFzB,EAGE;AACE7T,QAAAA,EAAE,CAACkM,aAAH,GAAmB2H,OAAnB;AACAH,QAAAA,OAAO,IAAI,SAASG,OAApB;AACH,OAND,MAMO;AACH,YAAIE,QAAQ,GAAG,CAAC/T,EAAE,CAACgU,iBAAH,IAAwB,EAAzB,EAA6BvR,OAA7B,CAAqC,QAArC,MAAmD,CAAC,CAAnE;AACA,YAAIwR,IAAI,GAAGjU,EAAE,CAACkU,SAAH,IAAgBlU,EAAE,CAACiU,IAA9B,CAFG,CAEiC;;AACpC,YACK,CAACF,QAAD,IAAaE,IAAI,KAAK,KAAvB,IACCF,QAAQ,IAAIE,IAAI,KAAK,QAF1B,EAGE;AACEP,UAAAA,OAAO,IAAI,OAAX;AACH;AACJ;AACJ;AACJ;;AAED/C,EAAAA,GAAG,CAACjE,IAAJ,GAAWgH,OAAX;AACH;;AAED,SAASlC,SAAT,CAAmBxR,EAAnB,EAAuB2Q,GAAvB,EAA4BF,KAA5B,EAAmCI,cAAnC,EAAmDQ,OAAnD,EAA4D;AACxD,MAAIxM,KAAK,GAAG7E,EAAE,CAAC6E,KAAf;AACA,MAAI3F,CAAC,GAAGyR,GAAG,CAACzR,CAAZ;AACA,MAAI6J,UAAU,GAAG/I,EAAE,CAAC+I,UAApB;AACA,MAAIoL,OAAO,GAAG,OAAOtP,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACpG,MAAN,CAAa,CAAb,CAA3C;;AAEA,MAAG4S,OAAO,KAAK,OAAf,EAAwB;AACpB;AACA;AACA;AACA;AACA;AACA;AACAA,IAAAA,OAAO,GAAG,EAAV;AACH;;AAED,MAAGR,cAAc,IAAKsD,OAAO,KAAK,GAAlC,EAAwC;AACpCtP,IAAAA,KAAK,GAAG,IAAR;AACAsP,IAAAA,OAAO,GAAG,GAAV;AACH;;AAED,MAAGpL,UAAU,IAAKoL,OAAO,KAAK,GAA9B,EAAoC;AAChCxD,IAAAA,GAAG,CAACjE,IAAJ,GAAW0H,SAAS,CAAClQ,IAAI,CAACiB,GAAL,CAAS,EAAT,EAAajG,CAAb,CAAD,EAAkBc,EAAlB,EAAsBqR,OAAtB,EAA+BR,cAA/B,CAApB;AACH,GAFD,MAEO,IAAGrW,SAAS,CAACqK,KAAD,CAAT,IAAsBsP,OAAO,KAAK,GAAb,IAAsBxZ,GAAG,CAACmV,GAAJ,CAAQ5Q,CAAC,GAAG,IAAZ,EAAkB,CAAlB,IAAuB,GAArE,EAA4E;AAC/E,QAAIoN,CAAC,GAAGpI,IAAI,CAACM,KAAL,CAAWtF,CAAX,CAAR;AACA,QAAImV,IAAI,GAAGnQ,IAAI,CAACmE,GAAL,CAASiE,CAAT,CAAX;AACA,QAAIgI,cAAc,GAAGtU,EAAE,CAACoP,cAAxB;;AACA,QAAGkF,cAAc,KAAK,OAAnB,IAA+BnF,UAAU,CAACmF,cAAD,CAAV,IAA8BjF,QAAQ,CAAC/C,CAAD,CAAxE,EAA8E;AAC1E,UAAGA,CAAC,KAAK,CAAT,EAAYqE,GAAG,CAACjE,IAAJ,GAAW,CAAX,CAAZ,KACK,IAAGJ,CAAC,KAAK,CAAT,EAAYqE,GAAG,CAACjE,IAAJ,GAAW,IAAX,CAAZ,KACAiE,GAAG,CAACjE,IAAJ,GAAW,aAAaJ,CAAC,GAAG,CAAJ,GAAQ,EAAR,GAAanQ,UAA1B,IAAwCkY,IAAxC,GAA+C,QAA1D;AAEL1D,MAAAA,GAAG,CAAClF,QAAJ,IAAgB,IAAhB;AACH,KAND,MAMO,IAAG,CAAC6I,cAAc,KAAK,GAAnB,IAA0BA,cAAc,KAAK,GAA9C,KAAsDD,IAAI,GAAG,CAAhE,EAAmE;AACtE1D,MAAAA,GAAG,CAACjE,IAAJ,GAAW,MAAM4H,cAAN,IAAwBhI,CAAC,GAAG,CAAJ,GAAQ,GAAR,GAAcnQ,UAAtC,IAAoDkY,IAA/D;AACH,KAFM,MAEA;AACH1D,MAAAA,GAAG,CAACjE,IAAJ,GAAW0H,SAAS,CAAClQ,IAAI,CAACiB,GAAL,CAAS,EAAT,EAAajG,CAAb,CAAD,EAAkBc,EAAlB,EAAsB,EAAtB,EAA0B,WAA1B,CAApB;;AACA,UAAG6E,KAAK,KAAK,IAAV,IAAkB7E,EAAE,CAACiI,GAAH,CAAOxJ,MAAP,CAAc,CAAd,MAAqB,GAA1C,EAA+C;AAC3CkS,QAAAA,GAAG,CAACmC,EAAJ,IAAUnC,GAAG,CAAClF,QAAJ,GAAe,CAAzB;AACH;AACJ;AACJ,GAlBM,MAkBA,IAAG0I,OAAO,KAAK,GAAf,EAAoB;AACvBxD,IAAAA,GAAG,CAACjE,IAAJ,GAAWzK,MAAM,CAACiC,IAAI,CAACM,KAAL,CAAWN,IAAI,CAACiB,GAAL,CAAS,EAAT,EAAaxK,GAAG,CAACmV,GAAJ,CAAQ5Q,CAAR,EAAW,CAAX,CAAb,CAAX,CAAD,CAAjB;AACAyR,IAAAA,GAAG,CAAClF,QAAJ,IAAgB,IAAhB;AACH,GAHM,MAGA,MAAM,wBAAwBxJ,MAAM,CAAC4C,KAAD,CAApC,CA5CiD,CA8CxD;;;AACA,MAAG7E,EAAE,CAAC6E,KAAH,KAAa,IAAhB,EAAsB;AAClB,QAAI0P,SAAS,GAAGtS,MAAM,CAAC0O,GAAG,CAACjE,IAAL,CAAN,CAAiBjO,MAAjB,CAAwB,CAAxB,CAAhB;;AACA,QAAG8V,SAAS,KAAK,GAAd,IAAqBA,SAAS,KAAK,GAAtC,EAA2C;AACvC,UAAGvU,EAAE,CAACiI,GAAH,CAAOxJ,MAAP,CAAc,CAAd,MAAqB,GAAxB,EAA6B;AACzBkS,QAAAA,GAAG,CAACkC,EAAJ,IAAUlC,GAAG,CAAClF,QAAJ,GAAe,CAAzB;AACH,OAFD,MAEO;AACHkF,QAAAA,GAAG,CAACmC,EAAJ,IAAUnC,GAAG,CAAClF,QAAJ,GAAe,CAAzB;AACAkF,QAAAA,GAAG,CAACkC,EAAJ,IAAU,CAAC7S,EAAE,CAACjC,KAAH,CAAS,CAAT,IAAciC,EAAE,CAACjC,KAAH,CAAS,CAAT,CAAd,GAA4B,CAA5B,GAAgC,CAAC,CAAlC,IACN4S,GAAG,CAAClF,QADE,IACUvM,CAAC,GAAG,CAAJ,GAAQ,GAAR,GAAc,IADxB,CAAV;AAEH;AACJ;AACJ;AACJ;;AAED,SAASuS,cAAT,CAAwBzR,EAAxB,EAA4B2Q,GAA5B,EAAiC;AAC7B,MAAI6D,EAAE,GAAGxU,EAAE,CAAC2B,WAAH,CAAeuC,IAAI,CAACM,KAAL,CAAWmM,GAAG,CAACzR,CAAf,CAAf,CAAT;;AACA,MAAGsV,EAAE,KAAKhV,SAAV,EAAqBgV,EAAE,GAAG,EAAL;AACrB7D,EAAAA,GAAG,CAACjE,IAAJ,GAAWzK,MAAM,CAACuS,EAAD,CAAjB;AACH;;AAED,SAAS9C,mBAAT,CAA6B1R,EAA7B,EAAiC2Q,GAAjC,EAAsCF,KAAtC,EAA6C;AACzC,MAAIzO,CAAC,GAAGkC,IAAI,CAACM,KAAL,CAAWmM,GAAG,CAACzR,CAAf,CAAR;AACA,MAAIuV,IAAI,GAAGzU,EAAE,CAAC2B,WAAH,CAAeK,CAAf,KAAqB,EAAhC;AACA,MAAIwS,EAAE,GAAGC,IAAI,CAAC,CAAD,CAAJ,KAAYjV,SAAZ,GAAwB,EAAxB,GAA6ByC,MAAM,CAACwS,IAAI,CAAC,CAAD,CAAL,CAA5C;AACA,MAAIC,GAAG,GAAGD,IAAI,CAAC,CAAD,CAAJ,KAAYjV,SAAZ,GAAwB,EAAxB,GAA6ByC,MAAM,CAACwS,IAAI,CAAC,CAAD,CAAL,CAA7C;;AAEA,MAAGhE,KAAH,EAAU;AACN;AACAE,IAAAA,GAAG,CAACjE,IAAJ,GAAWgI,GAAG,GAAG,KAAN,GAAcF,EAAzB;AACH,GAHD,MAGO;AACH;AACA7D,IAAAA,GAAG,CAACjE,IAAJ,GAAW8H,EAAX;AACA7D,IAAAA,GAAG,CAACgE,KAAJ,GAAYD,GAAZ;AACH;AACJ;;AAED,SAAS9C,YAAT,CAAsB5R,EAAtB,EAA0B2Q,GAA1B,EAA+BF,KAA/B,EAAsCI,cAAtC,EAAsDQ,OAAtD,EAA+D;AAC3D,MAAGA,OAAO,KAAK,OAAf,EAAwB;AACpB;AACA;AACA;AACA;AACA;AACA;AACAA,IAAAA,OAAO,GAAG,EAAV;AACH,GARD,MAQO,IAAGrR,EAAE,CAACsR,YAAH,KAAoB,KAApB,IAA6BpN,IAAI,CAACmE,GAAL,CAASsI,GAAG,CAACzR,CAAJ,GAAQc,EAAE,CAAC6E,KAApB,IAA6B,IAA7D,EAAmE;AACtE;AACA;AACA;AACAwM,IAAAA,OAAO,GAAG,MAAV;AACH;;AACDV,EAAAA,GAAG,CAACjE,IAAJ,GAAW0H,SAAS,CAACzD,GAAG,CAACzR,CAAL,EAAQc,EAAR,EAAYqR,OAAZ,EAAqBR,cAArB,CAApB;AACH;;AAED,SAASc,WAAT,CAAqB3R,EAArB,EAAyB2Q,GAAzB,EAA8BF,KAA9B,EAAqCI,cAArC,EAAqDQ,OAArD,EAA8D;AAC1D,MAAGrR,EAAE,CAAC4U,SAAH,KAAiB,SAAjB,IAA8B,CAACnE,KAAlC,EAAyC;AACrC,QAAIoE,GAAG,GAAGlE,GAAG,CAACzR,CAAJ,GAAQ,GAAlB;;AAEA,QAAG2V,GAAG,KAAK,CAAX,EAAc;AACVlE,MAAAA,GAAG,CAACjE,IAAJ,GAAW,GAAX;AACH,KAFD,MAEO;AACH,UAAImD,IAAI,GAAGiF,QAAQ,CAACD,GAAD,CAAnB;;AAEA,UAAGhF,IAAI,CAAC,CAAD,CAAJ,IAAW,GAAd,EAAmB;AACfc,QAAAA,GAAG,CAACjE,IAAJ,GAAW0H,SAAS,CAACzZ,GAAG,CAACoa,OAAJ,CAAYpE,GAAG,CAACzR,CAAhB,CAAD,EAAqBc,EAArB,EAAyBqR,OAAzB,EAAkCR,cAAlC,CAApB;AACH,OAFD,MAEO;AACH,YAAImE,KAAK,GAAGrE,GAAG,CAACzR,CAAJ,GAAQ,CAApB;;AAEA,YAAG2Q,IAAI,CAAC,CAAD,CAAJ,KAAY,CAAf,EAAkB;AACd,cAAGA,IAAI,CAAC,CAAD,CAAJ,KAAY,CAAf,EAAkBc,GAAG,CAACjE,IAAJ,GAAW,GAAX,CAAlB,KACKiE,GAAG,CAACjE,IAAJ,GAAWmD,IAAI,CAAC,CAAD,CAAJ,GAAU,GAArB;AACR,SAHD,MAGO;AACHc,UAAAA,GAAG,CAACjE,IAAJ,GAAW,CACP,OADO,EACEmD,IAAI,CAAC,CAAD,CADN,EACW,QADX,EAEP,GAFO,EAGP,OAHO,EAGEA,IAAI,CAAC,CAAD,CAHN,EAGW,QAHX,EAIP,GAJO,EAKToF,IALS,CAKJ,EALI,CAAX;AAMH;;AAED,YAAGD,KAAH,EAAUrE,GAAG,CAACjE,IAAJ,GAAWvQ,UAAU,GAAGwU,GAAG,CAACjE,IAA5B;AACb;AACJ;AACJ,GA5BD,MA4BO;AACHiE,IAAAA,GAAG,CAACjE,IAAJ,GAAW0H,SAAS,CAACzD,GAAG,CAACzR,CAAL,EAAQc,EAAR,EAAYqR,OAAZ,EAAqBR,cAArB,CAApB;AACH;AACJ,C,CAED;AACA;;;AACA,SAASiE,QAAT,CAAkBD,GAAlB,EAAuB;AACnB,WAASK,QAAT,CAAkB1L,CAAlB,EAAqBC,CAArB,EAAwB;AACpB,WAAOvF,IAAI,CAACmE,GAAL,CAASmB,CAAC,GAAGC,CAAb,KAAmB,IAA1B;AACH;;AAED,WAAS0L,OAAT,CAAiB3L,CAAjB,EAAoBC,CAApB,EAAuB;AACnB,WAAOyL,QAAQ,CAACzL,CAAD,EAAI,CAAJ,CAAR,GAAiBD,CAAjB,GAAqB2L,OAAO,CAAC1L,CAAD,EAAID,CAAC,GAAGC,CAAR,CAAnC;AACH;;AAED,WAAS2L,aAAT,CAAuBlL,CAAvB,EAA0B;AACtB,QAAImL,CAAC,GAAG,CAAR;;AACA,WAAM,CAACH,QAAQ,CAAChR,IAAI,CAACM,KAAL,CAAW0F,CAAC,GAAGmL,CAAf,IAAoBA,CAArB,EAAwBnL,CAAxB,CAAf,EAA2C;AACvCmL,MAAAA,CAAC,IAAI,EAAL;AACH;;AACD,WAAOA,CAAP;AACH;;AAED,MAAIC,SAAS,GAAGF,aAAa,CAACP,GAAD,CAA7B;AACA,MAAIU,MAAM,GAAGV,GAAG,GAAGS,SAAnB;AACA,MAAIE,GAAG,GAAGtR,IAAI,CAACmE,GAAL,CAAS8M,OAAO,CAACI,MAAD,EAASD,SAAT,CAAhB,CAAV;AAEA,SAAO,CACH;AACApR,EAAAA,IAAI,CAACM,KAAL,CAAW+Q,MAAM,GAAGC,GAApB,CAFG,EAGH;AACAtR,EAAAA,IAAI,CAACM,KAAL,CAAW8Q,SAAS,GAAGE,GAAvB,CAJG,CAAP;AAMH,C,CAED;AACA;AACA;AACA;;;AACA,IAAIC,UAAU,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,EAA1B,EAA8B,GAA9B,EAAmC,GAAnC,EAAwC,GAAxC,EAA6C,GAA7C,CAAjB;;AAEA,SAAStG,UAAT,CAAoBmF,cAApB,EAAoC;AAChC,SAAOA,cAAc,KAAK,IAAnB,IAA2BA,cAAc,KAAK,GAArD;AACH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASjF,QAAT,CAAkBqG,QAAlB,EAA4B;AACxB,SAAOA,QAAQ,GAAG,EAAX,IAAiBA,QAAQ,GAAG,CAAC,EAApC;AACH;;AAED,SAAStB,SAAT,CAAmBpS,CAAnB,EAAsBhC,EAAtB,EAA0B2V,WAA1B,EAAuClF,KAAvC,EAA8C;AAC1C,MAAIuE,KAAK,GAAGhT,CAAC,GAAG,CAAhB,CAD0C,CAE1C;;AACA,MAAI4T,SAAS,GAAG5V,EAAE,CAACyO,UAAnB;AACA,MAAI6F,cAAc,GAAGqB,WAAW,IAAI3V,EAAE,CAACoP,cAAlB,IAAoC,GAAzD;AACA,MAAIsG,QAAQ,GAAG1V,EAAE,CAACwO,aAAlB;AACA,MAAIzF,UAAU,GAAGpM,IAAI,CAACqM,aAAL,CAAmBhJ,EAAnB,CAAjB;AACA,MAAI6V,iBAAiB,GAAG7V,EAAE,CAAC6V,iBAA3B,CAP0C,CAS1C;AACA;;AACA,MAAGpF,KAAH,EAAU;AACN;AACA,QAAIqF,EAAE,GAAG;AACL1G,MAAAA,cAAc,EAAEkF,cADX;AAELpF,MAAAA,WAAW,EAAElP,EAAE,CAACkP,WAFX;AAGLrK,MAAAA,KAAK,EAAE7E,EAAE,CAACsR,YAAH,KAAoB,MAApB,GAA6BtR,EAAE,CAAC6E,KAAhC,GACFrK,SAAS,CAACwH,CAAD,CAAT,GAAekC,IAAI,CAACmE,GAAL,CAASrG,CAAT,KAAe,CAA9B,GAAkC,CAJlC;AAKL;AACA;AACAjE,MAAAA,KAAK,EAAEiC,EAAE,CAACsR,YAAH,KAAoB,MAApB,GAA6BtR,EAAE,CAACjC,KAAH,CAASkB,GAAT,CAAae,EAAE,CAAC+O,GAAhB,CAA7B,GAAoD,CAAC,CAAD,EAAI/M,CAAC,IAAI,CAAT;AAPtD,KAAT;AASAyG,IAAAA,aAAa,CAACqN,EAAD,CAAb;AACAF,IAAAA,SAAS,GAAG,CAAC5O,MAAM,CAAC8O,EAAE,CAACrH,UAAJ,CAAN,IAAyB,CAA1B,IAA+B,CAA3C;AACAiH,IAAAA,QAAQ,GAAGI,EAAE,CAACtH,aAAd;AACA,QAAGxO,EAAE,CAACqT,WAAN,EAAmBtK,UAAU,GAAG/I,EAAE,CAACqT,WAAhB;AACtB;;AAED,MAAGtK,UAAH,EAAe,OAAO/I,EAAE,CAAC+V,UAAH,CAAchN,UAAd,EAA0B/G,CAA1B,EAA6B4M,OAA7B,CAAqC,IAArC,EAA2CzS,UAA3C,CAAP,CA5B2B,CA8B1C;;AACA,MAAIkZ,CAAC,GAAGnR,IAAI,CAACiB,GAAL,CAAS,EAAT,EAAa,CAACyQ,SAAd,IAA2B,CAAnC,CA/B0C,CAiC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAGtB,cAAc,KAAK,MAAtB,EAA8BoB,QAAQ,GAAG,CAAX,CA1CY,CA4C1C;AACA;;AACA1T,EAAAA,CAAC,GAAGkC,IAAI,CAACmE,GAAL,CAASrG,CAAT,CAAJ;;AACA,MAAGA,CAAC,GAAGqT,CAAP,EAAU;AACN;AACArT,IAAAA,CAAC,GAAG,GAAJ;AACAgT,IAAAA,KAAK,GAAG,KAAR;AACH,GAJD,MAIO;AACHhT,IAAAA,CAAC,IAAIqT,CAAL,CADG,CAEH;;AACA,QAAGK,QAAH,EAAa;AACT1T,MAAAA,CAAC,IAAIkC,IAAI,CAACiB,GAAL,CAAS,EAAT,EAAa,CAACuQ,QAAd,CAAL;AACAE,MAAAA,SAAS,IAAIF,QAAb;AACH,KANE,CAOH;;;AACA,QAAGE,SAAS,KAAK,CAAjB,EAAoB5T,CAAC,GAAGC,MAAM,CAACiC,IAAI,CAACkB,KAAL,CAAWpD,CAAX,CAAD,CAAV,CAApB,KACK,IAAG4T,SAAS,GAAG,CAAf,EAAkB;AACnB5T,MAAAA,CAAC,GAAGC,MAAM,CAACiC,IAAI,CAACM,KAAL,CAAWxC,CAAX,CAAD,CAAV;AACAA,MAAAA,CAAC,GAAGA,CAAC,CAACiF,MAAF,CAAS,CAAT,EAAYjF,CAAC,CAACtD,MAAF,GAAWkX,SAAvB,CAAJ;;AACA,WAAI,IAAI9U,CAAC,GAAG8U,SAAZ,EAAuB9U,CAAC,GAAG,CAA3B,EAA8BA,CAAC,EAA/B,EAAmCkB,CAAC,IAAI,GAAL;AACtC,KAJI,MAIE;AACHA,MAAAA,CAAC,GAAGC,MAAM,CAACD,CAAD,CAAV;AACA,UAAIgU,EAAE,GAAGhU,CAAC,CAACS,OAAF,CAAU,GAAV,IAAiB,CAA1B;AACA,UAAGuT,EAAH,EAAOhU,CAAC,GAAGA,CAAC,CAACiF,MAAF,CAAS,CAAT,EAAY+O,EAAE,GAAGJ,SAAjB,EAA4BhH,OAA5B,CAAoC,QAApC,EAA8C,EAA9C,CAAJ;AACV,KAjBE,CAkBH;;AACA5M,IAAAA,CAAC,GAAGrH,GAAG,CAACsb,WAAJ,CAAgBjU,CAAhB,EAAmBhC,EAAE,CAACkW,WAAtB,EAAmCL,iBAAnC,CAAJ;AACH,GAvEyC,CAyE1C;;;AACA,MAAGH,QAAQ,IAAIpB,cAAc,KAAK,MAAlC,EAA0C;AACtC,QAAGnF,UAAU,CAACmF,cAAD,CAAV,IAA8BjF,QAAQ,CAACqG,QAAD,CAAzC,EAAqDpB,cAAc,GAAG,OAAjB;AAErD,QAAI6B,cAAJ;AACA,QAAGT,QAAQ,GAAG,CAAd,EAAiBS,cAAc,GAAGha,UAAU,GAAG,CAACuZ,QAA/B,CAAjB,KACK,IAAGpB,cAAc,KAAK,OAAtB,EAA+B6B,cAAc,GAAG,MAAMT,QAAvB,CAA/B,KACAS,cAAc,GAAGlU,MAAM,CAACyT,QAAD,CAAvB;;AAEL,QAAGpB,cAAc,KAAK,GAAnB,IAA0BA,cAAc,KAAK,GAAhD,EAAqD;AACjDtS,MAAAA,CAAC,IAAIsS,cAAc,GAAG6B,cAAtB;AACH,KAFD,MAEO,IAAG7B,cAAc,KAAK,OAAtB,EAA+B;AAClCtS,MAAAA,CAAC,IAAI,aAAamU,cAAb,GAA8B,QAAnC;AACH,KAFM,MAEA,IAAG7B,cAAc,KAAK,GAAnB,IAA0BoB,QAAQ,KAAK,CAA1C,EAA6C;AAChD1T,MAAAA,CAAC,IAAI,GAAL;AACH,KAFM,MAEA,IAAGmN,UAAU,CAACmF,cAAD,CAAb,EAA+B;AAClCtS,MAAAA,CAAC,IAAIyT,UAAU,CAACC,QAAQ,GAAG,CAAX,GAAe,CAAhB,CAAf;AACH;AACJ,GA3FyC,CA6F1C;AACA;AACA;;;AACA,MAAGV,KAAH,EAAU,OAAO7Y,UAAU,GAAG6F,CAApB;AACV,SAAOA,CAAP;AACH;;AAEDrF,IAAI,CAACqM,aAAL,GAAqB,UAAShJ,EAAT,EAAa;AAC9B,MAAIc,CAAJ;;AAEA,WAASsV,WAAT,CAAqBvR,KAArB,EAA4B;AACxB,WAAO,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCmC,MAAM,CAACnC,KAAK,CAAC+J,OAAN,CAAc,GAAd,EAAmB,EAAnB,CAAD,CAAN,GAAiCjT,WAA5E;AACH;;AAED,WAAS0a,eAAT,CAAyBC,IAAzB,EAA+BC,KAA/B,EAAsC;AAClC,QAAIC,QAAQ,GAAG,CAAC,GAAD,EAAM,GAAN,CAAf;;AACA,QAAG,OAAOF,IAAP,KAAgB,OAAOC,KAA1B,EAAiC;AAC7B,UAAG,OAAOD,IAAP,KAAgB,QAAnB,EAA6B;AACzB,eAAOA,IAAI,GAAGC,KAAd;AACH,OAFD,MAEO;AACH,YAAIE,YAAY,GAAGD,QAAQ,CAAC/T,OAAT,CAAiB6T,IAAI,CAAC7X,MAAL,CAAY,CAAZ,CAAjB,CAAnB;AACA,YAAIiY,aAAa,GAAGF,QAAQ,CAAC/T,OAAT,CAAiB8T,KAAK,CAAC9X,MAAN,CAAa,CAAb,CAAjB,CAApB;;AACA,YAAGgY,YAAY,KAAKC,aAApB,EAAmC;AAC/B,iBAAO1P,MAAM,CAACsP,IAAI,CAAC1H,OAAL,CAAa,QAAb,EAAuB,EAAvB,CAAD,CAAN,GAAqC5H,MAAM,CAACuP,KAAK,CAAC3H,OAAN,CAAc,QAAd,EAAwB,EAAxB,CAAD,CAAlD;AACH,SAFD,MAEO;AACH,iBAAO6H,YAAY,GAAGC,aAAtB;AACH;AACJ;AACJ,KAZD,MAYO;AACH,aAAO,OAAOJ,IAAP,KAAgB,QAAhB,GAA2B,CAA3B,GAA+B,CAAC,CAAvC;AACH;AACJ;;AAED,WAASK,YAAT,CAAsB9R,KAAtB,EAA6B9G,KAA7B,EAAoC6Y,OAApC,EAA6C;AACzC,QAAIC,SAAS,GAAGD,OAAO,IAAI,UAAS1X,CAAT,EAAY;AAAE,aAAOA,CAAP;AAAU,KAAnD;;AACA,QAAI4X,SAAS,GAAG/Y,KAAK,CAAC,CAAD,CAArB;AACA,QAAIgZ,UAAU,GAAGhZ,KAAK,CAAC,CAAD,CAAtB;AACA,WAAO,CAAE,CAAC+Y,SAAD,IAAc,OAAOA,SAAP,KAAqB,QAApC,IAAiDD,SAAS,CAACC,SAAD,CAAT,IAAwBD,SAAS,CAAChS,KAAD,CAAnF,MACE,CAACkS,UAAD,IAAe,OAAOA,UAAP,KAAsB,QAAtC,IAAmDF,SAAS,CAACE,UAAD,CAAT,IAAyBF,SAAS,CAAChS,KAAD,CADtF,CAAP;AAEH;;AAED,WAASmS,eAAT,CAAyBnS,KAAzB,EAAgC9G,KAAhC,EAAuC;AACnC,QAAIkZ,eAAe,GAAGlZ,KAAK,CAAC,CAAD,CAAL,KAAa,IAAnC;AACA,QAAImZ,gBAAgB,GAAGnZ,KAAK,CAAC,CAAD,CAAL,KAAa,IAApC;AACA,QAAIoZ,kBAAkB,GAAGd,eAAe,CAACxR,KAAD,EAAQ9G,KAAK,CAAC,CAAD,CAAb,CAAf,IAAoC,CAA7D;AACA,QAAIqZ,mBAAmB,GAAGf,eAAe,CAACxR,KAAD,EAAQ9G,KAAK,CAAC,CAAD,CAAb,CAAf,IAAoC,CAA9D;AACA,WAAO,CAACkZ,eAAe,IAAIE,kBAApB,MAA4CD,gBAAgB,IAAIE,mBAAhE,CAAP;AACH;;AAED,MAAIC,QAAJ,EAAcC,KAAd;;AACA,MAAGtX,EAAE,CAACuX,eAAH,IAAsBvX,EAAE,CAACuX,eAAH,CAAmB7Y,MAAnB,GAA4B,CAArD,EAAwD;AACpD,YAAOsB,EAAE,CAACyB,IAAV;AACI,WAAK,MAAL;AACA,WAAK,QAAL;AAAe;AACX,eAAIX,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAGd,EAAE,CAACuX,eAAH,CAAmB7Y,MAAlC,EAA0CoC,CAAC,EAA3C,EAA+C;AAC3CwW,YAAAA,KAAK,GAAGtX,EAAE,CAACuX,eAAH,CAAmBzW,CAAnB,CAAR;;AACA,gBAAGwW,KAAK,CAACE,OAAN,IAAiBb,YAAY,CAAC3W,EAAE,CAAC6E,KAAJ,EAAWyS,KAAK,CAACG,UAAjB,EAA6BrB,WAA7B,CAAhC,EAA2E;AACvEiB,cAAAA,QAAQ,GAAGC,KAAX;AACA;AACH;AACJ;;AACD;AACH;;AACD,WAAK,KAAL;AAAY;AACR,eAAIxW,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAGd,EAAE,CAACuX,eAAH,CAAmB7Y,MAAlC,EAA0CoC,CAAC,EAA3C,EAA+C;AAC3CwW,YAAAA,KAAK,GAAGtX,EAAE,CAACuX,eAAH,CAAmBzW,CAAnB,CAAR;;AACA,gBAAGwW,KAAK,CAACE,OAAN,IAAiBR,eAAe,CAAChX,EAAE,CAAC6E,KAAJ,EAAWyS,KAAK,CAACG,UAAjB,CAAnC,EAAiE;AAC7DJ,cAAAA,QAAQ,GAAGC,KAAX;AACA;AACH;AACJ;;AACD;AACH;;AACD;AAtBJ;AAwBH;;AACD,SAAOD,QAAQ,GAAGA,QAAQ,CAAC9N,KAAZ,GAAoBvJ,EAAE,CAAC+I,UAAtC;AACH,CAtED,C,CAwEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACApM,IAAI,CAAC+a,WAAL,GAAmB,UAAStZ,EAAT,EAAa4B,EAAb,EAAiB;AAChC,MAAI2X,UAAU,GAAGvZ,EAAE,CAACQ,WAAH,CAAeC,SAAhC;AACA,MAAI+Y,WAAW,GAAGD,UAAU,CAACE,SAAX,CAAqB7Y,MAArB,CAA4B2Y,UAAU,CAACG,IAAX,IAAmB,EAA/C,CAAlB;AAEA,MAAInH,GAAG,GAAG3Q,EAAE,GAAGrD,IAAI,CAACob,oBAAL,CAA0BH,WAA1B,EAAuC5X,EAAvC,CAAH,GAAgD4X,WAA5D;AAEAjH,EAAAA,GAAG,CAACqH,IAAJ,CAAS,UAASxO,CAAT,EAAYC,CAAZ,EAAe;AACpB,QAAIwO,MAAM,GAAGzO,CAAC,CAACvC,MAAF,CAAS,CAAT,EAAYiR,KAAZ,CAAkB,GAAlB,CAAb;AACA,QAAIC,MAAM,GAAG1O,CAAC,CAACxC,MAAF,CAAS,CAAT,EAAYiR,KAAZ,CAAkB,GAAlB,CAAb;AAEA,QAAGD,MAAM,CAAC,CAAD,CAAN,KAAcE,MAAM,CAAC,CAAD,CAAvB,EAA4B,OAAO,CAACF,MAAM,CAAC,CAAD,CAAP,GAAa,CAACE,MAAM,CAAC,CAAD,CAA3B;AAC5B,WAAO,CAACF,MAAM,CAAC,CAAD,CAAP,GAAa,CAACE,MAAM,CAAC,CAAD,CAA3B;AACH,GAND;AAQA,SAAOxH,GAAP;AACH,CAfD,C,CAiBA;AACA;AACA;;;AACAhU,IAAI,CAACob,oBAAL,GAA4B,UAASK,QAAT,EAAmBpY,EAAnB,EAAuB;AAC/C,MAAIqY,OAAO,GAAG,IAAIC,MAAJ,CACTtY,EAAE,CAACiI,GAAH,CAAOxJ,MAAP,CAAc,CAAd,MAAqB,GAAtB,GAA8B,MAAMuB,EAAE,CAACiI,GAAT,GAAe,GAA7C,GAAqDjI,EAAE,CAACiI,GAAH,GAAS,GADpD,CAAd;AAGA,MAAIsQ,cAAc,GAAG,EAArB;;AAEA,OAAI,IAAIzX,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGsX,QAAQ,CAAC1Z,MAA5B,EAAoCoC,CAAC,EAArC,EAAyC;AACrC,QAAI0X,EAAE,GAAGJ,QAAQ,CAACtX,CAAD,CAAjB;AACA,QAAGuX,OAAO,CAAC5Y,IAAR,CAAa+Y,EAAb,CAAH,EAAqBD,cAAc,CAAChN,IAAf,CAAoBiN,EAApB;AACxB;;AAED,SAAOD,cAAP;AACH,CAZD,C,CAcA;;;AACA5b,IAAI,CAAC8b,aAAL,GAAqB,UAASra,EAAT,EAAa;AAC9B,MAAIiC,UAAU,GAAGjC,EAAE,CAACQ,WAApB,CAD8B,CAG9B;;AACA,MAAGyB,UAAU,CAACqY,mBAAd,EAAmC;AAEnC,MAAIC,SAAS,GAAG;AAACC,IAAAA,OAAO,EAAE,CAAV;AAAa5Q,IAAAA,OAAO,EAAE3H,UAAU,CAACwY,KAAjC;AAAwC5Q,IAAAA,GAAG,EAAE;AAA7C,GAAhB;AACA,MAAI6Q,UAAU,GAAG;AAACF,IAAAA,OAAO,EAAE,CAAV;AAAa5Q,IAAAA,OAAO,EAAE3H,UAAU,CAAC0Y,MAAjC;AAAyC9Q,IAAAA,GAAG,EAAE;AAA9C,GAAjB;AACA,MAAI+Q,MAAM,GAAGrc,IAAI,CAACW,IAAL,CAAUc,EAAV,EAAc,GAAd,EAAmB,IAAnB,CAAb;AACA,MAAI6a,MAAM,GAAGtc,IAAI,CAACW,IAAL,CAAUc,EAAV,EAAc,GAAd,EAAmB,IAAnB,CAAb;AACA,MAAI8a,QAAQ,GAAG,EAAf;AACA,MAAIpY,CAAJ,EAAOE,CAAP;;AAEA,OAAIF,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAGkY,MAAM,CAACta,MAAtB,EAA8BoC,CAAC,EAA/B,EAAmC;AAC/BoY,IAAAA,QAAQ,CAAC3N,IAAT,CAAc;AAACrM,MAAAA,CAAC,EAAE8Z,MAAM,CAAClY,CAAD,CAAV;AAAewS,MAAAA,CAAC,EAAEwF;AAAlB,KAAd;;AACA,SAAI9X,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAGiY,MAAM,CAACva,MAAtB,EAA8BsC,CAAC,EAA/B,EAAmC;AAC/B,UAAGF,CAAC,KAAK,CAAT,EAAYoY,QAAQ,CAAC3N,IAAT,CAAc;AAACrM,QAAAA,CAAC,EAAEyZ,SAAJ;AAAerF,QAAAA,CAAC,EAAE2F,MAAM,CAACjY,CAAD;AAAxB,OAAd;AACZkY,MAAAA,QAAQ,CAAC3N,IAAT,CAAc;AAACrM,QAAAA,CAAC,EAAE8Z,MAAM,CAAClY,CAAD,CAAV;AAAewS,QAAAA,CAAC,EAAE2F,MAAM,CAACjY,CAAD;AAAxB,OAAd;AACH;AACJ,GAnB6B,CAqB9B;AACA;AACA;;;AACA,MAAImY,OAAO,GAAG9Y,UAAU,CAAC+Y,MAAX,CAAkBC,SAAlB,CAA4B,WAA5B,EACT1V,IADS,CACJuV,QADI,EACM,UAAS5L,CAAT,EAAY;AAAE,WAAOA,CAAC,CAACpO,CAAF,CAAI+I,GAAJ,GAAUqF,CAAC,CAACgG,CAAF,CAAIrL,GAArB;AAA2B,GAD/C,CAAd;;AAGAkR,EAAAA,OAAO,CAACG,KAAR,GAAgBC,MAAhB,CAAuB,UAAvB,EACKC,OADL,CACa,UADb,EACyB,IADzB,EAEKnb,IAFL,CAEU,IAFV,EAEgB,UAASiP,CAAT,EAAY;AAAE,WAAO,SAASjN,UAAU,CAACoZ,IAApB,GAA2BnM,CAAC,CAACpO,CAAF,CAAI+I,GAA/B,GAAqCqF,CAAC,CAACgG,CAAF,CAAIrL,GAAhD;AAAsD,GAFpF,EAGGsR,MAHH,CAGU,MAHV;AAKAJ,EAAAA,OAAO,CAACO,IAAR,GAAeC,MAAf;AAEAR,EAAAA,OAAO,CAACS,IAAR,CAAa,UAAStM,CAAT,EAAY;AACrBhT,IAAAA,EAAE,CAACuf,MAAH,CAAU,IAAV,EAAgBA,MAAhB,CAAuB,MAAvB,EAA+Bxb,IAA/B,CAAoC;AAChCa,MAAAA,CAAC,EAAEoO,CAAC,CAACpO,CAAF,CAAI0Z,OAAJ,IAAe,CADc;AAEhCtF,MAAAA,CAAC,EAAEhG,CAAC,CAACgG,CAAF,CAAIsF,OAAJ,IAAe,CAFc;AAGhCC,MAAAA,KAAK,EAAEvL,CAAC,CAACpO,CAAF,CAAI8I,OAAJ,IAAe,CAHU;AAIhC+Q,MAAAA,MAAM,EAAEzL,CAAC,CAACgG,CAAF,CAAItL,OAAJ,IAAe;AAJS,KAApC;AAMH,GAPD;AAQH,CA1CD;AA4CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACArL,IAAI,CAACmd,IAAL,GAAY,UAAS1b,EAAT,EAAa2b,GAAb,EAAkBzS,IAAlB,EAAwB;AAChC,MAAIjH,UAAU,GAAGjC,EAAE,CAACQ,WAApB;;AAEA,MAAGmb,GAAG,KAAK,QAAX,EAAqB;AACjB1Z,IAAAA,UAAU,CAAC2Z,MAAX,CAAkBX,SAAlB,CAA4B,WAA5B,EAAyCO,IAAzC,CAA8C,UAAStM,CAAT,EAAY;AACtD,UAAIlL,EAAE,GAAGkL,CAAC,CAAC,CAAD,CAAV;AACA,UAAI2M,QAAQ,GAAG5Z,UAAU,CAAC6Z,MAAX,CAAkB9X,EAAlB,CAAf;;AACA,UAAG6X,QAAH,EAAa;AACT,YAAIE,EAAE,GAAGF,QAAQ,CAACG,KAAlB;AACA,YAAIC,EAAE,GAAGJ,QAAQ,CAACK,KAAlB;AAEAL,QAAAA,QAAQ,CAACM,UAAT,CAAoBlB,SAApB,CAA8B,MAAMc,EAAE,CAAClS,GAAT,GAAe,MAA7C,EAAqD0R,MAArD;AACAM,QAAAA,QAAQ,CAACO,UAAT,CAAoBnB,SAApB,CAA8B,MAAMgB,EAAE,CAACpS,GAAT,GAAe,MAA7C,EAAqD0R,MAArD;AACAM,QAAAA,QAAQ,CAACM,UAAT,CAAoBlB,SAApB,CAA8B,MAAMc,EAAE,CAAClS,GAAT,GAAe,OAA7C,EAAsD0R,MAAtD;AACAM,QAAAA,QAAQ,CAACO,UAAT,CAAoBnB,SAApB,CAA8B,MAAMgB,EAAE,CAACpS,GAAT,GAAe,OAA7C,EAAsD0R,MAAtD;AACAM,QAAAA,QAAQ,CAACM,UAAT,CAAoBlB,SAApB,CAA8B,MAAMc,EAAE,CAAClS,GAAT,GAAe,SAA7C,EAAwD0R,MAAxD;AACAM,QAAAA,QAAQ,CAACO,UAAT,CAAoBnB,SAApB,CAA8B,MAAMgB,EAAE,CAACpS,GAAT,GAAe,SAA7C,EAAwD0R,MAAxD;AAEA,YAAGM,QAAQ,CAACQ,SAAZ,EAAuBR,QAAQ,CAACQ,SAAT,CAAmBpB,SAAnB,CAA6B,MAA7B,EAAqCM,MAArC;AACvB,YAAGM,QAAQ,CAACS,aAAZ,EAA2BT,QAAQ,CAACS,aAAT,CAAuBrB,SAAvB,CAAiC,MAAjC,EAAyCM,MAAzC;;AAE3BtZ,QAAAA,UAAU,CAACsa,UAAX,CAAsBd,MAAtB,CAA6B,QAAQM,EAAE,CAAClS,GAAX,GAAiB,OAA9C,EAAuD0R,MAAvD;;AACAtZ,QAAAA,UAAU,CAACsa,UAAX,CAAsBd,MAAtB,CAA6B,QAAQQ,EAAE,CAACpS,GAAX,GAAiB,OAA9C,EAAuD0R,MAAvD;AACH;AACJ,KApBD;AAqBH;;AAED,MAAI7W,MAAM,GAAI,CAACiX,GAAD,IAAQA,GAAG,KAAK,QAAjB,GAA6Bpd,IAAI,CAACY,OAAL,CAAaa,EAAb,CAA7B,GAAgD2b,GAA7D;AAEA,SAAOpf,GAAG,CAACigB,WAAJ,CAAgB9X,MAAM,CAAC7D,GAAP,CAAW,UAAS4b,IAAT,EAAe;AAC7C,WAAO,YAAW;AACd,UAAG,CAACA,IAAJ,EAAU;AAEV,UAAI7a,EAAE,GAAGrD,IAAI,CAACa,SAAL,CAAeY,EAAf,EAAmByc,IAAnB,CAAT;AACA,UAAIC,MAAM,GAAGne,IAAI,CAACoe,OAAL,CAAa3c,EAAb,EAAiB4B,EAAjB,EAAqBsH,IAArB,CAAb;AAEAtH,MAAAA,EAAE,CAACgb,EAAH,GAAQhb,EAAE,CAACjC,KAAH,CAASoF,KAAT,EAAR;AACAnD,MAAAA,EAAE,CAACib,GAAH,GAAStgB,GAAG,CAACgK,SAAJ,CAAc3E,EAAE,CAACgb,EAAjB,EAAqBhb,EAAE,CAACwH,GAAxB,CAAT;AAEA,aAAOsT,MAAP;AACH,KAVD;AAWH,GAZsB,CAAhB,CAAP;AAaH,CA1CD;AA4CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAne,IAAI,CAACoe,OAAL,GAAe,UAAS3c,EAAT,EAAa4B,EAAb,EAAiBsH,IAAjB,EAAuB;AAClCA,EAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AAEA,MAAIxG,CAAJ,EAAO0X,EAAP,EAAWyB,QAAX;AAEAja,EAAAA,EAAE,CAACkb,QAAH;AAEA,MAAI7a,UAAU,GAAGjC,EAAE,CAACQ,WAApB;AACA,MAAIic,IAAI,GAAG7a,EAAE,CAACiI,GAAd;AACA,MAAIzJ,QAAQ,GAAGqc,IAAI,CAACpc,MAAL,CAAY,CAAZ,CAAf;AACA,MAAI0D,aAAa,GAAGxF,IAAI,CAACwF,aAAL,CAAmB0Y,IAAnB,CAApB;AACA,MAAIM,YAAY,GAAG9a,UAAU,CAAC6Z,MAAX,CAAkBla,EAAE,CAACob,YAArB,CAAnB,CAXkC,CAalC;;AACA,MAAG,CAACD,YAAJ,EAAkB;AAElB,MAAIE,WAAW,GAAGF,YAAY,CAAC3c,QAAQ,GAAG,WAAZ,CAA9B;AACA,MAAI8c,gBAAgB,GAAGtb,EAAE,CAACub,iBAA1B;AACA,MAAIC,kBAAkB,GAAGxb,EAAE,CAACyb,mBAA5B;AAEA,MAAI9O,IAAI,GAAG3M,EAAE,CAAC0b,KAAH,GAAW/e,IAAI,CAAC6N,SAAL,CAAexK,EAAf,CAAtB,CApBkC,CAsBlC;AACA;;AACA,MAAI2b,MAAM,GAAG,CAAC3b,EAAE,CAAC4b,MAAJ,EAAYN,gBAAZ,EAA8BE,kBAA9B,EAAkDvG,IAAlD,CAAuD,GAAvD,CAAb;;AACA,OAAInU,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAG6L,IAAI,CAACjO,MAApB,EAA4BoC,CAAC,EAA7B,EAAiC;AAC7B6L,IAAAA,IAAI,CAAC7L,CAAD,CAAJ,CAAQ6a,MAAR,GAAiBA,MAAjB;AACH,GA3BiC,CA6BlC;AACA;;;AACA3b,EAAAA,EAAE,CAAC6b,WAAH,GAAiB,EAAjB,CA/BkC,CAgClC;AACA;;AACA,MAAG7b,EAAE,CAAC8b,WAAN,EAAmB9b,EAAE,CAAC+b,eAAH,GAAqB/b,EAAE,CAAC8b,WAAxB;AACnB9b,EAAAA,EAAE,CAAC8b,WAAH,GAAiB,EAAjB,CAnCkC,CAoClC;AACA;AACA;;AACA9b,EAAAA,EAAE,CAACgc,MAAH,GAAY,IAAZ,CAvCkC,CAyClC;AACA;AACA;;AACA,MAAIC,QAAQ,GAAG,EAAf;;AACA,WAASC,iBAAT,CAA2BC,MAA3B,EAAmC;AAC/B,QAAIC,GAAG,GAAGvB,IAAI,IAAIsB,MAAM,IAAI,MAAd,CAAd;AACA,QAAG,CAACF,QAAQ,CAACG,GAAD,CAAZ,EAAmBH,QAAQ,CAACG,GAAD,CAAR,GAAgBC,kBAAkB,CAACrc,EAAD,EAAKoc,GAAL,CAAlC;AACnB,WAAOH,QAAQ,CAACG,GAAD,CAAf;AACH;;AAED,MAAG,CAACpc,EAAE,CAACsc,OAAP,EAAgB;AAEhB,MAAIC,WAAW,GAAG5f,IAAI,CAAC6f,eAAL,CAAqBxc,EAArB,CAAlB;AACA,MAAIyc,gBAAgB,GAAG9f,IAAI,CAAC+f,oBAAL,CAA0B1c,EAA1B,CAAvB;AAEA,MAAIsJ,QAAJ,CAxDkC,CAyDlC;AACA;;AACA,MAAIqT,WAAJ;AAEA,MAAIC,WAAW,GAAG5c,EAAE,CAAC6c,KAAH,KAAa,QAA/B;AACA,MAAIC,YAAY,GAAG9c,EAAE,CAAC6c,KAAH,KAAa,SAAhC;;AAEA,MAAG7c,EAAE,CAACiS,OAAH,KAAe,YAAlB,EAAgC;AAC5B,QAAI8K,YAAY,GAAGC,eAAe,CAAChd,EAAD,EAAK2M,IAAL,CAAlC;AACAgQ,IAAAA,WAAW,GAAGhgB,IAAI,CAACsgB,QAAL,CAAcjd,EAAd,EAAkB+c,YAAlB,CAAd;AACAzT,IAAAA,QAAQ,GAAGsT,WAAW,GAAGD,WAAH,GAAiBI,YAAvC;AACH,GAJD,MAIO;AACHJ,IAAAA,WAAW,GAAGhgB,IAAI,CAACsgB,QAAL,CAAcjd,EAAd,EAAkB2M,IAAlB,CAAd;AACArD,IAAAA,QAAQ,GAAIsT,WAAW,IAAI5c,EAAE,CAACuI,aAAH,KAAqB,QAArC,GAAiDoU,WAAjD,GAA+DhQ,IAA1E;AACH;;AAED,MAAIuQ,QAAQ,GAAGld,EAAE,CAACmd,SAAH,GAAeR,WAA9B;AACA,MAAIS,WAAW,GAAGC,cAAc,CAACrd,EAAD,EAAK2M,IAAL,CAAhC;;AAEA,MAAG,CAACtM,UAAU,CAACqY,mBAAf,EAAoC;AAChC,QAAIH,cAAc,GAAGvY,EAAE,CAACsd,aAAxB,CADgC,CAGhC;AACA;;AACA,QAAIC,aAAa,GAAG,EAApB;;AAEA,SAAIzc,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAGyX,cAAc,CAAC7Z,MAA9B,EAAsCoC,CAAC,EAAvC,EAA2C;AACvC0X,MAAAA,EAAE,GAAGD,cAAc,CAACzX,CAAD,CAAnB;AACAmZ,MAAAA,QAAQ,GAAG5Z,UAAU,CAAC6Z,MAAX,CAAkB1B,EAAlB,CAAX;AAEA,UAAIgF,WAAW,GAAGvD,QAAQ,CAAC9X,aAAa,GAAG,MAAjB,CAA1B;AACA,UAAIsb,aAAa,GAAGD,WAAW,CAACE,SAAZ,CAAsBzV,GAA1C;AACA,UAAGsV,aAAa,CAACE,aAAD,CAAhB,EAAiC;AACjCF,MAAAA,aAAa,CAACE,aAAD,CAAb,GAA+B,CAA/B;AAEA,UAAIE,QAAQ,GAAGnf,QAAQ,KAAK,GAAb,GACX,QAAQgf,WAAW,CAAC5E,OAApB,GAA8B,GAA9B,GAAoC4E,WAAW,CAACxV,OADrC,GAEX,MAAMwV,WAAW,CAAC5E,OAAlB,GAA4B,KAA5B,GAAoC4E,WAAW,CAACxV,OAFpD;AAIArL,MAAAA,IAAI,CAACihB,QAAL,CAAcxf,EAAd,EAAkB4B,EAAlB,EAAsB;AAClB2M,QAAAA,IAAI,EAAEuQ,QADY;AAElBM,QAAAA,WAAW,EAAEA,WAFK;AAGlBK,QAAAA,KAAK,EAAE5D,QAAQ,CAACQ,SAAT,CAAmBZ,MAAnB,CAA0B,MAAMgB,IAAhC,CAHW;AAIlBiD,QAAAA,IAAI,EAAEH,QAJY;AAKlBI,QAAAA,OAAO,EAAExB;AALS,OAAtB;AAOA5f,MAAAA,IAAI,CAACqhB,YAAL,CAAkB5f,EAAlB,EAAsB4B,EAAtB,EAA0B;AACtBwd,QAAAA,WAAW,EAAEA,WADS;AAEtBK,QAAAA,KAAK,EAAE5D,QAAQ,CAACS,aAFM;AAGtBoD,QAAAA,IAAI,EAAEH,QAHgB;AAItBI,QAAAA,OAAO,EAAExB;AAJa,OAA1B;AAMH;AACJ;;AAED,MAAI0B,SAAS,GAAGthB,IAAI,CAACuhB,YAAL,CAAkBle,EAAlB,CAAhB;AACA,MAAIme,YAAY,GAAG,EAAnB;;AAEA,MAAGne,EAAE,CAAC6c,KAAN,EAAa;AACT,QAAIuB,YAAY,GAAGzhB,IAAI,CAAC0hB,YAAL,CAAkBre,EAAlB,EAAsBsb,gBAAtB,EAAwC2C,SAAS,CAAC,CAAD,CAAjD,CAAnB;AACA,QAAIK,cAAJ;AACA,QAAIC,YAAJ;;AACA,QAAGve,EAAE,CAACwe,WAAH,IAAkBxe,EAAE,CAAC4b,MAArB,IAA+B5b,EAAE,CAAC4b,MAAH,KAAc,IAAhD,EAAsD;AAClD0C,MAAAA,cAAc,GAAG3hB,IAAI,CAAC0hB,YAAL,CAAkBre,EAAlB,EAAsBwb,kBAAtB,EAA0CyC,SAAS,CAAC,CAAD,CAAnD,CAAjB;AACAM,MAAAA,YAAY,GAAGH,YAAY,GAAGE,cAA9B;AACH,KAHD,MAGO;AACHA,MAAAA,cAAc,GAAG,EAAjB;AACAC,MAAAA,YAAY,GAAGH,YAAf;AACH;;AAED,QAAIK,QAAJ;;AACA,QAAGze,EAAE,CAACkS,YAAH,IAAmB4K,YAAnB,IAAmC9c,EAAE,CAACiS,OAAH,KAAe,YAArD,EAAmE;AAC/D,UAAIyM,aAAa,GAAG,EAApB;;AACA,WAAI5d,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAGsc,WAAW,CAAC1e,MAA3B,EAAmCoC,CAAC,EAApC,EAAwC;AACpC4d,QAAAA,aAAa,CAACtB,WAAW,CAACtc,CAAD,CAAX,CAAe5B,CAAhB,CAAb,GAAkC,CAAlC;AACH;;AACDuf,MAAAA,QAAQ,GAAG,UAASnR,CAAT,EAAY;AACnB,eAAOoR,aAAa,CAACpR,CAAC,CAACpO,CAAH,CAAb,GAAqBof,cAArB,GAAsCC,YAA7C;AACH,OAFD;AAGH,KARD,MAQO;AACHE,MAAAA,QAAQ,GAAGF,YAAX;AACH;;AAED5hB,IAAAA,IAAI,CAACgiB,SAAL,CAAevgB,EAAf,EAAmB4B,EAAnB,EAAuB;AACnB2M,MAAAA,IAAI,EAAErD,QADa;AAEnBuU,MAAAA,KAAK,EAAExC,WAFY;AAGnByC,MAAAA,IAAI,EAAEW,QAHa;AAInBV,MAAAA,OAAO,EAAExB;AAJU,KAAvB;;AAOA,QAAGvc,EAAE,CAAC4b,MAAH,KAAc,UAAjB,EAA6B;AACzBuC,MAAAA,YAAY,GAAGS,MAAM,CAACC,IAAP,CAAY7e,EAAE,CAAC8e,cAAH,IAAqB,EAAjC,CAAf;AACH;AACJ;;AAED,OAAIhe,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAGqd,YAAY,CAACzf,MAA5B,EAAoCoC,CAAC,EAArC,EAAyC;AACrC0X,IAAAA,EAAE,GAAG2F,YAAY,CAACrd,CAAD,CAAjB;AACAmZ,IAAAA,QAAQ,GAAG5Z,UAAU,CAAC6Z,MAAX,CAAkB1B,EAAlB,CAAX,CAFqC,CAGrC;;AACA,QAAIuG,aAAa,GAAG/e,EAAE,CAAC8e,cAAH,CAAkBtG,EAAlB,KAAyB,EAA7C;AACA,QAAIwG,UAAU,GAAGriB,IAAI,CAAC0hB,YAAL,CAAkBre,EAAlB,EAAsB+e,aAAa,CAAC,CAAD,CAAnC,EAAwCd,SAAS,CAAC,CAAD,CAAjD,IACbthB,IAAI,CAAC0hB,YAAL,CAAkBre,EAAlB,EAAsB+e,aAAa,CAAC,CAAD,CAAnC,EAAwCd,SAAS,CAAC,CAAD,CAAjD,CADJ;AAGAthB,IAAAA,IAAI,CAACgiB,SAAL,CAAevgB,EAAf,EAAmB4B,EAAnB,EAAuB;AACnB2M,MAAAA,IAAI,EAAErD,QADa;AAEnBuU,MAAAA,KAAK,EAAE5D,QAAQ,CAACzb,QAAQ,GAAG,WAAZ,CAFI;AAGnBsf,MAAAA,IAAI,EAAEkB,UAHa;AAInBjB,MAAAA,OAAO,EAAExB;AAJU,KAAvB;AAMH;;AAED,MAAI0C,GAAG,GAAG,EAAV,CAxKkC,CA0KlC;AACA;;AAEAA,EAAAA,GAAG,CAAC1T,IAAJ,CAAS,YAAW;AAChB,WAAO5O,IAAI,CAACuiB,UAAL,CAAgB9gB,EAAhB,EAAoB4B,EAApB,EAAwB;AAC3B2M,MAAAA,IAAI,EAAEA,IADqB;AAE3BkR,MAAAA,KAAK,EAAExC,WAFoB;AAG3B0C,MAAAA,OAAO,EAAEtB,gBAHkB;AAI3B0C,MAAAA,QAAQ,EAAExiB,IAAI,CAACyiB,YAAL,CAAkBpf,EAAlB,EAAsBsb,gBAAtB;AAJiB,KAAxB,CAAP;AAMH,GAPD;;AASA,MAAGtb,EAAE,CAACyB,IAAH,KAAY,eAAf,EAAgC;AAC5B,QAAI4d,GAAG,GAAG;AAACngB,MAAAA,CAAC,EAAE,CAAJ;AAAOoU,MAAAA,CAAC,EAAE;AAAV,MAAc9U,QAAd,CAAV;AAEAygB,IAAAA,GAAG,CAAC1T,IAAJ,CAAS,YAAW;AAChB,UAAI+T,OAAO,GAAG;AAACpgB,QAAAA,CAAC,EAAE,QAAJ;AAAcoU,QAAAA,CAAC,EAAE;AAAjB,QAA0B9U,QAA1B,CAAd;AACA,UAAI+gB,QAAQ,GAAGrD,iBAAiB,GAAGoD,OAAH,CAAjB,GAA+BD,GAA/B,IACVrf,EAAE,CAAC8b,WAAH,CAAejB,IAAI,GAAG,MAAtB,IAAgC7a,EAAE,CAAC+H,QAAH,CAAYhE,IAAZ,GAAmBvH,YAAnD,GAAkE,CADxD,CAAf;AAGA,aAAOG,IAAI,CAACuiB,UAAL,CAAgB9gB,EAAhB,EAAoB4B,EAApB,EAAwB;AAC3B2M,QAAAA,IAAI,EAAE6S,qBAAqB,CAACxf,EAAD,EAAK2M,IAAL,CADA;AAE3BkR,QAAAA,KAAK,EAAExC,WAFoB;AAG3Be,QAAAA,GAAG,EAAEvB,IAAI,GAAG,OAHe;AAI3B4E,QAAAA,kBAAkB,EAAE,IAJO;AAK3BC,QAAAA,SAAS,EAAE,IALgB;AAM3B3B,QAAAA,OAAO,EAAExB,WANkB;AAO3B4C,QAAAA,QAAQ,EAAExiB,IAAI,CAACyiB,YAAL,CAAkBpf,EAAlB,EAAsBsb,gBAAgB,GAAGiE,QAAQ,GAAGtB,SAAS,CAAC,CAAD,CAA7D;AAPiB,OAAxB,CAAP;AASH,KAdD;AAgBAgB,IAAAA,GAAG,CAAC1T,IAAJ,CAAS,YAAW;AAChBvL,MAAAA,EAAE,CAACgc,MAAH,GAAYiC,SAAS,CAAC,CAAD,CAAT,IAAgB/B,iBAAiB,CAAC,OAAD,CAAjB,CAA2Blc,EAAE,CAACiU,IAA9B,IAAsCqH,gBAAtD,CAAZ;AAEA,aAAOqE,YAAY,CAACvhB,EAAD,EAAK4B,EAAL,EAAS;AACxB2M,QAAAA,IAAI,EAAEyQ,WADkB;AAExBS,QAAAA,KAAK,EAAExC,WAFiB;AAGxByC,QAAAA,IAAI,EAAEnhB,IAAI,CAAC0hB,YAAL,CAAkBre,EAAlB,EAAsBsb,gBAAtB,EAAwC2C,SAAS,CAAC,CAAD,CAAjD,EAAsDje,EAAE,CAACgc,MAAzD,CAHkB;AAIxB+B,QAAAA,OAAO,EAAExB;AAJe,OAAT,CAAnB;AAMH,KATD;AAUH,GA7BD,MA6BO,IAAGvc,EAAE,CAAC4f,KAAH,CAASC,cAAT,CAAwB,UAAxB,CAAH,EAAwC;AAC3CZ,IAAAA,GAAG,CAAC1T,IAAJ,CAAS,YAAW;AAChBvL,MAAAA,EAAE,CAACgc,MAAH,GAAYiC,SAAS,CAAC,CAAD,CAAT,IAAgB/B,iBAAiB,GAAGlc,EAAE,CAACiU,IAAN,CAAjB,GAA+BqH,gBAA/C,CAAZ;AACH,KAFD;AAGH;;AAED,MAAIwE,cAAc,GAAGplB,QAAQ,CAACkG,kBAAT,CAA4B,aAA5B,EAA2C,WAA3C,EAAwDZ,EAAxD,CAArB;AAEAif,EAAAA,GAAG,CAAC1T,IAAJ,CAAS,YAAW;AAChB,QAAIwU,CAAC,GAAG/f,EAAE,CAACiU,IAAH,CAAQxV,MAAR,CAAe,CAAf,CAAR;AACA,QAAIuhB,OAAO,GAAGvjB,aAAa,CAACuD,EAAE,CAACiU,IAAJ,CAAb,CAAuBxV,MAAvB,CAA8B,CAA9B,CAAd;AACA,QAAIoB,GAAG,GAAGlD,IAAI,CAACsjB,aAAL,CAAmB7hB,EAAnB,EAAuB4B,EAAvB,CAAV;AACA,QAAIkgB,cAAc,GAAGpD,YAAY,GAAG9c,EAAE,CAACmgB,OAAN,GAAgB,CAAjD;AACA,QAAIC,MAAJ;AAEA,QAAI7U,IAAJ;AACA,QAAI8U,UAAJ;AACA,QAAIC,eAAJ;;AAEA,QAAGtgB,EAAE,CAACugB,UAAH,IAAiBT,cAApB,EAAoC;AAChC,UAAG9f,EAAE,CAACyB,IAAH,KAAY,eAAf,EAAgC;AAC5B2e,QAAAA,MAAM,GAAGlE,iBAAiB,CAAC,OAAD,CAA1B;AACH,OAFD,MAEO;AACHkE,QAAAA,MAAM,GAAGlE,iBAAiB,EAA1B;;AACA,YAAG1d,QAAQ,KAAK,GAAb,IAAoBuhB,CAAC,KAAK,GAA7B,EAAkC;AAC9B/f,UAAAA,EAAE,CAACgc,MAAH,GAAY9X,IAAI,CAACG,GAAL,CAAS+b,MAAM,CAACvH,KAAP,GAAe,CAAf,GAAmBuH,MAAM,CAACI,MAAP,GAAgB3gB,GAAnC,GAAyC,CAAlD,EAAqDqgB,cAArD,CAAZ;AACH;AACJ;AACJ;;AAED,QAAGlgB,EAAE,CAACugB,UAAN,EAAkB;AACdhV,MAAAA,IAAI,GAAG;AAACrM,QAAAA,CAAC,EAAE,CAAJ;AAAOoU,QAAAA,CAAC,EAAE,CAAV;AAAalJ,QAAAA,CAAC,EAAE,CAAhB;AAAmByB,QAAAA,CAAC,EAAE,CAAtB;AAAyBQ,QAAAA,CAAC,EAAE,CAA5B;AAA+B5C,QAAAA,CAAC,EAAE;AAAlC,OAAP;AACA,UAAIgX,aAAa,GAAG,CAAC,CAAD,EAAI,CAAJ,CAApB;;AAEA,UAAGjiB,QAAQ,KAAK,GAAhB,EAAqB;AACjB,YAAGuhB,CAAC,KAAK,GAAT,EAAc;AACVxU,UAAAA,IAAI,CAACwU,CAAD,CAAJ,GAAU/f,EAAE,CAACgc,MAAb;AACH,SAFD,MAEO;AACHzQ,UAAAA,IAAI,CAACwU,CAAD,CAAJ,GAAU/f,EAAE,CAACgc,MAAH,GAAY9X,IAAI,CAACG,GAAL,CAAS+b,MAAM,CAACvH,KAAP,GAAe,CAAf,GAAmBhZ,GAAG,GAAGugB,MAAM,CAACM,GAAhC,GAAsC,CAA/C,EAAkDR,cAAlD,CAAtB;AACAO,UAAAA,aAAa,CAACE,OAAd;AACH;;AAED,YAAGP,MAAM,CAACvH,KAAP,GAAe,CAAlB,EAAqB;AACjB,cAAI+H,MAAM,GAAGR,MAAM,CAAC7J,KAAP,IAAgBvW,EAAE,CAAC4Y,OAAH,GAAa5Y,EAAE,CAACgI,OAAhC,CAAb;;AACA,cAAG4Y,MAAM,GAAG,CAAZ,EAAe;AACXrV,YAAAA,IAAI,CAACsV,EAAL,GAAU,CAAV;AACAtV,YAAAA,IAAI,CAACnB,CAAL,GAASwW,MAAT;AACH;;AACD,cAAIE,MAAM,GAAG9gB,EAAE,CAAC4Y,OAAH,GAAawH,MAAM,CAAC9J,IAAjC;;AACA,cAAGwK,MAAM,GAAG,CAAZ,EAAe;AACXvV,YAAAA,IAAI,CAACwV,EAAL,GAAU,CAAV;AACAxV,YAAAA,IAAI,CAACM,CAAL,GAASiV,MAAT;AACH;AACJ;AACJ,OApBD,MAoBO;AACH,YAAGf,CAAC,KAAK,GAAT,EAAc;AACVxU,UAAAA,IAAI,CAACwU,CAAD,CAAJ,GAAU/f,EAAE,CAACgc,MAAH,GAAY9X,IAAI,CAACG,GAAL,CAAS+b,MAAM,CAACrH,MAAP,GAAgB,CAAhB,GAAoBlZ,GAAG,GAAGugB,MAAM,CAAC9J,IAAjC,GAAwC,CAAjD,EAAoD4J,cAApD,CAAtB;AACH,SAFD,MAEO;AACH3U,UAAAA,IAAI,CAACwU,CAAD,CAAJ,GAAU/f,EAAE,CAACgc,MAAH,GAAY9X,IAAI,CAACG,GAAL,CAAS+b,MAAM,CAACrH,MAAP,GAAgB,CAAhB,GAAoBqH,MAAM,CAAC7J,KAAP,GAAe1W,GAAnC,GAAyC,CAAlD,EAAqDqgB,cAArD,CAAtB;AACAO,UAAAA,aAAa,CAACE,OAAd;AACH;;AAED,YAAGP,MAAM,CAACrH,MAAP,GAAgB,CAAnB,EAAsB;AAClB,cAAIiI,MAAM,GAAGZ,MAAM,CAACI,MAAP,IAAiBxgB,EAAE,CAAC4Y,OAAH,GAAa5Y,EAAE,CAACgI,OAAjC,CAAb;;AACA,cAAGgZ,MAAM,GAAG,CAAZ,EAAe;AACXzV,YAAAA,IAAI,CAAC0V,EAAL,GAAU,CAAV;AACA1V,YAAAA,IAAI,CAAC9B,CAAL,GAASuX,MAAT;AACH;;AACD,cAAIE,MAAM,GAAGlhB,EAAE,CAAC4Y,OAAH,GAAawH,MAAM,CAACM,GAAjC;;AACA,cAAGQ,MAAM,GAAG,CAAZ,EAAe;AACX3V,YAAAA,IAAI,CAAC4V,EAAL,GAAU,CAAV;AACA5V,YAAAA,IAAI,CAACc,CAAL,GAAS6U,MAAT;AACH;AACJ;AACJ;;AAED3V,MAAAA,IAAI,CAACpJ,aAAD,CAAJ,GAAsBnC,EAAE,CAACohB,MAAH,KAAc,MAAd,GAClBphB,EAAE,CAACqhB,QADe,GAElBrhB,EAAE,CAACwe,WAAH,CAAe8C,MAAf,CAAsBb,aAAa,CAAC,CAAD,CAAnC,CAFJ;;AAIA,UAAGzgB,EAAE,CAAC4f,KAAH,CAASlT,IAAT,KAAkBrM,UAAU,CAACkhB,UAAX,CAAsB/iB,QAAtB,CAArB,EAAsD;AAClD+M,QAAAA,IAAI,CAACwU,CAAD,CAAJ,IAAWyB,gBAAgB,CAACxhB,EAAD,CAAhB,IAAwBA,EAAE,CAAC4f,KAAH,CAASL,QAAT,IAAqB,CAA7C,CAAX;AACH;;AAED,UAAGvf,EAAE,CAAC4b,MAAH,IAAa5b,EAAE,CAACohB,MAAH,KAAc,MAA9B,EAAsC;AAClCf,QAAAA,UAAU,GAAG;AAACnhB,UAAAA,CAAC,EAAE,CAAJ;AAAOoU,UAAAA,CAAC,EAAE,CAAV;AAAalJ,UAAAA,CAAC,EAAE,CAAhB;AAAmByB,UAAAA,CAAC,EAAE,CAAtB;AAAyBQ,UAAAA,CAAC,EAAE,CAA5B;AAA+B5C,UAAAA,CAAC,EAAE;AAAlC,SAAb;AAEA4W,QAAAA,UAAU,CAACL,OAAD,CAAV,GAAsBhgB,EAAE,CAACyhB,SAAzB;AACA,YAAGzhB,EAAE,CAAC4b,MAAH,IAAa5b,EAAE,CAAC4b,MAAH,KAAc,IAA9B,EAAoCyE,UAAU,CAACL,OAAD,CAAV,IAAuBE,cAAvB;;AAEpC,YAAGlgB,EAAE,CAAC4b,MAAH,KAAc,IAAd,IAAsB5b,EAAE,CAAC4b,MAAH,KAAc,OAAvC,EAAgD;AAC5CyE,UAAAA,UAAU,CAACle,aAAD,CAAV,GAA4BnC,EAAE,CAACwe,WAAH,CAAe8C,MAAf,CAAsBb,aAAa,CAAC,CAAD,CAAnC,CAA5B;AACH,SAFD,MAEO,IAAGzgB,EAAE,CAAC4b,MAAH,KAAc,KAAd,IAAuB5b,EAAE,CAAC4b,MAAH,KAAc,UAAxC,EAAoD;AACvDyE,UAAAA,UAAU,CAACle,aAAD,CAAV,GAA4B,CAACnC,EAAE,CAAC0hB,iBAAJ,EAAuB1hB,EAAE,CAAC2hB,iBAA1B,EAA6ClB,aAAa,CAAC,CAAD,CAA1D,CAA5B;AACH;AACJ;AACJ;;AAED,QAAGX,cAAH,EAAmB;AACfQ,MAAAA,eAAe,GAAG5lB,QAAQ,CAACkG,kBAAT,CAA4B,aAA5B,EAA2C,gBAA3C,EAA6DxC,EAA7D,EAAiE4B,EAAjE,CAAlB;AACH;;AAEDvF,IAAAA,KAAK,CAACmnB,UAAN,CAAiBxjB,EAAjB,EAAqByjB,cAAc,CAAC7hB,EAAD,CAAnC,EAAyCuL,IAAzC;AACA9Q,IAAAA,KAAK,CAACmnB,UAAN,CAAiBxjB,EAAjB,EAAqB0jB,oBAAoB,CAAC9hB,EAAD,CAAzC,EAA+CqgB,UAA/C;AACA5lB,IAAAA,KAAK,CAACmnB,UAAN,CAAiBxjB,EAAjB,EAAqB2jB,uBAAuB,CAAC/hB,EAAD,CAA5C,EAAkDsgB,eAAlD;AACH,GAjGD;;AAmGA,MAAG,CAAChZ,IAAI,CAAC0a,SAAN,IACC,EAAElC,cAAc,IAAI9f,EAAE,CAACiU,IAAH,KAAY,QAAhC,CADJ,EAEE;AACEgL,IAAAA,GAAG,CAAC1T,IAAJ,CAAS,YAAW;AAAE,aAAO0W,SAAS,CAAC7jB,EAAD,EAAK4B,EAAL,CAAhB;AAA2B,KAAjD;AACH;;AAED,SAAOrF,GAAG,CAACigB,WAAJ,CAAgBqE,GAAhB,CAAP;AACH,CArUD;;AAuUA,SAASjC,eAAT,CAAyBhd,EAAzB,EAA6B2M,IAA7B,EAAmC;AAC/B,MAAIgE,GAAG,GAAG,EAAV;AACA,MAAI7P,CAAJ,CAF+B,CAI/B;AACA;;AACA,MAAIohB,KAAK,GAAG,UAAS5U,CAAT,EAAY6U,QAAZ,EAAsB;AAC9B,QAAIC,EAAE,GAAG9U,CAAC,CAAC+E,IAAF,CAAO8P,QAAP,CAAT;;AACA,QAAGC,EAAE,KAAK,IAAV,EAAgB;AACZzR,MAAAA,GAAG,CAACpF,IAAJ,CAAS5Q,GAAG,CAAC0nB,UAAJ,CAAe,EAAf,EAAmB/U,CAAnB,EAAsB;AAACpO,QAAAA,CAAC,EAAEkjB;AAAJ,OAAtB,CAAT;AACH;AACJ,GALD;;AAOA,MAAGzV,IAAI,CAACjO,MAAR,EAAgB;AACZ,SAAIoC,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAG6L,IAAI,CAACjO,MAApB,EAA4BoC,CAAC,EAA7B,EAAiC;AAC7BohB,MAAAA,KAAK,CAACvV,IAAI,CAAC7L,CAAD,CAAL,EAAU,CAAV,CAAL;AACH;;AACDohB,IAAAA,KAAK,CAACvV,IAAI,CAAC7L,CAAC,GAAG,CAAL,CAAL,EAAc,CAAd,CAAL;AACH;;AAED,SAAO6P,GAAP;AACH;;AAED,SAAS6O,qBAAT,CAA+Bxf,EAA/B,EAAmC2M,IAAnC,EAAyC;AACrC,MAAIgE,GAAG,GAAG,EAAV;AACA,MAAI2R,MAAM,GAAG,EAAb;;AAEA,OAAI,IAAIxhB,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG6L,IAAI,CAACjO,MAAxB,EAAgCoC,CAAC,EAAjC,EAAqC;AACjC,QAAIwM,CAAC,GAAGX,IAAI,CAAC7L,CAAD,CAAZ;;AACA,QAAGwhB,MAAM,CAAChV,CAAC,CAACqH,KAAH,CAAT,EAAoB;AAChB2N,MAAAA,MAAM,CAAChV,CAAC,CAACqH,KAAH,CAAN,CAAgBpJ,IAAhB,CAAqB+B,CAAC,CAACpO,CAAvB;AACH,KAFD,MAEO;AACHojB,MAAAA,MAAM,CAAChV,CAAC,CAACqH,KAAH,CAAN,GAAkB,CAACrH,CAAC,CAACpO,CAAH,CAAlB;AACH;AACJ;;AAED,OAAI,IAAIqjB,CAAR,IAAaD,MAAb,EAAqB;AACjB3R,IAAAA,GAAG,CAACpF,IAAJ,CAAS6B,WAAW,CAACpN,EAAD,EAAKrF,GAAG,CAAC6nB,MAAJ,CAAWF,MAAM,CAACC,CAAD,CAAjB,EAAsB,GAAtB,CAAL,EAAiCA,CAAjC,CAApB;AACH;;AAED,SAAO5R,GAAP;AACH;;AAED,SAAS0M,cAAT,CAAwBrd,EAAxB,EAA4B2M,IAA5B,EAAkC;AAC9B,MAAIgE,GAAG,GAAG,EAAV;AACA,MAAI7P,CAAJ,EAAO2hB,OAAP;AAEA,MAAIC,QAAQ,GAAI/V,IAAI,CAACjO,MAAL,IAAeiO,IAAI,CAACA,IAAI,CAACjO,MAAL,GAAc,CAAf,CAAJ,CAAsBQ,CAAtB,GAA0ByN,IAAI,CAAC,CAAD,CAAJ,CAAQzN,CAAjE,CAJ8B,CAM9B;AACA;;AACA,MAAIgjB,KAAK,GAAG,UAAS5U,CAAT,EAAY6U,QAAZ,EAAsB;AAC9B,QAAIC,EAAE,GAAG9U,CAAC,CAAC+E,IAAF,CAAO8P,QAAP,CAAT;;AACA,QAAGC,EAAE,KAAK,IAAV,EAAgB;AACZzR,MAAAA,GAAG,CAACpF,IAAJ,CAAS5Q,GAAG,CAAC0nB,UAAJ,CAAe,EAAf,EAAmB/U,CAAnB,EAAsB;AAACpO,QAAAA,CAAC,EAAEkjB;AAAJ,OAAtB,CAAT;AACH;AACJ,GALD;;AAOA,MAAGpiB,EAAE,CAACkS,YAAH,IAAmBvF,IAAI,CAACjO,MAA3B,EAAmC;AAC/B,SAAIoC,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAG6L,IAAI,CAACjO,MAApB,EAA4BoC,CAAC,EAA7B,EAAiC;AAC7B,UAAIwM,CAAC,GAAGX,IAAI,CAAC7L,CAAD,CAAZ;;AACA,UAAGwM,CAAC,CAACqH,KAAF,KAAY8N,OAAf,EAAwB;AACpBP,QAAAA,KAAK,CAAC5U,CAAD,EAAIoV,QAAQ,GAAG,CAAH,GAAO,CAAnB,CAAL;AACH;;AACDD,MAAAA,OAAO,GAAGnV,CAAC,CAACqH,KAAZ;AACH;;AACDuN,IAAAA,KAAK,CAACvV,IAAI,CAAC7L,CAAC,GAAG,CAAL,CAAL,EAAc4hB,QAAQ,GAAG,CAAH,GAAO,CAA7B,CAAL;AACH;;AAED,SAAO/R,GAAP;AACH;;AAED,SAAS0L,kBAAT,CAA4Brc,EAA5B,EAAgCoc,GAAhC,EAAqC;AACjC,MAAIsE,GAAJ,EAASF,MAAT;AACA,MAAIlK,IAAJ,EAAUC,KAAV;;AAEA,MAAGvW,EAAE,CAAC6b,WAAH,CAAeO,GAAf,EAAoBrY,IAApB,EAAH,EAA+B;AAC3B2c,IAAAA,GAAG,GAAGiC,QAAN;AACAnC,IAAAA,MAAM,GAAG,CAACmC,QAAV;AACArM,IAAAA,IAAI,GAAGqM,QAAP;AACApM,IAAAA,KAAK,GAAG,CAACoM,QAAT;;AACA3iB,IAAAA,EAAE,CAAC6b,WAAH,CAAeO,GAAf,EAAoBxC,IAApB,CAAyB,YAAW;AAChC,UAAIgJ,SAAS,GAAGC,eAAe,CAAC,IAAD,CAA/B,CADgC,CAEhC;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,UAAIC,EAAE,GAAG9nB,OAAO,CAAC+nB,IAAR,CAAaH,SAAS,CAACI,IAAV,GAAiBC,UAA9B,CAAT;AACAvC,MAAAA,GAAG,GAAGxc,IAAI,CAACC,GAAL,CAASuc,GAAT,EAAcoC,EAAE,CAACpC,GAAjB,CAAN;AACAF,MAAAA,MAAM,GAAGtc,IAAI,CAACG,GAAL,CAASmc,MAAT,EAAiBsC,EAAE,CAACtC,MAApB,CAAT;AACAlK,MAAAA,IAAI,GAAGpS,IAAI,CAACC,GAAL,CAASmS,IAAT,EAAewM,EAAE,CAACxM,IAAlB,CAAP;AACAC,MAAAA,KAAK,GAAGrS,IAAI,CAACG,GAAL,CAASkS,KAAT,EAAgBuM,EAAE,CAACvM,KAAnB,CAAR;AACH,KAdD;AAeH,GApBD,MAoBO;AACHmK,IAAAA,GAAG,GAAG,CAAN;AACAF,IAAAA,MAAM,GAAG,CAAT;AACAlK,IAAAA,IAAI,GAAG,CAAP;AACAC,IAAAA,KAAK,GAAG,CAAR;AACH;;AAED,SAAO;AACHmK,IAAAA,GAAG,EAAEA,GADF;AAEHF,IAAAA,MAAM,EAAEA,MAFL;AAGHlK,IAAAA,IAAI,EAAEA,IAHH;AAIHC,IAAAA,KAAK,EAAEA,KAJJ;AAKHwC,IAAAA,MAAM,EAAEyH,MAAM,GAAGE,GALd;AAMH7H,IAAAA,KAAK,EAAEtC,KAAK,GAAGD;AANZ,GAAP;AAQH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA3Z,IAAI,CAACuhB,YAAL,GAAoB,UAASle,EAAT,EAAa;AAC7B,MAAIxB,QAAQ,GAAGwB,EAAE,CAACiI,GAAH,CAAOxJ,MAAP,CAAc,CAAd,CAAf;;AACA,MAAIykB,YAAY,GAAG;AAAChkB,IAAAA,CAAC,EAAE,KAAJ;AAAWoU,IAAAA,CAAC,EAAE;AAAd,IAAuB9U,QAAvB,CAAnB;AACA,MAAI2kB,IAAI,GAAGnjB,EAAE,CAACiU,IAAH,KAAYiP,YAAZ,GAA2B,CAA3B,GAA+B,CAAC,CAA3C;AACA,MAAIvS,GAAG,GAAG,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQwS,IAAR,EAAc,CAACA,IAAf,CAAV,CAJ6B,CAK7B;;AACA,MAAInjB,EAAE,CAAC6c,KAAH,KAAa,QAAd,MAA6Bre,QAAQ,KAAK,GAA1C,CAAH,EAAmD;AAC/CmS,IAAAA,GAAG,GAAGA,GAAG,CAAC1R,GAAJ,CAAQ,UAAS+C,CAAT,EAAY;AAAE,aAAO,CAACA,CAAR;AAAY,KAAlC,CAAN;AACH,GAR4B,CAS7B;;;AACA,MAAGhC,EAAE,CAACiU,IAAN,EAAY;AACRtD,IAAAA,GAAG,CAACpF,IAAJ,CAAS;AAACM,MAAAA,CAAC,EAAE,CAAC,CAAL;AAAQQ,MAAAA,CAAC,EAAE,CAAC,CAAZ;AAAejC,MAAAA,CAAC,EAAE,CAAlB;AAAqBX,MAAAA,CAAC,EAAE;AAAxB,MAA2BzJ,EAAE,CAACiU,IAAH,CAAQxV,MAAR,CAAe,CAAf,CAA3B,CAAT;AACH;;AACD,SAAOkS,GAAP;AACH,CAdD;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAhU,IAAI,CAAC6f,eAAL,GAAuB,UAASxc,EAAT,EAAa;AAChC,SAAOA,EAAE,CAACiI,GAAH,CAAOxJ,MAAP,CAAc,CAAd,MAAqB,GAArB,GACH,UAAS6O,CAAT,EAAY;AAAE,WAAO1S,YAAY,CAACoF,EAAE,CAAC4Y,OAAH,GAAa5Y,EAAE,CAACoS,GAAH,CAAO9E,CAAC,CAACpO,CAAT,CAAd,EAA2B,CAA3B,CAAnB;AAAmD,GAD9D,GAEH,UAASoO,CAAT,EAAY;AAAE,WAAO1S,YAAY,CAAC,CAAD,EAAIoF,EAAE,CAAC4Y,OAAH,GAAa5Y,EAAE,CAACoS,GAAH,CAAO9E,CAAC,CAACpO,CAAT,CAAjB,CAAnB;AAAmD,GAFrE;AAGH,CAJD;;AAMAvC,IAAI,CAAC+f,oBAAL,GAA4B,UAAS1c,EAAT,EAAa;AACrC,MAAIojB,EAAE,GAAGC,cAAc,CAACrjB,EAAD,CAAvB;AACA,MAAIsjB,CAAC,GAAGF,EAAE,CAAC,CAAD,CAAV;AACA,MAAIphB,CAAC,GAAGohB,EAAE,CAAC,CAAD,CAAV;AAEA,SAAOpjB,EAAE,CAACiI,GAAH,CAAOxJ,MAAP,CAAc,CAAd,MAAqB,GAArB,GACH,UAAS6O,CAAT,EAAY;AACR,WAAO1S,YAAY,CACf0oB,CAAC,GAAGtjB,EAAE,CAAC4Y,OAAP,GAAiB5Y,EAAE,CAACoS,GAAH,CAAOmR,OAAO,CAACjW,CAAD,CAAd,CADF,EAEftL,CAFe,CAAnB;AAIH,GANE,GAOH,UAASsL,CAAT,EAAY;AACR,WAAO1S,YAAY,CACfoH,CADe,EAEfshB,CAAC,GAAGtjB,EAAE,CAAC4Y,OAAP,GAAiB5Y,EAAE,CAACoS,GAAH,CAAOmR,OAAO,CAACjW,CAAD,CAAd,CAFF,CAAnB;AAIH,GAZL;AAaH,CAlBD;;AAoBA,SAASiW,OAAT,CAAiBjW,CAAjB,EAAoB;AAChB,SAAOA,CAAC,CAAC/C,OAAF,KAAc/K,SAAd,GAA0B8N,CAAC,CAAC/C,OAA5B,GAAsC+C,CAAC,CAACpO,CAA/C;AACH,C,CAED;AACA;;;AACA,SAASmkB,cAAT,CAAwBrjB,EAAxB,EAA4B;AACxB,MAAIgU,iBAAiB,GAAGhU,EAAE,CAACgU,iBAAH,IAAwB,EAAhD;;AACA,MAAIwP,GAAG,GAAG,UAASC,GAAT,EAAc;AACpB,WAAOzP,iBAAiB,CAACvR,OAAlB,CAA0BghB,GAA1B,MAAmC,CAAC,CAA3C;AACH,GAFD;;AAIA,MAAIC,KAAK,GAAGF,GAAG,CAAC,KAAD,CAAf;AACA,MAAIG,MAAM,GAAGH,GAAG,CAAC,MAAD,CAAhB;AACA,MAAII,OAAO,GAAGJ,GAAG,CAAC,OAAD,CAAjB;AACA,MAAIK,QAAQ,GAAGL,GAAG,CAAC,QAAD,CAAlB;AACA,MAAIzP,QAAQ,GAAGyP,GAAG,CAAC,QAAD,CAAlB;AAEA,MAAIM,SAAS,GAAGD,QAAQ,IAAIF,MAAZ,IAAsBD,KAAtB,IAA+BE,OAA/C,CAZwB,CAcxB;;AACA,MAAG,CAACE,SAAD,IAAc,CAAC/P,QAAlB,EAA4B,OAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;AAE5B,MAAIE,IAAI,GAAGjU,EAAE,CAACiU,IAAd;AAEA,MAAIqP,CAAC,GAAGQ,SAAS,GAAG,CAAC9jB,EAAE,CAAC+jB,SAAH,IAAgB,CAAjB,IAAsB,CAAzB,GAA6B,CAA9C;AACA,MAAI/hB,CAAC,GAAGtF,OAAR;AAEA,MAAI+O,QAAQ,GAAGzL,EAAE,CAAC+H,QAAH,GAAc/H,EAAE,CAAC+H,QAAH,CAAYhE,IAA1B,GAAiC,EAAhD;;AACA,MAAG8f,QAAQ,IAAIH,KAAf,EAAsB;AAClBJ,IAAAA,CAAC,IAAI7X,QAAQ,GAAGlP,SAAhB;AACAyF,IAAAA,CAAC,IAAI,CAAChC,EAAE,CAACyhB,SAAH,IAAgB,CAAjB,IAAsB,CAA3B;AACH;;AACD,MAAGkC,MAAM,IAAIC,OAAb,EAAsB;AAClBN,IAAAA,CAAC,IAAI,CAACtjB,EAAE,CAACyhB,SAAH,IAAgB,CAAjB,IAAsB,CAA3B;AACAzf,IAAAA,CAAC,IAAItF,OAAL;AACH;;AACD,MAAGqX,QAAQ,IAAIE,IAAI,KAAK,KAAxB,EAA+B;AAC3BjS,IAAAA,CAAC,IAAIyJ,QAAQ,IAAI,IAAIlP,SAAR,CAAb;AACH;;AAED,MAAGonB,MAAM,IAAID,KAAb,EAAoBJ,CAAC,GAAG,CAACA,CAAL;AACpB,MAAGrP,IAAI,KAAK,QAAT,IAAqBA,IAAI,KAAK,OAAjC,EAA0CjS,CAAC,GAAG,CAACA,CAAL;AAE1C,SAAO,CACH8hB,SAAS,GAAGR,CAAH,GAAO,CADb,EAEHvP,QAAQ,GAAG/R,CAAH,GAAO,CAFZ,CAAP;AAIH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACArF,IAAI,CAAC0hB,YAAL,GAAoB,UAASre,EAAT,EAAagkB,KAAb,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8B;AAC9CA,EAAAA,GAAG,GAAGA,GAAG,KAAK1kB,SAAR,GAAoB0kB,GAApB,GAA0BlkB,EAAE,CAACmgB,OAAnC;;AAEA,MAAI3hB,QAAQ,GAAGwB,EAAE,CAACiI,GAAH,CAAOxJ,MAAP,CAAc,CAAd,CAAf;;AACA,MAAI4gB,GAAG,GAAG,CAACrf,EAAE,CAACyhB,SAAH,IAAgB,CAAjB,IAAsB,CAAhC;AAEA,SAAOjjB,QAAQ,KAAK,GAAb,GACH,SAASwlB,KAAK,GAAG3E,GAAG,GAAG4E,GAAvB,IAA8B,GAA9B,GAAqCC,GAAG,GAAGD,GADxC,GAEH,OAAOD,KAAK,GAAG3E,GAAG,GAAG4E,GAArB,IAA4B,KAA5B,GAAqCC,GAAG,GAAGD,GAF/C;AAGH,CATD;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAtnB,IAAI,CAACyiB,YAAL,GAAoB,UAASpf,EAAT,EAAagkB,KAAb,EAAoBG,KAApB,EAA2B;AAC3C,MAAInQ,iBAAiB,GAAGhU,EAAE,CAACgU,iBAAH,IAAwB,EAAhD;;AACA,MAAIwP,GAAG,GAAG,UAASC,GAAT,EAAc;AACpB,WAAOzP,iBAAiB,CAACvR,OAAlB,CAA0BghB,GAA1B,MAAmC,CAAC,CAA3C;AACH,GAFD;;AAIA,MAAIC,KAAK,GAAGF,GAAG,CAAC,KAAD,CAAf;AACA,MAAIG,MAAM,GAAGH,GAAG,CAAC,MAAD,CAAhB;AACA,MAAII,OAAO,GAAGJ,GAAG,CAAC,OAAD,CAAjB;AACA,MAAIK,QAAQ,GAAGL,GAAG,CAAC,QAAD,CAAlB;AACA,MAAIM,SAAS,GAAGD,QAAQ,IAAIF,MAAZ,IAAsBD,KAAtB,IAA+BE,OAA/C;AAEA,MAAIQ,gBAAgB,GAAGZ,GAAG,CAAC,QAAD,CAA1B;AACA,MAAIa,eAAe,GACdrQ,iBAAiB,KAAK,QAAtB,IAAkChU,EAAE,CAAC6c,KAAH,KAAa,QAAhD,IACC,CAACuH,gBAAD,IAAqBpkB,EAAE,CAAC6c,KAAH,KAAa,SAAlC,IAA+C7c,EAAE,CAACiS,OAAH,KAAe,YAFnE;AAIA,MAAIqS,aAAa,GAAG,CAApB;AACA,MAAIC,UAAU,GAAG,CAAjB;AAEA,MAAIC,OAAO,GAAGH,eAAe,GAAGrkB,EAAE,CAACmgB,OAAN,GAAgB,CAA7C;;AACA,MAAGiE,gBAAH,EAAqB;AACjBI,IAAAA,OAAO,IAAI,CAAC,CAAZ;AACH,GAFD,MAEO,IAAGV,SAAH,EAAc;AACjBU,IAAAA,OAAO,GAAG,CAAV;AACH;;AAED,MAAGH,eAAH,EAAoB;AAChBC,IAAAA,aAAa,IAAIE,OAAjB;;AACA,QAAGL,KAAH,EAAU;AACN,UAAIM,GAAG,GAAG9pB,GAAG,CAACoa,OAAJ,CAAYoP,KAAZ,CAAV;AACAG,MAAAA,aAAa,GAAGE,OAAO,GAAGtgB,IAAI,CAACwgB,GAAL,CAASD,GAAT,CAAV,GAA0B,CAA1C;AACAF,MAAAA,UAAU,GAAGC,OAAO,GAAGtgB,IAAI,CAACygB,GAAL,CAASF,GAAT,CAAvB;AACH;AACJ;;AAED,MAAGzkB,EAAE,CAAC4kB,cAAH,KAAsBP,eAAe,IAAIrkB,EAAE,CAAC6kB,QAA5C,CAAH,EAA0D;AACtDP,IAAAA,aAAa,IAAI,MAAMtkB,EAAE,CAAC+H,QAAH,CAAYhE,IAAnC;AACH;;AACDugB,EAAAA,aAAa,IAAI,CAACtkB,EAAE,CAACyhB,SAAH,IAAgB,CAAjB,IAAsB,CAAtB,IAA2B2C,gBAAgB,GAAG,CAAC,CAAJ,GAAQ,CAAnD,CAAjB;AAEA,MAAIzT,GAAG,GAAG;AACN2T,IAAAA,aAAa,EAAEA,aADT;AAENC,IAAAA,UAAU,EAAEA;AAFN,GAAV;AAKA,MAAIO,EAAJ,EAAQC,EAAR,EAAYC,EAAZ,EAAgBC,MAAhB;AACA,MAAIC,EAAE,GAAG,CAAT;AAEA,MAAIjR,IAAI,GAAGjU,EAAE,CAACiU,IAAd;;AACA,MAAIzV,QAAQ,GAAGwB,EAAE,CAACiI,GAAH,CAAOxJ,MAAP,CAAc,CAAd,CAAf;;AACA,MAAI0mB,SAAS,GAAGnlB,EAAE,CAACmlB,SAAnB;AACA,MAAIC,OAAJ;;AACA,MAAG5mB,QAAQ,KAAK,GAAhB,EAAqB;AACjB4mB,IAAAA,OAAO,GACF,CAAChB,gBAAD,IAAqBnQ,IAAI,KAAK,QAA/B,IACCmQ,gBAAgB,IAAInQ,IAAI,KAAK,KAFlC;AAIAgR,IAAAA,MAAM,GAAGG,OAAO,GAAG,CAAH,GAAO,CAAC,CAAxB;AACA,QAAGhB,gBAAH,EAAqBa,MAAM,IAAI,CAAC,CAAX;AAErBH,IAAAA,EAAE,GAAGP,UAAU,GAAGU,MAAlB;AACAF,IAAAA,EAAE,GAAGf,KAAK,GAAGM,aAAa,GAAGW,MAA7B;AACAD,IAAAA,EAAE,GAAGI,OAAO,GAAG,CAAH,GAAO,CAAC,GAApB;;AACA,QAAGlhB,IAAI,CAACmE,GAAL,CAAS8c,SAAT,MAAwB,EAA3B,EAA+B;AAC3B,UAAGf,gBAAH,EAAqB;AACjBY,QAAAA,EAAE,IAAI1oB,SAAN;AACH,OAFD,MAEO;AACH,YAAG6oB,SAAS,KAAK,CAAC,EAAf,IAAqBlR,IAAI,KAAK,QAAjC,EAA2C;AACvC+Q,UAAAA,EAAE,GAAGzoB,SAAL;AACH,SAFD,MAEO,IAAG4oB,SAAS,KAAK,EAAd,IAAoBlR,IAAI,KAAK,KAAhC,EAAuC;AAC1C+Q,UAAAA,EAAE,GAAG1oB,SAAL;AACH,SAFM,MAEA;AACH0oB,UAAAA,EAAE,GAAG,GAAL;AACH;AACJ;;AAEDE,MAAAA,EAAE,GAAI5oB,SAAS,GAAG,CAAb,IAAmB6oB,SAAS,GAAG,EAA/B,CAAL;AACH;;AAEDxU,IAAAA,GAAG,CAAC0U,GAAJ,GAAU,UAAS/X,CAAT,EAAY;AAAE,aAAOA,CAAC,CAACuF,EAAF,GAAOiS,EAAP,GAAYI,EAAE,GAAG5X,CAAC,CAAC7B,QAA1B;AAAqC,KAA7D;;AACAkF,IAAAA,GAAG,CAAC2U,GAAJ,GAAU,UAAShY,CAAT,EAAY;AAAE,aAAOA,CAAC,CAACwF,EAAF,GAAOiS,EAAP,GAAYzX,CAAC,CAAC7B,QAAF,GAAauZ,EAAhC;AAAqC,KAA7D;;AACArU,IAAAA,GAAG,CAAC4U,QAAJ,GAAe,UAASjY,CAAT,EAAY9D,CAAZ,EAAe;AAC1B,UAAGsa,SAAH,EAAc;AACV,YAAGH,MAAH,EAAW,OAAO,KAAP;AACX,YAAGC,OAAH,EAAY,OAAO,OAAP;AACf;;AAED,UAAG,CAACppB,SAAS,CAACgP,CAAD,CAAV,IAAiBA,CAAC,KAAK,CAAvB,IAA4BA,CAAC,KAAK,GAArC,EAA0C;AACtC,eAAO,QAAP;AACH;;AAED,aAASA,CAAC,GAAGyb,MAAJ,GAAa,CAAd,KAAqBb,gBAAtB,GAA0C,KAA1C,GAAkD,OAAzD;AACH,KAXD;;AAYAzT,IAAAA,GAAG,CAAC6U,QAAJ,GAAe,UAASlY,CAAT,EAAY9D,CAAZ,EAAeic,CAAf,EAAkB;AAC7B,aAAQjc,CAAC,GAAG,CAAC,EAAL,IAAWA,CAAC,GAAG,EAAhB,GAAsB,CAAC,GAAD,GAAOic,CAA7B,GACDzlB,EAAE,CAACiU,IAAH,KAAY,KAAb,KAAwBmQ,gBAAzB,GAA6C,CAACqB,CAA9C,GACA,CAFJ;AAGH,KAJD;AAKH,GA9CD,MA8CO,IAAGjnB,QAAQ,KAAK,GAAhB,EAAqB;AACxB4mB,IAAAA,OAAO,GACF,CAAChB,gBAAD,IAAqBnQ,IAAI,KAAK,MAA/B,IACCmQ,gBAAgB,IAAInQ,IAAI,KAAK,OAFlC;AAIAgR,IAAAA,MAAM,GAAGG,OAAO,GAAG,CAAH,GAAO,CAAC,CAAxB;AACA,QAAGhB,gBAAH,EAAqBa,MAAM,IAAI,CAAC,CAAX;AAErBH,IAAAA,EAAE,GAAGR,aAAL;AACAS,IAAAA,EAAE,GAAGR,UAAU,GAAGU,MAAlB;AACAD,IAAAA,EAAE,GAAG,CAAL;;AACA,QAAG,CAACZ,gBAAD,IAAqBlgB,IAAI,CAACmE,GAAL,CAAS8c,SAAT,MAAwB,EAAhD,EAAoD;AAChD,UACKA,SAAS,KAAK,CAAC,EAAf,IAAqBlR,IAAI,KAAK,MAA/B,IACCkR,SAAS,KAAK,EAAd,IAAoBlR,IAAI,KAAK,OAFlC,EAGE;AACE+Q,QAAAA,EAAE,GAAGzoB,SAAL;AACH,OALD,MAKO;AACHyoB,QAAAA,EAAE,GAAG,GAAL;AACH;AACJ;;AAED,QAAGZ,gBAAH,EAAqB;AACjB,UAAIsB,GAAG,GAAGlrB,SAAS,CAAC2qB,SAAD,CAAT,GAAuB,CAACA,SAAxB,GAAoC,CAA9C;;AACA,UAAGO,GAAG,KAAK,CAAX,EAAc;AACV,YAAIC,EAAE,GAAGhrB,GAAG,CAACoa,OAAJ,CAAY2Q,GAAZ,CAAT;AACAR,QAAAA,EAAE,GAAGhhB,IAAI,CAACmE,GAAL,CAASnE,IAAI,CAACygB,GAAL,CAASgB,EAAT,CAAT,IAAyBppB,SAAzB,GAAqC0oB,MAA1C;AACAD,QAAAA,EAAE,GAAG,CAAL;AACH;AACJ;;AAEDrU,IAAAA,GAAG,CAAC0U,GAAJ,GAAU,UAAS/X,CAAT,EAAY;AAAE,aAAOA,CAAC,CAACuF,EAAF,GAAOmR,KAAP,GAAe,CAACc,EAAE,GAAGxX,CAAC,CAAC7B,QAAF,GAAauZ,EAAnB,IAAyBC,MAAxC,GAAiDC,EAAE,GAAG5X,CAAC,CAAC7B,QAA/D;AAA0E,KAAlG;;AACAkF,IAAAA,GAAG,CAAC2U,GAAJ,GAAU,UAAShY,CAAT,EAAY;AAAE,aAAOA,CAAC,CAACwF,EAAF,GAAOiS,EAAP,GAAYzX,CAAC,CAAC7B,QAAF,GAAanP,SAAhC;AAA4C,KAApE;;AACAqU,IAAAA,GAAG,CAAC4U,QAAJ,GAAe,UAASjY,CAAT,EAAY9D,CAAZ,EAAe;AAC1B,UAAGhP,SAAS,CAACgP,CAAD,CAAT,IAAgBtF,IAAI,CAACmE,GAAL,CAASmB,CAAT,MAAgB,EAAnC,EAAuC;AACnC,eAAO,QAAP;AACH;;AAED,aAAO4b,OAAO,GAAG,KAAH,GAAW,OAAzB;AACH,KAND;;AAOAzU,IAAAA,GAAG,CAAC6U,QAAJ,GAAe,UAASlY,CAAT,EAAY9D,CAAZ,EAAeic,CAAf,EAAkB;AAC7B,UAAGzlB,EAAE,CAACiU,IAAH,KAAY,OAAf,EAAwBzK,CAAC,IAAI,CAAC,CAAN;AAExB,aAAOA,CAAC,GAAG,CAAC,EAAL,GAAU,CAACic,CAAX,GACHjc,CAAC,GAAG,EAAJ,GAAS,CAAC,GAAD,GAAOic,CAAhB,GACA,CAFJ;AAGH,KAND;AAOH;;AAED,SAAO9U,GAAP;AACH,CArJD;;AAuJA,SAASiV,UAAT,CAAoBtY,CAApB,EAAuB;AACnB,SAAO,CAACA,CAAC,CAACZ,IAAH,EAASY,CAAC,CAACpO,CAAX,EAAcoO,CAAC,CAACqO,MAAhB,EAAwBrO,CAAC,CAACyF,IAA1B,EAAgCzF,CAAC,CAAC7B,QAAlC,EAA4C6B,CAAC,CAAC2F,SAA9C,EAAyDgC,IAAzD,CAA8D,GAA9D,CAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAtY,IAAI,CAACgiB,SAAL,GAAiB,UAASvgB,EAAT,EAAa4B,EAAb,EAAiBsH,IAAjB,EAAuB;AACpCA,EAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AAEA,MAAI8U,GAAG,GAAGpc,EAAE,CAACiI,GAAH,GAAS,MAAnB;AAEA,MAAI0E,IAAI,GAAGrF,IAAI,CAACqF,IAAhB;;AACA,MACI3M,EAAE,CAACuI,aAAH,KAAqB,QADzB,EAEE;AACE;AACAoE,IAAAA,IAAI,GAAGA,IAAI,CAACxJ,KAAL,EAAP;AACAwJ,IAAAA,IAAI,CAACqX,KAAL;AACH;;AAED,MAAInH,KAAK,GAAGvV,IAAI,CAACuW,KAAL,CAAWxE,SAAX,CAAqB,UAAU+C,GAA/B,EACPzY,IADO,CACF3D,EAAE,CAAC6c,KAAH,GAAWlQ,IAAX,GAAkB,EADhB,EACoBiZ,UADpB,CAAZ;AAGA/I,EAAAA,KAAK,CAACnD,IAAN,GAAaC,MAAb;AAEAkD,EAAAA,KAAK,CAACvD,KAAN,GAAcC,MAAd,CAAqB,MAArB,EACKC,OADL,CACa4C,GADb,EACkB,CADlB,EAEK5C,OAFL,CAEa,OAFb,EAEsB,CAFtB,EAGKA,OAHL,CAGa,OAHb,EAGsBlS,IAAI,CAACue,KAAL,KAAe,KAHrC,EAIKC,IAJL,CAIU/qB,KAAK,CAACgrB,MAJhB,EAIwB/lB,EAAE,CAACgmB,SAJ3B,EAKKC,KALL,CAKW,cALX,EAK2BjrB,OAAO,CAACkrB,UAAR,CAAmB9nB,EAAnB,EAAuB4B,EAAE,CAAC+jB,SAA1B,EAAqC,CAArC,IAA0C,IALrE,EAMK1lB,IANL,CAMU,GANV,EAMeiJ,IAAI,CAACwW,IANpB;AAQAjB,EAAAA,KAAK,CAACxe,IAAN,CAAW,WAAX,EAAwBiJ,IAAI,CAACyW,OAA7B;AACH,CA5BD;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAphB,IAAI,CAACihB,QAAL,GAAgB,UAASxf,EAAT,EAAa4B,EAAb,EAAiBsH,IAAjB,EAAuB;AACnCA,EAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AAEA,MAAI8U,GAAG,GAAGpc,EAAE,CAACiI,GAAH,GAAS,MAAnB;AACA,MAAI0E,IAAI,GAAGrF,IAAI,CAACqF,IAAhB;AACA,MAAIwZ,SAAS,GAAG7e,IAAI,CAACkW,WAArB;;AACA,MAAGxd,EAAE,CAAComB,QAAH,KAAgB,KAAnB,EAA0B;AACtBzZ,IAAAA,IAAI,GAAG,EAAP;AACH,GAFD,MAEO,IAAGwZ,SAAS,IAAIxpB,IAAI,CAAC0pB,kBAAL,CAAwBjoB,EAAxB,EAA4B4B,EAA5B,EAAgCmmB,SAAhC,CAAhB,EAA4D;AAC/D,QAAIG,WAAW,GAAGtmB,EAAE,CAAC2H,QAAH,KAAgB,OAAlC;;AACA,SAAI,IAAI7G,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG6L,IAAI,CAACjO,MAAxB,EAAgCoC,CAAC,EAAjC,EAAqC;AACjC,UAAIylB,EAAE,GAAG5Z,IAAI,CAAC7L,CAAD,CAAJ,CAAQ5B,CAAjB;;AACA,UAAGonB,WAAW,GAAG,CAACC,EAAJ,GAAUriB,IAAI,CAACmE,GAAL,CAASke,EAAT,IAAevmB,EAAE,CAAC6E,KAAH,GAAW,GAAlD,EAAwD;AACpD8H,QAAAA,IAAI,GAAGA,IAAI,CAACxJ,KAAL,CAAW,CAAX,EAAcrC,CAAd,EAAiB9B,MAAjB,CAAwB2N,IAAI,CAACxJ,KAAL,CAAWrC,CAAC,GAAG,CAAf,CAAxB,CAAP,CADoD,CAEpD;AACA;AACA;;AACA,YAAGwlB,WAAH,EAAgBxlB,CAAC,GAAjB,KACK;AACR;AACJ;AACJ;;AAED,MAAI0lB,IAAI,GAAGlf,IAAI,CAACuW,KAAL,CAAWxE,SAAX,CAAqB,UAAU+C,GAA/B,EACNzY,IADM,CACDgJ,IADC,EACKiZ,UADL,CAAX;AAGAY,EAAAA,IAAI,CAAC9M,IAAL,GAAYC,MAAZ;AAEA6M,EAAAA,IAAI,CAAClN,KAAL,GAAaC,MAAb,CAAoB,MAApB,EACKC,OADL,CACa4C,GADb,EACkB,CADlB,EAEK5C,OAFL,CAEa,OAFb,EAEsBlS,IAAI,CAACue,KAAL,KAAe,KAFrC;AAIA7lB,EAAAA,EAAE,CAACymB,GAAH,GAASzrB,OAAO,CAACkrB,UAAR,CAAmB9nB,EAAnB,EAAuB4B,EAAE,CAAC0mB,SAA1B,EAAqC,CAArC,CAAT;AAEAF,EAAAA,IAAI,CAACnoB,IAAL,CAAU,WAAV,EAAuBiJ,IAAI,CAACyW,OAA5B,EACK1f,IADL,CACU,GADV,EACeiJ,IAAI,CAACwW,IADpB,EAEKgI,IAFL,CAEU/qB,KAAK,CAACgrB,MAFhB,EAEwB/lB,EAAE,CAAC2mB,SAAH,IAAgB,MAFxC,EAGKV,KAHL,CAGW,cAHX,EAG2BjmB,EAAE,CAACymB,GAAH,GAAS,IAHpC;AAKA,MAAG,OAAOnf,IAAI,CAACwW,IAAZ,KAAqB,UAAxB,EAAoC0I,IAAI,CAACnoB,IAAL,CAAU,GAAV,EAAeiJ,IAAI,CAACwW,IAApB;AACvC,CAxCD;AA0CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAnhB,IAAI,CAACqhB,YAAL,GAAoB,UAAS5f,EAAT,EAAa4B,EAAb,EAAiBsH,IAAjB,EAAuB;AACvCA,EAAAA,IAAI,GAAGA,IAAI,IAAIA,IAAf;AAEA,MAAI8U,GAAG,GAAGpc,EAAE,CAACiI,GAAH,GAAS,IAAnB;AACA,MAAI2e,IAAI,GAAGjqB,IAAI,CAAC0pB,kBAAL,CAAwBjoB,EAAxB,EAA4B4B,EAA5B,EAAgCsH,IAAI,CAACkW,WAArC,CAAX;AAEA,MAAIqJ,EAAE,GAAGvf,IAAI,CAACuW,KAAL,CAAWxE,SAAX,CAAqB,UAAU+C,GAA/B,EACJzY,IADI,CACCijB,IAAI,GAAG,CAAC;AAAC1nB,IAAAA,CAAC,EAAE,CAAJ;AAAOkD,IAAAA,EAAE,EAAEpC,EAAE,CAACiI;AAAd,GAAD,CAAH,GAA0B,EAD/B,CAAT;AAGA4e,EAAAA,EAAE,CAACnN,IAAH,GAAUC,MAAV;AAEAkN,EAAAA,EAAE,CAACvN,KAAH,GAAWC,MAAX,CAAkB,MAAlB,EACKC,OADL,CACa4C,GADb,EACkB,CADlB,EAEK5C,OAFL,CAEa,IAFb,EAEmB,CAFnB,EAGKA,OAHL,CAGa,OAHb,EAGsBlS,IAAI,CAACue,KAAL,KAAe,KAHrC,EAIKjM,IAJL,CAIU,YAAW;AACb;AACA;AACA;AACAtS,IAAAA,IAAI,CAACuW,KAAL,CAAWxE,SAAX,CAAqB,MAArB,EAA6BrB,IAA7B,CAAkC,UAAS8O,EAAT,EAAaC,EAAb,EAAiB;AAC/C,aAAO9pB,MAAM,CAAC6pB,EAAE,CAAC1kB,EAAJ,EAAQ2kB,EAAE,CAAC3kB,EAAX,CAAb;AACH,KAFD;AAGH,GAXL;AAaAykB,EAAAA,EAAE,CAACxoB,IAAH,CAAQ,WAAR,EAAqBiJ,IAAI,CAACyW,OAA1B,EACK1f,IADL,CACU,GADV,EACeiJ,IAAI,CAACwW,IADpB,EAEKgI,IAFL,CAEU/qB,KAAK,CAACgrB,MAFhB,EAEwB/lB,EAAE,CAACgnB,aAAH,IAAoBjsB,KAAK,CAACksB,WAFlD,EAGKhB,KAHL,CAGW,cAHX,EAG2BjrB,OAAO,CAACkrB,UAAR,CAAmB9nB,EAAnB,EAAuB4B,EAAE,CAACknB,aAA1B,EAAyClnB,EAAE,CAACymB,GAAH,IAAU,CAAnD,IAAwD,IAHnF;AAIH,CA5BD;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA9pB,IAAI,CAACuiB,UAAL,GAAkB,UAAS9gB,EAAT,EAAa4B,EAAb,EAAiBsH,IAAjB,EAAuB;AACrCA,EAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AAEA,MAAIjH,UAAU,GAAGjC,EAAE,CAACQ,WAApB;AACA,MAAIic,IAAI,GAAG7a,EAAE,CAACiI,GAAd;AACA,MAAIzJ,QAAQ,GAAGqc,IAAI,CAACpc,MAAL,CAAY,CAAZ,CAAf;AACA,MAAI2d,GAAG,GAAG9U,IAAI,CAAC8U,GAAL,IAAYvB,IAAI,GAAG,MAA7B;AACA,MAAIlO,IAAI,GAAGrF,IAAI,CAACqF,IAAhB;AAEA,MAAIwS,QAAQ,GAAG7X,IAAI,CAAC6X,QAApB;AACA,MAAIgI,SAAS,GAAG7f,IAAI,CAACoY,SAAL,GAAiB,CAAjB,GAAqB1f,EAAE,CAACmlB,SAAxC;AACA,MAAIiC,SAAS,GAAG,CAACpnB,EAAE,CAAC+b,eAAH,IAAsB,EAAvB,EAA2BK,GAA3B,CAAhB;AAEA,MAAIiL,UAAU,GAAG/f,IAAI,CAACuW,KAAL,CAAWxE,SAAX,CAAqB,OAAO+C,GAA5B,EACZzY,IADY,CACP3D,EAAE,CAAC4kB,cAAH,GAAoBjY,IAApB,GAA2B,EADpB,EACwBiZ,UADxB,CAAjB;AAGA,MAAI0B,WAAW,GAAG,EAAlB;AAEAD,EAAAA,UAAU,CAAC/N,KAAX,GAAmBC,MAAnB,CAA0B,GAA1B,EACKC,OADL,CACa4C,GADb,EACkB,CADlB,EAEK7C,MAFL,CAEY,MAFZ,EAGQ;AACA;AAJR,GAKSlb,IALT,CAKc,aALd,EAK6B,QAL7B,EAMSub,IANT,CAMc,UAAStM,CAAT,EAAY;AACd,QAAIsV,SAAS,GAAGtoB,EAAE,CAACuf,MAAH,CAAU,IAAV,CAAhB;AACA,QAAI0N,UAAU,GAAGnpB,EAAE,CAACopB,SAAH,CAAa9oB,MAA9B;AAEAkkB,IAAAA,SAAS,CACJkD,IADL,CACUjrB,YAAY,CAAC4sB,YADvB,EACqCtI,QAAQ,CAACkG,GAAT,CAAa/X,CAAb,CADrC,EACsD6R,QAAQ,CAACmG,GAAT,CAAahY,CAAb,CADtD,EAEKwY,IAFL,CAEU9qB,OAAO,CAAC+X,IAFlB,EAEwBzF,CAAC,CAACyF,IAF1B,EAEgCzF,CAAC,CAAC7B,QAFlC,EAE4C6B,CAAC,CAAC2F,SAF9C,EAGKvG,IAHL,CAGUY,CAAC,CAACZ,IAHZ,EAIKoZ,IAJL,CAIUjrB,YAAY,CAAC6sB,eAJvB,EAIwCtpB,EAJxC;;AAMA,QAAGA,EAAE,CAACopB,SAAH,CAAaD,UAAb,CAAH,EAA6B;AACzB;AACA;AACA;AACA;AACAD,MAAAA,WAAW,CAAC/b,IAAZ,CAAiBnN,EAAE,CAACopB,SAAH,CAAaxb,GAAb,GAAmB2b,IAAnB,CAAwB,YAAW;AAChDC,QAAAA,cAAc,CAAChF,SAAD,EAAYuE,SAAZ,CAAd;AACH,OAFgB,CAAjB;AAGH,KARD,MAQO;AACH;AACAS,MAAAA,cAAc,CAAChF,SAAD,EAAYuE,SAAZ,CAAd;AACH;AACJ,GA5BT;AA8BAE,EAAAA,UAAU,CAAC3N,IAAX,GAAkBC,MAAlB;;AAEA,MAAGrS,IAAI,CAACmY,kBAAR,EAA4B;AACxB4H,IAAAA,UAAU,CAACzN,IAAX,CAAgB,UAAStM,CAAT,EAAY;AACxBhT,MAAAA,EAAE,CAACuf,MAAH,CAAU,IAAV,EAAgBA,MAAhB,CAAuB,MAAvB,EACKiM,IADL,CACUjrB,YAAY,CAAC4sB,YADvB,EACqCtI,QAAQ,CAACkG,GAAT,CAAa/X,CAAb,CADrC,EACsD6R,QAAQ,CAACmG,GAAT,CAAahY,CAAb,CADtD;AAEH,KAHD;AAIH;;AAED,WAASsa,cAAT,CAAwB7H,CAAxB,EAA2BoE,KAA3B,EAAkC;AAC9B,QAAIpQ,QAAQ,GAAG,CAAC/T,EAAE,CAACgU,iBAAH,IAAwB,EAAzB,EAA6BvR,OAA7B,CAAqC,QAArC,MAAmD,CAAC,CAAnE;AAEAsd,IAAAA,CAAC,CAACnG,IAAF,CAAO,UAAStM,CAAT,EAAY;AACf,UAAIsV,SAAS,GAAGtoB,EAAE,CAACuf,MAAH,CAAU,IAAV,CAAhB;AACA,UAAIgO,YAAY,GAAGjF,SAAS,CAAC/I,MAAV,CAAiB,kBAAjB,CAAnB;AACA,UAAIuH,MAAM,GAAGjC,QAAQ,CAACoG,QAAT,CAAkBjY,CAAlB,EAAqB6W,KAArB,CAAb;AAEA,UAAI2D,SAAS,GAAGxgB,IAAI,CAACyW,OAAL,CAAa+H,IAAb,CAAkBlD,SAAS,CAACI,IAAV,EAAlB,EAAoC1V,CAApC,KACV9S,SAAS,CAAC2pB,KAAD,CAAT,IAAoB,CAACA,KAAD,KAAW,CAAhC,GACA,aAAaA,KAAb,GAAqB,GAArB,GAA2BhF,QAAQ,CAACkG,GAAT,CAAa/X,CAAb,CAA3B,GAA6C,GAA7C,IACI6R,QAAQ,CAACmG,GAAT,CAAahY,CAAb,IAAkBA,CAAC,CAAC7B,QAAF,GAAa,CADnC,IACwC,GAFxC,GAGD,EAJY,CAAhB,CALe,CAWf;;AACA,UAAIsc,MAAM,GAAGltB,YAAY,CAACmtB,SAAb,CAAuBpF,SAAvB,CAAb;AACA,UAAIqF,UAAU,GAAGzrB,YAAY,GAAG8Q,CAAC,CAAC7B,QAAlC;AACA,UAAIyc,YAAY,GAAG/I,QAAQ,CAACqG,QAAT,CAAkBlY,CAAlB,EAAqB9S,SAAS,CAAC2pB,KAAD,CAAT,GAAmB,CAACA,KAApB,GAA4B,CAAjD,EAAoD,CAAC4D,MAAM,GAAG,CAAV,IAAeE,UAAnE,CAAnB;;AAEA,UAAGC,YAAH,EAAiB;AACbJ,QAAAA,SAAS,IAAIltB,YAAY,CAAC,CAAD,EAAIstB,YAAJ,CAAzB;AACH;;AAED,UAAGL,YAAY,CAACM,KAAb,EAAH,EAAyB;AACrB,YAAIC,QAAQ,GAAGxF,SAAS,CAAC/I,MAAV,CAAiB,MAAjB,CAAf;AACAuO,QAAAA,QAAQ,CAAC/pB,IAAT,CAAc;AACVypB,UAAAA,SAAS,EAAEA,SADD;AAEV,yBAAe1G;AAFL,SAAd;;AAKA,YAAGrN,QAAH,EAAa;AACT;AACAqU,UAAAA,QAAQ,CAACnC,KAAT,CAAe;AAAEoC,YAAAA,OAAO,EAAE;AAAX,WAAf;;AAEA,cAAGroB,EAAE,CAACsoB,+BAAN,EAAuC;AACnCtoB,YAAAA,EAAE,CAACsoB,+BAAH;AACH;AACJ;AACJ,OAfD,MAeO;AACH,YAAIC,OAAO,GAAGvtB,OAAO,CAAC+nB,IAAR,CAAa8E,YAAY,CAAC7E,IAAb,EAAb,EAAkCnK,KAAhD;AACA,YAAI2P,OAAO,GAAGD,OAAO,GAAG;AAAChkB,UAAAA,GAAG,EAAE,CAAC,GAAP;AAAYD,UAAAA,KAAK,EAAE;AAAnB,UAAwB8c,MAAxB,CAAxB;AACAyG,QAAAA,YAAY,CAACxpB,IAAb,CAAkB,WAAlB,EAA+BypB,SAAS,GAAGltB,YAAY,CAAC4tB,OAAD,EAAU,CAAV,CAAvD;AACH;AACJ,KAxCD;AAyCH;;AAEDxoB,EAAAA,EAAE,CAACsoB,+BAAH,GAAqC9oB,SAArC;;AACA,MAAG,CAACQ,EAAE,CAACgU,iBAAH,IAAwB,EAAzB,EAA6BvR,OAA7B,CAAqC,QAArC,MAAmD,CAAC,CAAvD,EAA0D;AACtDzC,IAAAA,EAAE,CAACsoB,+BAAH,GAAqC,YAAW;AAC5C,UAAIG,EAAE,GAAG9tB,GAAG,CAACgK,SAAJ,CAAc3E,EAAE,CAACjC,KAAjB,EAAwBiC,EAAE,CAACwH,GAA3B,CAAT,CAD4C,CAG5C;;AACA,UAAIkhB,EAAE,GAAG1oB,EAAE,CAACoS,GAAH,CAAOqW,EAAE,CAAC,CAAD,CAAT,CAAT;AACA,UAAIE,EAAE,GAAG3oB,EAAE,CAACoS,GAAH,CAAOqW,EAAE,CAAC,CAAD,CAAT,CAAT;;AAEA,UAAItkB,GAAG,GAAGD,IAAI,CAACC,GAAL,CAASukB,EAAT,EAAaC,EAAb,IAAmB3oB,EAAE,CAAC4Y,OAAhC;;AACA,UAAIvU,GAAG,GAAGH,IAAI,CAACG,GAAL,CAASqkB,EAAT,EAAaC,EAAb,IAAmB3oB,EAAE,CAAC4Y,OAAhC;;AAEA,UAAIgQ,GAAG,GAAG5oB,EAAE,CAACiI,GAAH,CAAOxJ,MAAP,CAAc,CAAd,MAAqB,GAA/B;AAEA4oB,MAAAA,UAAU,CAACzN,IAAX,CAAgB,UAAStM,CAAT,EAAY;AACxB,YAAIsV,SAAS,GAAGtoB,EAAE,CAACuf,MAAH,CAAU,IAAV,CAAhB;AACA,YAAIgO,YAAY,GAAGjF,SAAS,CAAC/I,MAAV,CAAiB,kBAAjB,CAAnB;;AAEA,YAAGgO,YAAY,CAACM,KAAb,EAAH,EAAyB;AACrB,cAAIrF,EAAE,GAAG9nB,OAAO,CAAC+nB,IAAR,CAAaH,SAAS,CAACI,IAAV,EAAb,CAAT;AACA,cAAI6F,IAAI,GAAG,KAAX;;AACA,cAAGD,GAAH,EAAQ;AACJ,gBAAG9F,EAAE,CAACvM,KAAH,GAAWlS,GAAd,EAAmBwkB,IAAI,GAAG,IAAP,CAAnB,KACK,IAAG/F,EAAE,CAACxM,IAAH,GAAUnS,GAAb,EAAkB0kB,IAAI,GAAG,IAAP;AAC1B,WAHD,MAGO;AACH,gBAAG/F,EAAE,CAACtC,MAAH,GAAYnc,GAAf,EAAoBwkB,IAAI,GAAG,IAAP,CAApB,KACK,IAAG/F,EAAE,CAACpC,GAAH,IAAU1gB,EAAE,CAACmlB,SAAH,GAAe,CAAf,GAAmB7X,CAAC,CAAC7B,QAAF,GAAa,CAA1C,IAA+CtH,GAAlD,EAAuD0kB,IAAI,GAAG,IAAP;AAC/D;;AACD,cAAGA,IAAH,EAASjG,SAAS,CAAC/I,MAAV,CAAiB,MAAjB,EAAyBoM,KAAzB,CAA+B;AAAEoC,YAAAA,OAAO,EAAE;AAAX,WAA/B;AACZ,SAfuB,CAetB;;AACL,OAhBD;AAiBH,KA7BD;AA8BH,GAvIoC,CAyIrC;AACA;AACA;AACA;AACA;;;AACAT,EAAAA,cAAc,CAACP,UAAD,EAAcD,SAAS,GAAG,CAAb,GAAkBA,SAAlB,GAA8BD,SAA3C,CAAd;;AAEA,WAAS2B,cAAT,GAA0B;AACtB,WAAOxB,WAAW,CAAC5oB,MAAZ,IAAsBqqB,OAAO,CAACC,GAAR,CAAY1B,WAAZ,CAA7B;AACH;;AAED,MAAI2B,SAAS,GAAG,IAAhB;;AAEA,WAASC,gBAAT,GAA4B;AACxBtB,IAAAA,cAAc,CAACP,UAAD,EAAaF,SAAb,CAAd,CADwB,CAGxB;AACA;AACA;;AACA,QAAGxa,IAAI,CAACjO,MAAL,IAAeF,QAAQ,KAAK,GAA5B,IAAmC,CAAChE,SAAS,CAAC2sB,SAAD,CAA7C,KACEnnB,EAAE,CAACyB,IAAH,KAAY,KAAZ,IAAqBQ,MAAM,CAACjC,EAAE,CAAC6E,KAAJ,CAAN,CAAiBpG,MAAjB,CAAwB,CAAxB,MAA+B,GADtD,CAAH,EAEE;AACEwqB,MAAAA,SAAS,GAAG,CAAZ;AAEA,UAAIE,WAAW,GAAG,CAAlB;AACA,UAAIC,QAAQ,GAAG,EAAf;AACA,UAAItoB,CAAJ;AAEAumB,MAAAA,UAAU,CAACzN,IAAX,CAAgB,UAAStM,CAAT,EAAY;AACxB6b,QAAAA,WAAW,GAAGjlB,IAAI,CAACG,GAAL,CAAS8kB,WAAT,EAAsB7b,CAAC,CAAC7B,QAAxB,CAAd;AAEA,YAAIvM,CAAC,GAAGc,EAAE,CAACoS,GAAH,CAAO9E,CAAC,CAACpO,CAAT,CAAR;AACA,YAAI0jB,SAAS,GAAGC,eAAe,CAAC,IAAD,CAA/B;AACA,YAAIC,EAAE,GAAG9nB,OAAO,CAAC+nB,IAAR,CAAaH,SAAS,CAACI,IAAV,EAAb,CAAT;AAEAoG,QAAAA,QAAQ,CAAC7d,IAAT,CAAc;AACV;AACAmV,UAAAA,GAAG,EAAE,CAFK;AAGVF,UAAAA,MAAM,EAAE,EAHE;AAIVzH,UAAAA,MAAM,EAAE,EAJE;AAKVzC,UAAAA,IAAI,EAAEpX,CAAC,GAAG4jB,EAAE,CAACjK,KAAH,GAAW,CALX;AAMV;AACAtC,UAAAA,KAAK,EAAErX,CAAC,GAAG4jB,EAAE,CAACjK,KAAH,GAAW,CAAf,GAAmB,CAPhB;AAQVA,UAAAA,KAAK,EAAEiK,EAAE,CAACjK,KAAH,GAAW;AARR,SAAd;AAUH,OAjBD;;AAmBA,UAAG,CAAC7Y,EAAE,CAACiS,OAAH,KAAe,YAAf,IAA+BjS,EAAE,CAACkS,YAAnC,KAAoD,CAAC5K,IAAI,CAACoY,SAA7D,EAAwE;AACpE,YAAI2J,GAAG,GAAG,CAAV;AACA,YAAGrpB,EAAE,CAAC6c,KAAN,EAAawM,GAAG,IAAIrpB,EAAE,CAAC+jB,SAAH,GAAe,CAAtB,CAFuD,CAIpE;;AAEA,aAAIjjB,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAGsoB,QAAQ,CAAC1qB,MAAxB,EAAgCoC,CAAC,EAAjC,EAAqC;AACjC,cAAIuR,IAAI,GAAG1F,IAAI,CAAC7L,CAAD,CAAJ,CAAQuR,IAAnB;AACA,cAAIiX,GAAG,GAAGF,QAAQ,CAACtoB,CAAD,CAAlB;;AACA,cACKuR,IAAI,CAAC,CAAD,CAAJ,KAAY,IAAZ,IAAqBiX,GAAG,CAAChT,IAAJ,GAAWtW,EAAE,CAACoS,GAAH,CAAOC,IAAI,CAAC,CAAD,CAAX,CAAZ,GAA+BgX,GAApD,IACChX,IAAI,CAAC,CAAD,CAAJ,KAAY,IAAZ,IAAqBrS,EAAE,CAACoS,GAAH,CAAOC,IAAI,CAAC,CAAD,CAAX,IAAkBiX,GAAG,CAAC/S,KAAvB,GAAgC8S,GAFzD,EAGE;AACEJ,YAAAA,SAAS,GAAG,EAAZ;AACA;AACH;AACJ;AACJ,OAjBD,MAiBO;AACH,YAAIM,IAAI,GAAG5c,IAAI,CAACjO,MAAhB;AACA,YAAI8qB,WAAW,GAAGtlB,IAAI,CAACmE,GAAL,CAAS,CAACsE,IAAI,CAAC4c,IAAI,GAAG,CAAR,CAAJ,CAAerqB,CAAf,GAAmByN,IAAI,CAAC,CAAD,CAAJ,CAAQzN,CAA5B,IAAiCc,EAAE,CAACypB,EAA7C,KAAoDF,IAAI,GAAG,CAA3D,CAAlB;AAEA,YAAIvV,iBAAiB,GAAGhU,EAAE,CAACgU,iBAAH,IAAwB,EAAhD;;AACA,YAAIwP,GAAG,GAAG,UAASC,GAAT,EAAc;AACpB,iBAAOzP,iBAAiB,CAACvR,OAAlB,CAA0BghB,GAA1B,MAAmC,CAAC,CAA3C;AACH,SAFD;;AAGA,YAAIC,KAAK,GAAGF,GAAG,CAAC,KAAD,CAAf;AACA,YAAIG,MAAM,GAAGH,GAAG,CAAC,MAAD,CAAhB;AACA,YAAII,OAAO,GAAGJ,GAAG,CAAC,OAAD,CAAjB;AACA,YAAIK,QAAQ,GAAGL,GAAG,CAAC,QAAD,CAAlB;AACA,YAAIM,SAAS,GAAGD,QAAQ,IAAIF,MAAZ,IAAsBD,KAAtB,IAA+BE,OAA/C;AACA,YAAIvE,GAAG,GAAG,CAACyE,SAAD,GAAa,CAAb,GACN,CAAC9jB,EAAE,CAAC+jB,SAAH,IAAgB,CAAjB,IAAsB,IAAIrnB,OAD9B;AAGA,YAAIgtB,QAAQ,GAAIF,WAAW,GAAGL,WAAW,GAAG,GAA7B,IAAqCnpB,EAAE,CAACyB,IAAH,KAAY,eAAhE,CAhBG,CAkBH;;AACA,aAAIX,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAGsoB,QAAQ,CAAC1qB,MAAT,GAAkB,CAAjC,EAAoCoC,CAAC,EAArC,EAAyC;AACrC,cAAGnG,GAAG,CAACgvB,aAAJ,CAAkBP,QAAQ,CAACtoB,CAAD,CAA1B,EAA+BsoB,QAAQ,CAACtoB,CAAC,GAAG,CAAL,CAAvC,EAAgDue,GAAhD,CAAH,EAAyD;AACrD4J,YAAAA,SAAS,GAAGS,QAAQ,GAAG,EAAH,GAAQ,EAA5B;AACA;AACH;AACJ;AACJ;;AAED,UAAGT,SAAH,EAAc;AACVrB,QAAAA,cAAc,CAACP,UAAD,EAAa4B,SAAb,CAAd;AACH;AACJ;AACJ;;AAED,MAAGjpB,EAAE,CAAC6b,WAAN,EAAmB;AACf7b,IAAAA,EAAE,CAAC6b,WAAH,CAAeO,GAAf,IAAsBiL,UAAtB;AACH;;AAED,MAAIpI,GAAG,GAAG,CAAC6J,cAAD,CAAV,CA9OqC,CAgPrC;AACA;AACA;;AACA,MAAG9oB,EAAE,CAACugB,UAAH,IAAiBlgB,UAAU,CAACupB,0BAA5B,IAA0DxC,SAAS,KAAK,EAA3E,EAA+E;AAC3E6B,IAAAA,SAAS,GAAG,EAAZ;AACAhK,IAAAA,GAAG,CAAC1T,IAAJ,CAAS,YAAW;AAChBqc,MAAAA,cAAc,CAACP,UAAD,EAAaD,SAAb,CAAd;AACH,KAFD;AAGH,GALD,MAKO;AACHnI,IAAAA,GAAG,CAAC1T,IAAJ,CAAS2d,gBAAT;AACH,GA1PoC,CA4PrC;;;AACA,MAAGlpB,EAAE,CAAC8b,WAAN,EAAmB;AACfmD,IAAAA,GAAG,CAAC1T,IAAJ,CAAS,YAAW;AAChBvL,MAAAA,EAAE,CAAC8b,WAAH,CAAeM,GAAf,IAAsB6M,SAAS,KAAK,IAAd,GACjBzuB,SAAS,CAAC2sB,SAAD,CAAT,GAAuBA,SAAvB,GAAmC,CADlB,GAElB8B,SAFJ;AAGH,KAJD;AAKH;;AAED,MAAIY,QAAQ,GAAG7pB,EAAE,CAACwe,WAAlB;;AACA,MACIqL,QAAQ,IAAIA,QAAQ,CAACnsB,SAArB,IACA,CAACsC,EAAE,CAACgU,iBAAH,IAAwB,EAAzB,EAA6BvR,OAA7B,CAAqC,QAArC,MAAmD,CAAC,CADpD,IAEA,CAACvF,QAAQ,CAACmD,UAAD,EAAaL,EAAE,CAACiI,GAAhB,CAHb,EAIE;AACE,QAAG,CAAC5H,UAAU,CAACypB,0BAAf,EAA2C;AACvCzpB,MAAAA,UAAU,CAACypB,0BAAX,GAAwC,EAAxC;AACH;;AACDzpB,IAAAA,UAAU,CAACypB,0BAAX,CAAsCD,QAAQ,CAAC1hB,KAAT,GAAiB,YAAvD,IAAuE0hB,QAAQ,CAACnsB,SAAhF;AAEAuhB,IAAAA,GAAG,CAAC1T,IAAJ,CACI,SAASwe,kCAAT,GAA8C;AAC1C1C,MAAAA,UAAU,CAACzN,IAAX,CAAgB,UAAStM,CAAT,EAAYxM,CAAZ,EAAe;AAC3B,YAAI8hB,SAAS,GAAGC,eAAe,CAAC,IAAD,CAA/B;AACA7iB,QAAAA,EAAE,CAAC0b,KAAH,CAAS5a,CAAT,EAAYgiB,EAAZ,GAAiB9nB,OAAO,CAAC+nB,IAAR,CAAaH,SAAS,CAACI,IAAV,EAAb,CAAjB;AACH,OAHD;AAIH,KANL;AAQH;;AAED,MAAIgH,IAAI,GAAGrvB,GAAG,CAACigB,WAAJ,CAAgBqE,GAAhB,CAAX;AACA,MAAG+K,IAAI,IAAIA,IAAI,CAACrC,IAAhB,EAAsBvpB,EAAE,CAACopB,SAAH,CAAajc,IAAb,CAAkBye,IAAlB;AACtB,SAAOA,IAAP;AACH,CA7RD;AA+RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASrK,YAAT,CAAsBvhB,EAAtB,EAA0B4B,EAA1B,EAA8BsH,IAA9B,EAAoC;AAChC,MAAI8U,GAAG,GAAGpc,EAAE,CAACiI,GAAH,GAAS,SAAnB;AACA,MAAI0E,IAAI,GAAGrF,IAAI,CAACqF,IAAhB;AAEA,MAAIsd,QAAQ,GAAG3iB,IAAI,CAACuW,KAAL,CAAWxE,SAAX,CAAqB,UAAU+C,GAA/B,EACVzY,IADU,CACLgJ,IADK,EACCiZ,UADD,CAAf;AAGAqE,EAAAA,QAAQ,CAACvQ,IAAT,GAAgBC,MAAhB;AAEAsQ,EAAAA,QAAQ,CAAC3Q,KAAT,GAAiB4Q,MAAjB,CAAwB,MAAxB,EAAgC,cAAhC,EACK1Q,OADL,CACa4C,GADb,EACkB,CADlB,EAEK5C,OAFL,CAEa,OAFb,EAEsB,CAFtB,EAGKsM,IAHL,CAGU/qB,KAAK,CAACgrB,MAHhB,EAGwB/lB,EAAE,CAACmqB,YAH3B,EAIKlE,KAJL,CAIW,cAJX,EAI2BjrB,OAAO,CAACkrB,UAAR,CAAmB9nB,EAAnB,EAAuB4B,EAAE,CAACoqB,YAA1B,EAAwC,CAAxC,IAA6C,IAJxE;AAMAH,EAAAA,QAAQ,CACH5rB,IADL,CACU,WADV,EACuBiJ,IAAI,CAACyW,OAD5B,EAEK1f,IAFL,CAEU,GAFV,EAEeiJ,IAAI,CAACwW,IAFpB;AAGH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAnhB,IAAI,CAACsjB,aAAL,GAAqB,UAAS7hB,EAAT,EAAa4B,EAAb,EAAiB;AAClC,MAAIqqB,EAAE,GAAGjsB,EAAE,CAACQ,WAAH,CAAe0rB,KAAxB;;AACA,MAAI9rB,QAAQ,GAAGwB,EAAE,CAACiI,GAAH,CAAOxJ,MAAP,CAAc,CAAd,CAAf;;AACA,MAAIwV,IAAI,GAAGjU,EAAE,CAACiU,IAAd;AACA,MAAIsW,UAAJ;;AAEA,MAAGvqB,EAAE,CAACohB,MAAH,KAAc,MAAjB,EAAyB;AACrBmJ,IAAAA,UAAU,GAAGvqB,EAAE,CAACwe,WAAhB;AACH,GAFD,MAEO,IAAGhgB,QAAQ,KAAK,GAAhB,EAAqB;AACxB+rB,IAAAA,UAAU,GAAG;AACT3R,MAAAA,OAAO,EAAEyR,EAAE,CAAChe,CAAH,GAAO,CAAC,KAAKrM,EAAE,CAACqhB,QAAH,IAAe,CAApB,CAAD,IAA2BgJ,EAAE,CAAC5E,CADrC;AAETzd,MAAAA,OAAO,EAAE;AAFA,KAAb;AAIH,GALM,MAKA,IAAGxJ,QAAQ,KAAK,GAAhB,EAAqB;AACxB+rB,IAAAA,UAAU,GAAG;AACT3R,MAAAA,OAAO,EAAEyR,EAAE,CAACxe,CAAH,GAAO,CAAC7L,EAAE,CAACqhB,QAAH,IAAe,CAAhB,IAAqBgJ,EAAE,CAACG,CAD/B;AAETxiB,MAAAA,OAAO,EAAE;AAFA,KAAb;AAIH;;AAED,MAAGiM,IAAI,KAAK,KAAT,IAAkBA,IAAI,KAAK,MAA9B,EAAsC;AAClC,WAAOsW,UAAU,CAAC3R,OAAlB;AACH,GAFD,MAEO,IAAG3E,IAAI,KAAK,QAAT,IAAqBA,IAAI,KAAK,OAAjC,EAA0C;AAC7C,WAAOsW,UAAU,CAAC3R,OAAX,GAAqB2R,UAAU,CAACviB,OAAvC;AACH;AACJ,CAzBD;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASwZ,gBAAT,CAA0BxhB,EAA1B,EAA8B;AAC1B,MAAIyL,QAAQ,GAAGzL,EAAE,CAAC4f,KAAH,CAAS7M,IAAT,CAAchP,IAA7B;AACA,MAAI0mB,UAAU,GAAG,CAACzqB,EAAE,CAAC4f,KAAH,CAASlT,IAAT,CAAcge,KAAd,CAAoB7vB,YAAY,CAAC8vB,UAAjC,KAAgD,EAAjD,EAAqDjsB,MAAtE;;AACA,MAAGsB,EAAE,CAAC4f,KAAH,CAASC,cAAT,CAAwB,UAAxB,CAAH,EAAwC;AACpC,WAAO4K,UAAU,GACbhf,QAAQ,IAAIlP,SAAS,GAAIkuB,UAAU,GAAGjuB,YAA9B,CADK,GAEbiP,QAAQ,GAAGlP,SAFf;AAGH,GAJD,MAIO;AACH,WAAOkuB,UAAU,GACbhf,QAAQ,IAAIgf,UAAU,GAAG,CAAjB,CAAR,GAA8BjuB,YADjB,GAEbiP,QAFJ;AAGH;AACJ;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASwW,SAAT,CAAmB7jB,EAAnB,EAAuB4B,EAAvB,EAA2B;AACvB,MAAIK,UAAU,GAAGjC,EAAE,CAACQ,WAApB;AACA,MAAIic,IAAI,GAAG7a,EAAE,CAACiI,GAAd;AACA,MAAIzJ,QAAQ,GAAGqc,IAAI,CAACpc,MAAL,CAAY,CAAZ,CAAf;AACA,MAAIgN,QAAQ,GAAGzL,EAAE,CAAC4f,KAAH,CAAS7M,IAAT,CAAchP,IAA7B;AACA,MAAI6mB,aAAJ;;AAEA,MAAG5qB,EAAE,CAAC4f,KAAH,CAASC,cAAT,CAAwB,UAAxB,CAAH,EAAwC;AACpC+K,IAAAA,aAAa,GAAG5qB,EAAE,CAACgc,MAAH,GAAYhc,EAAE,CAAC4f,KAAH,CAASL,QAArB,GAAgCiC,gBAAgB,CAACxhB,EAAD,CAAhE;AACH,GAFD,MAEO;AACH,QAAI+T,QAAQ,GAAG,CAAC/T,EAAE,CAACgU,iBAAH,IAAwB,EAAzB,EAA6BvR,OAA7B,CAAqC,QAArC,MAAmD,CAAC,CAAnE;;AAEA,QAAGzC,EAAE,CAACyB,IAAH,KAAY,eAAf,EAAgC;AAC5BmpB,MAAAA,aAAa,GAAG5qB,EAAE,CAACgc,MAAnB;AACH,KAFD,MAEO;AACH,UAAI6O,UAAU,GAAG,MAAMpf,QAAvB;;AACA,UAAGsI,QAAH,EAAa;AACT8W,QAAAA,UAAU,GAAG,MAAMpf,QAAnB;;AACA,YAAGzL,EAAE,CAAC6c,KAAH,KAAa,SAAhB,EAA2B;AACvBgO,UAAAA,UAAU,IAAI7qB,EAAE,CAACmgB,OAAjB;AACH;AACJ;;AACDyK,MAAAA,aAAa,GAAG,KAAKC,UAAL,IAAmB7qB,EAAE,CAACyhB,SAAH,GAAezhB,EAAE,CAACyhB,SAAH,GAAe,CAA9B,GAAkC,CAArD,CAAhB;AACH;;AAED,QAAG,CAAC1N,QAAJ,EAAc;AACV,UAAGvV,QAAQ,KAAK,GAAhB,EAAqB;AACjBosB,QAAAA,aAAa,IAAI5qB,EAAE,CAACiU,IAAH,KAAY,KAAZ,GACbxI,QAAQ,IAAIzL,EAAE,CAAC4kB,cAAH,GAAoB,CAApB,GAAwB,CAA5B,CADK,GAEbnZ,QAAQ,IAAIzL,EAAE,CAAC4kB,cAAH,GAAoB,GAApB,GAA0B,GAA9B,CAFZ;AAGH,OAJD,MAIO;AACHgG,QAAAA,aAAa,IAAI5qB,EAAE,CAACiU,IAAH,KAAY,OAAZ,GACbxI,QAAQ,IAAIzL,EAAE,CAAC4kB,cAAH,GAAoB,CAApB,GAAwB,GAA5B,CADK,GAEbnZ,QAAQ,IAAIzL,EAAE,CAAC4kB,cAAH,GAAoB,GAApB,GAA0B,CAA9B,CAFZ;AAGH;AACJ;AACJ;;AAED,MAAI/kB,GAAG,GAAGlD,IAAI,CAACsjB,aAAL,CAAmB7hB,EAAnB,EAAuB4B,EAAvB,CAAV;AACA,MAAI8nB,SAAJ,EAAe5oB,CAAf,EAAkBoU,CAAlB;;AAEA,MAAG9U,QAAQ,KAAK,GAAhB,EAAqB;AACjBU,IAAAA,CAAC,GAAGc,EAAE,CAAC4Y,OAAH,GAAa5Y,EAAE,CAACgI,OAAH,GAAa,CAA9B;AACAsL,IAAAA,CAAC,GAAItT,EAAE,CAACiU,IAAH,KAAY,KAAb,GAAsBpU,GAAG,GAAG+qB,aAA5B,GAA4C/qB,GAAG,GAAG+qB,aAAtD;AACH,GAHD,MAGO;AACHtX,IAAAA,CAAC,GAAGtT,EAAE,CAAC4Y,OAAH,GAAa5Y,EAAE,CAACgI,OAAH,GAAa,CAA9B;AACA9I,IAAAA,CAAC,GAAIc,EAAE,CAACiU,IAAH,KAAY,OAAb,GAAwBpU,GAAG,GAAG+qB,aAA9B,GAA8C/qB,GAAG,GAAG+qB,aAAxD;AACA9C,IAAAA,SAAS,GAAG;AAACgD,MAAAA,MAAM,EAAE,KAAT;AAAgBC,MAAAA,MAAM,EAAE;AAAxB,KAAZ;AACH;;AAED,MAAIC,KAAJ;;AAEA,MAAGhrB,EAAE,CAACyB,IAAH,KAAY,eAAf,EAAgC;AAC5B,QAAI4lB,UAAU,GAAGrnB,EAAE,CAAC6b,WAAH,CAAe7b,EAAE,CAACiI,GAAH,GAAS,MAAxB,CAAjB;AAEA+iB,IAAAA,KAAK,GAAG;AACJC,MAAAA,SAAS,EAAE5D,UADP;AAEJpT,MAAAA,IAAI,EAAEjU,EAAE,CAACiU;AAFL,KAAR;;AAKA,QAAGoT,UAAU,IAAIA,UAAU,CAACrE,IAAX,EAAd,IAAmCqE,UAAU,CAACrE,IAAX,GAAkBC,UAAxD,EAAoE;AAChE,UAAIiI,WAAW,GAAGlwB,OAAO,CAACmwB,YAAR,CAAqB9D,UAAU,CAACrE,IAAX,GAAkBC,UAAvC,CAAlB;AACA+H,MAAAA,KAAK,CAACI,UAAN,GAAmBF,WAAW,CAAChsB,CAA/B;AACA8rB,MAAAA,KAAK,CAACK,SAAN,GAAkBH,WAAW,CAAC5X,CAA9B;AACH;;AAED,QAAGtT,EAAE,CAAC4f,KAAH,CAASC,cAAT,CAAwB,UAAxB,CAAH,EAAwC;AACpCmL,MAAAA,KAAK,CAAC3L,GAAN,GAAY,CAAZ;AACH;AACJ;;AAED,SAAOvkB,MAAM,CAACgf,IAAP,CAAY1b,EAAZ,EAAgByc,IAAI,GAAG,OAAvB,EAAgC;AACnCyQ,IAAAA,aAAa,EAAEtrB,EADoB;AAEnCurB,IAAAA,QAAQ,EAAEvrB,EAAE,CAACmI,KAAH,GAAW,aAFc;AAGnCqjB,IAAAA,WAAW,EAAEnrB,UAAU,CAACkhB,UAAX,CAAsB/iB,QAAtB,CAHsB;AAInCwsB,IAAAA,KAAK,EAAEA,KAJ4B;AAKnClD,IAAAA,SAAS,EAAEA,SALwB;AAMnC2D,IAAAA,UAAU,EAAE;AAACvsB,MAAAA,CAAC,EAAEA,CAAJ;AAAOoU,MAAAA,CAAC,EAAEA,CAAV;AAAa,qBAAe;AAA5B;AANuB,GAAhC,CAAP;AAQH;;AAED3W,IAAI,CAAC0pB,kBAAL,GAA0B,UAASjoB,EAAT,EAAa4B,EAAb,EAAiBwd,WAAjB,EAA8B;AACpD,MAAIjW,GAAG,GAAG5M,GAAG,CAACgK,SAAJ,CAAc3E,EAAE,CAACjC,KAAjB,EAAwBiC,EAAE,CAACwH,GAA3B,CAAV;AACA,SACKD,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAZ,IAAmB,CAApB,IACAvH,EAAE,CAAC0rB,QADH,KAEC1rB,EAAE,CAACyB,IAAH,KAAY,QAAZ,IAAwBzB,EAAE,CAACyB,IAAH,KAAY,GAFrC,KAGA,EAAEzB,EAAE,CAACgK,WAAH,IAAkBhK,EAAE,CAACqK,UAAH,CAAc,CAAd,MAAqBjO,MAAzC,CAHA,KAKI6gB,QAAQ,CAACjd,EAAD,EAAK,CAAL,CAAR,IACA,CAAC2rB,sBAAsB,CAACvtB,EAAD,EAAK4B,EAAL,EAASwd,WAAT,EAAsBjW,GAAtB,CADvB,IAEAqkB,aAAa,CAACxtB,EAAD,EAAK4B,EAAL,CAPjB,CADJ;AAWH,CAbD;;AAeArD,IAAI,CAACsgB,QAAL,GAAgB,UAASjd,EAAT,EAAa2M,IAAb,EAAmB;AAC/B,SAAOA,IAAI,CAACU,MAAL,CAAY,UAASC,CAAT,EAAY;AAAE,WAAO2P,QAAQ,CAACjd,EAAD,EAAKsN,CAAC,CAACpO,CAAP,CAAf;AAA2B,GAArD,CAAP;AACH,CAFD;;AAIA,SAAS+d,QAAT,CAAkBjd,EAAlB,EAAsB6L,CAAtB,EAAyB;AACrB,MAAIS,CAAC,GAAGtM,EAAE,CAACoS,GAAH,CAAOvG,CAAP,CAAR;AACA,SAAQS,CAAC,GAAG,CAAJ,IAASA,CAAC,GAAGtM,EAAE,CAACgI,OAAH,GAAa,CAAlC;AACH;;AAED,SAAS2jB,sBAAT,CAAgCvtB,EAAhC,EAAoC4B,EAApC,EAAwCwd,WAAxC,EAAqDjW,GAArD,EAA0D;AACtD,MAAIskB,eAAe,GAAGrO,WAAW,CAACE,SAAlC;AACA,MAAG,CAACmO,eAAJ,EAAqB;AAErB,MAAIxrB,UAAU,GAAGjC,EAAE,CAACQ,WAApB;;AACA,MAAIJ,QAAQ,GAAGwB,EAAE,CAACiI,GAAH,CAAOxJ,MAAP,CAAc,CAAd,CAAf;;AACA,MAAI0D,aAAa,GAAGxF,IAAI,CAACwF,aAAL,CAAmBnC,EAAE,CAACiI,GAAtB,CAApB;AAEA,MAAI6jB,YAAY,GAAG9rB,EAAE,CAAC4Y,OAAH,IACb1U,IAAI,CAACmE,GAAL,CAASd,GAAG,CAAC,CAAD,CAAZ,IAAmBrD,IAAI,CAACmE,GAAL,CAASd,GAAG,CAAC,CAAD,CAAZ,CAApB,MAA2C/I,QAAQ,KAAK,GAAxD,CAAD,GACA,CADA,GACIwB,EAAE,CAACgI,OAFQ,CAAnB;;AAKA,WAAS+jB,YAAT,CAAsBC,GAAtB,EAA2B;AACvB,QAAG,CAACA,GAAG,CAACnH,QAAL,IAAiB,CAACmH,GAAG,CAACvK,SAAzB,EAAoC,OAAO,KAAP;AACpC,QAAIwK,SAAS,GAAG/nB,IAAI,CAACG,GAAL,CAAS,CAAC2nB,GAAG,CAACvK,SAAJ,GAAgBzhB,EAAE,CAACknB,aAApB,IAAqC,CAA9C,EAAiD,CAAjD,CAAhB;;AAEA,aAASgF,WAAT,CAAqBC,IAArB,EAA2B;AACvB,aAAO,OAAOA,IAAP,KAAgB,QAAhB,IAA4BjoB,IAAI,CAACmE,GAAL,CAAS8jB,IAAI,GAAGL,YAAhB,IAAgCG,SAAnE;AACH;;AAED,QAAGC,WAAW,CAACF,GAAG,CAACzQ,iBAAL,CAAX,IAAsC2Q,WAAW,CAACF,GAAG,CAACvQ,mBAAL,CAApD,EAA+E;AAC3E,aAAO,IAAP;AACH;;AACD,QAAI2Q,aAAa,GAAGJ,GAAG,CAAClN,cAAJ,IAAsB,EAA1C;;AACA,SAAI,IAAIyD,CAAR,IAAa6J,aAAb,EAA4B;AACxB,UAAGF,WAAW,CAACE,aAAa,CAAC7J,CAAD,CAAb,CAAiB,CAAjB,CAAD,CAAX,IAAoC2J,WAAW,CAACE,aAAa,CAAC7J,CAAD,CAAb,CAAiB,CAAjB,CAAD,CAAlD,EAAyE;AACrE,eAAO,IAAP;AACH;AACJ;AACJ;;AAED,MAAItI,QAAQ,GAAG5Z,UAAU,CAAC6Z,MAAX,CAAkBsD,WAAW,CAACpC,YAA9B,CAAf;;AACA,MAAG,CAAC,CAACnB,QAAQ,CAACoS,YAAT,IAAyBpS,QAA1B,EAAoCqS,QAApC,CAA6C5tB,MAAjD,EAAyD;AACrD,WAAOqtB,YAAY,CAACvO,WAAD,EAAcsO,YAAd,CAAnB;AACH;;AAED,MAAIS,iBAAiB,GAAG5vB,IAAI,CAACW,IAAL,CAAUc,EAAV,EAAc+D,aAAd,CAAxB;;AACA,OAAI,IAAIrB,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGyrB,iBAAiB,CAAC7tB,MAArC,EAA6CoC,CAAC,EAA9C,EAAkD;AAC9C,QAAI0rB,YAAY,GAAGD,iBAAiB,CAACzrB,CAAD,CAApC;;AACA,QACI0rB,YAAY,CAAC9O,SAAb,KAA2BmO,eAA3B,IACAE,YAAY,CAACS,YAAD,EAAeV,YAAf,CAFhB,EAGE;AACE,aAAO,IAAP;AACH;AACJ;AACJ;;AAED,SAASF,aAAT,CAAuBxtB,EAAvB,EAA2B4B,EAA3B,EAA+B;AAC3B,MAAIysB,QAAQ,GAAGruB,EAAE,CAACsuB,SAAlB;AACA,MAAIC,OAAO,GAAG3sB,EAAE,CAACob,YAAjB;;AACA,MAAI5c,QAAQ,GAAGwB,EAAE,CAACiI,GAAH,CAAOxJ,MAAP,CAAc,CAAd,CAAf;;AAEA,OAAI,IAAIqC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG2rB,QAAQ,CAAC/tB,MAA5B,EAAoCoC,CAAC,EAArC,EAAyC;AACrC,QAAIK,KAAK,GAAGsrB,QAAQ,CAAC3rB,CAAD,CAApB;;AAEA,QAAGK,KAAK,CAACmb,OAAN,KAAkB,IAAlB,IAA2Bnb,KAAK,CAACiZ,KAAN,GAAcjZ,KAAK,CAACmZ,KAArB,KAAgCqS,OAA7D,EAAsE;AAClE,UACIjyB,QAAQ,CAACkyB,OAAT,CAAiBzrB,KAAjB,EAAwB,UAAxB,KACAA,KAAK,CAAC0rB,WAAN,KAAsB;AAAC3tB,QAAAA,CAAC,EAAE,GAAJ;AAASoU,QAAAA,CAAC,EAAE;AAAZ,QAAiB9U,QAAjB,CAF1B,EAGE,OAAO,IAAP;AAEF,UACI2C,KAAK,CAAC2rB,IAAN,IACA3rB,KAAK,CAAC2rB,IAAN,CAAWruB,MAAX,CAAkB0C,KAAK,CAAC2rB,IAAN,CAAWpuB,MAAX,GAAoB,CAAtC,MAA6CF,QAFjD,EAGE,OAAO,IAAP;AACL;AACJ;;AACD,SAAO,KAAP;AACH;;AAED,SAASqkB,eAAT,CAAyBkK,KAAzB,EAAgC;AAC5B,MAAIhN,CAAC,GAAGzlB,EAAE,CAACuf,MAAH,CAAUkT,KAAV,CAAR;AACA,MAAIC,EAAE,GAAGjN,CAAC,CAAClG,MAAF,CAAS,kBAAT,CAAT;AACA,SAAOmT,EAAE,CAAC7E,KAAH,KAAapI,CAAC,CAAClG,MAAF,CAAS,MAAT,CAAb,GAAgCmT,EAAvC;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACArwB,IAAI,CAACswB,eAAL,GAAuB,UAAS7uB,EAAT,EAAa;AAChC,MAAI0E,MAAM,GAAGnG,IAAI,CAACW,IAAL,CAAUc,EAAV,EAAc,EAAd,EAAkB,IAAlB,CAAb;;AACA,OAAI,IAAI0C,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGgC,MAAM,CAACpE,MAA1B,EAAkCoC,CAAC,EAAnC,EAAuC;AACnC,QAAId,EAAE,GAAG8C,MAAM,CAAChC,CAAD,CAAf;;AACA,QAAGd,EAAE,CAACugB,UAAN,EAAkB;AACd9lB,MAAAA,KAAK,CAACwyB,eAAN,CAAsB7uB,EAAtB,EAA0ByjB,cAAc,CAAC7hB,EAAD,CAAxC;;AACA,UAAGA,EAAE,CAAC4b,MAAN,EAAc;AACVnhB,QAAAA,KAAK,CAACwyB,eAAN,CAAsB7uB,EAAtB,EAA0B0jB,oBAAoB,CAAC9hB,EAAD,CAA9C;AACH;AACJ;;AACD,QAAGtF,QAAQ,CAACkG,kBAAT,CAA4B,aAA5B,EAA2C,WAA3C,EAAwDZ,EAAxD,CAAH,EAAgE;AAC5DvF,MAAAA,KAAK,CAACwyB,eAAN,CAAsB7uB,EAAtB,EAA0B2jB,uBAAuB,CAAC/hB,EAAD,CAAjD;AACH;AACJ;AACJ,CAdD;;AAgBA,SAAS6hB,cAAT,CAAwB7hB,EAAxB,EAA4B;AAAE,SAAOA,EAAE,CAACiI,GAAH,GAAS,aAAhB;AAAgC;;AAC9D,SAAS6Z,oBAAT,CAA8B9hB,EAA9B,EAAkC;AAAE,SAAO6hB,cAAc,CAAC7hB,EAAD,CAAd,GAAqB,SAA5B;AAAwC;;AAC5E,SAAS+hB,uBAAT,CAAiC/hB,EAAjC,EAAqC;AAAE,SAAOA,EAAE,CAACiI,GAAH,GAAS,cAAhB;AAAiC,C,CAExE;;;AACAtL,IAAI,CAACuwB,IAAL,GAAY,UAAS9uB,EAAT,EAAa+uB,MAAb,EAAqB;AAC7B,MAAIC,QAAQ,GAAGC,cAAc,CAACjvB,EAAD,EAAK+uB,MAAL,CAA7B;;AAEA,OAAI,IAAIrsB,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGssB,QAAQ,CAAC1uB,MAA5B,EAAoCoC,CAAC,EAArC,EAAyC;AACrCwsB,IAAAA,aAAa,CAAClvB,EAAD,EAAKgvB,QAAQ,CAACtsB,CAAD,CAAR,CAAY5B,CAAjB,EAAoBkuB,QAAQ,CAACtsB,CAAD,CAAR,CAAYwS,CAAhC,CAAb;AACH;AACJ,CAND;;AAQA,SAAS+Z,cAAT,CAAwBjvB,EAAxB,EAA4B+uB,MAA5B,EAAoC;AAChC,MAAII,MAAM,GAAG,EAAb;AACA,MAAIzsB,CAAJ,EAAOE,CAAP;;AAEA,OAAIF,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAGqsB,MAAM,CAACzuB,MAAtB,EAA8BoC,CAAC,EAA/B,EAAmC;AAC/B,QAAI0sB,OAAO,GAAG,EAAd;AACA,QAAIjH,EAAE,GAAGnoB,EAAE,CAACsuB,SAAH,CAAaS,MAAM,CAACrsB,CAAD,CAAnB,EAAwBsZ,KAAjC;AACA,QAAIqT,EAAE,GAAGrvB,EAAE,CAACsuB,SAAH,CAAaS,MAAM,CAACrsB,CAAD,CAAnB,EAAwBwZ,KAAjC;AACA,QAAG,CAACiM,EAAD,IAAO,CAACkH,EAAX,EAAe,SAJgB,CAIN;;AAEzB,SAAIzsB,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAGusB,MAAM,CAAC7uB,MAAtB,EAA8BsC,CAAC,EAA/B,EAAmC;AAC/B,UAAGusB,MAAM,CAACvsB,CAAD,CAAN,CAAU9B,CAAV,CAAYuD,OAAZ,CAAoB8jB,EAApB,MAA4B,CAAC,CAA7B,IAAkCgH,MAAM,CAACvsB,CAAD,CAAN,CAAUsS,CAAV,CAAY7Q,OAAZ,CAAoBgrB,EAApB,MAA4B,CAAC,CAAlE,EAAqE;AACjED,QAAAA,OAAO,CAACjiB,IAAR,CAAavK,CAAb;AACH;AACJ;;AAED,QAAG,CAACwsB,OAAO,CAAC9uB,MAAZ,EAAoB;AAChB6uB,MAAAA,MAAM,CAAChiB,IAAP,CAAY;AAACrM,QAAAA,CAAC,EAAE,CAACqnB,EAAD,CAAJ;AAAUjT,QAAAA,CAAC,EAAE,CAACma,EAAD;AAAb,OAAZ;AACA;AACH;;AAED,QAAIC,MAAM,GAAGH,MAAM,CAACC,OAAO,CAAC,CAAD,CAAR,CAAnB;AACA,QAAIG,MAAJ;;AAEA,QAAGH,OAAO,CAAC9uB,MAAR,GAAiB,CAApB,EAAuB;AACnB,WAAIsC,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAGwsB,OAAO,CAAC9uB,MAAvB,EAA+BsC,CAAC,EAAhC,EAAoC;AAChC2sB,QAAAA,MAAM,GAAGJ,MAAM,CAACC,OAAO,CAACxsB,CAAD,CAAR,CAAf;AACA4sB,QAAAA,eAAe,CAACF,MAAM,CAACxuB,CAAR,EAAWyuB,MAAM,CAACzuB,CAAlB,CAAf;AACA0uB,QAAAA,eAAe,CAACF,MAAM,CAACpa,CAAR,EAAWqa,MAAM,CAACra,CAAlB,CAAf;AACH;AACJ;;AACDsa,IAAAA,eAAe,CAACF,MAAM,CAACxuB,CAAR,EAAW,CAACqnB,EAAD,CAAX,CAAf;AACAqH,IAAAA,eAAe,CAACF,MAAM,CAACpa,CAAR,EAAW,CAACma,EAAD,CAAX,CAAf;AACH;;AAED,SAAOF,MAAP;AACH;;AAED,SAASK,eAAT,CAAyBC,OAAzB,EAAkCC,OAAlC,EAA2C;AACvC,OAAI,IAAIhtB,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGgtB,OAAO,CAACpvB,MAA3B,EAAmCoC,CAAC,EAApC,EAAwC;AACpC,QAAG+sB,OAAO,CAACprB,OAAR,CAAgBqrB,OAAO,CAAChtB,CAAD,CAAvB,MAAgC,CAAC,CAApC,EAAuC+sB,OAAO,CAACtiB,IAAR,CAAauiB,OAAO,CAAChtB,CAAD,CAApB;AAC1C;AACJ;;AAED,SAASwsB,aAAT,CAAuBlvB,EAAvB,EAA2B2vB,IAA3B,EAAiCC,IAAjC,EAAuC;AACnC,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIC,MAAM,GAAG/vB,EAAE,CAAC+vB,MAAhB;AACA,MAAIrtB,CAAJ,EAAOE,CAAP;;AAEA,OAAIF,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAGitB,IAAI,CAACrvB,MAApB,EAA4BoC,CAAC,EAA7B,EAAiCmtB,SAAS,CAAC1iB,IAAV,CAAe5O,IAAI,CAACa,SAAL,CAAeY,EAAf,EAAmB2vB,IAAI,CAACjtB,CAAD,CAAvB,CAAf;;AACjC,OAAIA,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAGktB,IAAI,CAACtvB,MAApB,EAA4BoC,CAAC,EAA7B,EAAiCotB,SAAS,CAAC3iB,IAAV,CAAe5O,IAAI,CAACa,SAAL,CAAeY,EAAf,EAAmB4vB,IAAI,CAACltB,CAAD,CAAvB,CAAf;;AAEjC,MAAIstB,SAAS,GAAGxP,MAAM,CAACC,IAAP,CAAY5jB,OAAZ,CAAhB;AAEA,MAAIozB,WAAW,GAAG,CACd,QADc,EACJ,QADI,EACM,YADN,EACoB,UADpB,EACgC,MADhC,EACwC,WADxC,EACqD,UADrD,CAAlB;AAGA,MAAIC,YAAY,GAAG,CAAC,QAAD,EAAW,KAAX,CAAnB;;AAEA,OAAIxtB,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAGstB,SAAS,CAAC1vB,MAAzB,EAAiCoC,CAAC,EAAlC,EAAsC;AAClC,QAAIytB,IAAI,GAAGH,SAAS,CAACttB,CAAD,CAApB;AACA,QAAI0tB,IAAI,GAAGP,SAAS,CAAC,CAAD,CAAT,CAAaM,IAAb,CAAX;AACA,QAAIE,IAAI,GAAGP,SAAS,CAAC,CAAD,CAAT,CAAaK,IAAb,CAAX;AACA,QAAIG,QAAQ,GAAG,IAAf;AACA,QAAIC,aAAa,GAAG,KAApB;AACA,QAAIC,aAAa,GAAG,KAApB;;AACA,QAAGL,IAAI,CAAC9vB,MAAL,CAAY,CAAZ,MAAmB,GAAnB,IAA0B,OAAO+vB,IAAP,KAAgB,UAA1C,IACKH,WAAW,CAAC5rB,OAAZ,CAAoB8rB,IAApB,MAA8B,CAAC,CADvC,EAC0C;AACtC;AACH;;AACD,SAAIvtB,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAGitB,SAAS,CAACvvB,MAAd,IAAwBgwB,QAAnC,EAA6C1tB,CAAC,EAA9C,EAAkD;AAC9C,UAAI6tB,KAAK,GAAGZ,SAAS,CAACjtB,CAAD,CAAT,CAAautB,IAAb,CAAZ;;AACA,UAAGA,IAAI,KAAK,MAAT,IAAmBD,YAAY,CAAC7rB,OAAb,CAAqB+rB,IAArB,MAA+B,CAAC,CAAnD,IACKF,YAAY,CAAC7rB,OAAb,CAAqBosB,KAArB,MAAgC,CAAC,CADtC,IAC2CL,IAAI,KAAKK,KADvD,EAC8D;AAC1D;AACA;AACAF,QAAAA,aAAa,GAAG,IAAhB;AACH,OALD,MAKO,IAAGE,KAAK,KAAKL,IAAb,EAAmBE,QAAQ,GAAG,KAAX;AAC7B;;AACD,SAAI1tB,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAGktB,SAAS,CAACxvB,MAAd,IAAwBgwB,QAAnC,EAA6C1tB,CAAC,EAA9C,EAAkD;AAC9C,UAAI8tB,KAAK,GAAGZ,SAAS,CAACltB,CAAD,CAAT,CAAautB,IAAb,CAAZ;;AACA,UAAGA,IAAI,KAAK,MAAT,IAAmBD,YAAY,CAAC7rB,OAAb,CAAqBgsB,IAArB,MAA+B,CAAC,CAAnD,IACKH,YAAY,CAAC7rB,OAAb,CAAqBqsB,KAArB,MAAgC,CAAC,CADtC,IAC2CL,IAAI,KAAKK,KADvD,EAC8D;AAC1D;AACA;AACAF,QAAAA,aAAa,GAAG,IAAhB;AACH,OALD,MAKO,IAAGV,SAAS,CAACltB,CAAD,CAAT,CAAautB,IAAb,MAAuBE,IAA1B,EAAgCC,QAAQ,GAAG,KAAX;AAC1C;;AACD,QAAGA,QAAH,EAAa;AACT,UAAGC,aAAH,EAAkBR,MAAM,CAACF,SAAS,CAAC,CAAD,CAAT,CAAa9lB,KAAd,CAAN,CAA2B1G,IAA3B,GAAkC,QAAlC;AAClB,UAAGmtB,aAAH,EAAkBT,MAAM,CAACD,SAAS,CAAC,CAAD,CAAT,CAAa/lB,KAAd,CAAN,CAA2B1G,IAA3B,GAAkC,QAAlC;AAClBstB,MAAAA,aAAa,CAACZ,MAAD,EAASI,IAAT,EAAeN,SAAf,EAA0BC,SAA1B,EAAqC9vB,EAAE,CAACQ,WAAH,CAAe2iB,UAApD,CAAb;AACH;AACJ,GAlDkC,CAoDnC;;;AACA,OAAIzgB,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAG1C,EAAE,CAACQ,WAAH,CAAeowB,WAAf,CAA2BtwB,MAA1C,EAAkDoC,CAAC,EAAnD,EAAuD;AACnD,QAAImuB,GAAG,GAAG7wB,EAAE,CAACQ,WAAH,CAAeowB,WAAf,CAA2BluB,CAA3B,CAAV;;AACA,QAAGitB,IAAI,CAACtrB,OAAL,CAAawsB,GAAG,CAACC,IAAjB,MAA2B,CAAC,CAA5B,IACKlB,IAAI,CAACvrB,OAAL,CAAawsB,GAAG,CAACE,IAAjB,MAA2B,CAAC,CADpC,EACuC;AACnCx0B,MAAAA,GAAG,CAACy0B,SAAJ,CAAcjB,MAAM,CAACa,WAAP,CAAmBluB,CAAnB,CAAd,EAAqC,CAAC,GAAD,CAArC;AACH;AACJ;AACJ;;AAED,SAASiuB,aAAT,CAAuBZ,MAAvB,EAA+BkB,GAA/B,EAAoCpB,SAApC,EAA+CC,SAA/C,EAA0DoB,SAA1D,EAAqE;AACjE;AACA;AACA;AACA,MAAIC,EAAE,GAAG50B,GAAG,CAAC60B,cAAb;AACA,MAAIhB,IAAI,GAAGe,EAAE,CAACpB,MAAM,CAACF,SAAS,CAAC,CAAD,CAAT,CAAa9lB,KAAd,CAAP,EAA6BknB,GAA7B,CAAF,CAAoCI,GAApC,EAAX;AACA,MAAIhB,IAAI,GAAGc,EAAE,CAACpB,MAAM,CAACD,SAAS,CAAC,CAAD,CAAT,CAAa/lB,KAAd,CAAP,EAA6BknB,GAA7B,CAAF,CAAoCI,GAApC,EAAX;AACA,MAAI3uB,CAAJ;;AAEA,MAAGuuB,GAAG,KAAK,OAAX,EAAoB;AAChB;AACA,QAAGb,IAAI,IAAIA,IAAI,CAAC9hB,IAAL,KAAc4iB,SAAS,CAACpwB,CAAnC,EAAsC;AAClCsvB,MAAAA,IAAI,CAAC9hB,IAAL,GAAY4iB,SAAS,CAAChc,CAAtB;AACH;;AACD,QAAGmb,IAAI,IAAIA,IAAI,CAAC/hB,IAAL,KAAc4iB,SAAS,CAAChc,CAAnC,EAAsC;AAClCmb,MAAAA,IAAI,CAAC/hB,IAAL,GAAY4iB,SAAS,CAACpwB,CAAtB;AACH;AACJ;;AAED,OAAI4B,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAGmtB,SAAS,CAACvvB,MAAzB,EAAiCoC,CAAC,EAAlC,EAAsC;AAClCyuB,IAAAA,EAAE,CAACpB,MAAD,EAASF,SAAS,CAACntB,CAAD,CAAT,CAAaqH,KAAb,GAAqB,GAArB,GAA2BknB,GAApC,CAAF,CAA2CK,GAA3C,CAA+CjB,IAA/C;AACH;;AACD,OAAI3tB,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAGotB,SAAS,CAACxvB,MAAzB,EAAiCoC,CAAC,EAAlC,EAAsC;AAClCyuB,IAAAA,EAAE,CAACpB,MAAD,EAASD,SAAS,CAACptB,CAAD,CAAT,CAAaqH,KAAb,GAAqB,GAArB,GAA2BknB,GAApC,CAAF,CAA2CK,GAA3C,CAA+ClB,IAA/C;AACH;AACJ;;AAED,SAASziB,SAAT,CAAmB/L,EAAnB,EAAuB;AACnB,SAAOA,EAAE,CAACiI,GAAH,KAAW,aAAlB;AACH;;AAED,SAASkD,gBAAT,CAA0BnJ,CAA1B,EAA6BhC,EAA7B,EAAiC;AAC7B,MAAIkkB,GAAG,GAAGlkB,EAAE,CAAC2vB,YAAH,CAAgBjxB,MAA1B;;AACA,OAAI,IAAI6jB,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG2B,GAAnB,EAAwB3B,CAAC,EAAzB,EAA6B;AACzB,QAAIqN,GAAG,GAAG5vB,EAAE,CAAC2vB,YAAH,CAAgBpN,CAAhB,CAAV;;AACA,QAAGvgB,CAAC,IAAI4tB,GAAG,CAACzrB,GAAT,IAAgBnC,CAAC,GAAG4tB,GAAG,CAACvrB,GAA3B,EAAgC;AAC5B,aAAOurB,GAAG,CAACvrB,GAAX;AACH;AACJ;;AACD,SAAOrC,CAAP;AACH","sourcesContent":["/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar d3 = require('d3');\nvar isNumeric = require('fast-isnumeric');\nvar Plots = require('../../plots/plots');\n\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\nvar strTranslate = Lib.strTranslate;\nvar svgTextUtils = require('../../lib/svg_text_utils');\nvar Titles = require('../../components/titles');\nvar Color = require('../../components/color');\nvar Drawing = require('../../components/drawing');\n\nvar axAttrs = require('./layout_attributes');\nvar cleanTicks = require('./clean_ticks');\n\nvar constants = require('../../constants/numerical');\nvar ONEMAXYEAR = constants.ONEMAXYEAR;\nvar ONEAVGYEAR = constants.ONEAVGYEAR;\nvar ONEMINYEAR = constants.ONEMINYEAR;\nvar ONEMAXQUARTER = constants.ONEMAXQUARTER;\nvar ONEAVGQUARTER = constants.ONEAVGQUARTER;\nvar ONEMINQUARTER = constants.ONEMINQUARTER;\nvar ONEMAXMONTH = constants.ONEMAXMONTH;\nvar ONEAVGMONTH = constants.ONEAVGMONTH;\nvar ONEMINMONTH = constants.ONEMINMONTH;\nvar ONEWEEK = constants.ONEWEEK;\nvar ONEDAY = constants.ONEDAY;\nvar HALFDAY = ONEDAY / 2;\nvar ONEHOUR = constants.ONEHOUR;\nvar ONEMIN = constants.ONEMIN;\nvar ONESEC = constants.ONESEC;\nvar MINUS_SIGN = constants.MINUS_SIGN;\nvar BADNUM = constants.BADNUM;\n\nvar alignmentConstants = require('../../constants/alignment');\nvar MID_SHIFT = alignmentConstants.MID_SHIFT;\nvar CAP_SHIFT = alignmentConstants.CAP_SHIFT;\nvar LINE_SPACING = alignmentConstants.LINE_SPACING;\nvar OPPOSITE_SIDE = alignmentConstants.OPPOSITE_SIDE;\n\nvar TEXTPAD = 3;\n\nvar axes = module.exports = {};\n\naxes.setConvert = require('./set_convert');\nvar autoType = require('./axis_autotype');\n\nvar axisIds = require('./axis_ids');\nvar idSort = axisIds.idSort;\nvar isLinked = axisIds.isLinked;\n\n// tight coupling to chart studio\naxes.id2name = axisIds.id2name;\naxes.name2id = axisIds.name2id;\naxes.cleanId = axisIds.cleanId;\naxes.list = axisIds.list;\naxes.listIds = axisIds.listIds;\naxes.getFromId = axisIds.getFromId;\naxes.getFromTrace = axisIds.getFromTrace;\n\nvar autorange = require('./autorange');\naxes.getAutoRange = autorange.getAutoRange;\naxes.findExtremes = autorange.findExtremes;\n\nvar epsilon = 0.0001;\nfunction expandRange(range) {\n    var delta = (range[1] - range[0]) * epsilon;\n    return [\n        range[0] - delta,\n        range[1] + delta\n    ];\n}\n\n/*\n * find the list of possible axes to reference with an xref or yref attribute\n * and coerce it to that list\n *\n * attr: the attribute we're generating a reference for. Should end in 'x' or 'y'\n *     but can be prefixed, like 'ax' for annotation's arrow x\n * dflt: the default to coerce to, or blank to use the first axis (falling back on\n *     extraOption if there is no axis)\n * extraOption: aside from existing axes with this letter, what non-axis value is allowed?\n *     Only required if it's different from `dflt`\n */\naxes.coerceRef = function(containerIn, containerOut, gd, attr, dflt, extraOption) {\n    var axLetter = attr.charAt(attr.length - 1);\n    var axlist = gd._fullLayout._subplots[axLetter + 'axis'];\n    var refAttr = attr + 'ref';\n    var attrDef = {};\n\n    if(!dflt) dflt = axlist[0] || (typeof extraOption === 'string' ? extraOption : extraOption[0]);\n    if(!extraOption) extraOption = dflt;\n    axlist = axlist.concat(axlist.map(function(x) { return x + ' domain'; }));\n\n    // data-ref annotations are not supported in gl2d yet\n\n    attrDef[refAttr] = {\n        valType: 'enumerated',\n        values: axlist.concat(extraOption ?\n            (typeof extraOption === 'string' ? [extraOption] : extraOption) :\n            []),\n        dflt: dflt\n    };\n\n    // xref, yref\n    return Lib.coerce(containerIn, containerOut, attrDef, refAttr);\n};\n\n/*\n * Get the type of an axis reference. This can be 'range', 'domain', or 'paper'.\n * This assumes ar is a valid axis reference and returns 'range' if it doesn't\n * match the patterns for 'paper' or 'domain'.\n *\n * ar: the axis reference string\n *\n */\naxes.getRefType = function(ar) {\n    if(ar === undefined) { return ar; }\n    if(ar === 'paper') { return 'paper'; }\n    if(ar === 'pixel') { return 'pixel'; }\n    if(/( domain)$/.test(ar)) { return 'domain'; } else { return 'range'; }\n};\n\n/*\n * coerce position attributes (range-type) that can be either on axes or absolute\n * (paper or pixel) referenced. The biggest complication here is that we don't know\n * before looking at the axis whether the value must be a number or not (it may be\n * a date string), so we can't use the regular valType='number' machinery\n *\n * axRef (string): the axis this position is referenced to, or:\n *     paper: fraction of the plot area\n *     pixel: pixels relative to some starting position\n * attr (string): the attribute in containerOut we are coercing\n * dflt (number): the default position, as a fraction or pixels. If the attribute\n *     is to be axis-referenced, this will be converted to an axis data value\n *\n * Also cleans the values, since the attribute definition itself has to say\n * valType: 'any' to handle date axes. This allows us to accept:\n * - for category axes: category names, and convert them here into serial numbers.\n *   Note that this will NOT work for axis range endpoints, because we don't know\n *   the category list yet (it's set by ax.makeCalcdata during calc)\n *   but it works for component (note, shape, images) positions.\n * - for date axes: JS Dates or milliseconds, and convert to date strings\n * - for other types: coerce them to numbers\n */\naxes.coercePosition = function(containerOut, gd, coerce, axRef, attr, dflt) {\n    var cleanPos, pos;\n    var axRefType = axes.getRefType(axRef);\n    if(axRefType !== 'range') {\n        cleanPos = Lib.ensureNumber;\n        pos = coerce(attr, dflt);\n    } else {\n        var ax = axes.getFromId(gd, axRef);\n        dflt = ax.fraction2r(dflt);\n        pos = coerce(attr, dflt);\n        cleanPos = ax.cleanPos;\n    }\n    containerOut[attr] = cleanPos(pos);\n};\n\naxes.cleanPosition = function(pos, gd, axRef) {\n    var cleanPos = (axRef === 'paper' || axRef === 'pixel') ?\n        Lib.ensureNumber :\n        axes.getFromId(gd, axRef).cleanPos;\n\n    return cleanPos(pos);\n};\n\naxes.redrawComponents = function(gd, axIds) {\n    axIds = axIds ? axIds : axes.listIds(gd);\n\n    var fullLayout = gd._fullLayout;\n\n    function _redrawOneComp(moduleName, methodName, stashName, shortCircuit) {\n        var method = Registry.getComponentMethod(moduleName, methodName);\n        var stash = {};\n\n        for(var i = 0; i < axIds.length; i++) {\n            var ax = fullLayout[axes.id2name(axIds[i])];\n            var indices = ax[stashName];\n\n            for(var j = 0; j < indices.length; j++) {\n                var ind = indices[j];\n\n                if(!stash[ind]) {\n                    method(gd, ind);\n                    stash[ind] = 1;\n                    // once is enough for images (which doesn't use the `i` arg anyway)\n                    if(shortCircuit) return;\n                }\n            }\n        }\n    }\n\n    // annotations and shapes 'draw' method is slow,\n    // use the finer-grained 'drawOne' method instead\n    _redrawOneComp('annotations', 'drawOne', '_annIndices');\n    _redrawOneComp('shapes', 'drawOne', '_shapeIndices');\n    _redrawOneComp('images', 'draw', '_imgIndices', true);\n};\n\nvar getDataConversions = axes.getDataConversions = function(gd, trace, target, targetArray) {\n    var ax;\n\n    // If target points to an axis, use the type we already have for that\n    // axis to find the data type. Otherwise use the values to autotype.\n    var d2cTarget = (target === 'x' || target === 'y' || target === 'z') ?\n        target :\n        targetArray;\n\n    // In the case of an array target, make a mock data array\n    // and call supplyDefaults to the data type and\n    // setup the data-to-calc method.\n    if(Array.isArray(d2cTarget)) {\n        ax = {\n            type: autoType(targetArray, undefined, {\n                autotypenumbers: gd._fullLayout.autotypenumbers\n            }),\n            _categories: []\n        };\n        axes.setConvert(ax);\n\n        // build up ax._categories (usually done during ax.makeCalcdata()\n        if(ax.type === 'category') {\n            for(var i = 0; i < targetArray.length; i++) {\n                ax.d2c(targetArray[i]);\n            }\n        }\n        // TODO what to do for transforms?\n    } else {\n        ax = axes.getFromTrace(gd, trace, d2cTarget);\n    }\n\n    // if 'target' has corresponding axis\n    // -> use setConvert method\n    if(ax) return {d2c: ax.d2c, c2d: ax.c2d};\n\n    // special case for 'ids'\n    // -> cast to String\n    if(d2cTarget === 'ids') return {d2c: toString, c2d: toString};\n\n    // otherwise (e.g. numeric-array of 'marker.color' or 'marker.size')\n    // -> cast to Number\n\n    return {d2c: toNum, c2d: toNum};\n};\n\nfunction toNum(v) { return +v; }\nfunction toString(v) { return String(v); }\n\naxes.getDataToCoordFunc = function(gd, trace, target, targetArray) {\n    return getDataConversions(gd, trace, target, targetArray).d2c;\n};\n\n// get counteraxis letter for this axis (name or id)\n// this can also be used as the id for default counter axis\naxes.counterLetter = function(id) {\n    var axLetter = id.charAt(0);\n    if(axLetter === 'x') return 'y';\n    if(axLetter === 'y') return 'x';\n};\n\n// incorporate a new minimum difference and first tick into\n// forced\n// note that _forceTick0 is linearized, so needs to be turned into\n// a range value for setting tick0\naxes.minDtick = function(ax, newDiff, newFirst, allow) {\n    // doesn't make sense to do forced min dTick on log or category axes,\n    // and the plot itself may decide to cancel (ie non-grouped bars)\n    if(['log', 'category', 'multicategory'].indexOf(ax.type) !== -1 || !allow) {\n        ax._minDtick = 0;\n    } else if(ax._minDtick === undefined) {\n        // undefined means there's nothing there yet\n\n        ax._minDtick = newDiff;\n        ax._forceTick0 = newFirst;\n    } else if(ax._minDtick) {\n        if((ax._minDtick / newDiff + 1e-6) % 1 < 2e-6 &&\n            // existing minDtick is an integer multiple of newDiff\n            // (within rounding err)\n            // and forceTick0 can be shifted to newFirst\n\n                (((newFirst - ax._forceTick0) / newDiff % 1) +\n                    1.000001) % 1 < 2e-6) {\n            ax._minDtick = newDiff;\n            ax._forceTick0 = newFirst;\n        } else if((newDiff / ax._minDtick + 1e-6) % 1 > 2e-6 ||\n            // if the converse is true (newDiff is a multiple of minDtick and\n            // newFirst can be shifted to forceTick0) then do nothing - same\n            // forcing stands. Otherwise, cancel forced minimum\n\n                (((newFirst - ax._forceTick0) / ax._minDtick % 1) +\n                    1.000001) % 1 > 2e-6) {\n            ax._minDtick = 0;\n        }\n    }\n};\n\n// save a copy of the initial axis ranges in fullLayout\n// use them in mode bar and dblclick events\naxes.saveRangeInitial = function(gd, overwrite) {\n    var axList = axes.list(gd, '', true);\n    var hasOneAxisChanged = false;\n\n    for(var i = 0; i < axList.length; i++) {\n        var ax = axList[i];\n        var isNew = (ax._rangeInitial === undefined);\n        var hasChanged = isNew || !(\n            ax.range[0] === ax._rangeInitial[0] &&\n            ax.range[1] === ax._rangeInitial[1]\n        );\n\n        if((isNew && ax.autorange === false) || (overwrite && hasChanged)) {\n            ax._rangeInitial = ax.range.slice();\n            hasOneAxisChanged = true;\n        }\n    }\n\n    return hasOneAxisChanged;\n};\n\n// save a copy of the initial spike visibility\naxes.saveShowSpikeInitial = function(gd, overwrite) {\n    var axList = axes.list(gd, '', true);\n    var hasOneAxisChanged = false;\n    var allSpikesEnabled = 'on';\n\n    for(var i = 0; i < axList.length; i++) {\n        var ax = axList[i];\n        var isNew = (ax._showSpikeInitial === undefined);\n        var hasChanged = isNew || !(ax.showspikes === ax._showspikes);\n\n        if(isNew || (overwrite && hasChanged)) {\n            ax._showSpikeInitial = ax.showspikes;\n            hasOneAxisChanged = true;\n        }\n\n        if(allSpikesEnabled === 'on' && !ax.showspikes) {\n            allSpikesEnabled = 'off';\n        }\n    }\n    gd._fullLayout._cartesianSpikesEnabled = allSpikesEnabled;\n    return hasOneAxisChanged;\n};\n\naxes.autoBin = function(data, ax, nbins, is2d, calendar, size) {\n    var dataMin = Lib.aggNums(Math.min, null, data);\n    var dataMax = Lib.aggNums(Math.max, null, data);\n\n    if(ax.type === 'category' || ax.type === 'multicategory') {\n        return {\n            start: dataMin - 0.5,\n            end: dataMax + 0.5,\n            size: Math.max(1, Math.round(size) || 1),\n            _dataSpan: dataMax - dataMin,\n        };\n    }\n\n    if(!calendar) calendar = ax.calendar;\n\n    // piggyback off tick code to make \"nice\" bin sizes and edges\n    var dummyAx;\n    if(ax.type === 'log') {\n        dummyAx = {\n            type: 'linear',\n            range: [dataMin, dataMax]\n        };\n    } else {\n        dummyAx = {\n            type: ax.type,\n            range: Lib.simpleMap([dataMin, dataMax], ax.c2r, 0, calendar),\n            calendar: calendar\n        };\n    }\n    axes.setConvert(dummyAx);\n\n    size = size && cleanTicks.dtick(size, dummyAx.type);\n\n    if(size) {\n        dummyAx.dtick = size;\n        dummyAx.tick0 = cleanTicks.tick0(undefined, dummyAx.type, calendar);\n    } else {\n        var size0;\n        if(nbins) size0 = ((dataMax - dataMin) / nbins);\n        else {\n            // totally auto: scale off std deviation so the highest bin is\n            // somewhat taller than the total number of bins, but don't let\n            // the size get smaller than the 'nice' rounded down minimum\n            // difference between values\n            var distinctData = Lib.distinctVals(data);\n            var msexp = Math.pow(10, Math.floor(\n                Math.log(distinctData.minDiff) / Math.LN10));\n            var minSize = msexp * Lib.roundUp(\n                distinctData.minDiff / msexp, [0.9, 1.9, 4.9, 9.9], true);\n            size0 = Math.max(minSize, 2 * Lib.stdev(data) /\n                Math.pow(data.length, is2d ? 0.25 : 0.4));\n\n            // fallback if ax.d2c output BADNUMs\n            // e.g. when user try to plot categorical bins\n            // on a layout.xaxis.type: 'linear'\n            if(!isNumeric(size0)) size0 = 1;\n        }\n\n        axes.autoTicks(dummyAx, size0);\n    }\n\n    var finalSize = dummyAx.dtick;\n    var binStart = axes.tickIncrement(\n            axes.tickFirst(dummyAx), finalSize, 'reverse', calendar);\n    var binEnd, bincount;\n\n    // check for too many data points right at the edges of bins\n    // (>50% within 1% of bin edges) or all data points integral\n    // and offset the bins accordingly\n    if(typeof finalSize === 'number') {\n        binStart = autoShiftNumericBins(binStart, data, dummyAx, dataMin, dataMax);\n\n        bincount = 1 + Math.floor((dataMax - binStart) / finalSize);\n        binEnd = binStart + bincount * finalSize;\n    } else {\n        // month ticks - should be the only nonlinear kind we have at this point.\n        // dtick (as supplied by axes.autoTick) only has nonlinear values on\n        // date and log axes, but even if you display a histogram on a log axis\n        // we bin it on a linear axis (which one could argue against, but that's\n        // a separate issue)\n        if(dummyAx.dtick.charAt(0) === 'M') {\n            binStart = autoShiftMonthBins(binStart, data, finalSize, dataMin, calendar);\n        }\n\n        // calculate the endpoint for nonlinear ticks - you have to\n        // just increment until you're done\n        binEnd = binStart;\n        bincount = 0;\n        while(binEnd <= dataMax) {\n            binEnd = axes.tickIncrement(binEnd, finalSize, false, calendar);\n            bincount++;\n        }\n    }\n\n    return {\n        start: ax.c2r(binStart, 0, calendar),\n        end: ax.c2r(binEnd, 0, calendar),\n        size: finalSize,\n        _dataSpan: dataMax - dataMin\n    };\n};\n\n\nfunction autoShiftNumericBins(binStart, data, ax, dataMin, dataMax) {\n    var edgecount = 0;\n    var midcount = 0;\n    var intcount = 0;\n    var blankCount = 0;\n\n    function nearEdge(v) {\n        // is a value within 1% of a bin edge?\n        return (1 + (v - binStart) * 100 / ax.dtick) % 100 < 2;\n    }\n\n    for(var i = 0; i < data.length; i++) {\n        if(data[i] % 1 === 0) intcount++;\n        else if(!isNumeric(data[i])) blankCount++;\n\n        if(nearEdge(data[i])) edgecount++;\n        if(nearEdge(data[i] + ax.dtick / 2)) midcount++;\n    }\n    var dataCount = data.length - blankCount;\n\n    if(intcount === dataCount && ax.type !== 'date') {\n        if(ax.dtick < 1) {\n            // all integers: if bin size is <1, it's because\n            // that was specifically requested (large nbins)\n            // so respect that... but center the bins containing\n            // integers on those integers\n\n            binStart = dataMin - 0.5 * ax.dtick;\n        } else {\n            // otherwise start half an integer down regardless of\n            // the bin size, just enough to clear up endpoint\n            // ambiguity about which integers are in which bins.\n\n            binStart -= 0.5;\n            if(binStart + ax.dtick < dataMin) binStart += ax.dtick;\n        }\n    } else if(midcount < dataCount * 0.1) {\n        if(edgecount > dataCount * 0.3 ||\n                nearEdge(dataMin) || nearEdge(dataMax)) {\n            // lots of points at the edge, not many in the middle\n            // shift half a bin\n            var binshift = ax.dtick / 2;\n            binStart += (binStart + binshift < dataMin) ? binshift : -binshift;\n        }\n    }\n    return binStart;\n}\n\n\nfunction autoShiftMonthBins(binStart, data, dtick, dataMin, calendar) {\n    var stats = Lib.findExactDates(data, calendar);\n    // number of data points that needs to be an exact value\n    // to shift that increment to (near) the bin center\n    var threshold = 0.8;\n\n    if(stats.exactDays > threshold) {\n        var numMonths = Number(dtick.substr(1));\n\n        if((stats.exactYears > threshold) && (numMonths % 12 === 0)) {\n            // The exact middle of a non-leap-year is 1.5 days into July\n            // so if we start the bins here, all but leap years will\n            // get hover-labeled as exact years.\n            binStart = axes.tickIncrement(binStart, 'M6', 'reverse') + ONEDAY * 1.5;\n        } else if(stats.exactMonths > threshold) {\n            // Months are not as clean, but if we shift half the *longest*\n            // month (31/2 days) then 31-day months will get labeled exactly\n            // and shorter months will get labeled with the correct month\n            // but shifted 12-36 hours into it.\n            binStart = axes.tickIncrement(binStart, 'M1', 'reverse') + ONEDAY * 15.5;\n        } else {\n            // Shifting half a day is exact, but since these are month bins it\n            // will always give a somewhat odd-looking label, until we do something\n            // smarter like showing the bin boundaries (or the bounds of the actual\n            // data in each bin)\n            binStart -= HALFDAY;\n        }\n        var nextBinStart = axes.tickIncrement(binStart, dtick);\n\n        if(nextBinStart <= dataMin) return nextBinStart;\n    }\n    return binStart;\n}\n\n// ----------------------------------------------------\n// Ticks and grids\n// ----------------------------------------------------\n\n// ensure we have tick0, dtick, and tick rounding calculated\naxes.prepTicks = function(ax, opts) {\n    var rng = Lib.simpleMap(ax.range, ax.r2l, undefined, undefined, opts);\n\n    ax._dtickInit = ax.dtick;\n    ax._tick0Init = ax.tick0;\n\n    // calculate max number of (auto) ticks to display based on plot size\n    if(ax.tickmode === 'auto' || !ax.dtick) {\n        var nt = ax.nticks;\n        var minPx;\n\n        if(!nt) {\n            if(ax.type === 'category' || ax.type === 'multicategory') {\n                minPx = ax.tickfont ? (ax.tickfont.size || 12) * 1.2 : 15;\n                nt = ax._length / minPx;\n            } else {\n                minPx = ax._id.charAt(0) === 'y' ? 40 : 80;\n                nt = Lib.constrain(ax._length / minPx, 4, 9) + 1;\n            }\n\n            // radial axes span half their domain,\n            // multiply nticks value by two to get correct number of auto ticks.\n            if(ax._name === 'radialaxis') nt *= 2;\n        }\n\n        // add a couple of extra digits for filling in ticks when we\n        // have explicit tickvals without tick text\n        if(ax.tickmode === 'array') nt *= 100;\n\n\n        ax._roughDTick = Math.abs(rng[1] - rng[0]) / nt;\n        axes.autoTicks(ax, ax._roughDTick);\n\n        // check for a forced minimum dtick\n        if(ax._minDtick > 0 && ax.dtick < ax._minDtick * 2) {\n            ax.dtick = ax._minDtick;\n            ax.tick0 = ax.l2r(ax._forceTick0);\n        }\n    }\n\n    if(ax.ticklabelmode === 'period') {\n        adjustPeriodDelta(ax);\n    }\n\n    // check for missing tick0\n    if(!ax.tick0) {\n        ax.tick0 = (ax.type === 'date') ? '2000-01-01' : 0;\n    }\n\n    // ensure we don't try to make ticks below our minimum precision\n    // see https://github.com/plotly/plotly.js/issues/2892\n    if(ax.type === 'date' && ax.dtick < 0.1) ax.dtick = 0.1;\n\n    // now figure out rounding of tick values\n    autoTickRound(ax);\n};\n\nfunction nMonths(dtick) {\n    return +(dtick.substring(1));\n}\n\nfunction adjustPeriodDelta(ax) { // adjusts ax.dtick and sets ax._definedDelta\n    var definedDelta;\n\n    function mDate() {\n        return !(\n            isNumeric(ax.dtick) ||\n            ax.dtick.charAt(0) !== 'M'\n        );\n    }\n    var isMDate = mDate();\n    var tickformat = axes.getTickFormat(ax);\n    if(tickformat) {\n        var noDtick = ax._dtickInit !== ax.dtick;\n        if(\n            !(/%[fLQsSMX]/.test(tickformat))\n            // %f: microseconds as a decimal number [000000, 999999]\n            // %L: milliseconds as a decimal number [000, 999]\n            // %Q: milliseconds since UNIX epoch\n            // %s: seconds since UNIX epoch\n            // %S: second as a decimal number [00,61]\n            // %M: minute as a decimal number [00,59]\n            // %X: the locale’s time, such as %-I:%M:%S %p\n        ) {\n            if(\n                /%[HI]/.test(tickformat)\n                // %H: hour (24-hour clock) as a decimal number [00,23]\n                // %I: hour (12-hour clock) as a decimal number [01,12]\n            ) {\n                definedDelta = ONEHOUR;\n                if(noDtick && !isMDate && ax.dtick < ONEHOUR) ax.dtick = ONEHOUR;\n            } else if(\n                /%p/.test(tickformat) // %p: either AM or PM\n            ) {\n                definedDelta = HALFDAY;\n                if(noDtick && !isMDate && ax.dtick < HALFDAY) ax.dtick = HALFDAY;\n            } else if(\n                /%[Aadejuwx]/.test(tickformat)\n                // %A: full weekday name\n                // %a: abbreviated weekday name\n                // %d: zero-padded day of the month as a decimal number [01,31]\n                // %e: space-padded day of the month as a decimal number [ 1,31]\n                // %j: day of the year as a decimal number [001,366]\n                // %u: Monday-based (ISO 8601) weekday as a decimal number [1,7]\n                // %w: Sunday-based weekday as a decimal number [0,6]\n                // %x: the locale’s date, such as %-m/%-d/%Y\n            ) {\n                definedDelta = ONEDAY;\n                if(noDtick && !isMDate && ax.dtick < ONEDAY) ax.dtick = ONEDAY;\n            } else if(\n                /%[UVW]/.test(tickformat)\n                // %U: Sunday-based week of the year as a decimal number [00,53]\n                // %V: ISO 8601 week of the year as a decimal number [01, 53]\n                // %W: Monday-based week of the year as a decimal number [00,53]\n            ) {\n                definedDelta = ONEWEEK;\n                if(noDtick && !isMDate && ax.dtick < ONEWEEK) ax.dtick = ONEWEEK;\n            } else if(\n                /%[Bbm]/.test(tickformat)\n                // %B: full month name\n                // %b: abbreviated month name\n                // %m: month as a decimal number [01,12]\n            ) {\n                definedDelta = ONEAVGMONTH;\n                if(noDtick && (\n                    isMDate ? nMonths(ax.dtick) < 1 : ax.dtick < ONEMINMONTH)\n                ) ax.dtick = 'M1';\n            } else if(\n                /%[q]/.test(tickformat)\n                // %q: quarter of the year as a decimal number [1,4]\n            ) {\n                definedDelta = ONEAVGQUARTER;\n                if(noDtick && (\n                    isMDate ? nMonths(ax.dtick) < 3 : ax.dtick < ONEMINQUARTER)\n                ) ax.dtick = 'M3';\n            } else if(\n                /%[Yy]/.test(tickformat)\n                // %Y: year with century as a decimal number, such as 1999\n                // %y: year without century as a decimal number [00,99]\n            ) {\n                definedDelta = ONEAVGYEAR;\n                if(noDtick && (\n                    isMDate ? nMonths(ax.dtick) < 12 : ax.dtick < ONEMINYEAR)\n                ) ax.dtick = 'M12';\n            }\n        }\n    }\n\n    isMDate = mDate();\n    if(isMDate && ax.tick0 === ax._dowTick0) {\n        // discard Sunday/Monday tweaks\n        ax.tick0 = ax._rawTick0;\n    }\n\n    ax._definedDelta = definedDelta;\n}\n\nfunction positionPeriodTicks(tickVals, ax, definedDelta) {\n    for(var i = 0; i < tickVals.length; i++) {\n        var v = tickVals[i].value;\n\n        var a = i;\n        var b = i + 1;\n        if(i < tickVals.length - 1) {\n            a = i;\n            b = i + 1;\n        } else if(i > 0) {\n            a = i - 1;\n            b = i;\n        } else {\n            a = i;\n            b = i;\n        }\n\n        var A = tickVals[a].value;\n        var B = tickVals[b].value;\n        var actualDelta = Math.abs(B - A);\n        var delta = definedDelta || actualDelta;\n        var periodLength = 0;\n\n        if(delta >= ONEMINYEAR) {\n            if(actualDelta >= ONEMINYEAR && actualDelta <= ONEMAXYEAR) {\n                periodLength = actualDelta;\n            } else {\n                periodLength = ONEAVGYEAR;\n            }\n        } else if(definedDelta === ONEAVGQUARTER && delta >= ONEMINQUARTER) {\n            if(actualDelta >= ONEMINQUARTER && actualDelta <= ONEMAXQUARTER) {\n                periodLength = actualDelta;\n            } else {\n                periodLength = ONEAVGQUARTER;\n            }\n        } else if(delta >= ONEMINMONTH) {\n            if(actualDelta >= ONEMINMONTH && actualDelta <= ONEMAXMONTH) {\n                periodLength = actualDelta;\n            } else {\n                periodLength = ONEAVGMONTH;\n            }\n        } else if(definedDelta === ONEWEEK && delta >= ONEWEEK) {\n            periodLength = ONEWEEK;\n        } else if(delta >= ONEDAY) {\n            periodLength = ONEDAY;\n        } else if(definedDelta === HALFDAY && delta >= HALFDAY) {\n            periodLength = HALFDAY;\n        } else if(definedDelta === ONEHOUR && delta >= ONEHOUR) {\n            periodLength = ONEHOUR;\n        }\n\n        var inBetween;\n        if(periodLength >= actualDelta) {\n            // ensure new label positions remain between ticks\n            periodLength = actualDelta;\n            inBetween = true;\n        }\n\n        var endPeriod = v + periodLength;\n        if(ax.rangebreaks && periodLength > 0) {\n            var nAll = 84; // highly divisible 7 * 12\n            var n = 0;\n            for(var c = 0; c < nAll; c++) {\n                var r = (c + 0.5) / nAll;\n                if(ax.maskBreaks(v * (1 - r) + r * endPeriod) !== BADNUM) n++;\n            }\n            periodLength *= n / nAll;\n\n            if(!periodLength) {\n                tickVals[i].drop = true;\n            }\n\n            if(inBetween && actualDelta > ONEWEEK) periodLength = actualDelta; // center monthly & longer periods\n        }\n\n        if(\n            periodLength > 0 || // not instant\n            i === 0 // taking care first tick added\n        ) {\n            tickVals[i].periodX = v + periodLength / 2;\n        }\n    }\n}\n\n// calculate the ticks: text, values, positioning\n// if ticks are set to automatic, determine the right values (tick0,dtick)\n// in any case, set tickround to # of digits to round tick labels to,\n// or codes to this effect for log and date scales\naxes.calcTicks = function calcTicks(ax, opts) {\n    axes.prepTicks(ax, opts);\n    var rng = Lib.simpleMap(ax.range, ax.r2l, undefined, undefined, opts);\n\n    // now that we've figured out the auto values for formatting\n    // in case we're missing some ticktext, we can break out for array ticks\n    if(ax.tickmode === 'array') return arrayTicks(ax);\n\n    // add a tiny bit so we get ticks which may have rounded out\n    var exRng = expandRange(rng);\n    var startTick = exRng[0];\n    var endTick = exRng[1];\n    // check for reversed axis\n    var axrev = (rng[1] < rng[0]);\n    var minRange = Math.min(rng[0], rng[1]);\n    var maxRange = Math.max(rng[0], rng[1]);\n\n    var isDLog = (ax.type === 'log') && !(isNumeric(ax.dtick) || ax.dtick.charAt(0) === 'L');\n    var isPeriod = ax.ticklabelmode === 'period';\n\n    // find the first tick\n    ax._tmin = axes.tickFirst(ax, opts);\n\n    // No visible ticks? Quit.\n    // I've only seen this on category axes with all categories off the edge.\n    if((ax._tmin < startTick) !== axrev) return [];\n\n    // return the full set of tick vals\n    if(ax.type === 'category' || ax.type === 'multicategory') {\n        endTick = (axrev) ? Math.max(-0.5, endTick) :\n            Math.min(ax._categories.length - 0.5, endTick);\n    }\n\n    var x = ax._tmin;\n\n    if(ax.rangebreaks && ax._tick0Init !== ax.tick0) {\n        // adjust tick0\n        x = moveOutsideBreak(x, ax);\n        if(!axrev) {\n            x = axes.tickIncrement(x, ax.dtick, !axrev, ax.calendar);\n        }\n    }\n\n    if(isPeriod) {\n        // add one item to label period before tick0\n        x = axes.tickIncrement(x, ax.dtick, !axrev, ax.calendar);\n    }\n\n    var maxTicks = Math.max(1000, ax._length || 0);\n    var tickVals = [];\n    var xPrevious = null;\n    for(;\n        (axrev) ? (x >= endTick) : (x <= endTick);\n        x = axes.tickIncrement(x, ax.dtick, axrev, ax.calendar)\n    ) {\n        if(ax.rangebreaks) {\n            if(!axrev) {\n                if(x < startTick) continue;\n                if(ax.maskBreaks(x) === BADNUM && moveOutsideBreak(x, ax) >= maxRange) break;\n            }\n        }\n\n        // prevent infinite loops - no more than one tick per pixel,\n        // and make sure each value is different from the previous\n        if(tickVals.length > maxTicks || x === xPrevious) break;\n        xPrevious = x;\n\n        var minor = false;\n        if(isDLog && (x !== (x | 0))) {\n            minor = true;\n        }\n\n        tickVals.push({\n            minor: minor,\n            value: x\n        });\n    }\n\n    if(isPeriod) positionPeriodTicks(tickVals, ax, ax._definedDelta);\n\n    var i;\n    if(ax.rangebreaks) {\n        var flip = ax._id.charAt(0) === 'y';\n\n        var fontSize = 1; // one pixel minimum\n        if(ax.tickmode === 'auto') {\n            fontSize = ax.tickfont ? ax.tickfont.size : 12;\n        }\n\n        var prevL = NaN;\n        for(i = tickVals.length - 1; i > -1; i--) {\n            if(tickVals[i].drop) {\n                tickVals.splice(i, 1);\n                continue;\n            }\n\n            tickVals[i].value = moveOutsideBreak(tickVals[i].value, ax);\n\n            // avoid overlaps\n            var l = ax.c2p(tickVals[i].value);\n            if(flip ?\n                (prevL > l - fontSize) :\n                (prevL < l + fontSize)\n            ) { // ensure one pixel minimum\n                tickVals.splice(axrev ? i + 1 : i, 1);\n            } else {\n                prevL = l;\n            }\n        }\n    }\n\n    // If same angle over a full circle, the last tick vals is a duplicate.\n    // TODO must do something similar for angular date axes.\n    if(isAngular(ax) && Math.abs(rng[1] - rng[0]) === 360) {\n        tickVals.pop();\n    }\n\n    // save the last tick as well as first, so we can\n    // show the exponent only on the last one\n    ax._tmax = (tickVals[tickVals.length - 1] || {}).value;\n\n    // for showing the rest of a date when the main tick label is only the\n    // latter part: ax._prevDateHead holds what we showed most recently.\n    // Start with it cleared and mark that we're in calcTicks (ie calculating a\n    // whole string of these so we should care what the previous date head was!)\n    ax._prevDateHead = '';\n    ax._inCalcTicks = true;\n\n    var ticksOut = [];\n    var t, p;\n    for(i = 0; i < tickVals.length; i++) {\n        var _minor = tickVals[i].minor;\n        var _value = tickVals[i].value;\n\n        t = axes.tickText(\n            ax,\n            _value,\n            false, // hover\n            _minor // noSuffixPrefix\n        );\n\n        p = tickVals[i].periodX;\n        if(p !== undefined) {\n            t.periodX = p;\n            if(p > maxRange || p < minRange) { // hide label if outside the range\n                if(p > maxRange) t.periodX = maxRange;\n                if(p < minRange) t.periodX = minRange;\n\n                t.text = ' '; // don't use an empty string here which can confuse automargin (issue 5132)\n                ax._prevDateHead = '';\n            }\n        }\n\n        ticksOut.push(t);\n    }\n\n    ax._inCalcTicks = false;\n\n    return ticksOut;\n};\n\nfunction arrayTicks(ax) {\n    var vals = ax.tickvals;\n    var text = ax.ticktext;\n    var ticksOut = new Array(vals.length);\n    var rng = Lib.simpleMap(ax.range, ax.r2l);\n    var exRng = expandRange(rng);\n    var tickMin = Math.min(exRng[0], exRng[1]);\n    var tickMax = Math.max(exRng[0], exRng[1]);\n    var j = 0;\n\n    // without a text array, just format the given values as any other ticks\n    // except with more precision to the numbers\n    if(!Array.isArray(text)) text = [];\n\n    // make sure showing ticks doesn't accidentally add new categories\n    // TODO multicategory, if we allow ticktext / tickvals\n    var tickVal2l = ax.type === 'category' ? ax.d2l_noadd : ax.d2l;\n\n    // array ticks on log axes always show the full number\n    // (if no explicit ticktext overrides it)\n    if(ax.type === 'log' && String(ax.dtick).charAt(0) !== 'L') {\n        ax.dtick = 'L' + Math.pow(10, Math.floor(Math.min(ax.range[0], ax.range[1])) - 1);\n    }\n\n    for(var i = 0; i < vals.length; i++) {\n        var vali = tickVal2l(vals[i]);\n        if(vali > tickMin && vali < tickMax) {\n            if(text[i] === undefined) ticksOut[j] = axes.tickText(ax, vali);\n            else ticksOut[j] = tickTextObj(ax, vali, String(text[i]));\n            j++;\n        }\n    }\n\n    if(j < vals.length) ticksOut.splice(j, vals.length - j);\n\n    if(ax.rangebreaks) {\n        // remove ticks falling inside rangebreaks\n        ticksOut = ticksOut.filter(function(d) {\n            return ax.maskBreaks(d.x) !== BADNUM;\n        });\n    }\n\n    return ticksOut;\n}\n\nvar roundBase10 = [2, 5, 10];\nvar roundBase24 = [1, 2, 3, 6, 12];\nvar roundBase60 = [1, 2, 5, 10, 15, 30];\n// 2&3 day ticks are weird, but need something btwn 1&7\nvar roundDays = [1, 2, 3, 7, 14];\n// approx. tick positions for log axes, showing all (1) and just 1, 2, 5 (2)\n// these don't have to be exact, just close enough to round to the right value\nvar roundLog1 = [-0.046, 0, 0.301, 0.477, 0.602, 0.699, 0.778, 0.845, 0.903, 0.954, 1];\nvar roundLog2 = [-0.301, 0, 0.301, 0.699, 1];\n// N.B. `thetaunit; 'radians' angular axes must be converted to degrees\nvar roundAngles = [15, 30, 45, 90, 180];\n\nfunction roundDTick(roughDTick, base, roundingSet) {\n    return base * Lib.roundUp(roughDTick / base, roundingSet);\n}\n\n// autoTicks: calculate best guess at pleasant ticks for this axis\n// inputs:\n//      ax - an axis object\n//      roughDTick - rough tick spacing (to be turned into a nice round number)\n// outputs (into ax):\n//   tick0: starting point for ticks (not necessarily on the graph)\n//      usually 0 for numeric (=10^0=1 for log) or jan 1, 2000 for dates\n//   dtick: the actual, nice round tick spacing, usually a little larger than roughDTick\n//      if the ticks are spaced linearly (linear scale, categories,\n//          log with only full powers, date ticks < month),\n//          this will just be a number\n//      months: M#\n//      years: M# where # is 12*number of years\n//      log with linear ticks: L# where # is the linear tick spacing\n//      log showing powers plus some intermediates:\n//          D1 shows all digits, D2 shows 2 and 5\naxes.autoTicks = function(ax, roughDTick) {\n    var base;\n\n    function getBase(v) {\n        return Math.pow(v, Math.floor(Math.log(roughDTick) / Math.LN10));\n    }\n\n    if(ax.type === 'date') {\n        ax.tick0 = Lib.dateTick0(ax.calendar, 0);\n\n        // the criteria below are all based on the rough spacing we calculate\n        // being > half of the final unit - so precalculate twice the rough val\n        var roughX2 = 2 * roughDTick;\n\n        if(roughX2 > ONEAVGYEAR) {\n            roughDTick /= ONEAVGYEAR;\n            base = getBase(10);\n            ax.dtick = 'M' + (12 * roundDTick(roughDTick, base, roundBase10));\n        } else if(roughX2 > ONEAVGMONTH) {\n            roughDTick /= ONEAVGMONTH;\n            ax.dtick = 'M' + roundDTick(roughDTick, 1, roundBase24);\n        } else if(roughX2 > ONEDAY) {\n            ax.dtick = roundDTick(roughDTick, ONEDAY, ax._hasDayOfWeekBreaks ? [1, 2, 7, 14] : roundDays);\n            // get week ticks on sunday\n            // this will also move the base tick off 2000-01-01 if dtick is\n            // 2 or 3 days... but that's a weird enough case that we'll ignore it.\n            var tickformat = axes.getTickFormat(ax);\n            var isPeriod = ax.ticklabelmode === 'period';\n            if(isPeriod) ax._rawTick0 = ax.tick0;\n\n            if(/%[uVW]/.test(tickformat)) {\n                ax.tick0 = Lib.dateTick0(ax.calendar, 2); // Monday\n            } else {\n                ax.tick0 = Lib.dateTick0(ax.calendar, 1); // Sunday\n            }\n\n            if(isPeriod) ax._dowTick0 = ax.tick0;\n        } else if(roughX2 > ONEHOUR) {\n            ax.dtick = roundDTick(roughDTick, ONEHOUR, roundBase24);\n        } else if(roughX2 > ONEMIN) {\n            ax.dtick = roundDTick(roughDTick, ONEMIN, roundBase60);\n        } else if(roughX2 > ONESEC) {\n            ax.dtick = roundDTick(roughDTick, ONESEC, roundBase60);\n        } else {\n            // milliseconds\n            base = getBase(10);\n            ax.dtick = roundDTick(roughDTick, base, roundBase10);\n        }\n    } else if(ax.type === 'log') {\n        ax.tick0 = 0;\n        var rng = Lib.simpleMap(ax.range, ax.r2l);\n\n        if(roughDTick > 0.7) {\n            // only show powers of 10\n            ax.dtick = Math.ceil(roughDTick);\n        } else if(Math.abs(rng[1] - rng[0]) < 1) {\n            // span is less than one power of 10\n            var nt = 1.5 * Math.abs((rng[1] - rng[0]) / roughDTick);\n\n            // ticks on a linear scale, labeled fully\n            roughDTick = Math.abs(Math.pow(10, rng[1]) -\n                Math.pow(10, rng[0])) / nt;\n            base = getBase(10);\n            ax.dtick = 'L' + roundDTick(roughDTick, base, roundBase10);\n        } else {\n            // include intermediates between powers of 10,\n            // labeled with small digits\n            // ax.dtick = \"D2\" (show 2 and 5) or \"D1\" (show all digits)\n            ax.dtick = (roughDTick > 0.3) ? 'D2' : 'D1';\n        }\n    } else if(ax.type === 'category' || ax.type === 'multicategory') {\n        ax.tick0 = 0;\n        ax.dtick = Math.ceil(Math.max(roughDTick, 1));\n    } else if(isAngular(ax)) {\n        ax.tick0 = 0;\n        base = 1;\n        ax.dtick = roundDTick(roughDTick, base, roundAngles);\n    } else {\n        // auto ticks always start at 0\n        ax.tick0 = 0;\n        base = getBase(10);\n        ax.dtick = roundDTick(roughDTick, base, roundBase10);\n    }\n\n    // prevent infinite loops\n    if(ax.dtick === 0) ax.dtick = 1;\n\n    // TODO: this is from log axis histograms with autorange off\n    if(!isNumeric(ax.dtick) && typeof ax.dtick !== 'string') {\n        var olddtick = ax.dtick;\n        ax.dtick = 1;\n        throw 'ax.dtick error: ' + String(olddtick);\n    }\n};\n\n// after dtick is already known, find tickround = precision\n// to display in tick labels\n//   for numeric ticks, integer # digits after . to round to\n//   for date ticks, the last date part to show (y,m,d,H,M,S)\n//      or an integer # digits past seconds\nfunction autoTickRound(ax) {\n    var dtick = ax.dtick;\n\n    ax._tickexponent = 0;\n    if(!isNumeric(dtick) && typeof dtick !== 'string') {\n        dtick = 1;\n    }\n\n    if(ax.type === 'category' || ax.type === 'multicategory') {\n        ax._tickround = null;\n    }\n    if(ax.type === 'date') {\n        // If tick0 is unusual, give tickround a bit more information\n        // not necessarily *all* the information in tick0 though, if it's really odd\n        // minimal string length for tick0: 'd' is 10, 'M' is 16, 'S' is 19\n        // take off a leading minus (year < 0) and i (intercalary month) so length is consistent\n        var tick0ms = ax.r2l(ax.tick0);\n        var tick0str = ax.l2r(tick0ms).replace(/(^-|i)/g, '');\n        var tick0len = tick0str.length;\n\n        if(String(dtick).charAt(0) === 'M') {\n            // any tick0 more specific than a year: alway show the full date\n            if(tick0len > 10 || tick0str.substr(5) !== '01-01') ax._tickround = 'd';\n            // show the month unless ticks are full multiples of a year\n            else ax._tickround = (+(dtick.substr(1)) % 12 === 0) ? 'y' : 'm';\n        } else if((dtick >= ONEDAY && tick0len <= 10) || (dtick >= ONEDAY * 15)) ax._tickround = 'd';\n        else if((dtick >= ONEMIN && tick0len <= 16) || (dtick >= ONEHOUR)) ax._tickround = 'M';\n        else if((dtick >= ONESEC && tick0len <= 19) || (dtick >= ONEMIN)) ax._tickround = 'S';\n        else {\n            // tickround is a number of digits of fractional seconds\n            // of any two adjacent ticks, at least one will have the maximum fractional digits\n            // of all possible ticks - so take the max. length of tick0 and the next one\n            var tick1len = ax.l2r(tick0ms + dtick).replace(/^-/, '').length;\n            ax._tickround = Math.max(tick0len, tick1len) - 20;\n\n            // We shouldn't get here... but in case there's a situation I'm\n            // not thinking of where tick0str and tick1str are identical or\n            // something, fall back on maximum precision\n            if(ax._tickround < 0) ax._tickround = 4;\n        }\n    } else if(isNumeric(dtick) || dtick.charAt(0) === 'L') {\n        // linear or log (except D1, D2)\n        var rng = ax.range.map(ax.r2d || Number);\n        if(!isNumeric(dtick)) dtick = Number(dtick.substr(1));\n        // 2 digits past largest digit of dtick\n        ax._tickround = 2 - Math.floor(Math.log(dtick) / Math.LN10 + 0.01);\n\n        var maxend = Math.max(Math.abs(rng[0]), Math.abs(rng[1]));\n        var rangeexp = Math.floor(Math.log(maxend) / Math.LN10 + 0.01);\n        var minexponent = ax.minexponent === undefined ? 3 : ax.minexponent;\n        if(Math.abs(rangeexp) > minexponent) {\n            if(isSIFormat(ax.exponentformat) && !beyondSI(rangeexp)) {\n                ax._tickexponent = 3 * Math.round((rangeexp - 1) / 3);\n            } else ax._tickexponent = rangeexp;\n        }\n    } else {\n        // D1 or D2 (log)\n        ax._tickround = null;\n    }\n}\n\n// months and years don't have constant millisecond values\n// (but a year is always 12 months so we only need months)\n// log-scale ticks are also not consistently spaced, except\n// for pure powers of 10\n// numeric ticks always have constant differences, other datetime ticks\n// can all be calculated as constant number of milliseconds\naxes.tickIncrement = function(x, dtick, axrev, calendar) {\n    var axSign = axrev ? -1 : 1;\n\n    // includes linear, all dates smaller than month, and pure 10^n in log\n    if(isNumeric(dtick)) return Lib.increment(x, axSign * dtick);\n\n    // everything else is a string, one character plus a number\n    var tType = dtick.charAt(0);\n    var dtSigned = axSign * Number(dtick.substr(1));\n\n    // Dates: months (or years - see Lib.incrementMonth)\n    if(tType === 'M') return Lib.incrementMonth(x, dtSigned, calendar);\n\n    // Log scales: Linear, Digits\n    if(tType === 'L') return Math.log(Math.pow(10, x) + dtSigned) / Math.LN10;\n\n    // log10 of 2,5,10, or all digits (logs just have to be\n    // close enough to round)\n    if(tType === 'D') {\n        var tickset = (dtick === 'D2') ? roundLog2 : roundLog1;\n        var x2 = x + axSign * 0.01;\n        var frac = Lib.roundUp(Lib.mod(x2, 1), tickset, axrev);\n\n        return Math.floor(x2) +\n            Math.log(d3.round(Math.pow(10, frac), 1)) / Math.LN10;\n    }\n\n    throw 'unrecognized dtick ' + String(dtick);\n};\n\n// calculate the first tick on an axis\naxes.tickFirst = function(ax, opts) {\n    var r2l = ax.r2l || Number;\n    var rng = Lib.simpleMap(ax.range, r2l, undefined, undefined, opts);\n    var axrev = rng[1] < rng[0];\n    var sRound = axrev ? Math.floor : Math.ceil;\n    // add a tiny extra bit to make sure we get ticks\n    // that may have been rounded out\n    var r0 = expandRange(rng)[0];\n    var dtick = ax.dtick;\n    var tick0 = r2l(ax.tick0);\n\n    if(isNumeric(dtick)) {\n        var tmin = sRound((r0 - tick0) / dtick) * dtick + tick0;\n\n        // make sure no ticks outside the category list\n        if(ax.type === 'category' || ax.type === 'multicategory') {\n            tmin = Lib.constrain(tmin, 0, ax._categories.length - 1);\n        }\n        return tmin;\n    }\n\n    var tType = dtick.charAt(0);\n    var dtNum = Number(dtick.substr(1));\n\n    // Dates: months (or years)\n    if(tType === 'M') {\n        var cnt = 0;\n        var t0 = tick0;\n        var t1, mult, newDTick;\n\n        // This algorithm should work for *any* nonlinear (but close to linear!)\n        // tick spacing. Limit to 10 iterations, for gregorian months it's normally <=3.\n        while(cnt < 10) {\n            t1 = axes.tickIncrement(t0, dtick, axrev, ax.calendar);\n            if((t1 - r0) * (t0 - r0) <= 0) {\n                // t1 and t0 are on opposite sides of r0! we've succeeded!\n                if(axrev) return Math.min(t0, t1);\n                return Math.max(t0, t1);\n            }\n            mult = (r0 - ((t0 + t1) / 2)) / (t1 - t0);\n            newDTick = tType + ((Math.abs(Math.round(mult)) || 1) * dtNum);\n            t0 = axes.tickIncrement(t0, newDTick, mult < 0 ? !axrev : axrev, ax.calendar);\n            cnt++;\n        }\n        Lib.error('tickFirst did not converge', ax);\n        return t0;\n    } else if(tType === 'L') {\n        // Log scales: Linear, Digits\n\n        return Math.log(sRound(\n            (Math.pow(10, r0) - tick0) / dtNum) * dtNum + tick0) / Math.LN10;\n    } else if(tType === 'D') {\n        var tickset = (dtick === 'D2') ? roundLog2 : roundLog1;\n        var frac = Lib.roundUp(Lib.mod(r0, 1), tickset, axrev);\n\n        return Math.floor(r0) +\n            Math.log(d3.round(Math.pow(10, frac), 1)) / Math.LN10;\n    } else throw 'unrecognized dtick ' + String(dtick);\n};\n\n// draw the text for one tick.\n// px,py are the location on gd.paper\n// prefix is there so the x axis ticks can be dropped a line\n// ax is the axis layout, x is the tick value\n// hover is a (truthy) flag for whether to show numbers with a bit\n// more precision for hovertext\naxes.tickText = function(ax, x, hover, noSuffixPrefix) {\n    var out = tickTextObj(ax, x);\n    var arrayMode = ax.tickmode === 'array';\n    var extraPrecision = hover || arrayMode;\n    var axType = ax.type;\n    // TODO multicategory, if we allow ticktext / tickvals\n    var tickVal2l = axType === 'category' ? ax.d2l_noadd : ax.d2l;\n    var i;\n\n    if(arrayMode && Array.isArray(ax.ticktext)) {\n        var rng = Lib.simpleMap(ax.range, ax.r2l);\n        var minDiff = (Math.abs(rng[1] - rng[0]) - (ax._lBreaks || 0)) / 10000;\n\n        for(i = 0; i < ax.ticktext.length; i++) {\n            if(Math.abs(x - tickVal2l(ax.tickvals[i])) < minDiff) break;\n        }\n        if(i < ax.ticktext.length) {\n            out.text = String(ax.ticktext[i]);\n            return out;\n        }\n    }\n\n    function isHidden(showAttr) {\n        if(showAttr === undefined) return true;\n        if(hover) return showAttr === 'none';\n\n        var firstOrLast = {\n            first: ax._tmin,\n            last: ax._tmax\n        }[showAttr];\n\n        return showAttr !== 'all' && x !== firstOrLast;\n    }\n\n    var hideexp = hover ?\n        'never' :\n        ax.exponentformat !== 'none' && isHidden(ax.showexponent) ? 'hide' : '';\n\n    if(axType === 'date') formatDate(ax, out, hover, extraPrecision);\n    else if(axType === 'log') formatLog(ax, out, hover, extraPrecision, hideexp);\n    else if(axType === 'category') formatCategory(ax, out);\n    else if(axType === 'multicategory') formatMultiCategory(ax, out, hover);\n    else if(isAngular(ax)) formatAngle(ax, out, hover, extraPrecision, hideexp);\n    else formatLinear(ax, out, hover, extraPrecision, hideexp);\n\n    // add prefix and suffix\n    if(!noSuffixPrefix) {\n        if(ax.tickprefix && !isHidden(ax.showtickprefix)) out.text = ax.tickprefix + out.text;\n        if(ax.ticksuffix && !isHidden(ax.showticksuffix)) out.text += ax.ticksuffix;\n    }\n\n    // Setup ticks and grid lines boundaries\n    // at 1/2 a 'category' to the left/bottom\n    if(ax.tickson === 'boundaries' || ax.showdividers) {\n        var inbounds = function(v) {\n            var p = ax.l2p(v);\n            return p >= 0 && p <= ax._length ? v : null;\n        };\n\n        out.xbnd = [\n            inbounds(out.x - 0.5),\n            inbounds(out.x + ax.dtick - 0.5)\n        ];\n    }\n\n    return out;\n};\n\n/**\n * create text for a hover label on this axis, with special handling of\n * log axes (where negative values can't be displayed but can appear in hover text)\n *\n * @param {object} ax: the axis to format text for\n * @param {number} val: calcdata value to format\n * @param {Optional(number)} val2: a second value to display\n *\n * @returns {string} `val` formatted as a string appropriate to this axis, or\n *     `val` and `val2` as a range (ie '<val> - <val2>') if `val2` is provided and\n *     it's different from `val`.\n */\naxes.hoverLabelText = function(ax, val, val2) {\n    if(val2 !== BADNUM && val2 !== val) {\n        return axes.hoverLabelText(ax, val) + ' - ' + axes.hoverLabelText(ax, val2);\n    }\n\n    var logOffScale = (ax.type === 'log' && val <= 0);\n    var tx = axes.tickText(ax, ax.c2l(logOffScale ? -val : val), 'hover').text;\n\n    if(logOffScale) {\n        return val === 0 ? '0' : MINUS_SIGN + tx;\n    }\n\n    // TODO: should we do something special if the axis calendar and\n    // the data calendar are different? Somehow display both dates with\n    // their system names? Right now it will just display in the axis calendar\n    // but users could add the other one as text.\n    return tx;\n};\n\nfunction tickTextObj(ax, x, text) {\n    var tf = ax.tickfont || {};\n\n    return {\n        x: x,\n        dx: 0,\n        dy: 0,\n        text: text || '',\n        fontSize: tf.size,\n        font: tf.family,\n        fontColor: tf.color\n    };\n}\n\nfunction formatDate(ax, out, hover, extraPrecision) {\n    var tr = ax._tickround;\n    var fmt = (hover && ax.hoverformat) || axes.getTickFormat(ax);\n\n    if(extraPrecision) {\n        // second or sub-second precision: extra always shows max digits.\n        // for other fields, extra precision just adds one field.\n        if(isNumeric(tr)) tr = 4;\n        else tr = {y: 'm', m: 'd', d: 'M', M: 'S', S: 4}[tr];\n    }\n\n    var dateStr = Lib.formatDate(out.x, fmt, tr, ax._dateFormat, ax.calendar, ax._extraFormat);\n    var headStr;\n\n    var splitIndex = dateStr.indexOf('\\n');\n    if(splitIndex !== -1) {\n        headStr = dateStr.substr(splitIndex + 1);\n        dateStr = dateStr.substr(0, splitIndex);\n    }\n\n    if(extraPrecision) {\n        // if extraPrecision led to trailing zeros, strip them off\n        // actually, this can lead to removing even more zeros than\n        // in the original rounding, but that's fine because in these\n        // contexts uniformity is not so important (if there's even\n        // anything to be uniform with!)\n\n        // can we remove the whole time part?\n        if(dateStr === '00:00:00' || dateStr === '00:00') {\n            dateStr = headStr;\n            headStr = '';\n        } else if(dateStr.length === 8) {\n            // strip off seconds if they're zero (zero fractional seconds\n            // are already omitted)\n            // but we never remove minutes and leave just hours\n            dateStr = dateStr.replace(/:00$/, '');\n        }\n    }\n\n    if(headStr) {\n        if(hover) {\n            // hover puts it all on one line, so headPart works best up front\n            // except for year headPart: turn this into \"Jan 1, 2000\" etc.\n            if(tr === 'd') dateStr += ', ' + headStr;\n            else dateStr = headStr + (dateStr ? ', ' + dateStr : '');\n        } else {\n            if(\n                !ax._inCalcTicks ||\n                ax._prevDateHead !== headStr\n            ) {\n                ax._prevDateHead = headStr;\n                dateStr += '<br>' + headStr;\n            } else {\n                var isInside = (ax.ticklabelposition || '').indexOf('inside') !== -1;\n                var side = ax._realSide || ax.side; // polar mocks the side of the radial axis\n                if(\n                    (!isInside && side === 'top') ||\n                    (isInside && side === 'bottom')\n                ) {\n                    dateStr += '<br> ';\n                }\n            }\n        }\n    }\n\n    out.text = dateStr;\n}\n\nfunction formatLog(ax, out, hover, extraPrecision, hideexp) {\n    var dtick = ax.dtick;\n    var x = out.x;\n    var tickformat = ax.tickformat;\n    var dtChar0 = typeof dtick === 'string' && dtick.charAt(0);\n\n    if(hideexp === 'never') {\n        // If this is a hover label, then we must *never* hide the exponent\n        // for the sake of display, which could give the wrong value by\n        // potentially many orders of magnitude. If hideexp was 'never', then\n        // it's now succeeded by preventing the other condition from automating\n        // this choice. Thus we can unset it so that the axis formatting takes\n        // precedence.\n        hideexp = '';\n    }\n\n    if(extraPrecision && (dtChar0 !== 'L')) {\n        dtick = 'L3';\n        dtChar0 = 'L';\n    }\n\n    if(tickformat || (dtChar0 === 'L')) {\n        out.text = numFormat(Math.pow(10, x), ax, hideexp, extraPrecision);\n    } else if(isNumeric(dtick) || ((dtChar0 === 'D') && (Lib.mod(x + 0.01, 1) < 0.1))) {\n        var p = Math.round(x);\n        var absP = Math.abs(p);\n        var exponentFormat = ax.exponentformat;\n        if(exponentFormat === 'power' || (isSIFormat(exponentFormat) && beyondSI(p))) {\n            if(p === 0) out.text = 1;\n            else if(p === 1) out.text = '10';\n            else out.text = '10<sup>' + (p > 1 ? '' : MINUS_SIGN) + absP + '</sup>';\n\n            out.fontSize *= 1.25;\n        } else if((exponentFormat === 'e' || exponentFormat === 'E') && absP > 2) {\n            out.text = '1' + exponentFormat + (p > 0 ? '+' : MINUS_SIGN) + absP;\n        } else {\n            out.text = numFormat(Math.pow(10, x), ax, '', 'fakehover');\n            if(dtick === 'D1' && ax._id.charAt(0) === 'y') {\n                out.dy -= out.fontSize / 6;\n            }\n        }\n    } else if(dtChar0 === 'D') {\n        out.text = String(Math.round(Math.pow(10, Lib.mod(x, 1))));\n        out.fontSize *= 0.75;\n    } else throw 'unrecognized dtick ' + String(dtick);\n\n    // if 9's are printed on log scale, move the 10's away a bit\n    if(ax.dtick === 'D1') {\n        var firstChar = String(out.text).charAt(0);\n        if(firstChar === '0' || firstChar === '1') {\n            if(ax._id.charAt(0) === 'y') {\n                out.dx -= out.fontSize / 4;\n            } else {\n                out.dy += out.fontSize / 2;\n                out.dx += (ax.range[1] > ax.range[0] ? 1 : -1) *\n                    out.fontSize * (x < 0 ? 0.5 : 0.25);\n            }\n        }\n    }\n}\n\nfunction formatCategory(ax, out) {\n    var tt = ax._categories[Math.round(out.x)];\n    if(tt === undefined) tt = '';\n    out.text = String(tt);\n}\n\nfunction formatMultiCategory(ax, out, hover) {\n    var v = Math.round(out.x);\n    var cats = ax._categories[v] || [];\n    var tt = cats[1] === undefined ? '' : String(cats[1]);\n    var tt2 = cats[0] === undefined ? '' : String(cats[0]);\n\n    if(hover) {\n        // TODO is this what we want?\n        out.text = tt2 + ' - ' + tt;\n    } else {\n        // setup for secondary labels\n        out.text = tt;\n        out.text2 = tt2;\n    }\n}\n\nfunction formatLinear(ax, out, hover, extraPrecision, hideexp) {\n    if(hideexp === 'never') {\n        // If this is a hover label, then we must *never* hide the exponent\n        // for the sake of display, which could give the wrong value by\n        // potentially many orders of magnitude. If hideexp was 'never', then\n        // it's now succeeded by preventing the other condition from automating\n        // this choice. Thus we can unset it so that the axis formatting takes\n        // precedence.\n        hideexp = '';\n    } else if(ax.showexponent === 'all' && Math.abs(out.x / ax.dtick) < 1e-6) {\n        // don't add an exponent to zero if we're showing all exponents\n        // so the only reason you'd show an exponent on zero is if it's the\n        // ONLY tick to get an exponent (first or last)\n        hideexp = 'hide';\n    }\n    out.text = numFormat(out.x, ax, hideexp, extraPrecision);\n}\n\nfunction formatAngle(ax, out, hover, extraPrecision, hideexp) {\n    if(ax.thetaunit === 'radians' && !hover) {\n        var num = out.x / 180;\n\n        if(num === 0) {\n            out.text = '0';\n        } else {\n            var frac = num2frac(num);\n\n            if(frac[1] >= 100) {\n                out.text = numFormat(Lib.deg2rad(out.x), ax, hideexp, extraPrecision);\n            } else {\n                var isNeg = out.x < 0;\n\n                if(frac[1] === 1) {\n                    if(frac[0] === 1) out.text = 'π';\n                    else out.text = frac[0] + 'π';\n                } else {\n                    out.text = [\n                        '<sup>', frac[0], '</sup>',\n                        '⁄',\n                        '<sub>', frac[1], '</sub>',\n                        'π'\n                    ].join('');\n                }\n\n                if(isNeg) out.text = MINUS_SIGN + out.text;\n            }\n        }\n    } else {\n        out.text = numFormat(out.x, ax, hideexp, extraPrecision);\n    }\n}\n\n// inspired by\n// https://github.com/yisibl/num2fraction/blob/master/index.js\nfunction num2frac(num) {\n    function almostEq(a, b) {\n        return Math.abs(a - b) <= 1e-6;\n    }\n\n    function findGCD(a, b) {\n        return almostEq(b, 0) ? a : findGCD(b, a % b);\n    }\n\n    function findPrecision(n) {\n        var e = 1;\n        while(!almostEq(Math.round(n * e) / e, n)) {\n            e *= 10;\n        }\n        return e;\n    }\n\n    var precision = findPrecision(num);\n    var number = num * precision;\n    var gcd = Math.abs(findGCD(number, precision));\n\n    return [\n        // numerator\n        Math.round(number / gcd),\n        // denominator\n        Math.round(precision / gcd)\n    ];\n}\n\n// format a number (tick value) according to the axis settings\n// new, more reliable procedure than d3.round or similar:\n// add half the rounding increment, then stringify and truncate\n// also automatically switch to sci. notation\nvar SIPREFIXES = ['f', 'p', 'n', 'μ', 'm', '', 'k', 'M', 'G', 'T'];\n\nfunction isSIFormat(exponentFormat) {\n    return exponentFormat === 'SI' || exponentFormat === 'B';\n}\n\n// are we beyond the range of common SI prefixes?\n// 10^-16 -> 1x10^-16\n// 10^-15 -> 1f\n// ...\n// 10^14 -> 100T\n// 10^15 -> 1x10^15\n// 10^16 -> 1x10^16\nfunction beyondSI(exponent) {\n    return exponent > 14 || exponent < -15;\n}\n\nfunction numFormat(v, ax, fmtoverride, hover) {\n    var isNeg = v < 0;\n    // max number of digits past decimal point to show\n    var tickRound = ax._tickround;\n    var exponentFormat = fmtoverride || ax.exponentformat || 'B';\n    var exponent = ax._tickexponent;\n    var tickformat = axes.getTickFormat(ax);\n    var separatethousands = ax.separatethousands;\n\n    // special case for hover: set exponent just for this value, and\n    // add a couple more digits of precision over tick labels\n    if(hover) {\n        // make a dummy axis obj to get the auto rounding and exponent\n        var ah = {\n            exponentformat: exponentFormat,\n            minexponent: ax.minexponent,\n            dtick: ax.showexponent === 'none' ? ax.dtick :\n                (isNumeric(v) ? Math.abs(v) || 1 : 1),\n            // if not showing any exponents, don't change the exponent\n            // from what we calculate\n            range: ax.showexponent === 'none' ? ax.range.map(ax.r2d) : [0, v || 1]\n        };\n        autoTickRound(ah);\n        tickRound = (Number(ah._tickround) || 0) + 4;\n        exponent = ah._tickexponent;\n        if(ax.hoverformat) tickformat = ax.hoverformat;\n    }\n\n    if(tickformat) return ax._numFormat(tickformat)(v).replace(/-/g, MINUS_SIGN);\n\n    // 'epsilon' - rounding increment\n    var e = Math.pow(10, -tickRound) / 2;\n\n    // exponentFormat codes:\n    // 'e' (1.2e+6, default)\n    // 'E' (1.2E+6)\n    // 'SI' (1.2M)\n    // 'B' (same as SI except 10^9=B not G)\n    // 'none' (1200000)\n    // 'power' (1.2x10^6)\n    // 'hide' (1.2, use 3rd argument=='hide' to eg\n    //      only show exponent on last tick)\n    if(exponentFormat === 'none') exponent = 0;\n\n    // take the sign out, put it back manually at the end\n    // - makes cases easier\n    v = Math.abs(v);\n    if(v < e) {\n        // 0 is just 0, but may get exponent if it's the last tick\n        v = '0';\n        isNeg = false;\n    } else {\n        v += e;\n        // take out a common exponent, if any\n        if(exponent) {\n            v *= Math.pow(10, -exponent);\n            tickRound += exponent;\n        }\n        // round the mantissa\n        if(tickRound === 0) v = String(Math.floor(v));\n        else if(tickRound < 0) {\n            v = String(Math.round(v));\n            v = v.substr(0, v.length + tickRound);\n            for(var i = tickRound; i < 0; i++) v += '0';\n        } else {\n            v = String(v);\n            var dp = v.indexOf('.') + 1;\n            if(dp) v = v.substr(0, dp + tickRound).replace(/\\.?0+$/, '');\n        }\n        // insert appropriate decimal point and thousands separator\n        v = Lib.numSeparate(v, ax._separators, separatethousands);\n    }\n\n    // add exponent\n    if(exponent && exponentFormat !== 'hide') {\n        if(isSIFormat(exponentFormat) && beyondSI(exponent)) exponentFormat = 'power';\n\n        var signedExponent;\n        if(exponent < 0) signedExponent = MINUS_SIGN + -exponent;\n        else if(exponentFormat !== 'power') signedExponent = '+' + exponent;\n        else signedExponent = String(exponent);\n\n        if(exponentFormat === 'e' || exponentFormat === 'E') {\n            v += exponentFormat + signedExponent;\n        } else if(exponentFormat === 'power') {\n            v += '×10<sup>' + signedExponent + '</sup>';\n        } else if(exponentFormat === 'B' && exponent === 9) {\n            v += 'B';\n        } else if(isSIFormat(exponentFormat)) {\n            v += SIPREFIXES[exponent / 3 + 5];\n        }\n    }\n\n    // put sign back in and return\n    // replace standard minus character (which is technically a hyphen)\n    // with a true minus sign\n    if(isNeg) return MINUS_SIGN + v;\n    return v;\n}\n\naxes.getTickFormat = function(ax) {\n    var i;\n\n    function convertToMs(dtick) {\n        return typeof dtick !== 'string' ? dtick : Number(dtick.replace('M', '')) * ONEAVGMONTH;\n    }\n\n    function compareLogTicks(left, right) {\n        var priority = ['L', 'D'];\n        if(typeof left === typeof right) {\n            if(typeof left === 'number') {\n                return left - right;\n            } else {\n                var leftPriority = priority.indexOf(left.charAt(0));\n                var rightPriority = priority.indexOf(right.charAt(0));\n                if(leftPriority === rightPriority) {\n                    return Number(left.replace(/(L|D)/g, '')) - Number(right.replace(/(L|D)/g, ''));\n                } else {\n                    return leftPriority - rightPriority;\n                }\n            }\n        } else {\n            return typeof left === 'number' ? 1 : -1;\n        }\n    }\n\n    function isProperStop(dtick, range, convert) {\n        var convertFn = convert || function(x) { return x;};\n        var leftDtick = range[0];\n        var rightDtick = range[1];\n        return ((!leftDtick && typeof leftDtick !== 'number') || convertFn(leftDtick) <= convertFn(dtick)) &&\n               ((!rightDtick && typeof rightDtick !== 'number') || convertFn(rightDtick) >= convertFn(dtick));\n    }\n\n    function isProperLogStop(dtick, range) {\n        var isLeftDtickNull = range[0] === null;\n        var isRightDtickNull = range[1] === null;\n        var isDtickInRangeLeft = compareLogTicks(dtick, range[0]) >= 0;\n        var isDtickInRangeRight = compareLogTicks(dtick, range[1]) <= 0;\n        return (isLeftDtickNull || isDtickInRangeLeft) && (isRightDtickNull || isDtickInRangeRight);\n    }\n\n    var tickstop, stopi;\n    if(ax.tickformatstops && ax.tickformatstops.length > 0) {\n        switch(ax.type) {\n            case 'date':\n            case 'linear': {\n                for(i = 0; i < ax.tickformatstops.length; i++) {\n                    stopi = ax.tickformatstops[i];\n                    if(stopi.enabled && isProperStop(ax.dtick, stopi.dtickrange, convertToMs)) {\n                        tickstop = stopi;\n                        break;\n                    }\n                }\n                break;\n            }\n            case 'log': {\n                for(i = 0; i < ax.tickformatstops.length; i++) {\n                    stopi = ax.tickformatstops[i];\n                    if(stopi.enabled && isProperLogStop(ax.dtick, stopi.dtickrange)) {\n                        tickstop = stopi;\n                        break;\n                    }\n                }\n                break;\n            }\n            default:\n        }\n    }\n    return tickstop ? tickstop.value : ax.tickformat;\n};\n\n// getSubplots - extract all subplot IDs we need\n// as an array of items like 'xy', 'x2y', 'x2y2'...\n// sorted by x (x,x2,x3...) then y\n// optionally restrict to only subplots containing axis object ax\n//\n// NOTE: this is currently only used OUTSIDE plotly.js (toolpanel, webapp)\n// ideally we get rid of it there (or just copy this there) and remove it here\naxes.getSubplots = function(gd, ax) {\n    var subplotObj = gd._fullLayout._subplots;\n    var allSubplots = subplotObj.cartesian.concat(subplotObj.gl2d || []);\n\n    var out = ax ? axes.findSubplotsWithAxis(allSubplots, ax) : allSubplots;\n\n    out.sort(function(a, b) {\n        var aParts = a.substr(1).split('y');\n        var bParts = b.substr(1).split('y');\n\n        if(aParts[0] === bParts[0]) return +aParts[1] - +bParts[1];\n        return +aParts[0] - +bParts[0];\n    });\n\n    return out;\n};\n\n// find all subplots with axis 'ax'\n// NOTE: this is only used in axes.getSubplots (only used outside plotly.js) and\n// gl2d/convert (where it restricts axis subplots to only those with gl2d)\naxes.findSubplotsWithAxis = function(subplots, ax) {\n    var axMatch = new RegExp(\n        (ax._id.charAt(0) === 'x') ? ('^' + ax._id + 'y') : (ax._id + '$')\n    );\n    var subplotsWithAx = [];\n\n    for(var i = 0; i < subplots.length; i++) {\n        var sp = subplots[i];\n        if(axMatch.test(sp)) subplotsWithAx.push(sp);\n    }\n\n    return subplotsWithAx;\n};\n\n// makeClipPaths: prepare clipPaths for all single axes and all possible xy pairings\naxes.makeClipPaths = function(gd) {\n    var fullLayout = gd._fullLayout;\n\n    // for more info: https://github.com/plotly/plotly.js/issues/2595\n    if(fullLayout._hasOnlyLargeSploms) return;\n\n    var fullWidth = {_offset: 0, _length: fullLayout.width, _id: ''};\n    var fullHeight = {_offset: 0, _length: fullLayout.height, _id: ''};\n    var xaList = axes.list(gd, 'x', true);\n    var yaList = axes.list(gd, 'y', true);\n    var clipList = [];\n    var i, j;\n\n    for(i = 0; i < xaList.length; i++) {\n        clipList.push({x: xaList[i], y: fullHeight});\n        for(j = 0; j < yaList.length; j++) {\n            if(i === 0) clipList.push({x: fullWidth, y: yaList[j]});\n            clipList.push({x: xaList[i], y: yaList[j]});\n        }\n    }\n\n    // selectors don't work right with camelCase tags,\n    // have to use class instead\n    // https://groups.google.com/forum/#!topic/d3-js/6EpAzQ2gU9I\n    var axClips = fullLayout._clips.selectAll('.axesclip')\n        .data(clipList, function(d) { return d.x._id + d.y._id; });\n\n    axClips.enter().append('clipPath')\n        .classed('axesclip', true)\n        .attr('id', function(d) { return 'clip' + fullLayout._uid + d.x._id + d.y._id; })\n      .append('rect');\n\n    axClips.exit().remove();\n\n    axClips.each(function(d) {\n        d3.select(this).select('rect').attr({\n            x: d.x._offset || 0,\n            y: d.y._offset || 0,\n            width: d.x._length || 1,\n            height: d.y._length || 1\n        });\n    });\n};\n\n/**\n * Main multi-axis drawing routine!\n *\n * @param {DOM element} gd : graph div\n * @param {string or array of strings} arg : polymorphic argument\n * @param {object} opts:\n * - @param {boolean} skipTitle : optional flag to skip axis title draw/update\n *\n * Signature 1: Axes.draw(gd, 'redraw')\n *   use this to clear and redraw all axes on graph\n *\n * Signature 2: Axes.draw(gd, '')\n *   use this to draw all axes on graph w/o the selectAll().remove()\n *   of the 'redraw' signature\n *\n * Signature 3: Axes.draw(gd, [axId, axId2, ...])\n *   where the items are axis id string,\n *   use this to update multiple axes in one call\n *\n * N.B draw updates:\n * - ax._r (stored range for use by zoom/pan)\n * - ax._rl (stored linearized range for use by zoom/pan)\n */\naxes.draw = function(gd, arg, opts) {\n    var fullLayout = gd._fullLayout;\n\n    if(arg === 'redraw') {\n        fullLayout._paper.selectAll('g.subplot').each(function(d) {\n            var id = d[0];\n            var plotinfo = fullLayout._plots[id];\n            if(plotinfo) {\n                var xa = plotinfo.xaxis;\n                var ya = plotinfo.yaxis;\n\n                plotinfo.xaxislayer.selectAll('.' + xa._id + 'tick').remove();\n                plotinfo.yaxislayer.selectAll('.' + ya._id + 'tick').remove();\n                plotinfo.xaxislayer.selectAll('.' + xa._id + 'tick2').remove();\n                plotinfo.yaxislayer.selectAll('.' + ya._id + 'tick2').remove();\n                plotinfo.xaxislayer.selectAll('.' + xa._id + 'divider').remove();\n                plotinfo.yaxislayer.selectAll('.' + ya._id + 'divider').remove();\n\n                if(plotinfo.gridlayer) plotinfo.gridlayer.selectAll('path').remove();\n                if(plotinfo.zerolinelayer) plotinfo.zerolinelayer.selectAll('path').remove();\n\n                fullLayout._infolayer.select('.g-' + xa._id + 'title').remove();\n                fullLayout._infolayer.select('.g-' + ya._id + 'title').remove();\n            }\n        });\n    }\n\n    var axList = (!arg || arg === 'redraw') ? axes.listIds(gd) : arg;\n\n    return Lib.syncOrAsync(axList.map(function(axId) {\n        return function() {\n            if(!axId) return;\n\n            var ax = axes.getFromId(gd, axId);\n            var axDone = axes.drawOne(gd, ax, opts);\n\n            ax._r = ax.range.slice();\n            ax._rl = Lib.simpleMap(ax._r, ax.r2l);\n\n            return axDone;\n        };\n    }));\n};\n\n/**\n * Draw one cartesian axis\n *\n * @param {DOM element} gd\n * @param {object} ax (full) axis object\n * @param {object} opts\n * - @param {boolean} skipTitle (set to true to skip axis title draw call)\n *\n * Depends on:\n * - ax._mainSubplot (from linkSubplots)\n * - ax._mainAxis\n * - ax._anchorAxis\n * - ax._subplotsWith\n * - ax._counterDomainMin, ax._counterDomainMax (optionally, from linkSubplots)\n * - ax._tickAngles (on redraw only, old value relinked during supplyDefaults)\n * - ax._mainLinePosition (from lsInner)\n * - ax._mainMirrorPosition\n * - ax._linepositions\n *\n * Fills in:\n * - ax._vals:\n * - ax._gridVals:\n * - ax._selections:\n * - ax._tickAngles:\n * - ax._depth (when required only):\n * - and calls ax.setScale\n */\naxes.drawOne = function(gd, ax, opts) {\n    opts = opts || {};\n\n    var i, sp, plotinfo;\n\n    ax.setScale();\n\n    var fullLayout = gd._fullLayout;\n    var axId = ax._id;\n    var axLetter = axId.charAt(0);\n    var counterLetter = axes.counterLetter(axId);\n    var mainPlotinfo = fullLayout._plots[ax._mainSubplot];\n\n    // this happens when updating matched group with 'missing' axes\n    if(!mainPlotinfo) return;\n\n    var mainAxLayer = mainPlotinfo[axLetter + 'axislayer'];\n    var mainLinePosition = ax._mainLinePosition;\n    var mainMirrorPosition = ax._mainMirrorPosition;\n\n    var vals = ax._vals = axes.calcTicks(ax);\n\n    // Add a couple of axis properties that should cause us to recreate\n    // elements. Used in d3 data function.\n    var axInfo = [ax.mirror, mainLinePosition, mainMirrorPosition].join('_');\n    for(i = 0; i < vals.length; i++) {\n        vals[i].axInfo = axInfo;\n    }\n\n    // stash selections to avoid DOM queries e.g.\n    // - stash tickLabels selection, so that drawTitle can use it to scoot title\n    ax._selections = {};\n    // stash tick angle (including the computed 'auto' values) per tick-label class\n    // linkup 'previous' tick angles on redraws\n    if(ax._tickAngles) ax._prevTickAngles = ax._tickAngles;\n    ax._tickAngles = {};\n    // measure [in px] between axis position and outward-most part of bounding box\n    // (touching either the tick label or ticks)\n    // depth can be expansive to compute, so we only do so when required\n    ax._depth = null;\n\n    // calcLabelLevelBbox can be expensive,\n    // so make sure to not call it twice during the same Axes.drawOne call\n    // by stashing label-level bounding boxes per tick-label class\n    var llbboxes = {};\n    function getLabelLevelBbox(suffix) {\n        var cls = axId + (suffix || 'tick');\n        if(!llbboxes[cls]) llbboxes[cls] = calcLabelLevelBbox(ax, cls);\n        return llbboxes[cls];\n    }\n\n    if(!ax.visible) return;\n\n    var transTickFn = axes.makeTransTickFn(ax);\n    var transTickLabelFn = axes.makeTransTickLabelFn(ax);\n\n    var tickVals;\n    // We remove zero lines, grid lines, and inside ticks if they're within 1px of the end\n    // The key case here is removing zero lines when the axis bound is zero\n    var valsClipped;\n\n    var insideTicks = ax.ticks === 'inside';\n    var outsideTicks = ax.ticks === 'outside';\n\n    if(ax.tickson === 'boundaries') {\n        var boundaryVals = getBoundaryVals(ax, vals);\n        valsClipped = axes.clipEnds(ax, boundaryVals);\n        tickVals = insideTicks ? valsClipped : boundaryVals;\n    } else {\n        valsClipped = axes.clipEnds(ax, vals);\n        tickVals = (insideTicks && ax.ticklabelmode !== 'period') ? valsClipped : vals;\n    }\n\n    var gridVals = ax._gridVals = valsClipped;\n    var dividerVals = getDividerVals(ax, vals);\n\n    if(!fullLayout._hasOnlyLargeSploms) {\n        var subplotsWithAx = ax._subplotsWith;\n\n        // keep track of which subplots (by main counter axis) we've already\n        // drawn grids for, so we don't overdraw overlaying subplots\n        var finishedGrids = {};\n\n        for(i = 0; i < subplotsWithAx.length; i++) {\n            sp = subplotsWithAx[i];\n            plotinfo = fullLayout._plots[sp];\n\n            var counterAxis = plotinfo[counterLetter + 'axis'];\n            var mainCounterID = counterAxis._mainAxis._id;\n            if(finishedGrids[mainCounterID]) continue;\n            finishedGrids[mainCounterID] = 1;\n\n            var gridPath = axLetter === 'x' ?\n                'M0,' + counterAxis._offset + 'v' + counterAxis._length :\n                'M' + counterAxis._offset + ',0h' + counterAxis._length;\n\n            axes.drawGrid(gd, ax, {\n                vals: gridVals,\n                counterAxis: counterAxis,\n                layer: plotinfo.gridlayer.select('.' + axId),\n                path: gridPath,\n                transFn: transTickFn\n            });\n            axes.drawZeroLine(gd, ax, {\n                counterAxis: counterAxis,\n                layer: plotinfo.zerolinelayer,\n                path: gridPath,\n                transFn: transTickFn\n            });\n        }\n    }\n\n    var tickSigns = axes.getTickSigns(ax);\n    var tickSubplots = [];\n\n    if(ax.ticks) {\n        var mainTickPath = axes.makeTickPath(ax, mainLinePosition, tickSigns[2]);\n        var mirrorTickPath;\n        var fullTickPath;\n        if(ax._anchorAxis && ax.mirror && ax.mirror !== true) {\n            mirrorTickPath = axes.makeTickPath(ax, mainMirrorPosition, tickSigns[3]);\n            fullTickPath = mainTickPath + mirrorTickPath;\n        } else {\n            mirrorTickPath = '';\n            fullTickPath = mainTickPath;\n        }\n\n        var tickPath;\n        if(ax.showdividers && outsideTicks && ax.tickson === 'boundaries') {\n            var dividerLookup = {};\n            for(i = 0; i < dividerVals.length; i++) {\n                dividerLookup[dividerVals[i].x] = 1;\n            }\n            tickPath = function(d) {\n                return dividerLookup[d.x] ? mirrorTickPath : fullTickPath;\n            };\n        } else {\n            tickPath = fullTickPath;\n        }\n\n        axes.drawTicks(gd, ax, {\n            vals: tickVals,\n            layer: mainAxLayer,\n            path: tickPath,\n            transFn: transTickFn\n        });\n\n        if(ax.mirror === 'allticks') {\n            tickSubplots = Object.keys(ax._linepositions || {});\n        }\n    }\n\n    for(i = 0; i < tickSubplots.length; i++) {\n        sp = tickSubplots[i];\n        plotinfo = fullLayout._plots[sp];\n        // [bottom or left, top or right], free and main are handled above\n        var linepositions = ax._linepositions[sp] || [];\n        var spTickPath = axes.makeTickPath(ax, linepositions[0], tickSigns[0]) +\n            axes.makeTickPath(ax, linepositions[1], tickSigns[1]);\n\n        axes.drawTicks(gd, ax, {\n            vals: tickVals,\n            layer: plotinfo[axLetter + 'axislayer'],\n            path: spTickPath,\n            transFn: transTickFn\n        });\n    }\n\n    var seq = [];\n\n    // tick labels - for now just the main labels.\n    // TODO: mirror labels, esp for subplots\n\n    seq.push(function() {\n        return axes.drawLabels(gd, ax, {\n            vals: vals,\n            layer: mainAxLayer,\n            transFn: transTickLabelFn,\n            labelFns: axes.makeLabelFns(ax, mainLinePosition)\n        });\n    });\n\n    if(ax.type === 'multicategory') {\n        var pad = {x: 2, y: 10}[axLetter];\n\n        seq.push(function() {\n            var bboxKey = {x: 'height', y: 'width'}[axLetter];\n            var standoff = getLabelLevelBbox()[bboxKey] + pad +\n                (ax._tickAngles[axId + 'tick'] ? ax.tickfont.size * LINE_SPACING : 0);\n\n            return axes.drawLabels(gd, ax, {\n                vals: getSecondaryLabelVals(ax, vals),\n                layer: mainAxLayer,\n                cls: axId + 'tick2',\n                repositionOnUpdate: true,\n                secondary: true,\n                transFn: transTickFn,\n                labelFns: axes.makeLabelFns(ax, mainLinePosition + standoff * tickSigns[4])\n            });\n        });\n\n        seq.push(function() {\n            ax._depth = tickSigns[4] * (getLabelLevelBbox('tick2')[ax.side] - mainLinePosition);\n\n            return drawDividers(gd, ax, {\n                vals: dividerVals,\n                layer: mainAxLayer,\n                path: axes.makeTickPath(ax, mainLinePosition, tickSigns[4], ax._depth),\n                transFn: transTickFn\n            });\n        });\n    } else if(ax.title.hasOwnProperty('standoff')) {\n        seq.push(function() {\n            ax._depth = tickSigns[4] * (getLabelLevelBbox()[ax.side] - mainLinePosition);\n        });\n    }\n\n    var hasRangeSlider = Registry.getComponentMethod('rangeslider', 'isVisible')(ax);\n\n    seq.push(function() {\n        var s = ax.side.charAt(0);\n        var sMirror = OPPOSITE_SIDE[ax.side].charAt(0);\n        var pos = axes.getPxPosition(gd, ax);\n        var outsideTickLen = outsideTicks ? ax.ticklen : 0;\n        var llbbox;\n\n        var push;\n        var mirrorPush;\n        var rangeSliderPush;\n\n        if(ax.automargin || hasRangeSlider) {\n            if(ax.type === 'multicategory') {\n                llbbox = getLabelLevelBbox('tick2');\n            } else {\n                llbbox = getLabelLevelBbox();\n                if(axLetter === 'x' && s === 'b') {\n                    ax._depth = Math.max(llbbox.width > 0 ? llbbox.bottom - pos : 0, outsideTickLen);\n                }\n            }\n        }\n\n        if(ax.automargin) {\n            push = {x: 0, y: 0, r: 0, l: 0, t: 0, b: 0};\n            var domainIndices = [0, 1];\n\n            if(axLetter === 'x') {\n                if(s === 'b') {\n                    push[s] = ax._depth;\n                } else {\n                    push[s] = ax._depth = Math.max(llbbox.width > 0 ? pos - llbbox.top : 0, outsideTickLen);\n                    domainIndices.reverse();\n                }\n\n                if(llbbox.width > 0) {\n                    var rExtra = llbbox.right - (ax._offset + ax._length);\n                    if(rExtra > 0) {\n                        push.xr = 1;\n                        push.r = rExtra;\n                    }\n                    var lExtra = ax._offset - llbbox.left;\n                    if(lExtra > 0) {\n                        push.xl = 0;\n                        push.l = lExtra;\n                    }\n                }\n            } else {\n                if(s === 'l') {\n                    push[s] = ax._depth = Math.max(llbbox.height > 0 ? pos - llbbox.left : 0, outsideTickLen);\n                } else {\n                    push[s] = ax._depth = Math.max(llbbox.height > 0 ? llbbox.right - pos : 0, outsideTickLen);\n                    domainIndices.reverse();\n                }\n\n                if(llbbox.height > 0) {\n                    var bExtra = llbbox.bottom - (ax._offset + ax._length);\n                    if(bExtra > 0) {\n                        push.yb = 0;\n                        push.b = bExtra;\n                    }\n                    var tExtra = ax._offset - llbbox.top;\n                    if(tExtra > 0) {\n                        push.yt = 1;\n                        push.t = tExtra;\n                    }\n                }\n            }\n\n            push[counterLetter] = ax.anchor === 'free' ?\n                ax.position :\n                ax._anchorAxis.domain[domainIndices[0]];\n\n            if(ax.title.text !== fullLayout._dfltTitle[axLetter]) {\n                push[s] += approxTitleDepth(ax) + (ax.title.standoff || 0);\n            }\n\n            if(ax.mirror && ax.anchor !== 'free') {\n                mirrorPush = {x: 0, y: 0, r: 0, l: 0, t: 0, b: 0};\n\n                mirrorPush[sMirror] = ax.linewidth;\n                if(ax.mirror && ax.mirror !== true) mirrorPush[sMirror] += outsideTickLen;\n\n                if(ax.mirror === true || ax.mirror === 'ticks') {\n                    mirrorPush[counterLetter] = ax._anchorAxis.domain[domainIndices[1]];\n                } else if(ax.mirror === 'all' || ax.mirror === 'allticks') {\n                    mirrorPush[counterLetter] = [ax._counterDomainMin, ax._counterDomainMax][domainIndices[1]];\n                }\n            }\n        }\n\n        if(hasRangeSlider) {\n            rangeSliderPush = Registry.getComponentMethod('rangeslider', 'autoMarginOpts')(gd, ax);\n        }\n\n        Plots.autoMargin(gd, axAutoMarginID(ax), push);\n        Plots.autoMargin(gd, axMirrorAutoMarginID(ax), mirrorPush);\n        Plots.autoMargin(gd, rangeSliderAutoMarginID(ax), rangeSliderPush);\n    });\n\n    if(!opts.skipTitle &&\n        !(hasRangeSlider && ax.side === 'bottom')\n    ) {\n        seq.push(function() { return drawTitle(gd, ax); });\n    }\n\n    return Lib.syncOrAsync(seq);\n};\n\nfunction getBoundaryVals(ax, vals) {\n    var out = [];\n    var i;\n\n    // boundaryVals are never used for labels;\n    // no need to worry about the other tickTextObj keys\n    var _push = function(d, bndIndex) {\n        var xb = d.xbnd[bndIndex];\n        if(xb !== null) {\n            out.push(Lib.extendFlat({}, d, {x: xb}));\n        }\n    };\n\n    if(vals.length) {\n        for(i = 0; i < vals.length; i++) {\n            _push(vals[i], 0);\n        }\n        _push(vals[i - 1], 1);\n    }\n\n    return out;\n}\n\nfunction getSecondaryLabelVals(ax, vals) {\n    var out = [];\n    var lookup = {};\n\n    for(var i = 0; i < vals.length; i++) {\n        var d = vals[i];\n        if(lookup[d.text2]) {\n            lookup[d.text2].push(d.x);\n        } else {\n            lookup[d.text2] = [d.x];\n        }\n    }\n\n    for(var k in lookup) {\n        out.push(tickTextObj(ax, Lib.interp(lookup[k], 0.5), k));\n    }\n\n    return out;\n}\n\nfunction getDividerVals(ax, vals) {\n    var out = [];\n    var i, current;\n\n    var reversed = (vals.length && vals[vals.length - 1].x < vals[0].x);\n\n    // never used for labels;\n    // no need to worry about the other tickTextObj keys\n    var _push = function(d, bndIndex) {\n        var xb = d.xbnd[bndIndex];\n        if(xb !== null) {\n            out.push(Lib.extendFlat({}, d, {x: xb}));\n        }\n    };\n\n    if(ax.showdividers && vals.length) {\n        for(i = 0; i < vals.length; i++) {\n            var d = vals[i];\n            if(d.text2 !== current) {\n                _push(d, reversed ? 1 : 0);\n            }\n            current = d.text2;\n        }\n        _push(vals[i - 1], reversed ? 0 : 1);\n    }\n\n    return out;\n}\n\nfunction calcLabelLevelBbox(ax, cls) {\n    var top, bottom;\n    var left, right;\n\n    if(ax._selections[cls].size()) {\n        top = Infinity;\n        bottom = -Infinity;\n        left = Infinity;\n        right = -Infinity;\n        ax._selections[cls].each(function() {\n            var thisLabel = selectTickLabel(this);\n            // Use parent node <g.(x|y)tick>, to make Drawing.bBox\n            // retrieve a bbox computed with transform info\n            //\n            // To improve perf, it would be nice to use `thisLabel.node()`\n            // (like in fixLabelOverlaps) instead and use Axes.getPxPosition\n            // together with the makeLabelFns outputs and `tickangle`\n            // to compute one bbox per (tick value x tick style)\n            var bb = Drawing.bBox(thisLabel.node().parentNode);\n            top = Math.min(top, bb.top);\n            bottom = Math.max(bottom, bb.bottom);\n            left = Math.min(left, bb.left);\n            right = Math.max(right, bb.right);\n        });\n    } else {\n        top = 0;\n        bottom = 0;\n        left = 0;\n        right = 0;\n    }\n\n    return {\n        top: top,\n        bottom: bottom,\n        left: left,\n        right: right,\n        height: bottom - top,\n        width: right - left\n    };\n}\n\n/**\n * Which direction do the 'ax.side' values, and free ticks go?\n *\n * @param {object} ax (full) axis object\n *  - {string} _id (starting with 'x' or 'y')\n *  - {string} side\n *  - {string} ticks\n * @return {array} all entries are either -1 or 1\n *  - [0]: sign for top/right ticks (i.e. negative SVG direction)\n *  - [1]: sign for bottom/left ticks (i.e. positive SVG direction)\n *  - [2]: sign for ticks corresponding to 'ax.side'\n *  - [3]: sign for ticks mirroring 'ax.side'\n *  - [4]: sign of arrow starting at axis pointing towards margin\n */\naxes.getTickSigns = function(ax) {\n    var axLetter = ax._id.charAt(0);\n    var sideOpposite = {x: 'top', y: 'right'}[axLetter];\n    var main = ax.side === sideOpposite ? 1 : -1;\n    var out = [-1, 1, main, -main];\n    // then we flip if outside XOR y axis\n    if((ax.ticks !== 'inside') === (axLetter === 'x')) {\n        out = out.map(function(v) { return -v; });\n    }\n    // independent of `ticks`; do not flip this one\n    if(ax.side) {\n        out.push({l: -1, t: -1, r: 1, b: 1}[ax.side.charAt(0)]);\n    }\n    return out;\n};\n\n/**\n * Make axis translate transform function\n *\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {number} _offset\n *  - {fn} l2p\n * @return {fn} function of calcTicks items\n */\naxes.makeTransTickFn = function(ax) {\n    return ax._id.charAt(0) === 'x' ?\n        function(d) { return strTranslate(ax._offset + ax.l2p(d.x), 0); } :\n        function(d) { return strTranslate(0, ax._offset + ax.l2p(d.x)); };\n};\n\naxes.makeTransTickLabelFn = function(ax) {\n    var uv = getTickLabelUV(ax);\n    var u = uv[0];\n    var v = uv[1];\n\n    return ax._id.charAt(0) === 'x' ?\n        function(d) {\n            return strTranslate(\n                u + ax._offset + ax.l2p(getPosX(d)),\n                v\n            );\n        } :\n        function(d) {\n            return strTranslate(\n                v,\n                u + ax._offset + ax.l2p(getPosX(d))\n            );\n        };\n};\n\nfunction getPosX(d) {\n    return d.periodX !== undefined ? d.periodX : d.x;\n}\n\n// u is a shift along the axis,\n// v is a shift perpendicular to the axis\nfunction getTickLabelUV(ax) {\n    var ticklabelposition = ax.ticklabelposition || '';\n    var has = function(str) {\n        return ticklabelposition.indexOf(str) !== -1;\n    };\n\n    var isTop = has('top');\n    var isLeft = has('left');\n    var isRight = has('right');\n    var isBottom = has('bottom');\n    var isInside = has('inside');\n\n    var isAligned = isBottom || isLeft || isTop || isRight;\n\n    // early return\n    if(!isAligned && !isInside) return [0, 0];\n\n    var side = ax.side;\n\n    var u = isAligned ? (ax.tickwidth || 0) / 2 : 0;\n    var v = TEXTPAD;\n\n    var fontSize = ax.tickfont ? ax.tickfont.size : 12;\n    if(isBottom || isTop) {\n        u += fontSize * CAP_SHIFT;\n        v += (ax.linewidth || 0) / 2;\n    }\n    if(isLeft || isRight) {\n        u += (ax.linewidth || 0) / 2;\n        v += TEXTPAD;\n    }\n    if(isInside && side === 'top') {\n        v -= fontSize * (1 - CAP_SHIFT);\n    }\n\n    if(isLeft || isTop) u = -u;\n    if(side === 'bottom' || side === 'right') v = -v;\n\n    return [\n        isAligned ? u : 0,\n        isInside ? v : 0\n    ];\n}\n\n/**\n * Make axis tick path string\n *\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {number} ticklen\n *  - {number} linewidth\n * @param {number} shift along direction of ticklen\n * @param {1 or -1} sgn tick sign\n * @param {number (optional)} len tick length\n * @return {string}\n */\naxes.makeTickPath = function(ax, shift, sgn, len) {\n    len = len !== undefined ? len : ax.ticklen;\n\n    var axLetter = ax._id.charAt(0);\n    var pad = (ax.linewidth || 1) / 2;\n\n    return axLetter === 'x' ?\n        'M0,' + (shift + pad * sgn) + 'v' + (len * sgn) :\n        'M' + (shift + pad * sgn) + ',0h' + (len * sgn);\n};\n\n/**\n * Make axis tick label x, y and anchor functions\n *\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {string} ticks\n *  - {number} ticklen\n *  - {string} side\n *  - {number} linewidth\n *  - {number} tickfont.size\n *  - {boolean} showline\n * @param {number} shift\n * @param {number} angle [in degrees] ...\n * @return {object}\n *  - {fn} xFn\n *  - {fn} yFn\n *  - {fn} anchorFn\n *  - {fn} heightFn\n *  - {number} labelStandoff (gap parallel to ticks)\n *  - {number} labelShift (gap perpendicular to ticks)\n */\naxes.makeLabelFns = function(ax, shift, angle) {\n    var ticklabelposition = ax.ticklabelposition || '';\n    var has = function(str) {\n        return ticklabelposition.indexOf(str) !== -1;\n    };\n\n    var isTop = has('top');\n    var isLeft = has('left');\n    var isRight = has('right');\n    var isBottom = has('bottom');\n    var isAligned = isBottom || isLeft || isTop || isRight;\n\n    var insideTickLabels = has('inside');\n    var labelsOverTicks =\n        (ticklabelposition === 'inside' && ax.ticks === 'inside') ||\n        (!insideTickLabels && ax.ticks === 'outside' && ax.tickson !== 'boundaries');\n\n    var labelStandoff = 0;\n    var labelShift = 0;\n\n    var tickLen = labelsOverTicks ? ax.ticklen : 0;\n    if(insideTickLabels) {\n        tickLen *= -1;\n    } else if(isAligned) {\n        tickLen = 0;\n    }\n\n    if(labelsOverTicks) {\n        labelStandoff += tickLen;\n        if(angle) {\n            var rad = Lib.deg2rad(angle);\n            labelStandoff = tickLen * Math.cos(rad) + 1;\n            labelShift = tickLen * Math.sin(rad);\n        }\n    }\n\n    if(ax.showticklabels && (labelsOverTicks || ax.showline)) {\n        labelStandoff += 0.2 * ax.tickfont.size;\n    }\n    labelStandoff += (ax.linewidth || 1) / 2 * (insideTickLabels ? -1 : 1);\n\n    var out = {\n        labelStandoff: labelStandoff,\n        labelShift: labelShift\n    };\n\n    var x0, y0, ff, flipIt;\n    var xQ = 0;\n\n    var side = ax.side;\n    var axLetter = ax._id.charAt(0);\n    var tickangle = ax.tickangle;\n    var endSide;\n    if(axLetter === 'x') {\n        endSide =\n            (!insideTickLabels && side === 'bottom') ||\n            (insideTickLabels && side === 'top');\n\n        flipIt = endSide ? 1 : -1;\n        if(insideTickLabels) flipIt *= -1;\n\n        x0 = labelShift * flipIt;\n        y0 = shift + labelStandoff * flipIt;\n        ff = endSide ? 1 : -0.2;\n        if(Math.abs(tickangle) === 90) {\n            if(insideTickLabels) {\n                ff += MID_SHIFT;\n            } else {\n                if(tickangle === -90 && side === 'bottom') {\n                    ff = CAP_SHIFT;\n                } else if(tickangle === 90 && side === 'top') {\n                    ff = MID_SHIFT;\n                } else {\n                    ff = 0.5;\n                }\n            }\n\n            xQ = (MID_SHIFT / 2) * (tickangle / 90);\n        }\n\n        out.xFn = function(d) { return d.dx + x0 + xQ * d.fontSize; };\n        out.yFn = function(d) { return d.dy + y0 + d.fontSize * ff; };\n        out.anchorFn = function(d, a) {\n            if(isAligned) {\n                if(isLeft) return 'end';\n                if(isRight) return 'start';\n            }\n\n            if(!isNumeric(a) || a === 0 || a === 180) {\n                return 'middle';\n            }\n\n            return ((a * flipIt < 0) !== insideTickLabels) ? 'end' : 'start';\n        };\n        out.heightFn = function(d, a, h) {\n            return (a < -60 || a > 60) ? -0.5 * h :\n                ((ax.side === 'top') !== insideTickLabels) ? -h :\n                0;\n        };\n    } else if(axLetter === 'y') {\n        endSide =\n            (!insideTickLabels && side === 'left') ||\n            (insideTickLabels && side === 'right');\n\n        flipIt = endSide ? 1 : -1;\n        if(insideTickLabels) flipIt *= -1;\n\n        x0 = labelStandoff;\n        y0 = labelShift * flipIt;\n        ff = 0;\n        if(!insideTickLabels && Math.abs(tickangle) === 90) {\n            if(\n                (tickangle === -90 && side === 'left') ||\n                (tickangle === 90 && side === 'right')\n            ) {\n                ff = CAP_SHIFT;\n            } else {\n                ff = 0.5;\n            }\n        }\n\n        if(insideTickLabels) {\n            var ang = isNumeric(tickangle) ? +tickangle : 0;\n            if(ang !== 0) {\n                var rA = Lib.deg2rad(ang);\n                xQ = Math.abs(Math.sin(rA)) * CAP_SHIFT * flipIt;\n                ff = 0;\n            }\n        }\n\n        out.xFn = function(d) { return d.dx + shift - (x0 + d.fontSize * ff) * flipIt + xQ * d.fontSize; };\n        out.yFn = function(d) { return d.dy + y0 + d.fontSize * MID_SHIFT; };\n        out.anchorFn = function(d, a) {\n            if(isNumeric(a) && Math.abs(a) === 90) {\n                return 'middle';\n            }\n\n            return endSide ? 'end' : 'start';\n        };\n        out.heightFn = function(d, a, h) {\n            if(ax.side === 'right') a *= -1;\n\n            return a < -30 ? -h :\n                a < 30 ? -0.5 * h :\n                0;\n        };\n    }\n\n    return out;\n};\n\nfunction tickDataFn(d) {\n    return [d.text, d.x, d.axInfo, d.font, d.fontSize, d.fontColor].join('_');\n}\n\n/**\n * Draw axis ticks\n *\n * @param {DOM element} gd\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {string} ticks\n *  - {number} linewidth\n *  - {string} tickcolor\n * @param {object} opts\n * - {array of object} vals (calcTicks output-like)\n * - {d3 selection} layer\n * - {string or fn} path\n * - {fn} transFn\n * - {boolean} crisp (set to false to unset crisp-edge SVG rendering)\n */\naxes.drawTicks = function(gd, ax, opts) {\n    opts = opts || {};\n\n    var cls = ax._id + 'tick';\n\n    var vals = opts.vals;\n    if(\n        ax.ticklabelmode === 'period'\n    ) {\n        // drop very first tick that we added to handle period\n        vals = vals.slice();\n        vals.shift();\n    }\n\n    var ticks = opts.layer.selectAll('path.' + cls)\n        .data(ax.ticks ? vals : [], tickDataFn);\n\n    ticks.exit().remove();\n\n    ticks.enter().append('path')\n        .classed(cls, 1)\n        .classed('ticks', 1)\n        .classed('crisp', opts.crisp !== false)\n        .call(Color.stroke, ax.tickcolor)\n        .style('stroke-width', Drawing.crispRound(gd, ax.tickwidth, 1) + 'px')\n        .attr('d', opts.path);\n\n    ticks.attr('transform', opts.transFn);\n};\n\n/**\n * Draw axis grid\n *\n * @param {DOM element} gd\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {boolean} showgrid\n *  - {string} gridcolor\n *  - {string} gridwidth\n *  - {boolean} zeroline\n *  - {string} type\n *  - {string} dtick\n * @param {object} opts\n * - {array of object} vals (calcTicks output-like)\n * - {d3 selection} layer\n * - {object} counterAxis (full axis object corresponding to counter axis)\n *     optional - only required if this axis supports zero lines\n * - {string or fn} path\n * - {fn} transFn\n * - {boolean} crisp (set to false to unset crisp-edge SVG rendering)\n */\naxes.drawGrid = function(gd, ax, opts) {\n    opts = opts || {};\n\n    var cls = ax._id + 'grid';\n    var vals = opts.vals;\n    var counterAx = opts.counterAxis;\n    if(ax.showgrid === false) {\n        vals = [];\n    } else if(counterAx && axes.shouldShowZeroLine(gd, ax, counterAx)) {\n        var isArrayMode = ax.tickmode === 'array';\n        for(var i = 0; i < vals.length; i++) {\n            var xi = vals[i].x;\n            if(isArrayMode ? !xi : (Math.abs(xi) < ax.dtick / 100)) {\n                vals = vals.slice(0, i).concat(vals.slice(i + 1));\n                // In array mode you can in principle have multiple\n                // ticks at 0, so test them all. Otherwise once we found\n                // one we can stop.\n                if(isArrayMode) i--;\n                else break;\n            }\n        }\n    }\n\n    var grid = opts.layer.selectAll('path.' + cls)\n        .data(vals, tickDataFn);\n\n    grid.exit().remove();\n\n    grid.enter().append('path')\n        .classed(cls, 1)\n        .classed('crisp', opts.crisp !== false);\n\n    ax._gw = Drawing.crispRound(gd, ax.gridwidth, 1);\n\n    grid.attr('transform', opts.transFn)\n        .attr('d', opts.path)\n        .call(Color.stroke, ax.gridcolor || '#ddd')\n        .style('stroke-width', ax._gw + 'px');\n\n    if(typeof opts.path === 'function') grid.attr('d', opts.path);\n};\n\n/**\n * Draw axis zero-line\n *\n * @param {DOM element} gd\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {boolean} zeroline\n *  - {number} zerolinewidth\n *  - {string} zerolinecolor\n *  - {number (optional)} _gridWidthCrispRound\n * @param {object} opts\n * - {d3 selection} layer\n * - {object} counterAxis (full axis object corresponding to counter axis)\n * - {string or fn} path\n * - {fn} transFn\n * - {boolean} crisp (set to false to unset crisp-edge SVG rendering)\n */\naxes.drawZeroLine = function(gd, ax, opts) {\n    opts = opts || opts;\n\n    var cls = ax._id + 'zl';\n    var show = axes.shouldShowZeroLine(gd, ax, opts.counterAxis);\n\n    var zl = opts.layer.selectAll('path.' + cls)\n        .data(show ? [{x: 0, id: ax._id}] : []);\n\n    zl.exit().remove();\n\n    zl.enter().append('path')\n        .classed(cls, 1)\n        .classed('zl', 1)\n        .classed('crisp', opts.crisp !== false)\n        .each(function() {\n            // use the fact that only one element can enter to trigger a sort.\n            // If several zerolines enter at the same time we will sort once per,\n            // but generally this should be a minimal overhead.\n            opts.layer.selectAll('path').sort(function(da, db) {\n                return idSort(da.id, db.id);\n            });\n        });\n\n    zl.attr('transform', opts.transFn)\n        .attr('d', opts.path)\n        .call(Color.stroke, ax.zerolinecolor || Color.defaultLine)\n        .style('stroke-width', Drawing.crispRound(gd, ax.zerolinewidth, ax._gw || 1) + 'px');\n};\n\n/**\n * Draw axis tick labels\n *\n * @param {DOM element} gd\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {boolean} showticklabels\n *  - {number} tickangle\n *  - {object (optional)} _selections\n *  - {object} (optional)} _tickAngles\n *  - {object} (optional)} _prevTickAngles\n * @param {object} opts\n * - {array of object} vals (calcTicks output-like)\n * - {d3 selection} layer\n * - {string (optional)} cls (node className)\n * - {boolean} repositionOnUpdate (set to true to reposition update selection)\n * - {boolean} secondary\n * - {fn} transFn\n * - {object} labelFns\n *  + {fn} xFn\n *  + {fn} yFn\n *  + {fn} anchorFn\n *  + {fn} heightFn\n */\naxes.drawLabels = function(gd, ax, opts) {\n    opts = opts || {};\n\n    var fullLayout = gd._fullLayout;\n    var axId = ax._id;\n    var axLetter = axId.charAt(0);\n    var cls = opts.cls || axId + 'tick';\n    var vals = opts.vals;\n\n    var labelFns = opts.labelFns;\n    var tickAngle = opts.secondary ? 0 : ax.tickangle;\n    var prevAngle = (ax._prevTickAngles || {})[cls];\n\n    var tickLabels = opts.layer.selectAll('g.' + cls)\n        .data(ax.showticklabels ? vals : [], tickDataFn);\n\n    var labelsReady = [];\n\n    tickLabels.enter().append('g')\n        .classed(cls, 1)\n        .append('text')\n            // only so tex has predictable alignment that we can\n            // alter later\n            .attr('text-anchor', 'middle')\n            .each(function(d) {\n                var thisLabel = d3.select(this);\n                var newPromise = gd._promises.length;\n\n                thisLabel\n                    .call(svgTextUtils.positionText, labelFns.xFn(d), labelFns.yFn(d))\n                    .call(Drawing.font, d.font, d.fontSize, d.fontColor)\n                    .text(d.text)\n                    .call(svgTextUtils.convertToTspans, gd);\n\n                if(gd._promises[newPromise]) {\n                    // if we have an async label, we'll deal with that\n                    // all here so take it out of gd._promises and\n                    // instead position the label and promise this in\n                    // labelsReady\n                    labelsReady.push(gd._promises.pop().then(function() {\n                        positionLabels(thisLabel, tickAngle);\n                    }));\n                } else {\n                    // sync label: just position it now.\n                    positionLabels(thisLabel, tickAngle);\n                }\n            });\n\n    tickLabels.exit().remove();\n\n    if(opts.repositionOnUpdate) {\n        tickLabels.each(function(d) {\n            d3.select(this).select('text')\n                .call(svgTextUtils.positionText, labelFns.xFn(d), labelFns.yFn(d));\n        });\n    }\n\n    function positionLabels(s, angle) {\n        var isInside = (ax.ticklabelposition || '').indexOf('inside') !== -1;\n\n        s.each(function(d) {\n            var thisLabel = d3.select(this);\n            var mathjaxGroup = thisLabel.select('.text-math-group');\n            var anchor = labelFns.anchorFn(d, angle);\n\n            var transform = opts.transFn.call(thisLabel.node(), d) +\n                ((isNumeric(angle) && +angle !== 0) ?\n                (' rotate(' + angle + ',' + labelFns.xFn(d) + ',' +\n                    (labelFns.yFn(d) - d.fontSize / 2) + ')') :\n                '');\n\n            // how much to shift a multi-line label to center it vertically.\n            var nLines = svgTextUtils.lineCount(thisLabel);\n            var lineHeight = LINE_SPACING * d.fontSize;\n            var anchorHeight = labelFns.heightFn(d, isNumeric(angle) ? +angle : 0, (nLines - 1) * lineHeight);\n\n            if(anchorHeight) {\n                transform += strTranslate(0, anchorHeight);\n            }\n\n            if(mathjaxGroup.empty()) {\n                var thisText = thisLabel.select('text');\n                thisText.attr({\n                    transform: transform,\n                    'text-anchor': anchor\n                });\n\n                if(isInside) {\n                    // ensure visible\n                    thisText.style({ opacity: 100 });\n\n                    if(ax._hideOutOfRangeInsideTickLabels) {\n                        ax._hideOutOfRangeInsideTickLabels();\n                    }\n                }\n            } else {\n                var mjWidth = Drawing.bBox(mathjaxGroup.node()).width;\n                var mjShift = mjWidth * {end: -0.5, start: 0.5}[anchor];\n                mathjaxGroup.attr('transform', transform + strTranslate(mjShift, 0));\n            }\n        });\n    }\n\n    ax._hideOutOfRangeInsideTickLabels = undefined;\n    if((ax.ticklabelposition || '').indexOf('inside') !== -1) {\n        ax._hideOutOfRangeInsideTickLabels = function() {\n            var rl = Lib.simpleMap(ax.range, ax.r2l);\n\n            // hide inside tick labels that go outside axis end points\n            var p0 = ax.l2p(rl[0]);\n            var p1 = ax.l2p(rl[1]);\n\n            var min = Math.min(p0, p1) + ax._offset;\n            var max = Math.max(p0, p1) + ax._offset;\n\n            var isX = ax._id.charAt(0) === 'x';\n\n            tickLabels.each(function(d) {\n                var thisLabel = d3.select(this);\n                var mathjaxGroup = thisLabel.select('.text-math-group');\n\n                if(mathjaxGroup.empty()) {\n                    var bb = Drawing.bBox(thisLabel.node());\n                    var hide = false;\n                    if(isX) {\n                        if(bb.right > max) hide = true;\n                        else if(bb.left < min) hide = true;\n                    } else {\n                        if(bb.bottom > max) hide = true;\n                        else if(bb.top + (ax.tickangle ? 0 : d.fontSize / 4) < min) hide = true;\n                    }\n                    if(hide) thisLabel.select('text').style({ opacity: 0 });\n                } // TODO: hide mathjax?\n            });\n        };\n    }\n\n    // make sure all labels are correctly positioned at their base angle\n    // the positionLabels call above is only for newly drawn labels.\n    // do this without waiting, using the last calculated angle to\n    // minimize flicker, then do it again when we know all labels are\n    // there, putting back the prescribed angle to check for overlaps.\n    positionLabels(tickLabels, (prevAngle + 1) ? prevAngle : tickAngle);\n\n    function allLabelsReady() {\n        return labelsReady.length && Promise.all(labelsReady);\n    }\n\n    var autoangle = null;\n\n    function fixLabelOverlaps() {\n        positionLabels(tickLabels, tickAngle);\n\n        // check for auto-angling if x labels overlap\n        // don't auto-angle at all for log axes with\n        // base and digit format\n        if(vals.length && axLetter === 'x' && !isNumeric(tickAngle) &&\n            (ax.type !== 'log' || String(ax.dtick).charAt(0) !== 'D')\n        ) {\n            autoangle = 0;\n\n            var maxFontSize = 0;\n            var lbbArray = [];\n            var i;\n\n            tickLabels.each(function(d) {\n                maxFontSize = Math.max(maxFontSize, d.fontSize);\n\n                var x = ax.l2p(d.x);\n                var thisLabel = selectTickLabel(this);\n                var bb = Drawing.bBox(thisLabel.node());\n\n                lbbArray.push({\n                    // ignore about y, just deal with x overlaps\n                    top: 0,\n                    bottom: 10,\n                    height: 10,\n                    left: x - bb.width / 2,\n                    // impose a 2px gap\n                    right: x + bb.width / 2 + 2,\n                    width: bb.width + 2\n                });\n            });\n\n            if((ax.tickson === 'boundaries' || ax.showdividers) && !opts.secondary) {\n                var gap = 2;\n                if(ax.ticks) gap += ax.tickwidth / 2;\n\n                // TODO should secondary labels also fall into this fix-overlap regime?\n\n                for(i = 0; i < lbbArray.length; i++) {\n                    var xbnd = vals[i].xbnd;\n                    var lbb = lbbArray[i];\n                    if(\n                        (xbnd[0] !== null && (lbb.left - ax.l2p(xbnd[0])) < gap) ||\n                        (xbnd[1] !== null && (ax.l2p(xbnd[1]) - lbb.right) < gap)\n                    ) {\n                        autoangle = 90;\n                        break;\n                    }\n                }\n            } else {\n                var vLen = vals.length;\n                var tickSpacing = Math.abs((vals[vLen - 1].x - vals[0].x) * ax._m) / (vLen - 1);\n\n                var ticklabelposition = ax.ticklabelposition || '';\n                var has = function(str) {\n                    return ticklabelposition.indexOf(str) !== -1;\n                };\n                var isTop = has('top');\n                var isLeft = has('left');\n                var isRight = has('right');\n                var isBottom = has('bottom');\n                var isAligned = isBottom || isLeft || isTop || isRight;\n                var pad = !isAligned ? 0 :\n                    (ax.tickwidth || 0) + 2 * TEXTPAD;\n\n                var rotate90 = (tickSpacing < maxFontSize * 2.5) || ax.type === 'multicategory';\n\n                // any overlap at all - set 30 degrees or 90 degrees\n                for(i = 0; i < lbbArray.length - 1; i++) {\n                    if(Lib.bBoxIntersect(lbbArray[i], lbbArray[i + 1], pad)) {\n                        autoangle = rotate90 ? 90 : 30;\n                        break;\n                    }\n                }\n            }\n\n            if(autoangle) {\n                positionLabels(tickLabels, autoangle);\n            }\n        }\n    }\n\n    if(ax._selections) {\n        ax._selections[cls] = tickLabels;\n    }\n\n    var seq = [allLabelsReady];\n\n    // N.B. during auto-margin redraws, if the axis fixed its label overlaps\n    // by rotating 90 degrees, do not attempt to re-fix its label overlaps\n    // as this can lead to infinite redraw loops!\n    if(ax.automargin && fullLayout._redrawFromAutoMarginCount && prevAngle === 90) {\n        autoangle = 90;\n        seq.push(function() {\n            positionLabels(tickLabels, prevAngle);\n        });\n    } else {\n        seq.push(fixLabelOverlaps);\n    }\n\n    // save current tick angle for future redraws\n    if(ax._tickAngles) {\n        seq.push(function() {\n            ax._tickAngles[cls] = autoangle === null ?\n                (isNumeric(tickAngle) ? tickAngle : 0) :\n                autoangle;\n        });\n    }\n\n    var anchorAx = ax._anchorAxis;\n    if(\n        anchorAx && anchorAx.autorange &&\n        (ax.ticklabelposition || '').indexOf('inside') !== -1 &&\n        !isLinked(fullLayout, ax._id)\n    ) {\n        if(!fullLayout._insideTickLabelsAutorange) {\n            fullLayout._insideTickLabelsAutorange = {};\n        }\n        fullLayout._insideTickLabelsAutorange[anchorAx._name + '.autorange'] = anchorAx.autorange;\n\n        seq.push(\n            function computeFinalTickLabelBoundingBoxes() {\n                tickLabels.each(function(d, i) {\n                    var thisLabel = selectTickLabel(this);\n                    ax._vals[i].bb = Drawing.bBox(thisLabel.node());\n                });\n            }\n        );\n    }\n\n    var done = Lib.syncOrAsync(seq);\n    if(done && done.then) gd._promises.push(done);\n    return done;\n};\n\n/**\n * Draw axis dividers\n *\n * @param {DOM element} gd\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {string} showdividers\n *  - {number} dividerwidth\n *  - {string} dividercolor\n * @param {object} opts\n * - {array of object} vals (calcTicks output-like)\n * - {d3 selection} layer\n * - {fn} path\n * - {fn} transFn\n */\nfunction drawDividers(gd, ax, opts) {\n    var cls = ax._id + 'divider';\n    var vals = opts.vals;\n\n    var dividers = opts.layer.selectAll('path.' + cls)\n        .data(vals, tickDataFn);\n\n    dividers.exit().remove();\n\n    dividers.enter().insert('path', ':first-child')\n        .classed(cls, 1)\n        .classed('crisp', 1)\n        .call(Color.stroke, ax.dividercolor)\n        .style('stroke-width', Drawing.crispRound(gd, ax.dividerwidth, 1) + 'px');\n\n    dividers\n        .attr('transform', opts.transFn)\n        .attr('d', opts.path);\n}\n\n/**\n * Get axis position in px, that is the distance for the graph's\n * top (left) edge for x (y) axes.\n *\n * @param {DOM element} gd\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {string} side\n *  if anchored:\n *  - {object} _anchorAxis\n *  Otherwise:\n *  - {number} position\n * @return {number}\n */\naxes.getPxPosition = function(gd, ax) {\n    var gs = gd._fullLayout._size;\n    var axLetter = ax._id.charAt(0);\n    var side = ax.side;\n    var anchorAxis;\n\n    if(ax.anchor !== 'free') {\n        anchorAxis = ax._anchorAxis;\n    } else if(axLetter === 'x') {\n        anchorAxis = {\n            _offset: gs.t + (1 - (ax.position || 0)) * gs.h,\n            _length: 0\n        };\n    } else if(axLetter === 'y') {\n        anchorAxis = {\n            _offset: gs.l + (ax.position || 0) * gs.w,\n            _length: 0\n        };\n    }\n\n    if(side === 'top' || side === 'left') {\n        return anchorAxis._offset;\n    } else if(side === 'bottom' || side === 'right') {\n        return anchorAxis._offset + anchorAxis._length;\n    }\n};\n\n/**\n * Approximate axis title depth (w/o computing its bounding box)\n *\n * @param {object} ax (full) axis object\n *  - {string} title.text\n *  - {number} title.font.size\n *  - {number} title.standoff\n * @return {number} (in px)\n */\nfunction approxTitleDepth(ax) {\n    var fontSize = ax.title.font.size;\n    var extraLines = (ax.title.text.match(svgTextUtils.BR_TAG_ALL) || []).length;\n    if(ax.title.hasOwnProperty('standoff')) {\n        return extraLines ?\n            fontSize * (CAP_SHIFT + (extraLines * LINE_SPACING)) :\n            fontSize * CAP_SHIFT;\n    } else {\n        return extraLines ?\n            fontSize * (extraLines + 1) * LINE_SPACING :\n            fontSize;\n    }\n}\n\n/**\n * Draw axis title, compute default standoff if necessary\n *\n * @param {DOM element} gd\n * @param {object} ax (full) axis object\n *  - {string} _id\n *  - {string} _name\n *  - {string} side\n *  - {number} title.font.size\n *  - {object} _selections\n *\n *  - {number} _depth\n *  - {number} title.standoff\n *  OR\n *  - {number} linewidth\n *  - {boolean} showticklabels\n */\nfunction drawTitle(gd, ax) {\n    var fullLayout = gd._fullLayout;\n    var axId = ax._id;\n    var axLetter = axId.charAt(0);\n    var fontSize = ax.title.font.size;\n    var titleStandoff;\n\n    if(ax.title.hasOwnProperty('standoff')) {\n        titleStandoff = ax._depth + ax.title.standoff + approxTitleDepth(ax);\n    } else {\n        var isInside = (ax.ticklabelposition || '').indexOf('inside') !== -1;\n\n        if(ax.type === 'multicategory') {\n            titleStandoff = ax._depth;\n        } else {\n            var offsetBase = 1.5 * fontSize;\n            if(isInside) {\n                offsetBase = 0.5 * fontSize;\n                if(ax.ticks === 'outside') {\n                    offsetBase += ax.ticklen;\n                }\n            }\n            titleStandoff = 10 + offsetBase + (ax.linewidth ? ax.linewidth - 1 : 0);\n        }\n\n        if(!isInside) {\n            if(axLetter === 'x') {\n                titleStandoff += ax.side === 'top' ?\n                    fontSize * (ax.showticklabels ? 1 : 0) :\n                    fontSize * (ax.showticklabels ? 1.5 : 0.5);\n            } else {\n                titleStandoff += ax.side === 'right' ?\n                    fontSize * (ax.showticklabels ? 1 : 0.5) :\n                    fontSize * (ax.showticklabels ? 0.5 : 0);\n            }\n        }\n    }\n\n    var pos = axes.getPxPosition(gd, ax);\n    var transform, x, y;\n\n    if(axLetter === 'x') {\n        x = ax._offset + ax._length / 2;\n        y = (ax.side === 'top') ? pos - titleStandoff : pos + titleStandoff;\n    } else {\n        y = ax._offset + ax._length / 2;\n        x = (ax.side === 'right') ? pos + titleStandoff : pos - titleStandoff;\n        transform = {rotate: '-90', offset: 0};\n    }\n\n    var avoid;\n\n    if(ax.type !== 'multicategory') {\n        var tickLabels = ax._selections[ax._id + 'tick'];\n\n        avoid = {\n            selection: tickLabels,\n            side: ax.side\n        };\n\n        if(tickLabels && tickLabels.node() && tickLabels.node().parentNode) {\n            var translation = Drawing.getTranslate(tickLabels.node().parentNode);\n            avoid.offsetLeft = translation.x;\n            avoid.offsetTop = translation.y;\n        }\n\n        if(ax.title.hasOwnProperty('standoff')) {\n            avoid.pad = 0;\n        }\n    }\n\n    return Titles.draw(gd, axId + 'title', {\n        propContainer: ax,\n        propName: ax._name + '.title.text',\n        placeholder: fullLayout._dfltTitle[axLetter],\n        avoid: avoid,\n        transform: transform,\n        attributes: {x: x, y: y, 'text-anchor': 'middle'}\n    });\n}\n\naxes.shouldShowZeroLine = function(gd, ax, counterAxis) {\n    var rng = Lib.simpleMap(ax.range, ax.r2l);\n    return (\n        (rng[0] * rng[1] <= 0) &&\n        ax.zeroline &&\n        (ax.type === 'linear' || ax.type === '-') &&\n        !(ax.rangebreaks && ax.maskBreaks(0) === BADNUM) &&\n        (\n            clipEnds(ax, 0) ||\n            !anyCounterAxLineAtZero(gd, ax, counterAxis, rng) ||\n            hasBarsOrFill(gd, ax)\n        )\n    );\n};\n\naxes.clipEnds = function(ax, vals) {\n    return vals.filter(function(d) { return clipEnds(ax, d.x); });\n};\n\nfunction clipEnds(ax, l) {\n    var p = ax.l2p(l);\n    return (p > 1 && p < ax._length - 1);\n}\n\nfunction anyCounterAxLineAtZero(gd, ax, counterAxis, rng) {\n    var mainCounterAxis = counterAxis._mainAxis;\n    if(!mainCounterAxis) return;\n\n    var fullLayout = gd._fullLayout;\n    var axLetter = ax._id.charAt(0);\n    var counterLetter = axes.counterLetter(ax._id);\n\n    var zeroPosition = ax._offset + (\n        ((Math.abs(rng[0]) < Math.abs(rng[1])) === (axLetter === 'x')) ?\n        0 : ax._length\n    );\n\n    function lineNearZero(ax2) {\n        if(!ax2.showline || !ax2.linewidth) return false;\n        var tolerance = Math.max((ax2.linewidth + ax.zerolinewidth) / 2, 1);\n\n        function closeEnough(pos2) {\n            return typeof pos2 === 'number' && Math.abs(pos2 - zeroPosition) < tolerance;\n        }\n\n        if(closeEnough(ax2._mainLinePosition) || closeEnough(ax2._mainMirrorPosition)) {\n            return true;\n        }\n        var linePositions = ax2._linepositions || {};\n        for(var k in linePositions) {\n            if(closeEnough(linePositions[k][0]) || closeEnough(linePositions[k][1])) {\n                return true;\n            }\n        }\n    }\n\n    var plotinfo = fullLayout._plots[counterAxis._mainSubplot];\n    if(!(plotinfo.mainplotinfo || plotinfo).overlays.length) {\n        return lineNearZero(counterAxis, zeroPosition);\n    }\n\n    var counterLetterAxes = axes.list(gd, counterLetter);\n    for(var i = 0; i < counterLetterAxes.length; i++) {\n        var counterAxis2 = counterLetterAxes[i];\n        if(\n            counterAxis2._mainAxis === mainCounterAxis &&\n            lineNearZero(counterAxis2, zeroPosition)\n        ) {\n            return true;\n        }\n    }\n}\n\nfunction hasBarsOrFill(gd, ax) {\n    var fullData = gd._fullData;\n    var subplot = ax._mainSubplot;\n    var axLetter = ax._id.charAt(0);\n\n    for(var i = 0; i < fullData.length; i++) {\n        var trace = fullData[i];\n\n        if(trace.visible === true && (trace.xaxis + trace.yaxis) === subplot) {\n            if(\n                Registry.traceIs(trace, 'bar-like') &&\n                trace.orientation === {x: 'h', y: 'v'}[axLetter]\n            ) return true;\n\n            if(\n                trace.fill &&\n                trace.fill.charAt(trace.fill.length - 1) === axLetter\n            ) return true;\n        }\n    }\n    return false;\n}\n\nfunction selectTickLabel(gTick) {\n    var s = d3.select(gTick);\n    var mj = s.select('.text-math-group');\n    return mj.empty() ? s.select('text') : mj;\n}\n\n/**\n * Find all margin pushers for 2D axes and reserve them for later use\n * Both label and rangeslider automargin calculations happen later so\n * we need to explicitly allow their ids in order to not delete them.\n *\n * TODO: can we pull the actual automargin calls forward to avoid this hack?\n * We're probably also doing multiple redraws in this case, would be faster\n * if we can just do the whole calculation ahead of time and draw once.\n */\naxes.allowAutoMargin = function(gd) {\n    var axList = axes.list(gd, '', true);\n    for(var i = 0; i < axList.length; i++) {\n        var ax = axList[i];\n        if(ax.automargin) {\n            Plots.allowAutoMargin(gd, axAutoMarginID(ax));\n            if(ax.mirror) {\n                Plots.allowAutoMargin(gd, axMirrorAutoMarginID(ax));\n            }\n        }\n        if(Registry.getComponentMethod('rangeslider', 'isVisible')(ax)) {\n            Plots.allowAutoMargin(gd, rangeSliderAutoMarginID(ax));\n        }\n    }\n};\n\nfunction axAutoMarginID(ax) { return ax._id + '.automargin'; }\nfunction axMirrorAutoMarginID(ax) { return axAutoMarginID(ax) + '.mirror'; }\nfunction rangeSliderAutoMarginID(ax) { return ax._id + '.rangeslider'; }\n\n// swap all the presentation attributes of the axes showing these traces\naxes.swap = function(gd, traces) {\n    var axGroups = makeAxisGroups(gd, traces);\n\n    for(var i = 0; i < axGroups.length; i++) {\n        swapAxisGroup(gd, axGroups[i].x, axGroups[i].y);\n    }\n};\n\nfunction makeAxisGroups(gd, traces) {\n    var groups = [];\n    var i, j;\n\n    for(i = 0; i < traces.length; i++) {\n        var groupsi = [];\n        var xi = gd._fullData[traces[i]].xaxis;\n        var yi = gd._fullData[traces[i]].yaxis;\n        if(!xi || !yi) continue; // not a 2D cartesian trace?\n\n        for(j = 0; j < groups.length; j++) {\n            if(groups[j].x.indexOf(xi) !== -1 || groups[j].y.indexOf(yi) !== -1) {\n                groupsi.push(j);\n            }\n        }\n\n        if(!groupsi.length) {\n            groups.push({x: [xi], y: [yi]});\n            continue;\n        }\n\n        var group0 = groups[groupsi[0]];\n        var groupj;\n\n        if(groupsi.length > 1) {\n            for(j = 1; j < groupsi.length; j++) {\n                groupj = groups[groupsi[j]];\n                mergeAxisGroups(group0.x, groupj.x);\n                mergeAxisGroups(group0.y, groupj.y);\n            }\n        }\n        mergeAxisGroups(group0.x, [xi]);\n        mergeAxisGroups(group0.y, [yi]);\n    }\n\n    return groups;\n}\n\nfunction mergeAxisGroups(intoSet, fromSet) {\n    for(var i = 0; i < fromSet.length; i++) {\n        if(intoSet.indexOf(fromSet[i]) === -1) intoSet.push(fromSet[i]);\n    }\n}\n\nfunction swapAxisGroup(gd, xIds, yIds) {\n    var xFullAxes = [];\n    var yFullAxes = [];\n    var layout = gd.layout;\n    var i, j;\n\n    for(i = 0; i < xIds.length; i++) xFullAxes.push(axes.getFromId(gd, xIds[i]));\n    for(i = 0; i < yIds.length; i++) yFullAxes.push(axes.getFromId(gd, yIds[i]));\n\n    var allAxKeys = Object.keys(axAttrs);\n\n    var noSwapAttrs = [\n        'anchor', 'domain', 'overlaying', 'position', 'side', 'tickangle', 'editType'\n    ];\n    var numericTypes = ['linear', 'log'];\n\n    for(i = 0; i < allAxKeys.length; i++) {\n        var keyi = allAxKeys[i];\n        var xVal = xFullAxes[0][keyi];\n        var yVal = yFullAxes[0][keyi];\n        var allEqual = true;\n        var coerceLinearX = false;\n        var coerceLinearY = false;\n        if(keyi.charAt(0) === '_' || typeof xVal === 'function' ||\n                noSwapAttrs.indexOf(keyi) !== -1) {\n            continue;\n        }\n        for(j = 1; j < xFullAxes.length && allEqual; j++) {\n            var xVali = xFullAxes[j][keyi];\n            if(keyi === 'type' && numericTypes.indexOf(xVal) !== -1 &&\n                    numericTypes.indexOf(xVali) !== -1 && xVal !== xVali) {\n                // type is special - if we find a mixture of linear and log,\n                // coerce them all to linear on flipping\n                coerceLinearX = true;\n            } else if(xVali !== xVal) allEqual = false;\n        }\n        for(j = 1; j < yFullAxes.length && allEqual; j++) {\n            var yVali = yFullAxes[j][keyi];\n            if(keyi === 'type' && numericTypes.indexOf(yVal) !== -1 &&\n                    numericTypes.indexOf(yVali) !== -1 && yVal !== yVali) {\n                // type is special - if we find a mixture of linear and log,\n                // coerce them all to linear on flipping\n                coerceLinearY = true;\n            } else if(yFullAxes[j][keyi] !== yVal) allEqual = false;\n        }\n        if(allEqual) {\n            if(coerceLinearX) layout[xFullAxes[0]._name].type = 'linear';\n            if(coerceLinearY) layout[yFullAxes[0]._name].type = 'linear';\n            swapAxisAttrs(layout, keyi, xFullAxes, yFullAxes, gd._fullLayout._dfltTitle);\n        }\n    }\n\n    // now swap x&y for any annotations anchored to these x & y\n    for(i = 0; i < gd._fullLayout.annotations.length; i++) {\n        var ann = gd._fullLayout.annotations[i];\n        if(xIds.indexOf(ann.xref) !== -1 &&\n                yIds.indexOf(ann.yref) !== -1) {\n            Lib.swapAttrs(layout.annotations[i], ['?']);\n        }\n    }\n}\n\nfunction swapAxisAttrs(layout, key, xFullAxes, yFullAxes, dfltTitle) {\n    // in case the value is the default for either axis,\n    // look at the first axis in each list and see if\n    // this key's value is undefined\n    var np = Lib.nestedProperty;\n    var xVal = np(layout[xFullAxes[0]._name], key).get();\n    var yVal = np(layout[yFullAxes[0]._name], key).get();\n    var i;\n\n    if(key === 'title') {\n        // special handling of placeholder titles\n        if(xVal && xVal.text === dfltTitle.x) {\n            xVal.text = dfltTitle.y;\n        }\n        if(yVal && yVal.text === dfltTitle.y) {\n            yVal.text = dfltTitle.x;\n        }\n    }\n\n    for(i = 0; i < xFullAxes.length; i++) {\n        np(layout, xFullAxes[i]._name + '.' + key).set(yVal);\n    }\n    for(i = 0; i < yFullAxes.length; i++) {\n        np(layout, yFullAxes[i]._name + '.' + key).set(xVal);\n    }\n}\n\nfunction isAngular(ax) {\n    return ax._id === 'angularaxis';\n}\n\nfunction moveOutsideBreak(v, ax) {\n    var len = ax._rangebreaks.length;\n    for(var k = 0; k < len; k++) {\n        var brk = ax._rangebreaks[k];\n        if(v >= brk.min && v < brk.max) {\n            return brk.max;\n        }\n    }\n    return v;\n}\n"]},"metadata":{},"sourceType":"script"}