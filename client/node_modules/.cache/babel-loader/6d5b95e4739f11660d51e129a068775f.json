{"ast":null,"code":"\"use strict\";\n\nmodule.exports = permutationSign;\nvar BRUTE_FORCE_CUTOFF = 32;\n\nvar pool = require(\"typedarray-pool\");\n\nfunction permutationSign(p) {\n  var n = p.length;\n\n  if (n < BRUTE_FORCE_CUTOFF) {\n    //Use quadratic algorithm for small n\n    var sgn = 1;\n\n    for (var i = 0; i < n; ++i) {\n      for (var j = 0; j < i; ++j) {\n        if (p[i] < p[j]) {\n          sgn = -sgn;\n        } else if (p[i] === p[j]) {\n          return 0;\n        }\n      }\n    }\n\n    return sgn;\n  } else {\n    //Otherwise use linear time algorithm\n    var visited = pool.mallocUint8(n);\n\n    for (var i = 0; i < n; ++i) {\n      visited[i] = 0;\n    }\n\n    var sgn = 1;\n\n    for (var i = 0; i < n; ++i) {\n      if (!visited[i]) {\n        var count = 1;\n        visited[i] = 1;\n\n        for (var j = p[i]; j !== i; j = p[j]) {\n          if (visited[j]) {\n            pool.freeUint8(visited);\n            return 0;\n          }\n\n          count += 1;\n          visited[j] = 1;\n        }\n\n        if (!(count & 1)) {\n          sgn = -sgn;\n        }\n      }\n    }\n\n    pool.freeUint8(visited);\n    return sgn;\n  }\n}","map":{"version":3,"sources":["/Users/caseyrudick/Documents/landsharkrefactored-copy/client/node_modules/permutation-parity/permutation-sign.js"],"names":["module","exports","permutationSign","BRUTE_FORCE_CUTOFF","pool","require","p","n","length","sgn","i","j","visited","mallocUint8","count","freeUint8"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,eAAjB;AAEA,IAAIC,kBAAkB,GAAG,EAAzB;;AAEA,IAAIC,IAAI,GAAGC,OAAO,CAAC,iBAAD,CAAlB;;AAEA,SAASH,eAAT,CAAyBI,CAAzB,EAA4B;AAC1B,MAAIC,CAAC,GAAGD,CAAC,CAACE,MAAV;;AACA,MAAGD,CAAC,GAAGJ,kBAAP,EAA2B;AACzB;AACA,QAAIM,GAAG,GAAG,CAAV;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACH,CAAf,EAAkB,EAAEG,CAApB,EAAuB;AACrB,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACD,CAAf,EAAkB,EAAEC,CAApB,EAAuB;AACrB,YAAGL,CAAC,CAACI,CAAD,CAAD,GAAOJ,CAAC,CAACK,CAAD,CAAX,EAAgB;AACdF,UAAAA,GAAG,GAAG,CAACA,GAAP;AACD,SAFD,MAEO,IAAGH,CAAC,CAACI,CAAD,CAAD,KAASJ,CAAC,CAACK,CAAD,CAAb,EAAkB;AACvB,iBAAO,CAAP;AACD;AACF;AACF;;AACD,WAAOF,GAAP;AACD,GAbD,MAaO;AACL;AACA,QAAIG,OAAO,GAAGR,IAAI,CAACS,WAAL,CAAiBN,CAAjB,CAAd;;AACA,SAAI,IAAIG,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACH,CAAf,EAAkB,EAAEG,CAApB,EAAuB;AACrBE,MAAAA,OAAO,CAACF,CAAD,CAAP,GAAa,CAAb;AACD;;AACD,QAAID,GAAG,GAAG,CAAV;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACH,CAAf,EAAkB,EAAEG,CAApB,EAAuB;AACrB,UAAG,CAACE,OAAO,CAACF,CAAD,CAAX,EAAgB;AACd,YAAII,KAAK,GAAG,CAAZ;AACAF,QAAAA,OAAO,CAACF,CAAD,CAAP,GAAa,CAAb;;AACA,aAAI,IAAIC,CAAC,GAACL,CAAC,CAACI,CAAD,CAAX,EAAgBC,CAAC,KAAGD,CAApB,EAAuBC,CAAC,GAACL,CAAC,CAACK,CAAD,CAA1B,EAA+B;AAC7B,cAAGC,OAAO,CAACD,CAAD,CAAV,EAAe;AACbP,YAAAA,IAAI,CAACW,SAAL,CAAeH,OAAf;AACA,mBAAO,CAAP;AACD;;AACDE,UAAAA,KAAK,IAAI,CAAT;AACAF,UAAAA,OAAO,CAACD,CAAD,CAAP,GAAa,CAAb;AACD;;AACD,YAAG,EAAEG,KAAK,GAAG,CAAV,CAAH,EAAiB;AACfL,UAAAA,GAAG,GAAG,CAACA,GAAP;AACD;AACF;AACF;;AACDL,IAAAA,IAAI,CAACW,SAAL,CAAeH,OAAf;AACA,WAAOH,GAAP;AACD;AACF","sourcesContent":["\"use strict\"\n\nmodule.exports = permutationSign\n\nvar BRUTE_FORCE_CUTOFF = 32\n\nvar pool = require(\"typedarray-pool\")\n\nfunction permutationSign(p) {\n  var n = p.length\n  if(n < BRUTE_FORCE_CUTOFF) {\n    //Use quadratic algorithm for small n\n    var sgn = 1\n    for(var i=0; i<n; ++i) {\n      for(var j=0; j<i; ++j) {\n        if(p[i] < p[j]) {\n          sgn = -sgn\n        } else if(p[i] === p[j]) {\n          return 0\n        }\n      }\n    }\n    return sgn\n  } else {\n    //Otherwise use linear time algorithm\n    var visited = pool.mallocUint8(n)\n    for(var i=0; i<n; ++i) {\n      visited[i] = 0\n    }\n    var sgn = 1\n    for(var i=0; i<n; ++i) {\n      if(!visited[i]) {\n        var count = 1\n        visited[i] = 1\n        for(var j=p[i]; j!==i; j=p[j]) {\n          if(visited[j]) {\n            pool.freeUint8(visited)\n            return 0\n          }\n          count += 1\n          visited[j] = 1\n        }\n        if(!(count & 1)) {\n          sgn = -sgn\n        }\n      }\n    }\n    pool.freeUint8(visited)\n    return sgn\n  }\n}"]},"metadata":{},"sourceType":"script"}