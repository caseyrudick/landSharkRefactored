{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/UserVerification/SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport UserPool from \"./UserPool\";\nimport { AuthenticationDetails, CognitoUser } from 'amazon-cognito-identity-js';\n\nconst SignUp = () => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [userSubmittedCredentials, setSubmittedCreds] = useState(false);\n  const [verificationCode, setVerificationCode] = useState(null);\n  const [verficationSuccess, setVerificationSucess] = useState(false);\n\n  const submitNewUser = event => {\n    event.preventDefault();\n    UserPool.signUp(email, password, [], null, (err, data) => {\n      if (err) {\n        console.log(err);\n      } else {\n        console.log(data);\n        setSubmittedCreds(true);\n      }\n    });\n  };\n\n  const renderSignUp = () => {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Jumbotron, {\n        fluid: true,\n        className: \"bg-dark text-white\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"LandShark App (Employee Portal)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"justify-content-md-center\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            placeholder: \"Enter Email\",\n            onChange: event => setEmail(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            placeholder: \"Create Password\",\n            onChange: event => setPassword(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"info\",\n          disabled: email === \"\" && password === \"\" && userSubmittedCredentials === false ? true : false,\n          onClick: e => submitNewUser(e),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  };\n\n  const verifyConfirmationCode = event => {\n    event.preventDefault();\n    const userData = {\n      Username: email,\n      Pool: UserPool\n    };\n    console.log(verificationCode);\n    const congitoUser = new CognitoUser(userData);\n    congitoUser.confirmRegistration(verificationCode, true, (err, result) => {\n      if (err) {\n        console.log(err);\n      } else {\n        console.log(result);\n        setVerificationSucess(true);\n      }\n    });\n  };\n\n  const renderCodeResponse = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Registration Sucessful\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  };\n\n  const renderConfirmationCodeForm = () => {\n    return /*#__PURE__*/_jsxDEV(Col, {\n      xs: 5,\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"justify-content-md-center\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"mt-4\",\n            children: \"Confirmation Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"mt-3\",\n          placeholder: \"Enter Verification Code\",\n          onChange: event => setVerificationCode(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"mt-4\",\n          variant: \"primary\",\n          disabled: verificationCode === \"\" ? true : false,\n          onClick: event => verifyConfirmationCode(event),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 8\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-4\",\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      children: [renderSignUp(), userSubmittedCredentials ? renderConfirmationCodeForm() : null, verficationSuccess ? \"Registration Successful\" : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignUp, \"jUkT8+cMPgXWdeGUWYbIhf8sDDk=\");\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/UserVerification/SignUp.js"],"names":["React","useState","Container","Row","Col","Button","Form","Jumbotron","UserPool","AuthenticationDetails","CognitoUser","SignUp","email","setEmail","password","setPassword","userSubmittedCredentials","setSubmittedCreds","verificationCode","setVerificationCode","verficationSuccess","setVerificationSucess","submitNewUser","event","preventDefault","signUp","err","data","console","log","renderSignUp","target","value","e","verifyConfirmationCode","userData","Username","Pool","congitoUser","confirmRegistration","result","renderCodeResponse","renderConfirmationCodeForm"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n\nimport UserPool from \"./UserPool\"\nimport { AuthenticationDetails, CognitoUser } from 'amazon-cognito-identity-js';\n\n\nconst SignUp = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [userSubmittedCredentials, setSubmittedCreds] = useState(false)\n  const [verificationCode, setVerificationCode] = useState(null)\n  const [verficationSuccess, setVerificationSucess] = useState(false)\n  \n  const submitNewUser = event => {\n    event.preventDefault();\n    UserPool.signUp(email, password, [], null, (err, data) => {\n      if (err) {\n        console.log(err)\n      } else {\n        console.log(data)\n        setSubmittedCreds(true)\n      }\n    })\n  }\n\n  const renderSignUp = () => {\n    return (\n      <React.Fragment>\n        <Jumbotron fluid className=\"bg-dark text-white\">\n          <Container>\n            <h1>LandShark App (Employee Portal)</h1>\n          </Container>\n        </Jumbotron>\n        <Col>\n          <Row className=\"justify-content-md-center\">\n            <h3>Sign Up</h3>\n          </Row>\n          <Form.Group>\n            <Form.Control placeholder=\"Enter Email\" onChange={event => setEmail(event.target.value)} />\n          </Form.Group>\n          <Form.Group>\n            <Form.Control placeholder=\"Create Password\" onChange={event => setPassword(event.target.value)} />\n          </Form.Group>\n            <Button variant=\"info\" disabled={ email === \"\" && password === \"\" && userSubmittedCredentials === false ? true : false } onClick={(e)=>submitNewUser(e)}>Submit</Button>\n        </Col>\n      </React.Fragment>\n    )\n  }\n\n  const verifyConfirmationCode = event => {\n    event.preventDefault()\n    const userData = {\n      Username: email,\n      Pool: UserPool\n    }\n    console.log(verificationCode)\n    const congitoUser = new CognitoUser(userData);\n    congitoUser.confirmRegistration(verificationCode, true, (err, result) => {\n      if (err) {\n        console.log(err)\n      } else {\n        console.log(result)\n        setVerificationSucess(true)\n      }\n    })\n  }\n\n  const renderCodeResponse = () => {\n    return (\n      <div>\n        Registration Sucessful\n      </div>\n    )\n  }\n\n\n  const renderConfirmationCodeForm = () => {\n     return (\n       <Col xs={5}>\n        <Form.Group>\n          <Row className=\"justify-content-md-center\">\n            <h3 className=\"mt-4\">Confirmation Code</h3>\n          </Row>\n          <Form.Control className=\"mt-3\" placeholder=\"Enter Verification Code\" onChange={event => setVerificationCode(event.target.value)} />\n          <Button className=\"mt-4\" variant=\"primary\" disabled={ verificationCode === \"\" ? true : false } onClick={(event) => verifyConfirmationCode(event)}>Submit</Button>\n        </Form.Group>\n      </Col>\n     )\n  }\n\n  return (\n    <Container className=\"mt-4\">\n      <Col >\n        {renderSignUp()}\n        {userSubmittedCredentials ? renderConfirmationCodeForm() : null }\n        {verficationSuccess ? \"Registration Successful\" : \"\"}\n      </Col>\n    </Container>\n  )\n\n}\n\nexport default SignUp"]},"metadata":{},"sourceType":"module"}