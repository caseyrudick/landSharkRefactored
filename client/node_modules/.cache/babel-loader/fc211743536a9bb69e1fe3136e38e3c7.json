{"ast":null,"code":"/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar d3 = require('d3');\n\nmodule.exports = function getUpdateObject(axisLayout, buttonLayout) {\n  var axName = axisLayout._name;\n  var update = {};\n\n  if (buttonLayout.step === 'all') {\n    update[axName + '.autorange'] = true;\n  } else {\n    var xrange = getXRange(axisLayout, buttonLayout);\n    update[axName + '.range[0]'] = xrange[0];\n    update[axName + '.range[1]'] = xrange[1];\n  }\n\n  return update;\n};\n\nfunction getXRange(axisLayout, buttonLayout) {\n  var currentRange = axisLayout.range;\n  var base = new Date(axisLayout.r2l(currentRange[1]));\n  var step = buttonLayout.step;\n  var count = buttonLayout.count;\n  var range0;\n\n  switch (buttonLayout.stepmode) {\n    case 'backward':\n      range0 = axisLayout.l2r(+d3.time[step].utc.offset(base, -count));\n      break;\n\n    case 'todate':\n      var base2 = d3.time[step].utc.offset(base, -count);\n      range0 = axisLayout.l2r(+d3.time[step].utc.ceil(base2));\n      break;\n  }\n\n  var range1 = currentRange[1];\n  return [range0, range1];\n}","map":{"version":3,"sources":["/Users/caseyrudick/Documents/landsharkrefactored-copy/client/node_modules/plotly.js/src/components/rangeselector/get_update_object.js"],"names":["d3","require","module","exports","getUpdateObject","axisLayout","buttonLayout","axName","_name","update","step","xrange","getXRange","currentRange","range","base","Date","r2l","count","range0","stepmode","l2r","time","utc","offset","base2","ceil","range1"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AAEA,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,eAAT,CAAyBC,UAAzB,EAAqCC,YAArC,EAAmD;AAChE,MAAIC,MAAM,GAAGF,UAAU,CAACG,KAAxB;AACA,MAAIC,MAAM,GAAG,EAAb;;AAEA,MAAGH,YAAY,CAACI,IAAb,KAAsB,KAAzB,EAAgC;AAC5BD,IAAAA,MAAM,CAACF,MAAM,GAAG,YAAV,CAAN,GAAgC,IAAhC;AACH,GAFD,MAEO;AACH,QAAII,MAAM,GAAGC,SAAS,CAACP,UAAD,EAAaC,YAAb,CAAtB;AAEAG,IAAAA,MAAM,CAACF,MAAM,GAAG,WAAV,CAAN,GAA+BI,MAAM,CAAC,CAAD,CAArC;AACAF,IAAAA,MAAM,CAACF,MAAM,GAAG,WAAV,CAAN,GAA+BI,MAAM,CAAC,CAAD,CAArC;AACH;;AAED,SAAOF,MAAP;AACH,CAdD;;AAgBA,SAASG,SAAT,CAAmBP,UAAnB,EAA+BC,YAA/B,EAA6C;AACzC,MAAIO,YAAY,GAAGR,UAAU,CAACS,KAA9B;AACA,MAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASX,UAAU,CAACY,GAAX,CAAeJ,YAAY,CAAC,CAAD,CAA3B,CAAT,CAAX;AACA,MAAIH,IAAI,GAAGJ,YAAY,CAACI,IAAxB;AACA,MAAIQ,KAAK,GAAGZ,YAAY,CAACY,KAAzB;AACA,MAAIC,MAAJ;;AAEA,UAAOb,YAAY,CAACc,QAApB;AACI,SAAK,UAAL;AACID,MAAAA,MAAM,GAAGd,UAAU,CAACgB,GAAX,CAAe,CAACrB,EAAE,CAACsB,IAAH,CAAQZ,IAAR,EAAca,GAAd,CAAkBC,MAAlB,CAAyBT,IAAzB,EAA+B,CAACG,KAAhC,CAAhB,CAAT;AACA;;AAEJ,SAAK,QAAL;AACI,UAAIO,KAAK,GAAGzB,EAAE,CAACsB,IAAH,CAAQZ,IAAR,EAAca,GAAd,CAAkBC,MAAlB,CAAyBT,IAAzB,EAA+B,CAACG,KAAhC,CAAZ;AAEAC,MAAAA,MAAM,GAAGd,UAAU,CAACgB,GAAX,CAAe,CAACrB,EAAE,CAACsB,IAAH,CAAQZ,IAAR,EAAca,GAAd,CAAkBG,IAAlB,CAAuBD,KAAvB,CAAhB,CAAT;AACA;AATR;;AAYA,MAAIE,MAAM,GAAGd,YAAY,CAAC,CAAD,CAAzB;AAEA,SAAO,CAACM,MAAD,EAASQ,MAAT,CAAP;AACH","sourcesContent":["/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar d3 = require('d3');\n\nmodule.exports = function getUpdateObject(axisLayout, buttonLayout) {\n    var axName = axisLayout._name;\n    var update = {};\n\n    if(buttonLayout.step === 'all') {\n        update[axName + '.autorange'] = true;\n    } else {\n        var xrange = getXRange(axisLayout, buttonLayout);\n\n        update[axName + '.range[0]'] = xrange[0];\n        update[axName + '.range[1]'] = xrange[1];\n    }\n\n    return update;\n};\n\nfunction getXRange(axisLayout, buttonLayout) {\n    var currentRange = axisLayout.range;\n    var base = new Date(axisLayout.r2l(currentRange[1]));\n    var step = buttonLayout.step;\n    var count = buttonLayout.count;\n    var range0;\n\n    switch(buttonLayout.stepmode) {\n        case 'backward':\n            range0 = axisLayout.l2r(+d3.time[step].utc.offset(base, -count));\n            break;\n\n        case 'todate':\n            var base2 = d3.time[step].utc.offset(base, -count);\n\n            range0 = axisLayout.l2r(+d3.time[step].utc.ceil(base2));\n            break;\n    }\n\n    var range1 = currentRange[1];\n\n    return [range0, range1];\n}\n"]},"metadata":{},"sourceType":"script"}