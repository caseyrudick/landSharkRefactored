{"ast":null,"code":"/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict'; // more info: http://stackoverflow.com/questions/18531624/isplainobject-thing\n\nmodule.exports = function isPlainObject(obj) {\n  // We need to be a little less strict in the `imagetest` container because\n  // of how async image requests are handled.\n  //\n  // N.B. isPlainObject(new Constructor()) will return true in `imagetest`\n  if (window && window.process && window.process.versions) {\n    return Object.prototype.toString.call(obj) === '[object Object]';\n  }\n\n  return Object.prototype.toString.call(obj) === '[object Object]' && Object.getPrototypeOf(obj) === Object.prototype;\n};","map":{"version":3,"sources":["/Users/caseyrudick/Documents/landsharkrefactored-copy/client/node_modules/plotly.js/src/lib/is_plain_object.js"],"names":["module","exports","isPlainObject","obj","window","process","versions","Object","prototype","toString","call","getPrototypeOf"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,a,CAEA;;AACAA,MAAM,CAACC,OAAP,GAAiB,SAASC,aAAT,CAAuBC,GAAvB,EAA4B;AACzC;AACA;AACA;AACA;AACA,MAAGC,MAAM,IAAIA,MAAM,CAACC,OAAjB,IAA4BD,MAAM,CAACC,OAAP,CAAeC,QAA9C,EAAwD;AACpD,WAAOC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BP,GAA/B,MAAwC,iBAA/C;AACH;;AAED,SACII,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BP,GAA/B,MAAwC,iBAAxC,IACAI,MAAM,CAACI,cAAP,CAAsBR,GAAtB,MAA+BI,MAAM,CAACC,SAF1C;AAIH,CAbD","sourcesContent":["/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\n// more info: http://stackoverflow.com/questions/18531624/isplainobject-thing\nmodule.exports = function isPlainObject(obj) {\n    // We need to be a little less strict in the `imagetest` container because\n    // of how async image requests are handled.\n    //\n    // N.B. isPlainObject(new Constructor()) will return true in `imagetest`\n    if(window && window.process && window.process.versions) {\n        return Object.prototype.toString.call(obj) === '[object Object]';\n    }\n\n    return (\n        Object.prototype.toString.call(obj) === '[object Object]' &&\n        Object.getPrototypeOf(obj) === Object.prototype\n    );\n};\n"]},"metadata":{},"sourceType":"script"}