{"ast":null,"code":"/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar fontAttrs = require('../../plots/font_attributes');\n\nvar colorAttrs = require('../color/attributes');\n\nmodule.exports = {\n  bgcolor: {\n    valType: 'color',\n    role: 'style',\n    editType: 'legend',\n    description: ['Sets the legend background color.', 'Defaults to `layout.paper_bgcolor`.'].join(' ')\n  },\n  bordercolor: {\n    valType: 'color',\n    dflt: colorAttrs.defaultLine,\n    role: 'style',\n    editType: 'legend',\n    description: 'Sets the color of the border enclosing the legend.'\n  },\n  borderwidth: {\n    valType: 'number',\n    min: 0,\n    dflt: 0,\n    role: 'style',\n    editType: 'legend',\n    description: 'Sets the width (in px) of the border enclosing the legend.'\n  },\n  font: fontAttrs({\n    editType: 'legend',\n    description: 'Sets the font used to text the legend items.'\n  }),\n  orientation: {\n    valType: 'enumerated',\n    values: ['v', 'h'],\n    dflt: 'v',\n    role: 'info',\n    editType: 'legend',\n    description: 'Sets the orientation of the legend.'\n  },\n  traceorder: {\n    valType: 'flaglist',\n    flags: ['reversed', 'grouped'],\n    extras: ['normal'],\n    role: 'style',\n    editType: 'legend',\n    description: ['Determines the order at which the legend items are displayed.', 'If *normal*, the items are displayed top-to-bottom in the same', 'order as the input data.', 'If *reversed*, the items are displayed in the opposite order', 'as *normal*.', 'If *grouped*, the items are displayed in groups', '(when a trace `legendgroup` is provided).', 'if *grouped+reversed*, the items are displayed in the opposite order', 'as *grouped*.'].join(' ')\n  },\n  tracegroupgap: {\n    valType: 'number',\n    min: 0,\n    dflt: 10,\n    role: 'style',\n    editType: 'legend',\n    description: ['Sets the amount of vertical space (in px) between legend groups.'].join(' ')\n  },\n  itemsizing: {\n    valType: 'enumerated',\n    values: ['trace', 'constant'],\n    dflt: 'trace',\n    role: 'style',\n    editType: 'legend',\n    description: ['Determines if the legend items symbols scale with their corresponding *trace* attributes', 'or remain *constant* independent of the symbol size on the graph.'].join(' ')\n  },\n  itemwidth: {\n    valType: 'number',\n    min: 30,\n    dflt: 30,\n    role: 'style',\n    editType: 'legend',\n    description: 'Sets the width (in px) of the legend item symbols (the part other than the title.text).'\n  },\n  itemclick: {\n    valType: 'enumerated',\n    values: ['toggle', 'toggleothers', false],\n    dflt: 'toggle',\n    role: 'info',\n    editType: 'legend',\n    description: ['Determines the behavior on legend item click.', '*toggle* toggles the visibility of the item clicked on the graph.', '*toggleothers* makes the clicked item the sole visible item on the graph.', '*false* disable legend item click interactions.'].join(' ')\n  },\n  itemdoubleclick: {\n    valType: 'enumerated',\n    values: ['toggle', 'toggleothers', false],\n    dflt: 'toggleothers',\n    role: 'info',\n    editType: 'legend',\n    description: ['Determines the behavior on legend item double-click.', '*toggle* toggles the visibility of the item clicked on the graph.', '*toggleothers* makes the clicked item the sole visible item on the graph.', '*false* disable legend item double-click interactions.'].join(' ')\n  },\n  x: {\n    valType: 'number',\n    min: -2,\n    max: 3,\n    role: 'style',\n    editType: 'legend',\n    description: ['Sets the x position (in normalized coordinates) of the legend.', 'Defaults to *1.02* for vertical legends and', 'defaults to *0* for horizontal legends.'].join(' ')\n  },\n  xanchor: {\n    valType: 'enumerated',\n    values: ['auto', 'left', 'center', 'right'],\n    dflt: 'left',\n    role: 'info',\n    editType: 'legend',\n    description: ['Sets the legend\\'s horizontal position anchor.', 'This anchor binds the `x` position to the *left*, *center*', 'or *right* of the legend.', 'Value *auto* anchors legends to the right for `x` values greater than or equal to 2/3,', 'anchors legends to the left for `x` values less than or equal to 1/3 and', 'anchors legends with respect to their center otherwise.'].join(' ')\n  },\n  y: {\n    valType: 'number',\n    min: -2,\n    max: 3,\n    role: 'style',\n    editType: 'legend',\n    description: ['Sets the y position (in normalized coordinates) of the legend.', 'Defaults to *1* for vertical legends,', 'defaults to *-0.1* for horizontal legends on graphs w/o range sliders and', 'defaults to *1.1* for horizontal legends on graph with one or multiple range sliders.'].join(' ')\n  },\n  yanchor: {\n    valType: 'enumerated',\n    values: ['auto', 'top', 'middle', 'bottom'],\n    role: 'info',\n    editType: 'legend',\n    description: ['Sets the legend\\'s vertical position anchor', 'This anchor binds the `y` position to the *top*, *middle*', 'or *bottom* of the legend.', 'Value *auto* anchors legends at their bottom for `y` values less than or equal to 1/3,', 'anchors legends to at their top for `y` values greater than or equal to 2/3 and', 'anchors legends with respect to their middle otherwise.'].join(' ')\n  },\n  uirevision: {\n    valType: 'any',\n    role: 'info',\n    editType: 'none',\n    description: ['Controls persistence of legend-driven changes in trace and pie label', 'visibility. Defaults to `layout.uirevision`.'].join(' ')\n  },\n  valign: {\n    valType: 'enumerated',\n    values: ['top', 'middle', 'bottom'],\n    dflt: 'middle',\n    role: 'style',\n    editType: 'legend',\n    description: ['Sets the vertical alignment of the symbols with respect to their associated text.'].join(' ')\n  },\n  title: {\n    text: {\n      valType: 'string',\n      dflt: '',\n      role: 'info',\n      editType: 'legend',\n      description: ['Sets the title of the legend.'].join(' ')\n    },\n    font: fontAttrs({\n      editType: 'legend',\n      description: ['Sets this legend\\'s title font.'].join(' ')\n    }),\n    side: {\n      valType: 'enumerated',\n      values: ['top', 'left', 'top left'],\n      role: 'style',\n      editType: 'legend',\n      description: ['Determines the location of legend\\'s title', 'with respect to the legend items.', 'Defaulted to *top* with `orientation` is *h*.', 'Defaulted to *left* with `orientation` is *v*.', 'The *top left* options could be used to expand', 'legend area in both x and y sides.'].join(' ')\n    },\n    editType: 'legend'\n  },\n  editType: 'legend'\n};","map":{"version":3,"sources":["/Users/caseyrudick/Documents/landsharkrefactored-copy/client/node_modules/plotly.js/src/components/legend/attributes.js"],"names":["fontAttrs","require","colorAttrs","module","exports","bgcolor","valType","role","editType","description","join","bordercolor","dflt","defaultLine","borderwidth","min","font","orientation","values","traceorder","flags","extras","tracegroupgap","itemsizing","itemwidth","itemclick","itemdoubleclick","x","max","xanchor","y","yanchor","uirevision","valign","title","text","side"],"mappings":"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","sourcesContent":["/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar fontAttrs = require('../../plots/font_attributes');\nvar colorAttrs = require('../color/attributes');\n\n\nmodule.exports = {\n    bgcolor: {\n        valType: 'color',\n        role: 'style',\n        editType: 'legend',\n        description: [\n            'Sets the legend background color.',\n            'Defaults to `layout.paper_bgcolor`.'\n        ].join(' ')\n    },\n    bordercolor: {\n        valType: 'color',\n        dflt: colorAttrs.defaultLine,\n        role: 'style',\n        editType: 'legend',\n        description: 'Sets the color of the border enclosing the legend.'\n    },\n    borderwidth: {\n        valType: 'number',\n        min: 0,\n        dflt: 0,\n        role: 'style',\n        editType: 'legend',\n        description: 'Sets the width (in px) of the border enclosing the legend.'\n    },\n    font: fontAttrs({\n        editType: 'legend',\n        description: 'Sets the font used to text the legend items.'\n    }),\n    orientation: {\n        valType: 'enumerated',\n        values: ['v', 'h'],\n        dflt: 'v',\n        role: 'info',\n        editType: 'legend',\n        description: 'Sets the orientation of the legend.'\n    },\n    traceorder: {\n        valType: 'flaglist',\n        flags: ['reversed', 'grouped'],\n        extras: ['normal'],\n        role: 'style',\n        editType: 'legend',\n        description: [\n            'Determines the order at which the legend items are displayed.',\n\n            'If *normal*, the items are displayed top-to-bottom in the same',\n            'order as the input data.',\n\n            'If *reversed*, the items are displayed in the opposite order',\n            'as *normal*.',\n\n            'If *grouped*, the items are displayed in groups',\n            '(when a trace `legendgroup` is provided).',\n\n            'if *grouped+reversed*, the items are displayed in the opposite order',\n            'as *grouped*.'\n        ].join(' ')\n    },\n    tracegroupgap: {\n        valType: 'number',\n        min: 0,\n        dflt: 10,\n        role: 'style',\n        editType: 'legend',\n        description: [\n            'Sets the amount of vertical space (in px) between legend groups.'\n        ].join(' ')\n    },\n    itemsizing: {\n        valType: 'enumerated',\n        values: ['trace', 'constant'],\n        dflt: 'trace',\n        role: 'style',\n        editType: 'legend',\n        description: [\n            'Determines if the legend items symbols scale with their corresponding *trace* attributes',\n            'or remain *constant* independent of the symbol size on the graph.'\n        ].join(' ')\n    },\n    itemwidth: {\n        valType: 'number',\n        min: 30,\n        dflt: 30,\n        role: 'style',\n        editType: 'legend',\n        description: 'Sets the width (in px) of the legend item symbols (the part other than the title.text).',\n    },\n\n    itemclick: {\n        valType: 'enumerated',\n        values: ['toggle', 'toggleothers', false],\n        dflt: 'toggle',\n        role: 'info',\n        editType: 'legend',\n        description: [\n            'Determines the behavior on legend item click.',\n            '*toggle* toggles the visibility of the item clicked on the graph.',\n            '*toggleothers* makes the clicked item the sole visible item on the graph.',\n            '*false* disable legend item click interactions.'\n        ].join(' ')\n    },\n    itemdoubleclick: {\n        valType: 'enumerated',\n        values: ['toggle', 'toggleothers', false],\n        dflt: 'toggleothers',\n        role: 'info',\n        editType: 'legend',\n        description: [\n            'Determines the behavior on legend item double-click.',\n            '*toggle* toggles the visibility of the item clicked on the graph.',\n            '*toggleothers* makes the clicked item the sole visible item on the graph.',\n            '*false* disable legend item double-click interactions.'\n        ].join(' ')\n    },\n\n    x: {\n        valType: 'number',\n        min: -2,\n        max: 3,\n        role: 'style',\n        editType: 'legend',\n        description: [\n            'Sets the x position (in normalized coordinates) of the legend.',\n            'Defaults to *1.02* for vertical legends and',\n            'defaults to *0* for horizontal legends.'\n        ].join(' ')\n    },\n    xanchor: {\n        valType: 'enumerated',\n        values: ['auto', 'left', 'center', 'right'],\n        dflt: 'left',\n        role: 'info',\n        editType: 'legend',\n        description: [\n            'Sets the legend\\'s horizontal position anchor.',\n            'This anchor binds the `x` position to the *left*, *center*',\n            'or *right* of the legend.',\n            'Value *auto* anchors legends to the right for `x` values greater than or equal to 2/3,',\n            'anchors legends to the left for `x` values less than or equal to 1/3 and',\n            'anchors legends with respect to their center otherwise.'\n        ].join(' ')\n    },\n    y: {\n        valType: 'number',\n        min: -2,\n        max: 3,\n        role: 'style',\n        editType: 'legend',\n        description: [\n            'Sets the y position (in normalized coordinates) of the legend.',\n            'Defaults to *1* for vertical legends,',\n            'defaults to *-0.1* for horizontal legends on graphs w/o range sliders and',\n            'defaults to *1.1* for horizontal legends on graph with one or multiple range sliders.'\n        ].join(' ')\n    },\n    yanchor: {\n        valType: 'enumerated',\n        values: ['auto', 'top', 'middle', 'bottom'],\n        role: 'info',\n        editType: 'legend',\n        description: [\n            'Sets the legend\\'s vertical position anchor',\n            'This anchor binds the `y` position to the *top*, *middle*',\n            'or *bottom* of the legend.',\n            'Value *auto* anchors legends at their bottom for `y` values less than or equal to 1/3,',\n            'anchors legends to at their top for `y` values greater than or equal to 2/3 and',\n            'anchors legends with respect to their middle otherwise.'\n        ].join(' ')\n    },\n    uirevision: {\n        valType: 'any',\n        role: 'info',\n        editType: 'none',\n        description: [\n            'Controls persistence of legend-driven changes in trace and pie label',\n            'visibility. Defaults to `layout.uirevision`.'\n        ].join(' ')\n    },\n    valign: {\n        valType: 'enumerated',\n        values: ['top', 'middle', 'bottom'],\n        dflt: 'middle',\n        role: 'style',\n        editType: 'legend',\n        description: [\n            'Sets the vertical alignment of the symbols with respect to their associated text.',\n        ].join(' ')\n    },\n    title: {\n        text: {\n            valType: 'string',\n            dflt: '',\n            role: 'info',\n            editType: 'legend',\n            description: [\n                'Sets the title of the legend.'\n            ].join(' ')\n        },\n        font: fontAttrs({\n            editType: 'legend',\n            description: [\n                'Sets this legend\\'s title font.'\n            ].join(' '),\n        }),\n        side: {\n            valType: 'enumerated',\n            values: ['top', 'left', 'top left'],\n            role: 'style',\n            editType: 'legend',\n            description: [\n                'Determines the location of legend\\'s title',\n                'with respect to the legend items.',\n                'Defaulted to *top* with `orientation` is *h*.',\n                'Defaulted to *left* with `orientation` is *v*.',\n                'The *top left* options could be used to expand',\n                'legend area in both x and y sides.'\n            ].join(' ')\n        },\n        editType: 'legend',\n    },\n\n    editType: 'legend'\n};\n"]},"metadata":{},"sourceType":"script"}