{"ast":null,"code":"// import React, { useState } from \"react\"\n// import { connect } from \"react-redux\"\n// import Container from \"react-bootstrap/esm/Container\"\n// import Form from \"react-bootstrap/Form\"\n// import Row from \"react-bootstrap/Row\"\n// import Col from \"react-bootstrap/Col\"\n// import Button from \"react-bootstrap/Button\"\n// import 'react-datasheet/lib/react-datasheet.css'\n// import ReactDataSheet from \"react-datasheet\"\n// import saveWellPlansToJSONDb from \"../ActionCreators/saveWellPlansToJSONDb\"\n// const ExistingWellPlans = ({saveWellPlansToJSONDb, saveActiveWellToReduxStoreReducer, getWellsFromJSONDbReducer}) => {\n//   const [plans, setPlans] = useState([])\n//   const [grid, setGrid] = useState([])\n//   const [grid, setGrid] = useState(initialGrid);\n//   const onCellsChanged = (changes) => {\n//     const newGrid = grid.map(row => [...row])\n//     changes.forEach(({cell, row, col, value}) => {\n//       newGrid[row][col] = {...grid[row][col], value}\n//     })\n//     setGrid(newGrid)\n//   }\n//   const addNewRow = () => {\n//     const localGrid = [{value: grid.length + 1, readOnly: true}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}]\n//     setGrid([...grid, localGrid])\n//   };\n//   const editPlans = () => {\n//     setEditGrid(!editGrid)\n//     const gridNew = grid.map(row => [...row]);\n//     for (let row = 1; row < gridNew.length; row ++) {\n//       for (let col = 1; col < gridNew[row].length; col ++) {\n//         gridNew[row][col].readOnly = editGrid;\n//       }\n//     }\n//     setGrid(gridNew);\n//   };\n//   const removeRow = () => {\n//     const newGrid = [...grid];\n//     newGrid.pop();\n//     setGrid(newGrid);\n//   };\n//   return (\n//     <Container>\n//       <Col>EXISTING PLANS</Col>\n//       <ReactDataSheet\n//         data={grid}\n//         valueRenderer={(cell)=> cell.value}\n//         onCellsChanged={onCellsChanged}\n//       ></ReactDataSheet>\n//       <Col>\n//     <Button variant=\"primary\" className=\"mt-4 mb-4\" onClick={()=>addNewRow()}>Add a Row</Button>\n//     <Button variant=\"danger\" className=\"my-4 ml-4\" onClick={()=>removeRow()}>Remove a Row</Button>\n//     <Button variant=\"info\" className=\"my-4 ml-4\" onClick={()=>editPlans()}>Edit Plans</Button>\n//     <Button variant=\"info\" className=\"my-4 ml-4\" onClick={()=>createNewPlan()}>Create New Plan</Button>\n//       </Col>\n//     </Container>\n//   )\n// }\n// const mapStateToProps = ({saveActiveWellToReduxStoreReducer, getWellsFromJSONDbReducer}) => {\n//   return {\n//     saveActiveWellToReduxStoreReducer,\n//     getWellsFromJSONDbReducer\n//   }\n// }\n// export default connect(mapStateToProps)(ExistingWellPlans)","map":{"version":3,"sources":["/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/ExistingPlans.js"],"names":[],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { useState } from \"react\"\n// import { connect } from \"react-redux\"\n\n// import Container from \"react-bootstrap/esm/Container\"\n// import Form from \"react-bootstrap/Form\"\n// import Row from \"react-bootstrap/Row\"\n// import Col from \"react-bootstrap/Col\"\n// import Button from \"react-bootstrap/Button\"\n\n// import 'react-datasheet/lib/react-datasheet.css'\n// import ReactDataSheet from \"react-datasheet\"\n// import saveWellPlansToJSONDb from \"../ActionCreators/saveWellPlansToJSONDb\"\n\n\n// const ExistingWellPlans = ({saveWellPlansToJSONDb, saveActiveWellToReduxStoreReducer, getWellsFromJSONDbReducer}) => {\n//   const [plans, setPlans] = useState([])\n//   const [grid, setGrid] = useState([])\n\n\n//   const [grid, setGrid] = useState(initialGrid);\n//   const onCellsChanged = (changes) => {\n//     const newGrid = grid.map(row => [...row])\n//     changes.forEach(({cell, row, col, value}) => {\n//       newGrid[row][col] = {...grid[row][col], value}\n//     })\n//     setGrid(newGrid)\n//   }\n\n//   const addNewRow = () => {\n//     const localGrid = [{value: grid.length + 1, readOnly: true}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}]\n//     setGrid([...grid, localGrid])\n//   };\n\n//   const editPlans = () => {\n//     setEditGrid(!editGrid)\n//     const gridNew = grid.map(row => [...row]);\n//     for (let row = 1; row < gridNew.length; row ++) {\n//       for (let col = 1; col < gridNew[row].length; col ++) {\n//         gridNew[row][col].readOnly = editGrid;\n//       }\n//     }\n//     setGrid(gridNew);\n//   };\n\n//   const removeRow = () => {\n//     const newGrid = [...grid];\n//     newGrid.pop();\n//     setGrid(newGrid);\n//   };\n\n//   return (\n//     <Container>\n//       <Col>EXISTING PLANS</Col>\n\n//       <ReactDataSheet\n//         data={grid}\n//         valueRenderer={(cell)=> cell.value}\n//         onCellsChanged={onCellsChanged}\n//       ></ReactDataSheet>\n//       <Col>\n//     <Button variant=\"primary\" className=\"mt-4 mb-4\" onClick={()=>addNewRow()}>Add a Row</Button>\n//     <Button variant=\"danger\" className=\"my-4 ml-4\" onClick={()=>removeRow()}>Remove a Row</Button>\n//     <Button variant=\"info\" className=\"my-4 ml-4\" onClick={()=>editPlans()}>Edit Plans</Button>\n//     <Button variant=\"info\" className=\"my-4 ml-4\" onClick={()=>createNewPlan()}>Create New Plan</Button>\n    \n//       </Col>\n//     </Container>\n//   )\n// }\n\n// const mapStateToProps = ({saveActiveWellToReduxStoreReducer, getWellsFromJSONDbReducer}) => {\n//   return {\n//     saveActiveWellToReduxStoreReducer,\n//     getWellsFromJSONDbReducer\n//   }\n// }\n\n// export default connect(mapStateToProps)(ExistingWellPlans)"]},"metadata":{},"sourceType":"module"}