{"ast":null,"code":"import DLC from\"./DLC\";import RF from\"./RF\";export default(function(measuredDepthCurrent,inclinationCurrent,azimuthCurrent,measuredDepthPrior,inclinationPrior,azimuthPrior,calculatedTVDPrior){var converter=Math.PI/180;console.log(\"converter: \".concat(converter));var calculatedDLC=DLC(inclinationPrior,inclinationCurrent,azimuthPrior,azimuthCurrent);console.log(\"calculatedDLC: \".concat(calculatedDLC));var calculatedRF=RF(measuredDepthPrior,measuredDepthCurrent,calculatedDLC);console.log(\"calculatedRF: \".concat(calculatedRF));var calculatedTVDCurrent=calculatedTVDPrior+calculatedRF*(Math.cos(inclinationPrior*converter)+Math.cos(inclinationCurrent*converter));console.log(\"calculatedTVDCurrent: \".concat(calculatedTVDCurrent));return parseFloat(calculatedTVDCurrent.toFixed(2));});","map":{"version":3,"sources":["/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/HelperFunctions/Calculations/TVD.js"],"names":["DLC","RF","measuredDepthCurrent","inclinationCurrent","azimuthCurrent","measuredDepthPrior","inclinationPrior","azimuthPrior","calculatedTVDPrior","converter","Math","PI","console","log","calculatedDLC","calculatedRF","calculatedTVDCurrent","cos","parseFloat","toFixed"],"mappings":"AAAA,MAAOA,CAAAA,GAAP,KAAgB,OAAhB,CACA,MAAOC,CAAAA,EAAP,KAAe,MAAf,CAEA,eAAe,SAACC,oBAAD,CAAuBC,kBAAvB,CAA2CC,cAA3C,CAA2DC,kBAA3D,CAA+EC,gBAA/E,CAAiGC,YAAjG,CAA+GC,kBAA/G,CAAsI,CACnJ,GAAMC,CAAAA,SAAS,CAAIC,IAAI,CAACC,EAAN,CAAU,GAA5B,CACAC,OAAO,CAACC,GAAR,sBAA0BJ,SAA1B,GAEA,GAAMK,CAAAA,aAAa,CAAGd,GAAG,CAACM,gBAAD,CAAmBH,kBAAnB,CAAuCI,YAAvC,CAAqDH,cAArD,CAAzB,CACAQ,OAAO,CAACC,GAAR,0BAA8BC,aAA9B,GAEA,GAAMC,CAAAA,YAAY,CAAGd,EAAE,CAACI,kBAAD,CAAqBH,oBAArB,CAA2CY,aAA3C,CAAvB,CACAF,OAAO,CAACC,GAAR,yBAA6BE,YAA7B,GAEA,GAAMC,CAAAA,oBAAoB,CAAGR,kBAAkB,CAAGO,YAAY,EAAIL,IAAI,CAACO,GAAL,CAASX,gBAAgB,CAACG,SAA1B,EAAuCC,IAAI,CAACO,GAAL,CAASd,kBAAkB,CAACM,SAA5B,CAA3C,CAA9D,CACAG,OAAO,CAACC,GAAR,iCAAqCG,oBAArC,GAEA,MACEE,CAAAA,UAAU,CAACF,oBAAoB,CAACG,OAArB,CAA6B,CAA7B,CAAD,CADZ,CAGD,CAhBD","sourcesContent":["import DLC from \"./DLC\"\nimport RF from \"./RF\"\n\nexport default (measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior, inclinationPrior, azimuthPrior, calculatedTVDPrior) => {\n  const converter = (Math.PI)/180\n  console.log(`converter: ${converter}`)\n\n  const calculatedDLC = DLC(inclinationPrior, inclinationCurrent, azimuthPrior, azimuthCurrent)\n  console.log(`calculatedDLC: ${calculatedDLC}`)\n\n  const calculatedRF = RF(measuredDepthPrior, measuredDepthCurrent, calculatedDLC)\n  console.log(`calculatedRF: ${calculatedRF}`)\n\n  const calculatedTVDCurrent = calculatedTVDPrior + calculatedRF * (Math.cos(inclinationPrior*converter) + Math.cos(inclinationCurrent*converter));\n  console.log(`calculatedTVDCurrent: ${calculatedTVDCurrent}`)\n\n  return (\n    parseFloat(calculatedTVDCurrent.toFixed(2))\n  )\n}"]},"metadata":{},"sourceType":"module"}