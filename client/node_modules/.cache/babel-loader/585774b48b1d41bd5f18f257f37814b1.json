{"ast":null,"code":"import _toConsumableArray from\"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useState,useEffect}from\"react\";//bootstrap\nimport Container from\"react-bootstrap/esm/Container\";import Form from\"react-bootstrap/Form\";import Row from\"react-bootstrap/Row\";import Col from\"react-bootstrap/Col\";import Button from\"react-bootstrap/Button\";//other libs\nimport'react-datasheet/lib/react-datasheet.css';import{connect}from\"react-redux\";import ReactDataSheet from'react-datasheet';// actionCreators\nimport savePlansToReduxStore from\"../ActionCreators/savePlansToReduxStore\";//helper functions\nimport calculateTVD from\"../HelperFunctions/Calculations/TVD\";import calculateNS from\"../HelperFunctions/Calculations/NS\";import calculateEW from\"../HelperFunctions/Calculations/EW\";import calculateSECT from\"../HelperFunctions/Calculations/SECT\";import calculateDLS from\"../HelperFunctions/Calculations/DLS\";import postPlansToJSONDb from\"../ActionCreators/postPlansToJSONDb\";import saveSurveysToReduxStore from\"../ActionCreators/saveSurveysToReduxStore\";import postSurveysToDynamoDb from\"../ActionCreators/postSurveysToDynamoDb\";var Surveys=function Surveys(_ref){var postSurveysToDynamoDb=_ref.postSurveysToDynamoDb,activeWell=_ref.activeWell,saveSurveysToReduxStore=_ref.saveSurveysToReduxStore,savePlansToReduxStore=_ref.savePlansToReduxStore,saveWellInfoToReduxStoreReducer=_ref.saveWellInfoToReduxStoreReducer,savePlansToReduxStoreReducer=_ref.savePlansToReduxStoreReducer,postPlansToJSONDb=_ref.postPlansToJSONDb;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),editsurveys=_useState2[0],setEditsurveys=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),input=_useState4[0],setInput=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),vsDirection=_useState6[0],setVSDirection=_useState6[1];var initialSurveys=[[{value:'',readOnly:true,width:'7rem'},{value:\"Measured Depth\",readOnly:true,width:'7rem'},{value:\"Inclination\",readOnly:true,width:'7rem'},{value:\"Azimuth\",readOnly:true,width:'7rem'},{value:\"TVD\",readOnly:true,width:'7rem'},{value:\"Northing\",readOnly:true,width:'7rem'},{value:\"Easting\",readOnly:true,width:'7rem'},{value:\"VS\",readOnly:true,width:'7rem'},{value:\"DLS\",readOnly:true,width:'7rem'}],[{value:1,readOnly:true},{value:0,readOnly:true},{value:0,readOnly:true},{value:0,readOnly:true},{value:0,readOnly:true},{value:0,readOnly:true},{value:0,readOnly:true},{value:0,readOnly:true},{value:0,readOnly:true}],[{readOnly:true,value:2},{value:0},{value:0},{value:0},{value:0},{value:0},{value:0},{value:0},{value:0}],[{readOnly:true,value:3},{value:0},{value:0},{value:0},{value:0},{value:0},{value:0},{value:0},{value:0}],[{readOnly:true,value:4},{value:0},{value:0},{value:0},{value:0},{value:0},{value:0},{value:0},{value:0}],[{readOnly:true,value:5},{value:0},{value:0},{value:0},{value:0},{value:0},{value:0},{value:0},{value:0}]];var _useState7=useState(initialSurveys),_useState8=_slicedToArray(_useState7,2),surveys=_useState8[0],setSurveys=_useState8[1];useEffect(function(){if(input){performCalculations();}},[input]);useEffect(function(){handleAddRows(1);},[]);var performCalculations=function performCalculations(){surveys.map(function(row,index){if(index===0||index===1){// nothing because we don't want to run calcs on the header array\n}else{// for every array within surveys array, want to iterate over and change the values of TVD, NS, EW, SECT, & DLS\n// note val after idx is column \n// TVD order of args : (measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior, inclinationPrior, azimuthPrior, calculatedTVDPrior)\n// NS order of args: (measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior, inclinationPrior, azimuthPrior, calculatedNorthingPrior)\nvar calculatedTVD=calculateTVD(surveys[index][1].value,surveys[index][2].value,surveys[index][3].value,surveys[index-1][1].value,surveys[index-1][2].value,surveys[index-1][3].value,surveys[index-1][4].value);var calculatedNS=calculateNS(surveys[index][1].value,surveys[index][2].value,surveys[index][3].value,surveys[index-1][1].value,surveys[index-1][2].value,surveys[index-1][3].value,surveys[index-1][5].value);var calculatedEW=calculateEW(surveys[index][1].value,surveys[index][2].value,surveys[index][3].value,surveys[index-1][1].value,surveys[index-1][2].value,surveys[index-1][3].value,surveys[index-1][6].value);var calculatedSECT=calculateSECT(surveys[index][1].value,surveys[index][2].value,surveys[index][3].value,surveys[index-1][1].value,surveys[index-1][2].value,surveys[index-1][3].value,surveys[index-1][5].value,surveys[index-1][6].value,index,vsDirection);var calculatedDLS=calculateDLS(surveys[index][1].value,surveys[index][2].value,surveys[index][3].value,surveys[index-1][1].value,surveys[index-1][2].value,surveys[index-1][3].value);surveys[index][4]=_objectSpread(_objectSpread({},surveys[index][4]),{},{readOnly:true,value:calculatedTVD});console.log(calculatedTVD);surveys[index][5]=_objectSpread(_objectSpread({},surveys[index][5]),{},{readOnly:true,value:calculatedNS});surveys[index][6]=_objectSpread(_objectSpread({},surveys[index][6]),{},{readOnly:true,value:calculatedEW});surveys[index][7]=_objectSpread(_objectSpread({},surveys[index][7]),{},{readOnly:true,value:calculatedSECT});surveys[index][8]=_objectSpread(_objectSpread({},surveys[index][8]),{},{readOnly:true,value:calculatedDLS});setSurveys(surveys);setInput(false);}});};var onCellsChanged=function onCellsChanged(changes){// iterate through existing surveys to get a copy and not mutate current as we iterate over\nvar surveysNew=surveys.map(function(row){return _toConsumableArray(row);});// iterate through the changes.  Each change is a cell, each cell is an object\n// with cell (previousVal), row, col, currentVal\n// add the value of the newsurveys[row#][col#] to the new value \nchanges.forEach(function(_ref2){var cell=_ref2.cell,row=_ref2.row,col=_ref2.col,value=_ref2.value;surveysNew[row][col]=_objectSpread(_objectSpread({},surveys[row][col]),{},{value:value});});setSurveys(surveysNew);setInput(true);};var handleVSDirection=function handleVSDirection(val){setVSDirection(val);setInput(true);};var handleSubmit=function handleSubmit(){var _activeWell$response=activeWell.response,well=_activeWell$response.well,operator=_activeWell$response.operator,rig=_activeWell$response.rig,county=_activeWell$response.county,uSstate=_activeWell$response.uSstate,northing=_activeWell$response.northing,easting=_activeWell$response.easting;var wellInfo={operator:operator,well:well,rig:rig,county:county,uSstate:uSstate,northing:northing,easting:easting,surveys:surveys};console.log(surveys);saveSurveysToReduxStore(surveys);postSurveysToDynamoDb(wellInfo);};var createRows=function createRows(numberOfRowsToAdd){var createdRows=[];for(var i=0;i<numberOfRowsToAdd;i++){createdRows.push([{readOnly:true,value:surveys.length+i},{value:0},{value:0},{value:0},{value:0},{value:0},{value:0},{value:0},{value:0}]);}return createdRows;};var handleRemoveRow=function handleRemoveRow(rows){var newsurveys=_toConsumableArray(surveys);while(rows>0){newsurveys.pop();rows-=1;}setSurveys(newsurveys);};var handleAddRows=function handleAddRows(rows){var newsurveys=[].concat(_toConsumableArray(surveys),_toConsumableArray(createRows(rows)));setSurveys(newsurveys);};var renderSetRowsButtons=function renderSetRowsButtons(){return/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsxs(Col,{xs:10,className:\"d-flex justify-content-start mt-4\",children:[/*#__PURE__*/_jsx(Button,{variant:\"success\",value:25,onClick:function onClick(event){return handleAddRows(event.target.value);},children:\"Add 25 rows\"}),/*#__PURE__*/_jsx(Button,{variant:\"success\",className:\"ml-4\",value:10,onClick:function onClick(event){return handleAddRows(event.target.value);},children:\"Add 10 rows\"}),/*#__PURE__*/_jsx(Button,{variant:\"success\",className:\"ml-4\",value:5,onClick:function onClick(event){return handleAddRows(event.target.value);},children:\"Add 5 rows\"}),/*#__PURE__*/_jsx(Button,{variant:\"success\",className:\"ml-4\",value:1,onClick:function onClick(event){return handleAddRows(event.target.value);},children:\"Add a row\"}),/*#__PURE__*/_jsx(Button,{variant:\"danger\",className:\"ml-4\",value:1,onClick:function onClick(event){return handleRemoveRow(event.target.value);},children:\"Remove a row\"})]}),/*#__PURE__*/_jsx(Col,{xs:2})]});};var renderSubmitButton=function renderSubmitButton(){return/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{xs:10,className:\"my-4\",children:/*#__PURE__*/_jsx(Button,{variant:\"info\",onClick:function onClick(){return handleSubmit();},children:\"Submit Data\"})}),/*#__PURE__*/_jsx(Col,{xs:2})]});};var renderWellData=function renderWellData(){if(saveWellInfoToReduxStoreReducer.status===\"received\"){var _saveWellInfoToReduxS=saveWellInfoToReduxStoreReducer.response,well=_saveWellInfoToReduxS.well,rig=_saveWellInfoToReduxS.rig,operator=_saveWellInfoToReduxS.operator;return/*#__PURE__*/_jsxs(\"h3\",{className:\"hy-4\",children:[\" \",operator,\" - \",rig,\" - \",well]});}else{return\"No well data\";}};return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsxs(Col,{xs:10,children:[renderWellData(),/*#__PURE__*/_jsx(ReactDataSheet,{data:surveys,valueRenderer:function valueRenderer(cell){return cell.value;},onCellsChanged:onCellsChanged})]}),/*#__PURE__*/_jsx(Col,{xs:2,children:/*#__PURE__*/_jsx(Form,{className:\"mt-7\",children:/*#__PURE__*/_jsx(Form.Group,{controlId:\"formBasicEmail\",children:/*#__PURE__*/_jsx(Form.Control,{className:\"mt-3\",type:\"float\",placeholder:\"Enter VS Here\",onChange:function onChange(event){return handleVSDirection(event.target.value);}})})})})]}),renderSetRowsButtons(),renderSubmitButton(),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{xs:10}),/*#__PURE__*/_jsx(Col,{xs:2})]})]});};var mapStateToProps=function mapStateToProps(_ref3){var activeWell=_ref3.activeWell,saveWellInfoToReduxStoreReducer=_ref3.saveWellInfoToReduxStoreReducer;return{saveWellInfoToReduxStoreReducer:saveWellInfoToReduxStoreReducer,activeWell:activeWell};};export default connect(mapStateToProps,{postSurveysToDynamoDb:postSurveysToDynamoDb,saveSurveysToReduxStore:saveSurveysToReduxStore,savePlansToReduxStore:savePlansToReduxStore,postPlansToJSONDb:postPlansToJSONDb})(Surveys);","map":{"version":3,"sources":["/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Components/Surveys.js"],"names":["React","useState","useEffect","Container","Form","Row","Col","Button","connect","ReactDataSheet","savePlansToReduxStore","calculateTVD","calculateNS","calculateEW","calculateSECT","calculateDLS","postPlansToJSONDb","saveSurveysToReduxStore","postSurveysToDynamoDb","Surveys","activeWell","saveWellInfoToReduxStoreReducer","savePlansToReduxStoreReducer","editsurveys","setEditsurveys","input","setInput","vsDirection","setVSDirection","initialSurveys","value","readOnly","width","surveys","setSurveys","performCalculations","handleAddRows","map","row","index","calculatedTVD","calculatedNS","calculatedEW","calculatedSECT","calculatedDLS","console","log","onCellsChanged","changes","surveysNew","forEach","cell","col","handleVSDirection","val","handleSubmit","response","well","operator","rig","county","uSstate","northing","easting","wellInfo","createRows","numberOfRowsToAdd","createdRows","i","push","length","handleRemoveRow","rows","newsurveys","pop","renderSetRowsButtons","event","target","renderSubmitButton","renderWellData","status","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\n//bootstrap\nimport Container from \"react-bootstrap/esm/Container\";\nimport Form from \"react-bootstrap/Form\"\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\nimport Button from \"react-bootstrap/Button\"\n//other libs\nimport 'react-datasheet/lib/react-datasheet.css';\nimport { connect } from \"react-redux\"\nimport ReactDataSheet from 'react-datasheet';\n// actionCreators\n\nimport savePlansToReduxStore from \"../ActionCreators/savePlansToReduxStore\"\n//helper functions\nimport calculateTVD from \"../HelperFunctions/Calculations/TVD\"\nimport calculateNS from \"../HelperFunctions/Calculations/NS\"\nimport calculateEW from \"../HelperFunctions/Calculations/EW\"\nimport calculateSECT from \"../HelperFunctions/Calculations/SECT\"\nimport calculateDLS from \"../HelperFunctions/Calculations/DLS\"\nimport postPlansToJSONDb from \"../ActionCreators/postPlansToJSONDb\";\nimport saveSurveysToReduxStore from \"../ActionCreators/saveSurveysToReduxStore\"\nimport postSurveysToDynamoDb from \"../ActionCreators/postSurveysToDynamoDb\"\n\nconst Surveys = ({ postSurveysToDynamoDb, activeWell, saveSurveysToReduxStore ,savePlansToReduxStore, saveWellInfoToReduxStoreReducer,savePlansToReduxStoreReducer, postPlansToJSONDb}) => {\n  \n  const [editsurveys, setEditsurveys] = useState(true)\n  const [input, setInput] = useState(false)\n  const [vsDirection, setVSDirection] = useState(0)\n  \n  const initialSurveys = [\n    [{value: '', readOnly: true, width: '7rem'}, {value:\"Measured Depth\", readOnly: true, width: '7rem'}, {value:\"Inclination\", readOnly: true, width: '7rem'}, {value:\"Azimuth\", readOnly: true, width: '7rem'}, {value:\"TVD\", readOnly: true, width: '7rem'}, {value:\"Northing\", readOnly: true, width: '7rem'}, {value:\"Easting\", readOnly: true, width: '7rem'}, {value:\"VS\", readOnly: true, width: '7rem'},{value:\"DLS\", readOnly: true, width: '7rem'}],\n    \n    [{value: 1, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}],\n    \n    [{readOnly: true, value: 2}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}],\n    [{readOnly: true, value: 3}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}],\n    [{readOnly: true, value: 4}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}],\n    [{readOnly: true, value: 5}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}],\n  ];\n\n  const [surveys, setSurveys] = useState(initialSurveys);\n\n  useEffect(()=>{\n    if (input) {\n      performCalculations()\n    }\n  },[input])\n\n  useEffect(()=> {\n    handleAddRows(1)\n  }, [])\n\n  const performCalculations = () => {\n    surveys.map((row, index) => {\n      if (index === 0 || index === 1) {\n        // nothing because we don't want to run calcs on the header array\n      } else {\n        // for every array within surveys array, want to iterate over and change the values of TVD, NS, EW, SECT, & DLS\n        // note val after idx is column \n        // TVD order of args : (measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior, inclinationPrior, azimuthPrior, calculatedTVDPrior)\n        // NS order of args: (measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior, inclinationPrior, azimuthPrior, calculatedNorthingPrior)\n\n        const calculatedTVD = calculateTVD(surveys[index][1].value, surveys[index][2].value, surveys[index][3].value, surveys[index - 1][1].value, surveys[index - 1][2].value, surveys[index - 1][3].value, surveys[index - 1][4].value)\n        const calculatedNS = calculateNS(surveys[index][1].value, surveys[index][2].value, surveys[index][3].value, surveys[index - 1][1].value, surveys[index - 1][2].value, surveys[index - 1][3].value, surveys[index - 1][5].value)\n        const calculatedEW = calculateEW(surveys[index][1].value, surveys[index][2].value, surveys[index][3].value, surveys[index - 1][1].value, surveys[index - 1][2].value, surveys[index - 1][3].value, surveys[index - 1][6].value)\n        const calculatedSECT = calculateSECT(surveys[index][1].value, surveys[index][2].value, surveys[index][3].value, surveys[index - 1][1].value, surveys[index - 1][2].value, surveys[index - 1][3].value, surveys[index - 1][5].value, surveys[index - 1][6].value, index, vsDirection)\n        const calculatedDLS = calculateDLS(surveys[index][1].value, surveys[index][2].value, surveys[index][3].value, surveys[index - 1][1].value, surveys[index - 1][2].value, surveys[index - 1][3].value)\n\n\n        surveys[index][4] = {...surveys[index][4], readOnly: true, value: calculatedTVD}\n        console.log(calculatedTVD)\n        surveys[index][5] = {...surveys[index][5], readOnly: true, value: calculatedNS}\n        surveys[index][6] = {...surveys[index][6], readOnly: true, value: calculatedEW}\n        surveys[index][7] = {...surveys[index][7], readOnly: true, value: calculatedSECT}\n        surveys[index][8] = {...surveys[index][8], readOnly: true, value: calculatedDLS}\n\n        setSurveys(surveys)\n        setInput(false)\n\n      }\n    })\n  }\n\n  const onCellsChanged = changes => {\n    // iterate through existing surveys to get a copy and not mutate current as we iterate over\n    const surveysNew = surveys.map(row => [...row]);\n    // iterate through the changes.  Each change is a cell, each cell is an object\n    // with cell (previousVal), row, col, currentVal\n    // add the value of the newsurveys[row#][col#] to the new value \n    changes.forEach(({ cell, row, col, value }) => {\n      surveysNew[row][col] = {...surveys[row][col], value };\n    });\n    setSurveys(surveysNew)\n    setInput(true)\n  };\n\n  const handleVSDirection = (val) => {\n    setVSDirection(val)\n    setInput(true)\n  }\n\n  const handleSubmit = () => {\n    const { well, operator, rig, county, uSstate, northing, easting } = activeWell.response\n    const wellInfo = {operator, well, rig, county, uSstate, northing, easting, surveys}\n    console.log(surveys)\n    saveSurveysToReduxStore(surveys)\n    postSurveysToDynamoDb(wellInfo)\n\n  }\n\n  const createRows = (numberOfRowsToAdd) => {\n    let createdRows = []\n    for (let i = 0; i < numberOfRowsToAdd; i++) {\n      createdRows.push(\n        [{readOnly: true, value: surveys.length + i}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}]\n      )\n    }\n    return createdRows\n  };\n\n  const handleRemoveRow = (rows) => {\n    const newsurveys = [...surveys];\n    while (rows > 0) {\n      newsurveys.pop();\n      rows -= 1;\n    }\n    setSurveys(newsurveys);\n  };\n\n  const handleAddRows = (rows) => {\n    const newsurveys = [...surveys, ...createRows(rows)]\n    setSurveys(newsurveys)\n  }\n\n\n  const renderSetRowsButtons = () => {\n    return (\n      <Row>\n        <Col xs={10} className=\"d-flex justify-content-start mt-4\">\n          <Button variant=\"success\" value={25} onClick={(event)=> handleAddRows(event.target.value)}>\n            Add 25 rows\n          </Button>\n          <Button variant=\"success\" className=\"ml-4\" value={10} onClick={(event) => handleAddRows(event.target.value)}>\n            Add 10 rows\n          </Button>\n          <Button variant=\"success\" className=\"ml-4\" value={5} onClick={(event) => handleAddRows(event.target.value)}>\n            Add 5 rows\n          </Button>\n          <Button variant=\"success\" className=\"ml-4\" value={1} onClick={(event) => handleAddRows(event.target.value)}>\n            Add a row\n          </Button>\n          <Button variant=\"danger\" className=\"ml-4\" value={1} onClick={(event) => handleRemoveRow(event.target.value)}>\n            Remove a row\n          </Button>\n        </Col>\n        <Col xs={2}>\n          \n        </Col>\n      </Row>\n    )\n  }\n\n  const renderSubmitButton = () => {\n    return (\n      <Row>\n        <Col xs={10} className=\"my-4\">\n          <Button variant=\"info\" onClick={()=>handleSubmit()}>\n            Submit Data\n          </Button>\n        </Col>\n        <Col xs={2}>\n\n        </Col>\n      </Row>\n    )\n  }\n\n  const renderWellData = () => {\n    if (saveWellInfoToReduxStoreReducer.status === \"received\") {\n      const { well, rig, operator} = saveWellInfoToReduxStoreReducer.response\n      return <h3 className=\"hy-4\"> {operator} - {rig} - {well}</h3>\n    } else {\n      return \"No well data\"\n    }\n  }\n\n  return (\n    <Container>\n      <Row>\n        <Col xs={10}>\n          {renderWellData()}\n          <ReactDataSheet data={surveys} valueRenderer={(cell)=> cell.value} onCellsChanged={onCellsChanged}/>\n        </Col>\n        <Col xs={2}>\n          <Form className=\"mt-7\">\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Control className=\"mt-3\" type=\"float\" placeholder=\"Enter VS Here\" onChange={event => handleVSDirection(event.target.value)}/>\n            </Form.Group>\n          </Form>\n        </Col>\n      </Row>\n      {renderSetRowsButtons()}\n      {renderSubmitButton()}\n      <Row>\n        <Col xs={10}>\n          {/* {renderAlert()} */}\n        </Col>\n        <Col xs={2}>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nconst mapStateToProps = ({activeWell, saveWellInfoToReduxStoreReducer}) => {\n  return {\n    saveWellInfoToReduxStoreReducer,\n    activeWell\n  }\n}\n\nexport default connect(mapStateToProps, { postSurveysToDynamoDb, saveSurveysToReduxStore, savePlansToReduxStore, postPlansToJSONDb})(Surveys)\n\n\n"]},"metadata":{},"sourceType":"module"}