{"ast":null,"code":"'use strict';\n\nvar coallesceUniforms = require('./reflect');\n\nvar GLError = require(\"./GLError\");\n\nmodule.exports = createUniformWrapper; //Binds a function and returns a value\n\nfunction identity(x) {\n  var c = new Function('y', 'return function(){return y}');\n  return c(x);\n}\n\nfunction makeVector(length, fill) {\n  var result = new Array(length);\n\n  for (var i = 0; i < length; ++i) {\n    result[i] = fill;\n  }\n\n  return result;\n} //Create shims for uniforms\n\n\nfunction createUniformWrapper(gl, wrapper, uniforms, locations) {\n  function makeGetter(index) {\n    var proc = new Function('gl', 'wrapper', 'locations', 'return function(){return gl.getUniform(wrapper.program,locations[' + index + '])}');\n    return proc(gl, wrapper, locations);\n  }\n\n  function makePropSetter(path, index, type) {\n    switch (type) {\n      case 'bool':\n      case 'int':\n      case 'sampler2D':\n      case 'samplerCube':\n        return 'gl.uniform1i(locations[' + index + '],obj' + path + ')';\n\n      case 'float':\n        return 'gl.uniform1f(locations[' + index + '],obj' + path + ')';\n\n      default:\n        var vidx = type.indexOf('vec');\n\n        if (0 <= vidx && vidx <= 1 && type.length === 4 + vidx) {\n          var d = type.charCodeAt(type.length - 1) - 48;\n\n          if (d < 2 || d > 4) {\n            throw new GLError('', 'Invalid data type');\n          }\n\n          switch (type.charAt(0)) {\n            case 'b':\n            case 'i':\n              return 'gl.uniform' + d + 'iv(locations[' + index + '],obj' + path + ')';\n\n            case 'v':\n              return 'gl.uniform' + d + 'fv(locations[' + index + '],obj' + path + ')';\n\n            default:\n              throw new GLError('', 'Unrecognized data type for vector ' + name + ': ' + type);\n          }\n        } else if (type.indexOf('mat') === 0 && type.length === 4) {\n          var d = type.charCodeAt(type.length - 1) - 48;\n\n          if (d < 2 || d > 4) {\n            throw new GLError('', 'Invalid uniform dimension type for matrix ' + name + ': ' + type);\n          }\n\n          return 'gl.uniformMatrix' + d + 'fv(locations[' + index + '],false,obj' + path + ')';\n        } else {\n          throw new GLError('', 'Unknown uniform data type for ' + name + ': ' + type);\n        }\n\n        break;\n    }\n  }\n\n  function enumerateIndices(prefix, type) {\n    if (typeof type !== 'object') {\n      return [[prefix, type]];\n    }\n\n    var indices = [];\n\n    for (var id in type) {\n      var prop = type[id];\n      var tprefix = prefix;\n\n      if (parseInt(id) + '' === id) {\n        tprefix += '[' + id + ']';\n      } else {\n        tprefix += '.' + id;\n      }\n\n      if (typeof prop === 'object') {\n        indices.push.apply(indices, enumerateIndices(tprefix, prop));\n      } else {\n        indices.push([tprefix, prop]);\n      }\n    }\n\n    return indices;\n  }\n\n  function makeSetter(type) {\n    var code = ['return function updateProperty(obj){'];\n    var indices = enumerateIndices('', type);\n\n    for (var i = 0; i < indices.length; ++i) {\n      var item = indices[i];\n      var path = item[0];\n      var idx = item[1];\n\n      if (locations[idx]) {\n        code.push(makePropSetter(path, idx, uniforms[idx].type));\n      }\n    }\n\n    code.push('return obj}');\n    var proc = new Function('gl', 'locations', code.join('\\n'));\n    return proc(gl, locations);\n  }\n\n  function defaultValue(type) {\n    switch (type) {\n      case 'bool':\n        return false;\n\n      case 'int':\n      case 'sampler2D':\n      case 'samplerCube':\n        return 0;\n\n      case 'float':\n        return 0.0;\n\n      default:\n        var vidx = type.indexOf('vec');\n\n        if (0 <= vidx && vidx <= 1 && type.length === 4 + vidx) {\n          var d = type.charCodeAt(type.length - 1) - 48;\n\n          if (d < 2 || d > 4) {\n            throw new GLError('', 'Invalid data type');\n          }\n\n          if (type.charAt(0) === 'b') {\n            return makeVector(d, false);\n          }\n\n          return makeVector(d, 0);\n        } else if (type.indexOf('mat') === 0 && type.length === 4) {\n          var d = type.charCodeAt(type.length - 1) - 48;\n\n          if (d < 2 || d > 4) {\n            throw new GLError('', 'Invalid uniform dimension type for matrix ' + name + ': ' + type);\n          }\n\n          return makeVector(d * d, 0);\n        } else {\n          throw new GLError('', 'Unknown uniform data type for ' + name + ': ' + type);\n        }\n\n        break;\n    }\n  }\n\n  function storeProperty(obj, prop, type) {\n    if (typeof type === 'object') {\n      var child = processObject(type);\n      Object.defineProperty(obj, prop, {\n        get: identity(child),\n        set: makeSetter(type),\n        enumerable: true,\n        configurable: false\n      });\n    } else {\n      if (locations[type]) {\n        Object.defineProperty(obj, prop, {\n          get: makeGetter(type),\n          set: makeSetter(type),\n          enumerable: true,\n          configurable: false\n        });\n      } else {\n        obj[prop] = defaultValue(uniforms[type].type);\n      }\n    }\n  }\n\n  function processObject(obj) {\n    var result;\n\n    if (Array.isArray(obj)) {\n      result = new Array(obj.length);\n\n      for (var i = 0; i < obj.length; ++i) {\n        storeProperty(result, i, obj[i]);\n      }\n    } else {\n      result = {};\n\n      for (var id in obj) {\n        storeProperty(result, id, obj[id]);\n      }\n    }\n\n    return result;\n  } //Return data\n\n\n  var coallesced = coallesceUniforms(uniforms, true);\n  return {\n    get: identity(processObject(coallesced)),\n    set: makeSetter(coallesced),\n    enumerable: true,\n    configurable: true\n  };\n}","map":{"version":3,"sources":["/Users/caseyrudick/Documents/landsharkrefactored-copy/client/node_modules/gl-shader/lib/create-uniforms.js"],"names":["coallesceUniforms","require","GLError","module","exports","createUniformWrapper","identity","x","c","Function","makeVector","length","fill","result","Array","i","gl","wrapper","uniforms","locations","makeGetter","index","proc","makePropSetter","path","type","vidx","indexOf","d","charCodeAt","charAt","name","enumerateIndices","prefix","indices","id","prop","tprefix","parseInt","push","apply","makeSetter","code","item","idx","join","defaultValue","storeProperty","obj","child","processObject","Object","defineProperty","get","set","enumerable","configurable","isArray","coallesced"],"mappings":"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","sourcesContent":["'use strict'\n\nvar coallesceUniforms = require('./reflect')\nvar GLError = require(\"./GLError\")\n\nmodule.exports = createUniformWrapper\n\n//Binds a function and returns a value\nfunction identity(x) {\n  var c = new Function('y', 'return function(){return y}')\n  return c(x)\n}\n\nfunction makeVector(length, fill) {\n  var result = new Array(length)\n  for(var i=0; i<length; ++i) {\n    result[i] = fill\n  }\n  return result\n}\n\n//Create shims for uniforms\nfunction createUniformWrapper(gl, wrapper, uniforms, locations) {\n\n  function makeGetter(index) {\n    var proc = new Function(\n        'gl'\n      , 'wrapper'\n      , 'locations'\n      , 'return function(){return gl.getUniform(wrapper.program,locations[' + index + '])}')\n    return proc(gl, wrapper, locations)\n  }\n\n  function makePropSetter(path, index, type) {\n    switch(type) {\n      case 'bool':\n      case 'int':\n      case 'sampler2D':\n      case 'samplerCube':\n        return 'gl.uniform1i(locations[' + index + '],obj' + path + ')'\n      case 'float':\n        return 'gl.uniform1f(locations[' + index + '],obj' + path + ')'\n      default:\n        var vidx = type.indexOf('vec')\n        if(0 <= vidx && vidx <= 1 && type.length === 4 + vidx) {\n          var d = type.charCodeAt(type.length-1) - 48\n          if(d < 2 || d > 4) {\n            throw new GLError('', 'Invalid data type')\n          }\n          switch(type.charAt(0)) {\n            case 'b':\n            case 'i':\n              return 'gl.uniform' + d + 'iv(locations[' + index + '],obj' + path + ')'\n            case 'v':\n              return 'gl.uniform' + d + 'fv(locations[' + index + '],obj' + path + ')'\n            default:\n              throw new GLError('', 'Unrecognized data type for vector ' + name + ': ' + type)\n          }\n        } else if(type.indexOf('mat') === 0 && type.length === 4) {\n          var d = type.charCodeAt(type.length-1) - 48\n          if(d < 2 || d > 4) {\n            throw new GLError('', 'Invalid uniform dimension type for matrix ' + name + ': ' + type)\n          }\n          return 'gl.uniformMatrix' + d + 'fv(locations[' + index + '],false,obj' + path + ')'\n        } else {\n          throw new GLError('', 'Unknown uniform data type for ' + name + ': ' + type)\n        }\n      break\n    }\n  }\n\n  function enumerateIndices(prefix, type) {\n    if(typeof type !== 'object') {\n      return [ [prefix, type] ]\n    }\n    var indices = []\n    for(var id in type) {\n      var prop = type[id]\n      var tprefix = prefix\n      if(parseInt(id) + '' === id) {\n        tprefix += '[' + id + ']'\n      } else {\n        tprefix += '.' + id\n      }\n      if(typeof prop === 'object') {\n        indices.push.apply(indices, enumerateIndices(tprefix, prop))\n      } else {\n        indices.push([tprefix, prop])\n      }\n    }\n    return indices\n  }\n\n  function makeSetter(type) {\n    var code = [ 'return function updateProperty(obj){' ]\n    var indices = enumerateIndices('', type)\n    for(var i=0; i<indices.length; ++i) {\n      var item = indices[i]\n      var path = item[0]\n      var idx  = item[1]\n      if(locations[idx]) {\n        code.push(makePropSetter(path, idx, uniforms[idx].type))\n      }\n    }\n    code.push('return obj}')\n    var proc = new Function('gl', 'locations', code.join('\\n'))\n    return proc(gl, locations)\n  }\n\n  function defaultValue(type) {\n    switch(type) {\n      case 'bool':\n        return false\n      case 'int':\n      case 'sampler2D':\n      case 'samplerCube':\n        return 0\n      case 'float':\n        return 0.0\n      default:\n        var vidx = type.indexOf('vec')\n        if(0 <= vidx && vidx <= 1 && type.length === 4 + vidx) {\n          var d = type.charCodeAt(type.length-1) - 48\n          if(d < 2 || d > 4) {\n            throw new GLError('', 'Invalid data type')\n          }\n          if(type.charAt(0) === 'b') {\n            return makeVector(d, false)\n          }\n          return makeVector(d, 0)\n        } else if(type.indexOf('mat') === 0 && type.length === 4) {\n          var d = type.charCodeAt(type.length-1) - 48\n          if(d < 2 || d > 4) {\n            throw new GLError('', 'Invalid uniform dimension type for matrix ' + name + ': ' + type)\n          }\n          return makeVector(d*d, 0)\n        } else {\n          throw new GLError('', 'Unknown uniform data type for ' + name + ': ' + type)\n        }\n      break\n    }\n  }\n\n  function storeProperty(obj, prop, type) {\n    if(typeof type === 'object') {\n      var child = processObject(type)\n      Object.defineProperty(obj, prop, {\n        get: identity(child),\n        set: makeSetter(type),\n        enumerable: true,\n        configurable: false\n      })\n    } else {\n      if(locations[type]) {\n        Object.defineProperty(obj, prop, {\n          get: makeGetter(type),\n          set: makeSetter(type),\n          enumerable: true,\n          configurable: false\n        })\n      } else {\n        obj[prop] = defaultValue(uniforms[type].type)\n      }\n    }\n  }\n\n  function processObject(obj) {\n    var result\n    if(Array.isArray(obj)) {\n      result = new Array(obj.length)\n      for(var i=0; i<obj.length; ++i) {\n        storeProperty(result, i, obj[i])\n      }\n    } else {\n      result = {}\n      for(var id in obj) {\n        storeProperty(result, id, obj[id])\n      }\n    }\n    return result\n  }\n\n  //Return data\n  var coallesced = coallesceUniforms(uniforms, true)\n  return {\n    get: identity(processObject(coallesced)),\n    set: makeSetter(coallesced),\n    enumerable: true,\n    configurable: true\n  }\n}\n"]},"metadata":{},"sourceType":"script"}