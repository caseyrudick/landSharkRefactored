{"ast":null,"code":"/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar fontAttrs = require('../../plots/font_attributes');\n\nvar colorAttrs = require('../color/attributes');\n\nvar templatedArray = require('../../plot_api/plot_template').templatedArray;\n\nvar buttonAttrs = templatedArray('button', {\n  visible: {\n    valType: 'boolean',\n    role: 'info',\n    dflt: true,\n    editType: 'plot',\n    description: 'Determines whether or not this button is visible.'\n  },\n  step: {\n    valType: 'enumerated',\n    role: 'info',\n    values: ['month', 'year', 'day', 'hour', 'minute', 'second', 'all'],\n    dflt: 'month',\n    editType: 'plot',\n    description: ['The unit of measurement that the `count` value will set the range by.'].join(' ')\n  },\n  stepmode: {\n    valType: 'enumerated',\n    role: 'info',\n    values: ['backward', 'todate'],\n    dflt: 'backward',\n    editType: 'plot',\n    description: ['Sets the range update mode.', 'If *backward*, the range update shifts the start of range', 'back *count* times *step* milliseconds.', 'If *todate*, the range update shifts the start of range', 'back to the first timestamp from *count* times', '*step* milliseconds back.', 'For example, with `step` set to *year* and `count` set to *1*', 'the range update shifts the start of the range back to', 'January 01 of the current year.', 'Month and year *todate* are currently available only', 'for the built-in (Gregorian) calendar.'].join(' ')\n  },\n  count: {\n    valType: 'number',\n    role: 'info',\n    min: 0,\n    dflt: 1,\n    editType: 'plot',\n    description: ['Sets the number of steps to take to update the range.', 'Use with `step` to specify the update interval.'].join(' ')\n  },\n  label: {\n    valType: 'string',\n    role: 'info',\n    editType: 'plot',\n    description: 'Sets the text label to appear on the button.'\n  },\n  editType: 'plot',\n  description: ['Sets the specifications for each buttons.', 'By default, a range selector comes with no buttons.'].join(' ')\n});\nmodule.exports = {\n  visible: {\n    valType: 'boolean',\n    role: 'info',\n    editType: 'plot',\n    description: ['Determines whether or not this range selector is visible.', 'Note that range selectors are only available for x axes of', '`type` set to or auto-typed to *date*.'].join(' ')\n  },\n  buttons: buttonAttrs,\n  x: {\n    valType: 'number',\n    min: -2,\n    max: 3,\n    role: 'style',\n    editType: 'plot',\n    description: 'Sets the x position (in normalized coordinates) of the range selector.'\n  },\n  xanchor: {\n    valType: 'enumerated',\n    values: ['auto', 'left', 'center', 'right'],\n    dflt: 'left',\n    role: 'info',\n    editType: 'plot',\n    description: ['Sets the range selector\\'s horizontal position anchor.', 'This anchor binds the `x` position to the *left*, *center*', 'or *right* of the range selector.'].join(' ')\n  },\n  y: {\n    valType: 'number',\n    min: -2,\n    max: 3,\n    role: 'style',\n    editType: 'plot',\n    description: 'Sets the y position (in normalized coordinates) of the range selector.'\n  },\n  yanchor: {\n    valType: 'enumerated',\n    values: ['auto', 'top', 'middle', 'bottom'],\n    dflt: 'bottom',\n    role: 'info',\n    editType: 'plot',\n    description: ['Sets the range selector\\'s vertical position anchor', 'This anchor binds the `y` position to the *top*, *middle*', 'or *bottom* of the range selector.'].join(' ')\n  },\n  font: fontAttrs({\n    editType: 'plot',\n    description: 'Sets the font of the range selector button text.'\n  }),\n  bgcolor: {\n    valType: 'color',\n    dflt: colorAttrs.lightLine,\n    role: 'style',\n    editType: 'plot',\n    description: 'Sets the background color of the range selector buttons.'\n  },\n  activecolor: {\n    valType: 'color',\n    role: 'style',\n    editType: 'plot',\n    description: 'Sets the background color of the active range selector button.'\n  },\n  bordercolor: {\n    valType: 'color',\n    dflt: colorAttrs.defaultLine,\n    role: 'style',\n    editType: 'plot',\n    description: 'Sets the color of the border enclosing the range selector.'\n  },\n  borderwidth: {\n    valType: 'number',\n    min: 0,\n    dflt: 0,\n    role: 'style',\n    editType: 'plot',\n    description: 'Sets the width (in px) of the border enclosing the range selector.'\n  },\n  editType: 'plot'\n};","map":{"version":3,"sources":["/Users/caseyrudick/Documents/landsharkrefactored-copy/client/node_modules/plotly.js/src/components/rangeselector/attributes.js"],"names":["fontAttrs","require","colorAttrs","templatedArray","buttonAttrs","visible","valType","role","dflt","editType","description","step","values","join","stepmode","count","min","label","module","exports","buttons","x","max","xanchor","y","yanchor","font","bgcolor","lightLine","activecolor","bordercolor","defaultLine","borderwidth"],"mappings":"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","sourcesContent":["/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar fontAttrs = require('../../plots/font_attributes');\nvar colorAttrs = require('../color/attributes');\nvar templatedArray = require('../../plot_api/plot_template').templatedArray;\n\nvar buttonAttrs = templatedArray('button', {\n    visible: {\n        valType: 'boolean',\n        role: 'info',\n        dflt: true,\n        editType: 'plot',\n        description: 'Determines whether or not this button is visible.'\n    },\n    step: {\n        valType: 'enumerated',\n        role: 'info',\n        values: ['month', 'year', 'day', 'hour', 'minute', 'second', 'all'],\n        dflt: 'month',\n        editType: 'plot',\n        description: [\n            'The unit of measurement that the `count` value will set the range by.'\n        ].join(' ')\n    },\n    stepmode: {\n        valType: 'enumerated',\n        role: 'info',\n        values: ['backward', 'todate'],\n        dflt: 'backward',\n        editType: 'plot',\n        description: [\n            'Sets the range update mode.',\n            'If *backward*, the range update shifts the start of range',\n            'back *count* times *step* milliseconds.',\n            'If *todate*, the range update shifts the start of range',\n            'back to the first timestamp from *count* times',\n            '*step* milliseconds back.',\n            'For example, with `step` set to *year* and `count` set to *1*',\n            'the range update shifts the start of the range back to',\n            'January 01 of the current year.',\n            'Month and year *todate* are currently available only',\n            'for the built-in (Gregorian) calendar.'\n        ].join(' ')\n    },\n    count: {\n        valType: 'number',\n        role: 'info',\n        min: 0,\n        dflt: 1,\n        editType: 'plot',\n        description: [\n            'Sets the number of steps to take to update the range.',\n            'Use with `step` to specify the update interval.'\n        ].join(' ')\n    },\n    label: {\n        valType: 'string',\n        role: 'info',\n        editType: 'plot',\n        description: 'Sets the text label to appear on the button.'\n    },\n    editType: 'plot',\n    description: [\n        'Sets the specifications for each buttons.',\n        'By default, a range selector comes with no buttons.'\n    ].join(' ')\n});\n\nmodule.exports = {\n    visible: {\n        valType: 'boolean',\n        role: 'info',\n        editType: 'plot',\n        description: [\n            'Determines whether or not this range selector is visible.',\n            'Note that range selectors are only available for x axes of',\n            '`type` set to or auto-typed to *date*.'\n        ].join(' ')\n    },\n\n    buttons: buttonAttrs,\n\n    x: {\n        valType: 'number',\n        min: -2,\n        max: 3,\n        role: 'style',\n        editType: 'plot',\n        description: 'Sets the x position (in normalized coordinates) of the range selector.'\n    },\n    xanchor: {\n        valType: 'enumerated',\n        values: ['auto', 'left', 'center', 'right'],\n        dflt: 'left',\n        role: 'info',\n        editType: 'plot',\n        description: [\n            'Sets the range selector\\'s horizontal position anchor.',\n            'This anchor binds the `x` position to the *left*, *center*',\n            'or *right* of the range selector.'\n        ].join(' ')\n    },\n    y: {\n        valType: 'number',\n        min: -2,\n        max: 3,\n        role: 'style',\n        editType: 'plot',\n        description: 'Sets the y position (in normalized coordinates) of the range selector.'\n    },\n    yanchor: {\n        valType: 'enumerated',\n        values: ['auto', 'top', 'middle', 'bottom'],\n        dflt: 'bottom',\n        role: 'info',\n        editType: 'plot',\n        description: [\n            'Sets the range selector\\'s vertical position anchor',\n            'This anchor binds the `y` position to the *top*, *middle*',\n            'or *bottom* of the range selector.'\n        ].join(' ')\n    },\n\n    font: fontAttrs({\n        editType: 'plot',\n        description: 'Sets the font of the range selector button text.'\n    }),\n\n    bgcolor: {\n        valType: 'color',\n        dflt: colorAttrs.lightLine,\n        role: 'style',\n        editType: 'plot',\n        description: 'Sets the background color of the range selector buttons.'\n    },\n    activecolor: {\n        valType: 'color',\n        role: 'style',\n        editType: 'plot',\n        description: 'Sets the background color of the active range selector button.'\n    },\n    bordercolor: {\n        valType: 'color',\n        dflt: colorAttrs.defaultLine,\n        role: 'style',\n        editType: 'plot',\n        description: 'Sets the color of the border enclosing the range selector.'\n    },\n    borderwidth: {\n        valType: 'number',\n        min: 0,\n        dflt: 0,\n        role: 'style',\n        editType: 'plot',\n        description: 'Sets the width (in px) of the border enclosing the range selector.'\n    },\n    editType: 'plot'\n};\n"]},"metadata":{},"sourceType":"script"}