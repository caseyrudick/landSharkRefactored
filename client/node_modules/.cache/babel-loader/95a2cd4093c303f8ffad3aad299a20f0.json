{"ast":null,"code":"/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar Lib = require('../../lib');\n\nvar layoutAttributes = require('./layout_attributes');\n\nvar boxLayoutDefaults = require('../box/layout_defaults');\n\nmodule.exports = function supplyLayoutDefaults(layoutIn, layoutOut, fullData) {\n  function coerce(attr, dflt) {\n    return Lib.coerce(layoutIn, layoutOut, layoutAttributes, attr, dflt);\n  }\n\n  boxLayoutDefaults._supply(layoutIn, layoutOut, fullData, coerce, 'violin');\n};","map":{"version":3,"sources":["/Users/caseyrudick/Documents/landsharkrefactored-copy/client/node_modules/plotly.js/src/traces/violin/layout_defaults.js"],"names":["Lib","require","layoutAttributes","boxLayoutDefaults","module","exports","supplyLayoutDefaults","layoutIn","layoutOut","fullData","coerce","attr","dflt","_supply"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,GAAG,GAAGC,OAAO,CAAC,WAAD,CAAjB;;AACA,IAAIC,gBAAgB,GAAGD,OAAO,CAAC,qBAAD,CAA9B;;AACA,IAAIE,iBAAiB,GAAGF,OAAO,CAAC,wBAAD,CAA/B;;AAEAG,MAAM,CAACC,OAAP,GAAiB,SAASC,oBAAT,CAA8BC,QAA9B,EAAwCC,SAAxC,EAAmDC,QAAnD,EAA6D;AAC1E,WAASC,MAAT,CAAgBC,IAAhB,EAAsBC,IAAtB,EAA4B;AACxB,WAAOZ,GAAG,CAACU,MAAJ,CAAWH,QAAX,EAAqBC,SAArB,EAAgCN,gBAAhC,EAAkDS,IAAlD,EAAwDC,IAAxD,CAAP;AACH;;AACDT,EAAAA,iBAAiB,CAACU,OAAlB,CAA0BN,QAA1B,EAAoCC,SAApC,EAA+CC,QAA/C,EAAyDC,MAAzD,EAAiE,QAAjE;AACH,CALD","sourcesContent":["/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar layoutAttributes = require('./layout_attributes');\nvar boxLayoutDefaults = require('../box/layout_defaults');\n\nmodule.exports = function supplyLayoutDefaults(layoutIn, layoutOut, fullData) {\n    function coerce(attr, dflt) {\n        return Lib.coerce(layoutIn, layoutOut, layoutAttributes, attr, dflt);\n    }\n    boxLayoutDefaults._supply(layoutIn, layoutOut, fullData, coerce, 'violin');\n};\n"]},"metadata":{},"sourceType":"script"}