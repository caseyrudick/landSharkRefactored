{"ast":null,"code":"/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar axesAttrs = require('../../cartesian/layout_attributes');\n\nvar extendFlat = require('../../../lib/extend').extendFlat;\n\nvar overrideAll = require('../../../plot_api/edit_types').overrideAll;\n\nvar deprecationWarning = ['Legacy polar charts are deprecated!', 'Please switch to *polar* subplots.'].join(' ');\nvar domainAttr = extendFlat({}, axesAttrs.domain, {\n  description: ['Polar chart subplots are not supported yet.', 'This key has currently no effect.'].join(' ')\n});\n\nfunction mergeAttrs(axisName, nonCommonAttrs) {\n  var commonAttrs = {\n    showline: {\n      valType: 'boolean',\n      role: 'style',\n      description: [deprecationWarning, 'Determines whether or not the line bounding this', axisName, 'axis', 'will be shown on the figure.'].join(' ')\n    },\n    showticklabels: {\n      valType: 'boolean',\n      role: 'style',\n      description: [deprecationWarning, 'Determines whether or not the', axisName, 'axis ticks', 'will feature tick labels.'].join(' ')\n    },\n    tickorientation: {\n      valType: 'enumerated',\n      values: ['horizontal', 'vertical'],\n      role: 'style',\n      description: [deprecationWarning, 'Sets the orientation (from the paper perspective)', 'of the', axisName, 'axis tick labels.'].join(' ')\n    },\n    ticklen: {\n      valType: 'number',\n      min: 0,\n      role: 'style',\n      description: [deprecationWarning, 'Sets the length of the tick lines on this', axisName, 'axis.'].join(' ')\n    },\n    tickcolor: {\n      valType: 'color',\n      role: 'style',\n      description: [deprecationWarning, 'Sets the color of the tick lines on this', axisName, 'axis.'].join(' ')\n    },\n    ticksuffix: {\n      valType: 'string',\n      role: 'style',\n      description: [deprecationWarning, 'Sets the length of the tick lines on this', axisName, 'axis.'].join(' ')\n    },\n    endpadding: {\n      valType: 'number',\n      role: 'style',\n      description: deprecationWarning\n    },\n    visible: {\n      valType: 'boolean',\n      role: 'info',\n      description: [deprecationWarning, 'Determines whether or not this axis will be visible.'].join(' ')\n    }\n  };\n  return extendFlat({}, nonCommonAttrs, commonAttrs);\n}\n\nmodule.exports = overrideAll({\n  radialaxis: mergeAttrs('radial', {\n    range: {\n      valType: 'info_array',\n      role: 'info',\n      items: [{\n        valType: 'number'\n      }, {\n        valType: 'number'\n      }],\n      description: [deprecationWarning, 'Defines the start and end point of this radial axis.'].join(' ')\n    },\n    domain: domainAttr,\n    orientation: {\n      valType: 'number',\n      role: 'style',\n      description: [deprecationWarning, 'Sets the orientation (an angle with respect to the origin)', 'of the radial axis.'].join(' ')\n    }\n  }),\n  angularaxis: mergeAttrs('angular', {\n    range: {\n      valType: 'info_array',\n      role: 'info',\n      items: [{\n        valType: 'number',\n        dflt: 0\n      }, {\n        valType: 'number',\n        dflt: 360\n      }],\n      description: [deprecationWarning, 'Defines the start and end point of this angular axis.'].join(' ')\n    },\n    domain: domainAttr\n  }),\n  // attributes that appear at layout root\n  layout: {\n    direction: {\n      valType: 'enumerated',\n      values: ['clockwise', 'counterclockwise'],\n      role: 'info',\n      description: [deprecationWarning, 'Sets the direction corresponding to positive angles', 'in legacy polar charts.'].join(' ')\n    },\n    orientation: {\n      valType: 'angle',\n      role: 'info',\n      description: [deprecationWarning, 'Rotates the entire polar by the given angle', 'in legacy polar charts.'].join(' ')\n    }\n  }\n}, 'plot', 'nested');","map":{"version":3,"sources":["/Users/caseyrudick/Documents/landsharkrefactored-copy/client/node_modules/plotly.js/src/plots/polar/legacy/axis_attributes.js"],"names":["axesAttrs","require","extendFlat","overrideAll","deprecationWarning","join","domainAttr","domain","description","mergeAttrs","axisName","nonCommonAttrs","commonAttrs","showline","valType","role","showticklabels","tickorientation","values","ticklen","min","tickcolor","ticksuffix","endpadding","visible","module","exports","radialaxis","range","items","orientation","angularaxis","dflt","layout","direction"],"mappings":"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","sourcesContent":["/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar axesAttrs = require('../../cartesian/layout_attributes');\nvar extendFlat = require('../../../lib/extend').extendFlat;\nvar overrideAll = require('../../../plot_api/edit_types').overrideAll;\n\nvar deprecationWarning = [\n    'Legacy polar charts are deprecated!',\n    'Please switch to *polar* subplots.'\n].join(' ');\n\nvar domainAttr = extendFlat({}, axesAttrs.domain, {\n    description: [\n        'Polar chart subplots are not supported yet.',\n        'This key has currently no effect.'\n    ].join(' ')\n});\n\nfunction mergeAttrs(axisName, nonCommonAttrs) {\n    var commonAttrs = {\n        showline: {\n            valType: 'boolean',\n            role: 'style',\n            description: [\n                deprecationWarning,\n                'Determines whether or not the line bounding this',\n                axisName, 'axis',\n                'will be shown on the figure.'\n            ].join(' ')\n        },\n        showticklabels: {\n            valType: 'boolean',\n            role: 'style',\n            description: [\n                deprecationWarning,\n                'Determines whether or not the',\n                axisName, 'axis ticks',\n                'will feature tick labels.'\n            ].join(' ')\n        },\n        tickorientation: {\n            valType: 'enumerated',\n            values: ['horizontal', 'vertical'],\n            role: 'style',\n            description: [\n                deprecationWarning,\n                'Sets the orientation (from the paper perspective)',\n                'of the', axisName, 'axis tick labels.'\n            ].join(' ')\n        },\n        ticklen: {\n            valType: 'number',\n            min: 0,\n            role: 'style',\n            description: [\n                deprecationWarning,\n                'Sets the length of the tick lines on this', axisName, 'axis.'\n            ].join(' ')\n        },\n        tickcolor: {\n            valType: 'color',\n            role: 'style',\n            description: [\n                deprecationWarning,\n                'Sets the color of the tick lines on this', axisName, 'axis.'\n            ].join(' ')\n        },\n        ticksuffix: {\n            valType: 'string',\n            role: 'style',\n            description: [\n                deprecationWarning,\n                'Sets the length of the tick lines on this', axisName, 'axis.'\n            ].join(' ')\n        },\n        endpadding: {\n            valType: 'number',\n            role: 'style',\n            description: deprecationWarning,\n        },\n        visible: {\n            valType: 'boolean',\n            role: 'info',\n            description: [\n                deprecationWarning,\n                'Determines whether or not this axis will be visible.'\n            ].join(' ')\n        }\n    };\n\n    return extendFlat({}, nonCommonAttrs, commonAttrs);\n}\n\nmodule.exports = overrideAll({\n    radialaxis: mergeAttrs('radial', {\n        range: {\n            valType: 'info_array',\n            role: 'info',\n            items: [\n                { valType: 'number' },\n                { valType: 'number' }\n            ],\n            description: [\n                deprecationWarning,\n                'Defines the start and end point of this radial axis.'\n            ].join(' ')\n        },\n        domain: domainAttr,\n        orientation: {\n            valType: 'number',\n            role: 'style',\n            description: [\n                deprecationWarning,\n                'Sets the orientation (an angle with respect to the origin)',\n                'of the radial axis.'\n            ].join(' ')\n        }\n    }),\n\n    angularaxis: mergeAttrs('angular', {\n        range: {\n            valType: 'info_array',\n            role: 'info',\n            items: [\n                { valType: 'number', dflt: 0 },\n                { valType: 'number', dflt: 360 }\n            ],\n            description: [\n                deprecationWarning,\n                'Defines the start and end point of this angular axis.'\n            ].join(' ')\n        },\n        domain: domainAttr\n    }),\n\n    // attributes that appear at layout root\n    layout: {\n        direction: {\n            valType: 'enumerated',\n            values: ['clockwise', 'counterclockwise'],\n            role: 'info',\n            description: [\n                deprecationWarning,\n                'Sets the direction corresponding to positive angles',\n                'in legacy polar charts.'\n            ].join(' ')\n        },\n        orientation: {\n            valType: 'angle',\n            role: 'info',\n            description: [\n                deprecationWarning,\n                'Rotates the entire polar by the given angle',\n                'in legacy polar charts.'\n            ].join(' ')\n        }\n    }\n}, 'plot', 'nested');\n"]},"metadata":{},"sourceType":"script"}