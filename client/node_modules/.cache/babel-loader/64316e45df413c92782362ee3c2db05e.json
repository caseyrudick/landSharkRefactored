{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Container from \"react-bootstrap/esm/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport 'react-datasheet/lib/react-datasheet.css';\nimport ReactDataSheet from \"react-datasheet\";\n\nconst ExistingLeaseLines = ({\n  getLeaseLinesFromJSONDbReducer,\n  activeWell\n}) => {\n  _s();\n\n  const [leaseLines, setLeaseLines] = useState([]);\n  const [grid, setGrid] = useState([]);\n  useEffect(() => {\n    if (getLeaseLinesFromJSONDbReducer.status === \"received\") {\n      let leaseLinesFromReducerCopy = [...getLeaseLinesFromJSONDbReducer.response];\n      setLeaseLines(leaseLinesFromReducerCopy);\n    }\n  }, [getLeaseLinesFromJSONDbReducer.status]);\n\n  const renderMain = () => {\n    if (getLeaseLinesFromJSONDbReducer.status === \"received\") {}\n  };\n\n  return \"hello\";\n};\n\n_s(ExistingLeaseLines, \"+1wFatJCzxF8zJziMHeN7N8sKZ0=\");\n\n_c = ExistingLeaseLines;\n\nconst mapStateToProps = ({\n  activeWell,\n  getLeaseLinesFromJSONDbReducer\n}) => {\n  activeWell, getLeaseLinesFromJSONDbReducer;\n};\n\nexport default connect(mapStateToProps)(ExistingLeaseLines);\n\nvar _c;\n\n$RefreshReg$(_c, \"ExistingLeaseLines\");","map":{"version":3,"sources":["/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/ExistingLeaseLines.js"],"names":["React","useEffect","useState","connect","Container","Form","Row","Col","Button","ReactDataSheet","ExistingLeaseLines","getLeaseLinesFromJSONDbReducer","activeWell","leaseLines","setLeaseLines","grid","setGrid","status","leaseLinesFromReducerCopy","response","renderMain","mapStateToProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AAEA,OAAO,yCAAP;AACA,OAAOC,cAAP,MAA2B,iBAA3B;;AAEA,MAAMC,kBAAkB,GAAG,CAAC;AAACC,EAAAA,8BAAD;AAAiCC,EAAAA;AAAjC,CAAD,KAAkD;AAAA;;AAC3E,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAIU,8BAA8B,CAACM,MAA/B,KAA0C,UAA9C,EAA0D;AACxD,UAAIC,yBAAyB,GAAG,CAAC,GAAGP,8BAA8B,CAACQ,QAAnC,CAAhC;AACAL,MAAAA,aAAa,CAACI,yBAAD,CAAb;AACD;AACF,GALQ,EAKP,CAACP,8BAA8B,CAACM,MAAhC,CALO,CAAT;;AAOA,QAAMG,UAAU,GAAG,MAAM;AACvB,QAAIT,8BAA8B,CAACM,MAA/B,KAA0C,UAA9C,EAA0D,CAEzD;AACF,GAJD;;AAOA,SACE,OADF;AAGD,CArBD;;GAAMP,kB;;KAAAA,kB;;AAuBN,MAAMW,eAAe,GAAG,CAAC;AAACT,EAAAA,UAAD;AAAaD,EAAAA;AAAb,CAAD,KAAkD;AACxEC,EAAAA,UAAU,EACVD,8BADA;AAED,CAHD;;AAKA,eAAeR,OAAO,CAACkB,eAAD,CAAP,CAAyBX,kBAAzB,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { connect } from \"react-redux\"\n\nimport Container from \"react-bootstrap/esm/Container\"\nimport Form from \"react-bootstrap/Form\"\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\nimport Button from \"react-bootstrap/Button\"\n\nimport 'react-datasheet/lib/react-datasheet.css'\nimport ReactDataSheet from \"react-datasheet\"\n\nconst ExistingLeaseLines = ({getLeaseLinesFromJSONDbReducer, activeWell}) => {\n  const [leaseLines, setLeaseLines] = useState([])\n  const [grid, setGrid] = useState([])\n\n  useEffect(()=>{\n    if (getLeaseLinesFromJSONDbReducer.status === \"received\") {\n      let leaseLinesFromReducerCopy = [...getLeaseLinesFromJSONDbReducer.response]\n      setLeaseLines(leaseLinesFromReducerCopy)\n    }\n  },[getLeaseLinesFromJSONDbReducer.status])\n\n  const renderMain = () => {\n    if (getLeaseLinesFromJSONDbReducer.status === \"received\") {\n\n    }\n  }\n\n\n  return (\n    \"hello\"\n  )\n}\n\nconst mapStateToProps = ({activeWell, getLeaseLinesFromJSONDbReducer}) => {\n  activeWell, \n  getLeaseLinesFromJSONDbReducer\n}\n\nexport default connect(mapStateToProps)(ExistingLeaseLines)"]},"metadata":{},"sourceType":"module"}