{"ast":null,"code":"import _toConsumableArray from\"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useState,useEffect}from\"react\";//bootstrap\nimport Container from\"react-bootstrap/esm/Container\";import Form from\"react-bootstrap/Form\";import Row from\"react-bootstrap/Row\";import Col from\"react-bootstrap/Col\";import Button from\"react-bootstrap/Button\";//other libs\nimport'react-datasheet/lib/react-datasheet.css';import{connect}from\"react-redux\";import ReactDataSheet from'react-datasheet';// actionCreators\nimport savePlansToReduxStore from\"../ActionCreators/savePlansToReduxStore\";//helper functions\nimport calculateTVD from\"../HelperFunctions/Calculations/TVD\";import calculateNS from\"../HelperFunctions/Calculations/NS\";import calculateEW from\"../HelperFunctions/Calculations/EW\";import calculateSECT from\"../HelperFunctions/Calculations/SECT\";import calculateDLS from\"../HelperFunctions/Calculations/DLS\";import postPlansToJSONDb from\"../ActionCreators/postPlansToJSONDb\";import postPlansToDynamoDb from\"../ActionCreators/postPlansToDynamoDb\";var Plans=function Plans(_ref){var activeWell=_ref.activeWell,postPlansToDynamoDb=_ref.postPlansToDynamoDb,savePlansToReduxStore=_ref.savePlansToReduxStore,saveWellInfoToReduxStoreReducer=_ref.saveWellInfoToReduxStoreReducer,savePlansToReduxStoreReducer=_ref.savePlansToReduxStoreReducer,postPlansToJSONDb=_ref.postPlansToJSONDb;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),editGrid=_useState2[0],setEditGrid=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),input=_useState4[0],setInput=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),vsDirection=_useState6[0],setVSDirection=_useState6[1];var initialGrid=[[{value:\"\",readOnly:true,width:'7rem'},{value:\"Measured Depth\",readOnly:true,width:'7rem'},{value:\"Inclination\",readOnly:true,width:'7rem'},{value:\"Azimuth\",readOnly:true,width:'7rem'},{value:\"TVD\",readOnly:true,width:'7rem'},{value:\"Northing\",readOnly:true,width:'7rem'},{value:\"Easting\",readOnly:true,width:'7rem'},{value:\"VS\",readOnly:true,width:'7rem'},{value:\"DLS\",readOnly:true,width:'7rem'}],[{value:1,readOnly:true},{value:0,readOnly:true},{value:0,readOnly:true},{value:0,readOnly:true},{value:0,readOnly:true},{value:0,readOnly:true},{value:0,readOnly:true},{value:0,readOnly:true},{value:0,readOnly:true}],[{readOnly:true,value:2},{value:0},{value:0},{value:0},{value:0},{value:0},{value:0},{value:0},{value:0}],[{readOnly:true,value:3},{value:0},{value:0},{value:0},{value:0},{value:0},{value:0},{value:0},{value:0}],[{readOnly:true,value:4},{value:0},{value:0},{value:0},{value:0},{value:0},{value:0},{value:0},{value:0}],[{readOnly:true,value:5},{value:0},{value:0},{value:0},{value:0},{value:0},{value:0},{value:0},{value:0}]];var _useState7=useState(initialGrid),_useState8=_slicedToArray(_useState7,2),grid=_useState8[0],setGrid=_useState8[1];useEffect(function(){if(input){//performcalcs doesn't happen bc we're copying from plans. Currently not needed\n}},[input]);useEffect(function(){handleAddRows(1);},[]);var performCalculations=function performCalculations(){grid.map(function(row,index){if(index===0||index===1){// nothing because we don't want to run calcs on the header array\n}else{// for every array within grid array, want to iterate over and change the values of TVD, NS, EW, SECT, & DLS\n// note val after idx is column \n// TVD order of args : (measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior, inclinationPrior, azimuthPrior, calculatedTVDPrior)\n// NS order of args: (measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior, inclinationPrior, azimuthPrior, calculatedNorthingPrior)\nvar calculatedTVD=calculateTVD(grid[index][1].value,grid[index][2].value,grid[index][3].value,grid[index-1][1].value,grid[index-1][2].value,grid[index-1][3].value,grid[index-1][4].value);var calculatedNS=calculateNS(grid[index][1].value,grid[index][2].value,grid[index][3].value,grid[index-1][1].value,grid[index-1][2].value,grid[index-1][3].value,grid[index-1][5].value);var calculatedEW=calculateEW(grid[index][1].value,grid[index][2].value,grid[index][3].value,grid[index-1][1].value,grid[index-1][2].value,grid[index-1][3].value,grid[index-1][6].value);var calculatedSECT=calculateSECT(grid[index][1].value,grid[index][2].value,grid[index][3].value,grid[index-1][1].value,grid[index-1][2].value,grid[index-1][3].value,grid[index-1][5].value,grid[index-1][6].value,index,vsDirection);var calculatedDLS=calculateDLS(grid[index][1].value,grid[index][2].value,grid[index][3].value,grid[index-1][1].value,grid[index-1][2].value,grid[index-1][3].value);grid[index][4]=_objectSpread(_objectSpread({},grid[index][4]),{},{readOnly:true,value:calculatedTVD});grid[index][5]=_objectSpread(_objectSpread({},grid[index][5]),{},{readOnly:true,value:calculatedNS});grid[index][6]=_objectSpread(_objectSpread({},grid[index][6]),{},{readOnly:true,value:calculatedEW});grid[index][7]=_objectSpread(_objectSpread({},grid[index][7]),{},{readOnly:true,value:calculatedSECT});grid[index][8]=_objectSpread(_objectSpread({},grid[index][8]),{},{readOnly:true,value:calculatedDLS});setGrid(grid);setInput(false);}});};var onCellsChanged=function onCellsChanged(changes){// iterate through existing grid to get a copy and not mutate current as we iterate over\nvar gridNew=grid.map(function(row){return _toConsumableArray(row);});// iterate through the changes.  Each change is a cell, each cell is an object\n// with cell (previousVal), row, col, currentVal\n// add the value of the newGrid[row#][col#] to the new value \nchanges.forEach(function(_ref2){var cell=_ref2.cell,row=_ref2.row,col=_ref2.col,value=_ref2.value;gridNew[row][col]=_objectSpread(_objectSpread({},grid[row][col]),{},{value:value});});setGrid(gridNew);setInput(true);};var handleVSDirection=function handleVSDirection(val){setVSDirection(val);setInput(true);};var handleSubmit=function handleSubmit(){var planRecords=grid;var _saveWellInfoToReduxS=saveWellInfoToReduxStoreReducer.response,well=_saveWellInfoToReduxS.well,operator=_saveWellInfoToReduxS.operator,rig=_saveWellInfoToReduxS.rig,county=_saveWellInfoToReduxS.county,usState=_saveWellInfoToReduxS.usState,northing=_saveWellInfoToReduxS.northing,easting=_saveWellInfoToReduxS.easting;// postPlansToJSONDb(operator, rig ,well, county, uSstate, planRecords, vsDirection, northing, easting)\npostPlansToDynamoDb(operator,rig,well,county,usState,planRecords,vsDirection,northing,easting);savePlansToReduxStore(planRecords);};var handleRemoveRow=function handleRemoveRow(){var newGrid=_toConsumableArray(grid);newGrid.pop();setGrid(newGrid);};var createRows=function createRows(numberOfRowsToAdd){var createdRows=[];for(var i=0;i<numberOfRowsToAdd;i++){createdRows.push([{readOnly:true,value:grid.length+i},{value:0},{value:0},{value:0},{value:0},{value:0},{value:0},{value:0},{value:0}]);}return createdRows;};var handleAddRows=function handleAddRows(rows){var newGrid=[].concat(_toConsumableArray(grid),_toConsumableArray(createRows(rows)));setGrid(newGrid);};var renderSetRowsButtons=function renderSetRowsButtons(){return/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsxs(Col,{xs:10,className:\"d-flex justify-content-start mt-4\",children:[/*#__PURE__*/_jsx(Button,{variant:\"success\",value:25,onClick:function onClick(event){return handleAddRows(event.target.value);},children:\"Add 25 rows\"}),/*#__PURE__*/_jsx(Button,{variant:\"success\",className:\"ml-4\",value:10,onClick:function onClick(event){return handleAddRows(event.target.value);},children:\"Add 10 rows\"}),/*#__PURE__*/_jsx(Button,{variant:\"success\",className:\"ml-4\",value:5,onClick:function onClick(event){return handleAddRows(event.target.value);},children:\"Add 5 rows\"}),/*#__PURE__*/_jsx(Button,{variant:\"success\",className:\"ml-4\",value:1,onClick:function onClick(event){return handleAddRows(event.target.value);},children:\"Add a row\"}),/*#__PURE__*/_jsx(Button,{variant:\"danger\",className:\"ml-4\",onClick:handleRemoveRow,children:\"Remove a row\"})]}),/*#__PURE__*/_jsx(Col,{xs:2})]});};var renderSubmitButton=function renderSubmitButton(){return/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{xs:10,className:\"my-4\",children:/*#__PURE__*/_jsx(Button,{variant:\"info\",onClick:function onClick(){return handleSubmit();},children:\"Submit Data\"})}),/*#__PURE__*/_jsx(Col,{xs:2})]});};var renderWellData=function renderWellData(){if(saveWellInfoToReduxStoreReducer.status===\"received\"){var _saveWellInfoToReduxS2=saveWellInfoToReduxStoreReducer.response,well=_saveWellInfoToReduxS2.well,rig=_saveWellInfoToReduxS2.rig,operator=_saveWellInfoToReduxS2.operator;return/*#__PURE__*/_jsxs(\"h3\",{className:\"hy-4\",children:[\" \",operator,\" - \",rig,\" - \",well]});}else if(activeWell.status===\"received\"){var _activeWell$response=activeWell.response,Well_Name=_activeWell$response.Well_Name,Rig=_activeWell$response.Rig,Operator=_activeWell$response.Operator;return/*#__PURE__*/_jsxs(\"h3\",{className:\"hy-4\",children:[\" \",Operator.S,\" - \",Rig.S,\" - \",Well_Name.S]});}else{return\"No well data\";}};return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsxs(Col,{xs:10,children:[renderWellData(),/*#__PURE__*/_jsx(ReactDataSheet,{data:grid,valueRenderer:function valueRenderer(cell){return cell.value;},onCellsChanged:onCellsChanged})]}),/*#__PURE__*/_jsx(Col,{xs:2,children:/*#__PURE__*/_jsx(Form,{className:\"mt-7\",children:/*#__PURE__*/_jsx(Form.Group,{controlId:\"formBasicEmail\",children:/*#__PURE__*/_jsx(Form.Control,{className:\"mt-3\",type:\"float\",placeholder:\"Enter VS Here\",onChange:function onChange(event){return handleVSDirection(event.target.value);}})})})})]}),renderSetRowsButtons(),renderSubmitButton(),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{xs:10}),/*#__PURE__*/_jsx(Col,{xs:2})]})]});};var mapStateToProps=function mapStateToProps(_ref3){var activeWell=_ref3.activeWell,saveWellInfoToReduxStoreReducer=_ref3.saveWellInfoToReduxStoreReducer;return{saveWellInfoToReduxStoreReducer:saveWellInfoToReduxStoreReducer,activeWell:activeWell};};export default connect(mapStateToProps,{postPlansToDynamoDb:postPlansToDynamoDb,savePlansToReduxStore:savePlansToReduxStore,postPlansToJSONDb:postPlansToJSONDb})(Plans);","map":{"version":3,"sources":["/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Components/Plans.js"],"names":["React","useState","useEffect","Container","Form","Row","Col","Button","connect","ReactDataSheet","savePlansToReduxStore","calculateTVD","calculateNS","calculateEW","calculateSECT","calculateDLS","postPlansToJSONDb","postPlansToDynamoDb","Plans","activeWell","saveWellInfoToReduxStoreReducer","savePlansToReduxStoreReducer","editGrid","setEditGrid","input","setInput","vsDirection","setVSDirection","initialGrid","value","readOnly","width","grid","setGrid","handleAddRows","performCalculations","map","row","index","calculatedTVD","calculatedNS","calculatedEW","calculatedSECT","calculatedDLS","onCellsChanged","changes","gridNew","forEach","cell","col","handleVSDirection","val","handleSubmit","planRecords","response","well","operator","rig","county","usState","northing","easting","handleRemoveRow","newGrid","pop","createRows","numberOfRowsToAdd","createdRows","i","push","length","rows","renderSetRowsButtons","event","target","renderSubmitButton","renderWellData","status","Well_Name","Rig","Operator","S","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\n//bootstrap\nimport Container from \"react-bootstrap/esm/Container\";\nimport Form from \"react-bootstrap/Form\"\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\nimport Button from \"react-bootstrap/Button\"\n//other libs\nimport 'react-datasheet/lib/react-datasheet.css';\nimport { connect } from \"react-redux\"\nimport ReactDataSheet from 'react-datasheet';\n// actionCreators\n\nimport savePlansToReduxStore from \"../ActionCreators/savePlansToReduxStore\"\n//helper functions\nimport calculateTVD from \"../HelperFunctions/Calculations/TVD\"\nimport calculateNS from \"../HelperFunctions/Calculations/NS\"\nimport calculateEW from \"../HelperFunctions/Calculations/EW\"\nimport calculateSECT from \"../HelperFunctions/Calculations/SECT\"\nimport calculateDLS from \"../HelperFunctions/Calculations/DLS\"\nimport postPlansToJSONDb from \"../ActionCreators/postPlansToJSONDb\";\nimport postPlansToDynamoDb from \"../ActionCreators/postPlansToDynamoDb\";\n\n\n\nconst Plans = ({activeWell, postPlansToDynamoDb, savePlansToReduxStore, saveWellInfoToReduxStoreReducer,savePlansToReduxStoreReducer, postPlansToJSONDb}) => {\n  \n  const [editGrid, setEditGrid] = useState(true)\n  const [input, setInput] = useState(false)\n  const [vsDirection, setVSDirection] = useState(0)\n  \n  const initialGrid = [\n    [{value: \"\", readOnly: true, width: '7rem'}, {value:\"Measured Depth\", readOnly: true, width: '7rem'}, {value:\"Inclination\", readOnly: true, width: '7rem'}, {value:\"Azimuth\", readOnly: true, width: '7rem'}, {value:\"TVD\", readOnly: true, width: '7rem'}, {value:\"Northing\", readOnly: true, width: '7rem'}, {value:\"Easting\", readOnly: true, width: '7rem'}, {value:\"VS\", readOnly: true, width: '7rem'},{value:\"DLS\", readOnly: true, width: '7rem'}],\n    \n    [{value: 1, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}],\n    \n    [{readOnly: true, value: 2}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}],\n    [{readOnly: true, value: 3}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}],\n    [{readOnly: true, value: 4}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}],\n    [{readOnly: true, value: 5}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}],\n  ];\n\n  const [grid, setGrid] = useState(initialGrid);\n\n  useEffect(()=>{\n    if (input) {\n      //performcalcs doesn't happen bc we're copying from plans. Currently not needed\n    }\n  },[input])\n\n  useEffect(()=> {\n    handleAddRows(1)\n  }, [])\n\n  const performCalculations = () => {\n    grid.map((row, index) => {\n      if (index === 0 || index === 1) {\n        // nothing because we don't want to run calcs on the header array\n      } else {\n        // for every array within grid array, want to iterate over and change the values of TVD, NS, EW, SECT, & DLS\n        // note val after idx is column \n        // TVD order of args : (measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior, inclinationPrior, azimuthPrior, calculatedTVDPrior)\n        // NS order of args: (measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior, inclinationPrior, azimuthPrior, calculatedNorthingPrior)\n\n        const calculatedTVD = calculateTVD(grid[index][1].value, grid[index][2].value, grid[index][3].value, grid[index - 1][1].value, grid[index - 1][2].value, grid[index - 1][3].value, grid[index - 1][4].value)\n        const calculatedNS = calculateNS(grid[index][1].value, grid[index][2].value, grid[index][3].value, grid[index - 1][1].value, grid[index - 1][2].value, grid[index - 1][3].value, grid[index - 1][5].value)\n        const calculatedEW = calculateEW(grid[index][1].value, grid[index][2].value, grid[index][3].value, grid[index - 1][1].value, grid[index - 1][2].value, grid[index - 1][3].value, grid[index - 1][6].value)\n        const calculatedSECT = calculateSECT(grid[index][1].value, grid[index][2].value, grid[index][3].value, grid[index - 1][1].value, grid[index - 1][2].value, grid[index - 1][3].value, grid[index - 1][5].value, grid[index - 1][6].value, index, vsDirection)\n        const calculatedDLS = calculateDLS(grid[index][1].value, grid[index][2].value, grid[index][3].value, grid[index - 1][1].value, grid[index - 1][2].value, grid[index - 1][3].value)\n\n\n        grid[index][4] = {...grid[index][4], readOnly: true, value: calculatedTVD}\n        grid[index][5] = {...grid[index][5], readOnly: true, value: calculatedNS}\n        grid[index][6] = {...grid[index][6], readOnly: true, value: calculatedEW}\n        grid[index][7] = {...grid[index][7], readOnly: true, value: calculatedSECT}\n        grid[index][8] = {...grid[index][8], readOnly: true, value: calculatedDLS}\n\n        setGrid(grid)\n        setInput(false)\n\n      }\n    })\n  }\n\n  const onCellsChanged = changes => {\n    // iterate through existing grid to get a copy and not mutate current as we iterate over\n    const gridNew = grid.map(row => [...row]);\n    // iterate through the changes.  Each change is a cell, each cell is an object\n    // with cell (previousVal), row, col, currentVal\n    // add the value of the newGrid[row#][col#] to the new value \n    changes.forEach(({ cell, row, col, value }) => {\n      gridNew[row][col] = {...grid[row][col], value };\n    });\n    setGrid(gridNew)\n    setInput(true)\n  };\n\n  const handleVSDirection = (val) => {\n    setVSDirection(val)\n    setInput(true)\n  }\n\n  const handleSubmit = () => {\n    const planRecords = grid\n    const {well, operator, rig, county, usState, northing, easting} = saveWellInfoToReduxStoreReducer.response\n    // postPlansToJSONDb(operator, rig ,well, county, uSstate, planRecords, vsDirection, northing, easting)\n    postPlansToDynamoDb(operator, rig ,well, county, usState, planRecords, vsDirection, northing, easting)\n    savePlansToReduxStore(planRecords)\n\n  }\n\n  const handleRemoveRow = () => {\n    const newGrid = [...grid];\n    newGrid.pop();\n    setGrid(newGrid);\n  };\n\n  const createRows = (numberOfRowsToAdd) => {\n    let createdRows = []\n    for (let i = 0; i < numberOfRowsToAdd; i++) {\n      createdRows.push(\n        [{readOnly: true, value: grid.length + i}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}]\n      )\n    }\n    return createdRows\n  };\n\n  const handleAddRows = (rows) => {\n    const newGrid = [...grid, ...createRows(rows)]\n    setGrid(newGrid)\n  }\n\n  const renderSetRowsButtons = () => {\n    return (\n      <Row>\n        <Col xs={10} className=\"d-flex justify-content-start mt-4\">\n          <Button variant=\"success\" value={25} onClick={(event)=> handleAddRows(event.target.value)}>\n            Add 25 rows\n          </Button>\n          <Button variant=\"success\" className=\"ml-4\" value={10} onClick={(event) => handleAddRows(event.target.value)}>\n            Add 10 rows\n          </Button>\n          <Button variant=\"success\" className=\"ml-4\" value={5} onClick={(event) => handleAddRows(event.target.value)}>\n            Add 5 rows\n          </Button>\n          <Button variant=\"success\" className=\"ml-4\" value={1} onClick={(event) => handleAddRows(event.target.value)}>\n            Add a row\n          </Button>\n          <Button variant=\"danger\" className=\"ml-4\" onClick={handleRemoveRow}>\n            Remove a row\n          </Button>\n        </Col>\n        <Col xs={2}>\n          \n        </Col>\n      </Row>\n    )\n  }\n\n  const renderSubmitButton = () => {\n    return (\n      <Row>\n        <Col xs={10} className=\"my-4\">\n          <Button variant=\"info\" onClick={()=>handleSubmit()}>\n            Submit Data\n          </Button>\n        </Col>\n        <Col xs={2}>\n\n        </Col>\n      </Row>\n    )\n  }\n\n  const renderWellData = () => {\n    if (saveWellInfoToReduxStoreReducer.status === \"received\") {\n      const { well, rig, operator} = saveWellInfoToReduxStoreReducer.response\n      return <h3 className=\"hy-4\"> {operator} - {rig} - {well}</h3>\n    }\n    else if (activeWell.status === \"received\") {\n      const { Well_Name, Rig, Operator} = activeWell.response\n      return <h3 className=\"hy-4\"> {Operator.S} - {Rig.S} - {Well_Name.S}</h3>\n    } else {\n      return \"No well data\"\n    }\n  }\n\n  return (\n    <Container>\n      <Row>\n        <Col xs={10}>\n          {renderWellData()}\n          <ReactDataSheet data={grid} valueRenderer={(cell)=> cell.value} onCellsChanged={onCellsChanged}/>\n        </Col>\n        <Col xs={2}>\n          <Form className=\"mt-7\">\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Control className=\"mt-3\" type=\"float\" placeholder=\"Enter VS Here\" onChange={event => handleVSDirection(event.target.value)}/>\n            </Form.Group>\n          </Form>\n        </Col>\n      </Row>\n      {renderSetRowsButtons()}\n      {renderSubmitButton()}\n      <Row>\n        <Col xs={10}>\n          {/* {renderAlert()} */}\n        </Col>\n        <Col xs={2}>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nconst mapStateToProps = ({activeWell, saveWellInfoToReduxStoreReducer}) => {\n  return {\n    saveWellInfoToReduxStoreReducer,\n    activeWell\n  }\n}\n\nexport default connect(mapStateToProps, { postPlansToDynamoDb, savePlansToReduxStore, postPlansToJSONDb})(Plans)\n\n\n"]},"metadata":{},"sourceType":"module"}