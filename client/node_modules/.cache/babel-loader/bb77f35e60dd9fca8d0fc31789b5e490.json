{"ast":null,"code":"import wells from \"../APIs/wells\";\nimport getWellsFromJSONDb from \"./getWellsFromJSONDb\";\nimport { GET_WELL_PLANS_FROM_JSONDB_REQUESTED, GET_WELL_PLANS_FROM_JSONDB_RECEIVED, GET_WELL_PLANS_FROM_JSONDB_FAILED } from \"./types\";\nexport default (well => {\n  return async (dispatch, getState) => {\n    console.log(getState().getWellsFromJSONDbReducer); // have a well, for (well in getState.getWellsFromJSONDbReducer.response) {\n    // if (getState.getWellsFromJSONDbReducer.response[well].operator )\n    // }\n\n    dispatch({\n      type: GET_WELL_PLANS_FROM_JSONDB_REQUESTED\n    });\n\n    try {\n      const response = await wells.get(\"/wells\");\n      dispatch({\n        type: GET_WELL_PLANS_FROM_JSONDB_RECEIVED,\n        payload: response\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_WELL_PLANS_FROM_JSONDB_FAILED,\n        payload: error\n      });\n    }\n  };\n});","map":{"version":3,"sources":["/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getWellPlansFromJSONDb.js"],"names":["wells","getWellsFromJSONDb","GET_WELL_PLANS_FROM_JSONDB_REQUESTED","GET_WELL_PLANS_FROM_JSONDB_RECEIVED","GET_WELL_PLANS_FROM_JSONDB_FAILED","well","dispatch","getState","console","log","getWellsFromJSONDbReducer","type","response","get","payload","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,eAAlB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,SAASC,oCAAT,EACEC,mCADF,EAEEC,iCAFF,QAE0C,SAF1C;AAIA,gBAAgBC,IAAD,IAAU;AACvB,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,GAAGG,yBAAvB,EADmC,CAGnC;AACI;AACJ;;AAEAJ,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAET;AADC,KAAD,CAAR;;AAGA,QAAI;AACF,YAAMU,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAU,QAAV,CAAvB;AACAP,MAAAA,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAER,mCADC;AAEPW,QAAAA,OAAO,EAAEF;AAFF,OAAD,CAAR;AAID,KAND,CAME,OAAMG,KAAN,EAAa;AACbT,MAAAA,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAEP,iCADC;AAEPU,QAAAA,OAAO,EAAEC;AAFF,OAAD,CAAR;AAID;AACF,GAtBD;AAuBD,CAxBD","sourcesContent":["import wells from \"../APIs/wells\"\nimport getWellsFromJSONDb from \"./getWellsFromJSONDb\"\nimport { GET_WELL_PLANS_FROM_JSONDB_REQUESTED, \n  GET_WELL_PLANS_FROM_JSONDB_RECEIVED,\n  GET_WELL_PLANS_FROM_JSONDB_FAILED} from \"./types\"\n\nexport default (well) => {\n  return async (dispatch, getState) => {\n    console.log(getState().getWellsFromJSONDbReducer)\n\n    // have a well, for (well in getState.getWellsFromJSONDbReducer.response) {\n        // if (getState.getWellsFromJSONDbReducer.response[well].operator )\n    // }\n\n    dispatch({\n      type: GET_WELL_PLANS_FROM_JSONDB_REQUESTED\n    })\n    try {\n      const response = await wells.get(\"/wells\")\n      dispatch({\n        type: GET_WELL_PLANS_FROM_JSONDB_RECEIVED,\n        payload: response\n      })\n    } catch(error) {\n      dispatch({\n        type: GET_WELL_PLANS_FROM_JSONDB_FAILED,\n        payload: error\n      })\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}