{"ast":null,"code":"import wells from \"../APIs/wells\";\nimport { POST_WELLINFO_TO_JSONDB_REQUESTED, POST_WELLINFO_TO_JSONDB_RECEIVED, POST_WELLINFO_TO_JSONDB_FAILED } from './types';\nexport default (wellInfo => {\n  const wellId = wellInfo.well;\n  console.log(wellId);\n  return async (dispatch, getState) => {\n    const response = await wells.post(\"/wells\", wellInfo);\n    dispatch({\n      type: POST_WELLINFO_TO_JSONDB_REQUESTED\n    });\n\n    try {\n      dispatch({\n        type: POST_WELLINFO_TO_JSONDB_RECEIVED,\n        payload: wellInfo\n      });\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: POST_WELLINFO_TO_JSONDB_FAILED,\n        payload: error\n      });\n    }\n  };\n});","map":{"version":3,"sources":["/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/postWellInfoToJSONDb.js"],"names":["wells","POST_WELLINFO_TO_JSONDB_REQUESTED","POST_WELLINFO_TO_JSONDB_RECEIVED","POST_WELLINFO_TO_JSONDB_FAILED","wellInfo","wellId","well","console","log","dispatch","getState","response","post","type","payload","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,eAAlB;AAEA,SAASC,iCAAT,EACEC,gCADF,EAEEC,8BAFF,QAEwC,SAFxC;AAIE,gBAAgBC,QAAD,IAAc;AAC3B,QAAMC,MAAM,GAAGD,QAAQ,CAACE,IAAxB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,SAAO,OAAOI,QAAP,EAAiBC,QAAjB,KAA8B;AACnC,UAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAN,CAAW,QAAX,EAAqBR,QAArB,CAAvB;AACAK,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEZ;AADC,KAAD,CAAR;;AAIA,QAAI;AACFQ,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAEX,gCADC;AAEPY,QAAAA,OAAO,EAAEV;AAFF,OAAD,CAAR;AAID,KALD,CAKE,OAAOW,KAAP,EAAc;AACdR,MAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACAN,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAEV,8BADC;AAEPW,QAAAA,OAAO,EAAEC;AAFF,OAAD,CAAR;AAID;AACF,GAlBD;AAmBD,CAtBD","sourcesContent":["import wells from \"../APIs/wells\"\n\nimport { POST_WELLINFO_TO_JSONDB_REQUESTED,\n  POST_WELLINFO_TO_JSONDB_RECEIVED,\n  POST_WELLINFO_TO_JSONDB_FAILED } from './types';\n  \n  export default (wellInfo) => {\n    const wellId = wellInfo.well\n    console.log(wellId)\n    return async (dispatch, getState) => {\n      const response = await wells.post(\"/wells\", wellInfo)\n      dispatch({\n        type: POST_WELLINFO_TO_JSONDB_REQUESTED,\n      });\n  \n      try {\n        dispatch({\n          type: POST_WELLINFO_TO_JSONDB_RECEIVED,\n          payload: wellInfo,\n        });\n      } catch (error) {\n        console.log(error)\n        dispatch({\n          type: POST_WELLINFO_TO_JSONDB_FAILED,\n          payload: error,\n        });\n      }\n    };\n  };\n  "]},"metadata":{},"sourceType":"module"}