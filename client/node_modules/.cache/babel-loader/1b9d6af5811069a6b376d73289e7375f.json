{"ast":null,"code":"/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nmodule.exports = {\n  visible: {\n    valType: 'boolean',\n    role: 'info',\n    editType: 'calc',\n    description: ['Determines whether or not this set of error bars is visible.'].join(' ')\n  },\n  type: {\n    valType: 'enumerated',\n    values: ['percent', 'constant', 'sqrt', 'data'],\n    role: 'info',\n    editType: 'calc',\n    description: ['Determines the rule used to generate the error bars.', 'If *constant`, the bar lengths are of a constant value.', 'Set this constant in `value`.', 'If *percent*, the bar lengths correspond to a percentage of', 'underlying data. Set this percentage in `value`.', 'If *sqrt*, the bar lengths correspond to the sqaure of the', 'underlying data.', 'If *data*, the bar lengths are set with data set `array`.'].join(' ')\n  },\n  symmetric: {\n    valType: 'boolean',\n    role: 'info',\n    editType: 'calc',\n    description: ['Determines whether or not the error bars have the same length', 'in both direction', '(top/bottom for vertical bars, left/right for horizontal bars.'].join(' ')\n  },\n  array: {\n    valType: 'data_array',\n    editType: 'calc',\n    description: ['Sets the data corresponding the length of each error bar.', 'Values are plotted relative to the underlying data.'].join(' ')\n  },\n  arrayminus: {\n    valType: 'data_array',\n    editType: 'calc',\n    description: ['Sets the data corresponding the length of each error bar in the', 'bottom (left) direction for vertical (horizontal) bars', 'Values are plotted relative to the underlying data.'].join(' ')\n  },\n  value: {\n    valType: 'number',\n    min: 0,\n    dflt: 10,\n    role: 'info',\n    editType: 'calc',\n    description: ['Sets the value of either the percentage', '(if `type` is set to *percent*) or the constant', '(if `type` is set to *constant*) corresponding to the lengths of', 'the error bars.'].join(' ')\n  },\n  valueminus: {\n    valType: 'number',\n    min: 0,\n    dflt: 10,\n    role: 'info',\n    editType: 'calc',\n    description: ['Sets the value of either the percentage', '(if `type` is set to *percent*) or the constant', '(if `type` is set to *constant*) corresponding to the lengths of', 'the error bars in the', 'bottom (left) direction for vertical (horizontal) bars'].join(' ')\n  },\n  traceref: {\n    valType: 'integer',\n    min: 0,\n    dflt: 0,\n    role: 'info',\n    editType: 'style'\n  },\n  tracerefminus: {\n    valType: 'integer',\n    min: 0,\n    dflt: 0,\n    role: 'info',\n    editType: 'style'\n  },\n  copy_ystyle: {\n    valType: 'boolean',\n    role: 'style',\n    editType: 'plot'\n  },\n  copy_zstyle: {\n    valType: 'boolean',\n    role: 'style',\n    editType: 'style'\n  },\n  color: {\n    valType: 'color',\n    role: 'style',\n    editType: 'style',\n    description: 'Sets the stoke color of the error bars.'\n  },\n  thickness: {\n    valType: 'number',\n    min: 0,\n    dflt: 2,\n    role: 'style',\n    editType: 'style',\n    description: 'Sets the thickness (in px) of the error bars.'\n  },\n  width: {\n    valType: 'number',\n    min: 0,\n    role: 'style',\n    editType: 'plot',\n    description: ['Sets the width (in px) of the cross-bar at both ends', 'of the error bars.'].join(' ')\n  },\n  editType: 'calc',\n  _deprecated: {\n    opacity: {\n      valType: 'number',\n      role: 'style',\n      editType: 'style',\n      description: ['Obsolete.', 'Use the alpha channel in error bar `color` to set the opacity.'].join(' ')\n    }\n  }\n};","map":{"version":3,"sources":["/Users/caseyrudick/Documents/landsharkrefactored-copy/client/node_modules/plotly.js/src/components/errorbars/attributes.js"],"names":["module","exports","visible","valType","role","editType","description","join","type","values","symmetric","array","arrayminus","value","min","dflt","valueminus","traceref","tracerefminus","copy_ystyle","copy_zstyle","color","thickness","width","_deprecated","opacity"],"mappings":"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","sourcesContent":["/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\n\nmodule.exports = {\n    visible: {\n        valType: 'boolean',\n        role: 'info',\n        editType: 'calc',\n        description: [\n            'Determines whether or not this set of error bars is visible.'\n        ].join(' ')\n    },\n    type: {\n        valType: 'enumerated',\n        values: ['percent', 'constant', 'sqrt', 'data'],\n        role: 'info',\n        editType: 'calc',\n        description: [\n            'Determines the rule used to generate the error bars.',\n\n            'If *constant`, the bar lengths are of a constant value.',\n            'Set this constant in `value`.',\n\n            'If *percent*, the bar lengths correspond to a percentage of',\n            'underlying data. Set this percentage in `value`.',\n\n            'If *sqrt*, the bar lengths correspond to the sqaure of the',\n            'underlying data.',\n\n            'If *data*, the bar lengths are set with data set `array`.'\n        ].join(' ')\n    },\n    symmetric: {\n        valType: 'boolean',\n        role: 'info',\n        editType: 'calc',\n        description: [\n            'Determines whether or not the error bars have the same length',\n            'in both direction',\n            '(top/bottom for vertical bars, left/right for horizontal bars.'\n        ].join(' ')\n    },\n    array: {\n        valType: 'data_array',\n        editType: 'calc',\n        description: [\n            'Sets the data corresponding the length of each error bar.',\n            'Values are plotted relative to the underlying data.'\n        ].join(' ')\n    },\n    arrayminus: {\n        valType: 'data_array',\n        editType: 'calc',\n        description: [\n            'Sets the data corresponding the length of each error bar in the',\n            'bottom (left) direction for vertical (horizontal) bars',\n            'Values are plotted relative to the underlying data.'\n        ].join(' ')\n    },\n    value: {\n        valType: 'number',\n        min: 0,\n        dflt: 10,\n        role: 'info',\n        editType: 'calc',\n        description: [\n            'Sets the value of either the percentage',\n            '(if `type` is set to *percent*) or the constant',\n            '(if `type` is set to *constant*) corresponding to the lengths of',\n            'the error bars.'\n        ].join(' ')\n    },\n    valueminus: {\n        valType: 'number',\n        min: 0,\n        dflt: 10,\n        role: 'info',\n        editType: 'calc',\n        description: [\n            'Sets the value of either the percentage',\n            '(if `type` is set to *percent*) or the constant',\n            '(if `type` is set to *constant*) corresponding to the lengths of',\n            'the error bars in the',\n            'bottom (left) direction for vertical (horizontal) bars'\n        ].join(' ')\n    },\n    traceref: {\n        valType: 'integer',\n        min: 0,\n        dflt: 0,\n        role: 'info',\n        editType: 'style'\n    },\n    tracerefminus: {\n        valType: 'integer',\n        min: 0,\n        dflt: 0,\n        role: 'info',\n        editType: 'style'\n    },\n    copy_ystyle: {\n        valType: 'boolean',\n        role: 'style',\n        editType: 'plot'\n    },\n    copy_zstyle: {\n        valType: 'boolean',\n        role: 'style',\n        editType: 'style'\n    },\n    color: {\n        valType: 'color',\n        role: 'style',\n        editType: 'style',\n        description: 'Sets the stoke color of the error bars.'\n    },\n    thickness: {\n        valType: 'number',\n        min: 0,\n        dflt: 2,\n        role: 'style',\n        editType: 'style',\n        description: 'Sets the thickness (in px) of the error bars.'\n    },\n    width: {\n        valType: 'number',\n        min: 0,\n        role: 'style',\n        editType: 'plot',\n        description: [\n            'Sets the width (in px) of the cross-bar at both ends',\n            'of the error bars.'\n        ].join(' ')\n    },\n    editType: 'calc',\n\n    _deprecated: {\n        opacity: {\n            valType: 'number',\n            role: 'style',\n            editType: 'style',\n            description: [\n                'Obsolete.',\n                'Use the alpha channel in error bar `color` to set the opacity.'\n            ].join(' ')\n        }\n    }\n};\n"]},"metadata":{},"sourceType":"script"}