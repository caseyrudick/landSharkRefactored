{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React from'react';// react-boostrap\nimport Tabs from'react-bootstrap/Tabs';import Tab from\"react-bootstrap/Tab\";import Jumbotron from'react-bootstrap/Jumbotron';import Container from'react-bootstrap/Container';// redux\nimport{connect}from'react-redux';// styling \nimport'bootstrap/dist/css/bootstrap.min.css';//import 'custom.scss'\n// components\nimport Home from\"./Home\";import Plans from\"./Plans\";import ExistingPlans from'./ExistingPlans';import LeaseLines from\"./PolyLines\";import ExistingLeaseLines from\"./ExistingPolyLines\";import savePlansToReduxStore from'../ActionCreators/savePlansToReduxStore';import PVA from\"./PVA\";import ExistingPVA from\"./ExistingPVA\";import Surveys from\"./Surveys\";import ExistingSurveys from\"./ExistingSurveys\";import ExistingPolyLines from'./ExistingPolyLines';import PolyLines from'./PolyLines';import SignInHome from\"./UserVerification/SignInHome\";import{Link}from\"react-router-dom\";import getSurveysFromDynamoDb from'../ActionCreators/getSurveysFromDynamoDb';import getLeaseLinesFromDynamoDb from'../ActionCreators/getLeaseLinesFromDynamoDb';var Dashboard=function Dashboard(_ref){var getHardLinesFromDynamoDbReducer=_ref.getHardLinesFromDynamoDbReducer,getLeaseLinesFromDynamoDbReducer=_ref.getLeaseLinesFromDynamoDbReducer,getWellPlansFromDynamoDbReducer=_ref.getWellPlansFromDynamoDbReducer,getSurveysFromDynamoDbReducer=_ref.getSurveysFromDynamoDbReducer,saveHardLinesToReduxStoreReducer=_ref.saveHardLinesToReduxStoreReducer,saveSurveysToReduxStoreReducer=_ref.saveSurveysToReduxStoreReducer,activeWell=_ref.activeWell,saveWellInfoToReduxStoreReducer=_ref.saveWellInfoToReduxStoreReducer,savePlansToReduxStoreReducer=_ref.savePlansToReduxStoreReducer,saveLeaseLinesToReduxStoreReducer=_ref.saveLeaseLinesToReduxStoreReducer;return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(Jumbotron,{fluid:true,className:\"bg-dark text-white\",children:/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(\"h1\",{children:\"LandShark App (Employee Portal)\"})})}),/*#__PURE__*/_jsxs(Tabs,{children:[/*#__PURE__*/_jsx(Tab,{eventKey:\"Home\",title:\"Home\",children:/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(Home,{})})}),/*#__PURE__*/_jsx(Tab,{eventKey:\"Plans\",title:\"Plans\",disabled:getWellPlansFromDynamoDbReducer.status===\"received\"||saveWellInfoToReduxStoreReducer.status===\"received\"?false:true,children:/*#__PURE__*/_jsx(Container,{children:getWellPlansFromDynamoDbReducer.response.Count>0?/*#__PURE__*/_jsx(ExistingPlans,{}):/*#__PURE__*/_jsx(Plans,{})})}),/*#__PURE__*/_jsx(Tab,{eventKey:\"PolyLines\",title:\"PolyLines\",disabled:getLeaseLinesFromDynamoDbReducer.status===\"received\"||getHardLinesFromDynamoDbReducer.status===\"received\"||saveWellInfoToReduxStoreReducer.status===\"received\"?false:true,children:/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(PolyLines,{})})}),/*#__PURE__*/_jsx(Tab,{eventKey:\"Surveys\",title:\"Surveys\",disabled:getSurveysFromDynamoDbReducer.status===\"received\"||saveWellInfoToReduxStoreReducer.status===\"received\"?false:true,children:/*#__PURE__*/_jsx(Container,{children:getSurveysFromDynamoDbReducer.response.Count>0?/*#__PURE__*/_jsx(ExistingSurveys,{}):/*#__PURE__*/_jsx(Surveys,{})})}),/*#__PURE__*/_jsx(Tab,{eventKey:\"PVA\",title:\"PVA\",disabled:getSurveysFromDynamoDbReducer.status===\"received\"&&getWellPlansFromDynamoDbReducer.response&&getLeaseLinesFromDynamoDbReducer.status===\"received\"&&getHardLinesFromDynamoDbReducer.status===\"received\"||activeWell.status===\"received\"?false:true,children:/*#__PURE__*/_jsx(Container,{children:getSurveysFromDynamoDbReducer.status===\"received\"&&getWellPlansFromDynamoDbReducer.response&&getLeaseLinesFromDynamoDbReducer.status===\"received\"&&getHardLinesFromDynamoDbReducer.status===\"received\"?/*#__PURE__*/_jsx(ExistingPVA,{}):/*<PVA/>*/\"TBD\"})})]})]});};var mapStateToProps=function mapStateToProps(_ref2){var getHardLinesFromDynamoDbReducer=_ref2.getHardLinesFromDynamoDbReducer,getSurveysFromDynamoDbReducer=_ref2.getSurveysFromDynamoDbReducer,getLeaseLinesFromDynamoDbReducer=_ref2.getLeaseLinesFromDynamoDbReducer,postHardLinesToDynamoDbReducer=_ref2.postHardLinesToDynamoDbReducer,getWellPlansFromDynamoDbReducer=_ref2.getWellPlansFromDynamoDbReducer,saveHardLinesToReduxStoreReducer=_ref2.saveHardLinesToReduxStoreReducer,saveSurveysToReduxStoreReducer=_ref2.saveSurveysToReduxStoreReducer,saveWellInfoToReduxStoreReducer=_ref2.saveWellInfoToReduxStoreReducer,activeWell=_ref2.activeWell,savePlansToReduxStoreReducer=_ref2.savePlansToReduxStoreReducer,saveLeaseLinesToReduxStoreReducer=_ref2.saveLeaseLinesToReduxStoreReducer;return{saveWellInfoToReduxStoreReducer:saveWellInfoToReduxStoreReducer,getWellPlansFromDynamoDbReducer:getWellPlansFromDynamoDbReducer,getLeaseLinesFromDynamoDbReducer:getLeaseLinesFromDynamoDbReducer,getSurveysFromDynamoDbReducer:getSurveysFromDynamoDbReducer,activeWell:activeWell,savePlansToReduxStoreReducer:savePlansToReduxStoreReducer,saveLeaseLinesToReduxStoreReducer:saveLeaseLinesToReduxStoreReducer,saveSurveysToReduxStoreReducer:saveSurveysToReduxStoreReducer,saveHardLinesToReduxStoreReducer:saveHardLinesToReduxStoreReducer,postHardLinesToDynamoDbReducer:postHardLinesToDynamoDbReducer,getHardLinesFromDynamoDbReducer:getHardLinesFromDynamoDbReducer};};export default connect(mapStateToProps,{})(Dashboard);","map":{"version":3,"sources":["/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Components/Dashboard.js"],"names":["React","Tabs","Tab","Jumbotron","Container","connect","Home","Plans","ExistingPlans","LeaseLines","ExistingLeaseLines","savePlansToReduxStore","PVA","ExistingPVA","Surveys","ExistingSurveys","ExistingPolyLines","PolyLines","SignInHome","Link","getSurveysFromDynamoDb","getLeaseLinesFromDynamoDb","Dashboard","getHardLinesFromDynamoDbReducer","getLeaseLinesFromDynamoDbReducer","getWellPlansFromDynamoDbReducer","getSurveysFromDynamoDbReducer","saveHardLinesToReduxStoreReducer","saveSurveysToReduxStoreReducer","activeWell","saveWellInfoToReduxStoreReducer","savePlansToReduxStoreReducer","saveLeaseLinesToReduxStoreReducer","status","response","Count","mapStateToProps","postHardLinesToDynamoDbReducer"],"mappings":"wFAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA;AACA,MAAOC,CAAAA,IAAP,KAAiB,sBAAjB,CACA,MAAOC,CAAAA,GAAP,KAAgB,qBAAhB,CACA,MAAOC,CAAAA,SAAP,KAAsB,2BAAtB,CACA,MAAOC,CAAAA,SAAP,KAAsB,2BAAtB,CACA;AACA,OAASC,OAAT,KAAwB,aAAxB,CACA;AACA,MAAO,sCAAP,CACA;AACA;AACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,UAAP,KAAuB,aAAvB,CACA,MAAOC,CAAAA,kBAAP,KAA+B,qBAA/B,CACA,MAAOC,CAAAA,qBAAP,KAAkC,yCAAlC,CACA,MAAOC,CAAAA,GAAP,KAAgB,OAAhB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,MAAOC,CAAAA,iBAAP,KAA8B,qBAA9B,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,UAAP,KAAuB,+BAAvB,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAOC,CAAAA,sBAAP,KAAmC,0CAAnC,CACA,MAAOC,CAAAA,yBAAP,KAAsC,6CAAtC,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAUuB,IATvCC,CAAAA,+BASuC,MATvCA,+BASuC,CARvCC,gCAQuC,MARvCA,gCAQuC,CAPvCC,+BAOuC,MAPvCA,+BAOuC,CANvCC,6BAMuC,MANvCA,6BAMuC,CALvCC,gCAKuC,MALvCA,gCAKuC,CAJvCC,8BAIuC,MAJvCA,8BAIuC,CAHvCC,UAGuC,MAHvCA,UAGuC,CAFvCC,+BAEuC,MAFvCA,+BAEuC,CADvCC,4BACuC,MADvCA,4BACuC,CAAvCC,iCAAuC,MAAvCA,iCAAuC,CAEvC,mBACE,MAAC,KAAD,CAAO,QAAP,yBACE,KAAC,SAAD,EAAW,KAAK,KAAhB,CAAiB,SAAS,CAAC,oBAA3B,uBACE,KAAC,SAAD,wBACE,uDADF,EADF,EADF,cAME,MAAC,IAAD,yBACE,KAAC,GAAD,EAAK,QAAQ,CAAC,MAAd,CAAqB,KAAK,CAAC,MAA3B,uBACE,KAAC,SAAD,wBACE,KAAC,IAAD,IADF,EADF,EADF,cAME,KAAC,GAAD,EAAK,QAAQ,CAAC,OAAd,CAAsB,KAAK,CAAC,OAA5B,CAAoC,QAAQ,CAAEP,+BAA+B,CAACQ,MAAhC,GAA2C,UAA3C,EAAyDH,+BAA+B,CAACG,MAAhC,GAA2C,UAApG,CAAiH,KAAjH,CAAyH,IAAvK,uBACE,KAAC,SAAD,WACCR,+BAA+B,CAACS,QAAhC,CAAyCC,KAAzC,CAAiD,CAAjD,cAAqD,KAAC,aAAD,IAArD,cAAwE,KAAC,KAAD,IADzE,EADF,EANF,cAWE,KAAC,GAAD,EAAK,QAAQ,CAAC,WAAd,CAA0B,KAAK,CAAC,WAAhC,CAA4C,QAAQ,CAAEX,gCAAgC,CAACS,MAAjC,GAA4C,UAA5C,EAA0DV,+BAA+B,CAACU,MAAhC,GAA2C,UAArG,EAAkHH,+BAA+B,CAACG,MAAhC,GAA2C,UAA7J,CAA0K,KAA1K,CAAkL,IAAxO,uBACE,KAAC,SAAD,wBACE,KAAC,SAAD,IADF,EADF,EAXF,cAgBE,KAAC,GAAD,EAAK,QAAQ,CAAC,SAAd,CAAwB,KAAK,CAAC,SAA9B,CAAwC,QAAQ,CAAIP,6BAA6B,CAACO,MAA9B,GAAyC,UAAzC,EAAuDH,+BAA+B,CAACG,MAAhC,GAA2C,UAAlG,CAA8G,KAA9G,CAAsH,IAA1K,uBACE,KAAC,SAAD,WACGP,6BAA6B,CAACQ,QAA9B,CAAuCC,KAAvC,CAA+C,CAA/C,cAAmD,KAAC,eAAD,IAAnD,cAAwE,KAAC,OAAD,IAD3E,EADF,EAhBF,cAqBE,KAAC,GAAD,EAAK,QAAQ,CAAC,KAAd,CAAoB,KAAK,CAAC,KAA1B,CAAgC,QAAQ,CAAGT,6BAA6B,CAACO,MAA9B,GAAyC,UAAzC,EAAuDR,+BAA+B,CAACS,QAAvF,EAAmGV,gCAAgC,CAACS,MAAjC,GAA4C,UAA/I,EAA8JV,+BAA+B,CAACU,MAAhC,GAA2C,UAA1M,EAA2NJ,UAAU,CAACI,MAAX,GAAsB,UAAjP,CAA8P,KAA9P,CAAsQ,IAAhT,uBACE,KAAC,SAAD,WACGP,6BAA6B,CAACO,MAA9B,GAAyC,UAAzC,EAAuDR,+BAA+B,CAACS,QAAvF,EAAmGV,gCAAgC,CAACS,MAAjC,GAA4C,UAA/I,EAA8JV,+BAA+B,CAACU,MAAhC,GAA2C,UAAzM,cAAsN,KAAC,WAAD,IAAtN,CAAuO,UAAW,KADrP,EADF,EArBF,GANF,GADF,CAoCD,CAhDD,CAkDA,GAAMG,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,OAWiB,IAVvCb,CAAAA,+BAUuC,OAVvCA,+BAUuC,CATvCG,6BASuC,OATvCA,6BASuC,CARvCF,gCAQuC,OARvCA,gCAQuC,CAPvCa,8BAOuC,OAPvCA,8BAOuC,CANvCZ,+BAMuC,OANvCA,+BAMuC,CALvCE,gCAKuC,OALvCA,gCAKuC,CAJvCC,8BAIuC,OAJvCA,8BAIuC,CAHvCE,+BAGuC,OAHvCA,+BAGuC,CAFvCD,UAEuC,OAFvCA,UAEuC,CADvCE,4BACuC,OADvCA,4BACuC,CAAvCC,iCAAuC,OAAvCA,iCAAuC,CACvC,MAAO,CACLF,+BAA+B,CAA/BA,+BADK,CAELL,+BAA+B,CAA/BA,+BAFK,CAGLD,gCAAgC,CAAhCA,gCAHK,CAILE,6BAA6B,CAA7BA,6BAJK,CAKLG,UAAU,CAAVA,UALK,CAMLE,4BAA4B,CAA5BA,4BANK,CAOLC,iCAAiC,CAAjCA,iCAPK,CAQLJ,8BAA8B,CAA9BA,8BARK,CASLD,gCAAgC,CAAhCA,gCATK,CAULU,8BAA8B,CAA9BA,8BAVK,CAWLd,+BAA+B,CAA/BA,+BAXK,CAAP,CAaD,CAzBD,CA2BA,cAAelB,CAAAA,OAAO,CAAC+B,eAAD,CAAkB,EAAlB,CAAP,CAA8Bd,SAA9B,CAAf","sourcesContent":["import React from 'react'\n// react-boostrap\nimport Tabs from 'react-bootstrap/Tabs'\nimport Tab from \"react-bootstrap/Tab\"\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Container from 'react-bootstrap/Container'\n// redux\nimport { connect } from 'react-redux'\n// styling \nimport 'bootstrap/dist/css/bootstrap.min.css';\n//import 'custom.scss'\n// components\nimport Home from \"./Home\"\nimport Plans from \"./Plans\"\nimport ExistingPlans from './ExistingPlans'\nimport LeaseLines from \"./PolyLines\"\nimport ExistingLeaseLines from \"./ExistingPolyLines\"\nimport savePlansToReduxStore from '../ActionCreators/savePlansToReduxStore'\nimport PVA from \"./PVA\"\nimport ExistingPVA from \"./ExistingPVA\"\nimport Surveys from \"./Surveys\"\nimport ExistingSurveys from \"./ExistingSurveys\"\nimport ExistingPolyLines from './ExistingPolyLines'\nimport PolyLines from './PolyLines'\nimport SignInHome from \"./UserVerification/SignInHome\"\nimport { Link } from \"react-router-dom\"\nimport getSurveysFromDynamoDb from '../ActionCreators/getSurveysFromDynamoDb'\nimport getLeaseLinesFromDynamoDb from '../ActionCreators/getLeaseLinesFromDynamoDb'\n\nconst Dashboard = ({\n  getHardLinesFromDynamoDbReducer, \n  getLeaseLinesFromDynamoDbReducer, \n  getWellPlansFromDynamoDbReducer,\n  getSurveysFromDynamoDbReducer, \n  saveHardLinesToReduxStoreReducer, \n  saveSurveysToReduxStoreReducer, \n  activeWell, \n  saveWellInfoToReduxStoreReducer, \n  savePlansToReduxStoreReducer, \n  saveLeaseLinesToReduxStoreReducer}) => {\n  \n  return (\n    <React.Fragment>\n      <Jumbotron fluid className=\"bg-dark text-white\">\n        <Container>\n          <h1>LandShark App (Employee Portal)</h1>\n        </Container>\n      </Jumbotron>\n      <Tabs>\n        <Tab eventKey=\"Home\" title=\"Home\">\n          <Container>\n            <Home/>\n          </Container>\n        </Tab>\n        <Tab eventKey=\"Plans\" title=\"Plans\" disabled={getWellPlansFromDynamoDbReducer.status === \"received\" || saveWellInfoToReduxStoreReducer.status === \"received\" ? false : true}>\n          <Container>\n          {getWellPlansFromDynamoDbReducer.response.Count > 0 ? <ExistingPlans/> : <Plans/>}\n          </Container>\n        </Tab>\n        <Tab eventKey=\"PolyLines\" title=\"PolyLines\" disabled={getLeaseLinesFromDynamoDbReducer.status === \"received\" || getHardLinesFromDynamoDbReducer.status === \"received\"|| saveWellInfoToReduxStoreReducer.status === \"received\" ? false : true} >\n          <Container>\n            <PolyLines/>\n          </Container>\n        </Tab>\n        <Tab eventKey=\"Surveys\" title=\"Surveys\" disabled= { getSurveysFromDynamoDbReducer.status === \"received\" || saveWellInfoToReduxStoreReducer.status === \"received\"? false : true }>\n          <Container>\n            {getSurveysFromDynamoDbReducer.response.Count > 0 ? <ExistingSurveys/> : <Surveys/> }\n          </Container>\n        </Tab>\n        <Tab eventKey=\"PVA\" title=\"PVA\" disabled={(getSurveysFromDynamoDbReducer.status === \"received\" && getWellPlansFromDynamoDbReducer.response && getLeaseLinesFromDynamoDbReducer.status === \"received\"  && getHardLinesFromDynamoDbReducer.status === \"received\")  ||  activeWell.status === \"received\" ? false : true}>\n          <Container>\n            {getSurveysFromDynamoDbReducer.status === \"received\" && getWellPlansFromDynamoDbReducer.response && getLeaseLinesFromDynamoDbReducer.status === \"received\"  && getHardLinesFromDynamoDbReducer.status === \"received\" ? <ExistingPVA/> : /*<PVA/>*/ \"TBD\"}\n          </Container>\n        </Tab>\n      </Tabs>\n    </React.Fragment>\n  );\n}\n\nconst mapStateToProps = ({ \n  getHardLinesFromDynamoDbReducer, \n  getSurveysFromDynamoDbReducer,\n  getLeaseLinesFromDynamoDbReducer, \n  postHardLinesToDynamoDbReducer, \n  getWellPlansFromDynamoDbReducer, \n  saveHardLinesToReduxStoreReducer, \n  saveSurveysToReduxStoreReducer,\n  saveWellInfoToReduxStoreReducer, \n  activeWell, \n  savePlansToReduxStoreReducer, \n  saveLeaseLinesToReduxStoreReducer}) => {\n  return {\n    saveWellInfoToReduxStoreReducer,\n    getWellPlansFromDynamoDbReducer, \n    getLeaseLinesFromDynamoDbReducer,\n    getSurveysFromDynamoDbReducer,\n    activeWell,\n    savePlansToReduxStoreReducer,\n    saveLeaseLinesToReduxStoreReducer,\n    saveSurveysToReduxStoreReducer,\n    saveHardLinesToReduxStoreReducer,\n    postHardLinesToDynamoDbReducer,\n    getHardLinesFromDynamoDbReducer\n  }\n}\n\nexport default connect(mapStateToProps, { })(Dashboard);\n\n"]},"metadata":{},"sourceType":"module"}