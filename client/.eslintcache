[{"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Components/Home.js":"1","/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/ActionCreators/types.js":"2","/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Reducers/wellsReducer.js":"3","/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Reducers/postPlansToJSONdb.js":"4","/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Reducers/selectWellFromReduxStoreReducer.js":"5","/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Components/App.js":"6","/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Components/Plans.js":"7","/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Components/ExistingWellPlans.js":"8","/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/ActionCreators/setActiveWell.js":"9","/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/ActionCreators/saveWellPlansToJSON.js":"10","/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/APIs/wells.js":"11","/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/ActionCreators/postNewWellToJSONdb.js":"12","/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/ActionCreators/saveNewWellToReduxStore.js":"13","/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Reducers/index.js":"14","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/App.js":"15","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/types.js":"16","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/Plans.js":"17","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/ExistingPlans.js":"18","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/Home.js":"19","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/saveWellInfoToReduxStore.js":"20","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/saveWellInfoToReduxStoreReducer.js":"21","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/postWellInfoToJSONDbReducer.js":"22","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/APIs/wells.js":"23","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/index.js":"24","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getWellsFromJSONDbReducer.js":"25","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getWellsFromJSONDb.js":"26","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/postWellInfoToJSONDb.js":"27","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/saveActiveWellToReduxStoreReducer.js":"28","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/saveActiveWellToReduxStore.js":"29","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/Surveys.js":"30","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/LeaseLines.js":"31","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/postPlansToJSONDbReducer.js":"32","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/postPlansToJSONDb.js":"33","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getWellPlansFromJSONDbReducer.js":"34","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/TVD.js":"35"},{"size":4248,"mtime":1607360419321,"results":"36","hashOfConfig":"37"},{"size":679,"mtime":1607360175845,"results":"38","hashOfConfig":"37"},{"size":665,"mtime":1607356185886,"results":"39","hashOfConfig":"37"},{"size":335,"mtime":1607288385754,"results":"40","hashOfConfig":"37"},{"size":310,"mtime":1607346221844,"results":"41","hashOfConfig":"37"},{"size":1457,"mtime":1607356502742,"results":"42","hashOfConfig":"37"},{"size":5185,"mtime":1607357108715,"results":"43","hashOfConfig":"37"},{"size":1824,"mtime":1607285843365,"results":"44","hashOfConfig":"37"},{"size":199,"mtime":1607052260455,"results":"45","hashOfConfig":"37"},{"size":327,"mtime":1607265174112,"results":"46","hashOfConfig":"37"},{"size":94,"mtime":1606780246113,"results":"47","hashOfConfig":"37"},{"size":259,"mtime":1607355751651,"results":"48","hashOfConfig":"37"},{"size":652,"mtime":1607360107412,"results":"49","hashOfConfig":"37"},{"size":492,"mtime":1607359728450,"results":"50","hashOfConfig":"37"},{"size":1432,"mtime":1607539634998,"results":"51","hashOfConfig":"52"},{"size":2145,"mtime":1607538382048,"results":"53","hashOfConfig":"52"},{"size":8857,"mtime":1607536826139,"results":"54","hashOfConfig":"52"},{"size":2647,"mtime":1607483417195,"results":"55","hashOfConfig":"52"},{"size":6186,"mtime":1607561504881,"results":"56","hashOfConfig":"52"},{"size":625,"mtime":1607372882915,"results":"57","hashOfConfig":"52"},{"size":705,"mtime":1607486696924,"results":"58","hashOfConfig":"52"},{"size":615,"mtime":1607486694229,"results":"59","hashOfConfig":"52"},{"size":94,"mtime":1606780246113,"results":"60","hashOfConfig":"52"},{"size":838,"mtime":1607539074961,"results":"61","hashOfConfig":"52"},{"size":626,"mtime":1607538953582,"results":"62","hashOfConfig":"52"},{"size":555,"mtime":1607387052358,"results":"63","hashOfConfig":"52"},{"size":835,"mtime":1607431605353,"results":"64","hashOfConfig":"52"},{"size":590,"mtime":1607486696124,"results":"65","hashOfConfig":"52"},{"size":303,"mtime":1607444760741,"results":"66","hashOfConfig":"52"},{"size":5960,"mtime":1607485977688,"results":"67","hashOfConfig":"52"},{"size":5633,"mtime":1607485639431,"results":"68","hashOfConfig":"52"},{"size":584,"mtime":1607528546735,"results":"69","hashOfConfig":"52"},{"size":657,"mtime":1607538954664,"results":"70","hashOfConfig":"52"},{"size":634,"mtime":1607538901480,"results":"71","hashOfConfig":"52"},{"size":627,"mtime":1607525617278,"results":"72","hashOfConfig":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"yhp794",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"104"},"5r6a9f",{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"104"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"104"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"104"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"104"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"104"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"133"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Components/Home.js",["154","155","156","157"],"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/ActionCreators/types.js",[],"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Reducers/wellsReducer.js",["158","159","160"],"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Reducers/postPlansToJSONdb.js",["161"],"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Reducers/selectWellFromReduxStoreReducer.js",["162"],"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Components/App.js",[],"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Components/Plans.js",["163","164","165","166"],"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Components/ExistingWellPlans.js",["167","168","169","170","171","172","173"],"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/ActionCreators/setActiveWell.js",["174"],"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/ActionCreators/saveWellPlansToJSON.js",["175"],"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/APIs/wells.js",[],"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/ActionCreators/postNewWellToJSONdb.js",["176","177"],"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/ActionCreators/saveNewWellToReduxStore.js",["178","179"],"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Reducers/index.js",[],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/App.js",["180"],"import React from 'react'\n// react-boostrap\nimport Tabs from 'react-bootstrap/Tabs'\nimport Tab from \"react-bootstrap/Tab\"\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Container from 'react-bootstrap/Container'\n// redux\nimport { connect } from 'react-redux'\n// styling \nimport 'bootstrap/dist/css/bootstrap.min.css';\n//import 'custom.scss'\n// components\nimport Home from \"./Home\"\nimport Plans from \"./Plans\"\nimport ExistingPlans from './ExistingPlans'\n\n\n\nconst App = ({saveWellInfoToReduxStoreReducer, getWellPlansFromJSONDbReducer}) => {\n  \n\n\n\n\n  return (\n    <React.Fragment>\n      <Jumbotron fluid className=\"bg-dark text-white\">\n        <Container>\n          <h1>LandShark App (Employee Portal)</h1>\n        </Container>\n      </Jumbotron>\n      <Tabs>\n        <Tab eventKey=\"Home\" title=\"Home\">\n          <Container>\n            <Home/>\n          </Container>\n        </Tab>\n        <Tab eventKey=\"Plans\" title=\"Plans\" disabled={getWellPlansFromJSONDbReducer.status === \"received\" || saveWellInfoToReduxStoreReducer.status === \"received\" ? false : true}>\n          <Container>\n        <Plans/>\n          </Container>\n        </Tab>\n\n      </Tabs>\n    </React.Fragment>\n  );\n}\n\nconst mapStateToProps = ({ saveWellInfoToReduxStoreReducer, getWellPlansFromJSONDbReducer}) => {\n  return {\n    saveWellInfoToReduxStoreReducer, \n    getWellPlansFromJSONDbReducer\n  }\n}\n\nexport default connect(mapStateToProps, { })(App);\n\n",["181","182"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/types.js",[],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/Plans.js",["183","184","185","186","187"],"import React, { useState, useEffect } from \"react\"\n//bootstrap\nimport Container from \"react-bootstrap/esm/Container\";\nimport Form from \"react-bootstrap/Form\"\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\nimport Button from \"react-bootstrap/Button\"\n//other libs\nimport 'react-datasheet/lib/react-datasheet.css';\nimport { connect } from \"react-redux\"\nimport ReactDataSheet from 'react-datasheet';\n// actionCreators\nimport savePlansToJSONDb from \"../ActionCreators/postPlansToJSONDb\"\nimport savePlansToReduxStore from \"../ActionCreators/savePlansToReduxStore\"\n//helper functions\nimport calculateTVD from \"../HelperFunctions/Calculations/TVD\"\nimport calculateNS from \"../HelperFunctions/Calculations/NS\"\nimport calculateEW from \"../HelperFunctions/Calculations/EW\"\nimport calculateSECT from \"../HelperFunctions/Calculations/SECT\"\nimport calculateDLS from \"../HelperFunctions/Calculations/DLS\"\nimport postPlansToJSONDb from \"../ActionCreators/postPlansToJSONDb\";\n\n\n\nconst Plans = ({savePlansToReduxStore, saveWellInfoToReduxStoreReducer,savePlansToReduxStoreReducer, savePlansToJSONDb}) => {\n  \n  const [editGrid, setEditGrid] = useState(true)\n  const [input, setInput] = useState(false)\n  const [vsDirection, setVSDirection] = useState(0)\n  \n  const initialGrid = [\n    [{value: '', readOnly: true, width: '7rem'}, {value:\"Measured Depth\", readOnly: true, width: '7rem'}, {value:\"Inclination\", readOnly: true, width: '7rem'}, {value:\"Azimuth\", readOnly: true, width: '7rem'}, {value:\"TVD\", readOnly: true, width: '7rem'}, {value:\"Northing\", readOnly: true, width: '7rem'}, {value:\"Easting\", readOnly: true, width: '7rem'}],\n    \n    [{value: 1, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}, {value: 0, readOnly: true}],\n    \n    [{readOnly: true, value: 2}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}],\n    [{readOnly: true, value: 3}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}],\n    [{readOnly: true, value: 4}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}],\n    [{readOnly: true, value: 5}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}],\n  ];\n\n  const [grid, setGrid] = useState(initialGrid);\n\n  useEffect(()=>{\n    if (input) {\n      //performcalcs doesn't happen bc we're copying from plans. Currently not needed\n    }\n  },[input])\n\n  useEffect(()=> {\n    handleAddRows(95)\n  }, [])\n\n  const performCalculations = () => {\n    grid.map((row, index) => {\n      if (index === 0 || index === 1) {\n        // nothing because we don't want to run calcs on the header array\n      } else {\n        // for every array within grid array, want to iterate over and change the values of TVD, NS, EW, SECT, & DLS\n        // note val after idx is column \n        // TVD order of args : (measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior, inclinationPrior, azimuthPrior, calculatedTVDPrior)\n        // NS order of args: (measuredDepthCurrent, inclinationCurrent, azimuthCurrent, measuredDepthPrior, inclinationPrior, azimuthPrior, calculatedNorthingPrior)\n\n        const calculatedTVD = calculateTVD(grid[index][1].value, grid[index][2].value, grid[index][3].value, grid[index - 1][1].value, grid[index - 1][2].value, grid[index - 1][3].value, grid[index - 1][4].value)\n        const calculatedNS = calculateNS(grid[index][1].value, grid[index][2].value, grid[index][3].value, grid[index - 1][1].value, grid[index - 1][2].value, grid[index - 1][3].value, grid[index - 1][5].value)\n        const calculatedEW = calculateEW(grid[index][1].value, grid[index][2].value, grid[index][3].value, grid[index - 1][1].value, grid[index - 1][2].value, grid[index - 1][3].value, grid[index - 1][6].value)\n        const calculatedSECT = calculateSECT(grid[index][1].value, grid[index][2].value, grid[index][3].value, grid[index - 1][1].value, grid[index - 1][2].value, grid[index - 1][3].value, grid[index - 1][5].value, grid[index - 1][6].value, index, vsDirection)\n        const calculatedDLS = calculateDLS(grid[index][1].value, grid[index][2].value, grid[index][3].value, grid[index - 1][1].value, grid[index - 1][2].value, grid[index - 1][3].value)\n\n\n        grid[index][4] = {...grid[index][4], readOnly: true, value: calculatedTVD}\n        grid[index][5] = {...grid[index][5], readOnly: true, value: calculatedNS}\n        grid[index][6] = {...grid[index][6], readOnly: true, value: calculatedEW}\n        grid[index][7] = {...grid[index][7], readOnly: true, value: calculatedSECT}\n        grid[index][8] = {...grid[index][8], readOnly: true, value: calculatedDLS}\n\n        setGrid(grid)\n        setInput(false)\n\n      }\n    })\n  }\n\n  const onCellsChanged = changes => {\n    // iterate through existing grid to get a copy and not mutate current as we iterate over\n    const gridNew = grid.map(row => [...row]);\n    // iterate through the changes.  Each change is a cell, each cell is an object\n    // with cell (previousVal), row, col, currentVal\n    // add the value of the newGrid[row#][col#] to the new value \n    changes.forEach(({ cell, row, col, value }) => {\n      gridNew[row][col] = { ...grid[row][col], value };\n    });\n    setGrid(gridNew)\n    setInput(true)\n  };\n\n  const handleVSDirection = (val) => {\n    setVSDirection(val)\n    setInput(true)\n  }\n\n  const handleSubmit = () => {\n    const {well, operator, rig, county, uSstate} = saveWellInfoToReduxStoreReducer.response\n    postPlansToJSONDb(grid, vsDirection ,well, operator, rig, county, uSstate)\n    savePlansToReduxStore(grid)\n  }\n\n  const handleRemoveRow = () => {\n    const newGrid = [...grid];\n    newGrid.pop();\n    setGrid(newGrid);\n  };\n\n  const createRows = (numberOfRowsToAdd) => {\n    let createdRows = []\n    for (let i = 0; i < numberOfRowsToAdd; i++) {\n      createdRows.push(\n        [{readOnly: true, value: grid.length + i}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}, {value: 0}]\n      )\n    }\n    return createdRows\n  };\n\n  const handleAddRows = (rows) => {\n    const newGrid = [...grid, ...createRows(rows)]\n    setGrid(newGrid)\n  }\n\n  const renderSetRowsButtons = () => {\n    return (\n      <Row>\n        <Col xs={10} className=\"d-flex justify-content-start mt-4\">\n          <Button variant=\"success\" value={25} onClick={(event)=> handleAddRows(event.target.value)}>\n            Add 25 rows\n          </Button>\n          <Button variant=\"success\" className=\"ml-4\" value={10} onClick={(event) => handleAddRows(event.target.value)}>\n            Add 10 rows\n          </Button>\n          <Button variant=\"sucess\" className=\"ml-4\" value={5} onClick={(event) => handleAddRows(event.target.value)}>\n            Add 5 rows\n          </Button>\n          <Button variant=\"success\" className=\"ml-4\" value={1} onClick={(event) => handleAddRows(event.target.value)}>\n            Add a row\n          </Button>\n          <Button variant=\"danger\" className=\"ml-4\" onClick={handleRemoveRow}>\n            Remove a row\n          </Button>\n        </Col>\n        <Col xs={2}>\n          \n        </Col>\n      </Row>\n    )\n  }\n\n  const renderSubmitButton = () => {\n    return (\n      <Row>\n        <Col xs={10} className=\"my-4\">\n          <Button variant=\"info\" onClick={handleSubmit}>\n            Submit Data\n          </Button>\n        </Col>\n        <Col xs={2}>\n\n        </Col>\n      </Row>\n    )\n  }\n\n  const renderWellData = () => {\n    console.log(saveWellInfoToReduxStoreReducer)\n    if (saveWellInfoToReduxStoreReducer.status === \"received\") {\n      const { well, rig, operator} = saveWellInfoToReduxStoreReducer.response\n      return <h3 className=\"hy-4\"> {operator} - {rig} - {well}</h3>\n    } else {\n      return \"No well data\"\n    }\n  }\n\n  return (\n    <Container>\n      <Row>\n        <Col xs={10}>\n          {renderWellData()}\n          <ReactDataSheet data={grid} valueRenderer={(cell)=> cell.value} onCellsChanged={onCellsChanged}/>\n        </Col>\n        <Col xs={2}>\n          <Form className=\"mt-7\">\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Control type=\"float\" placeHolder=\"Enter VS Here\" onChange={event => handleVSDirection(event.target.value)}/>\n            </Form.Group>\n          </Form>\n        </Col>\n      </Row>\n      {renderSetRowsButtons()}\n      {renderSubmitButton()}\n      <Row>\n        <Col xs={10}>\n          {/* {renderAlert()} */}\n        </Col>\n        <Col xs={2}>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nconst mapStateToProps = ({saveWellInfoToReduxStoreReducer}) => {\n  return {\n    saveWellInfoToReduxStoreReducer\n  }\n}\n\nexport default connect(mapStateToProps, { savePlansToReduxStore, savePlansToJSONDb})(Plans)\n\n\n","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/ExistingPlans.js",[],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/Home.js",["188","189","190","191"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/saveWellInfoToReduxStore.js",["192"],"import { SAVE_WELL_INFO_TO_REDUX_STORE_REQUESTED,\n  SAVE_WELL_INFO_TO_REDUX_STORE_RECEIVED,\n  SAVE_WELL_INFO_TO_REDUX_STORE_FAILED } from './types';\n  \n  export default (wellInfo) => {\n    return async (dispatch, getState) => {\n      dispatch({\n        type: SAVE_WELL_INFO_TO_REDUX_STORE_REQUESTED,\n      });\n  \n      try {\n        dispatch({\n          type: SAVE_WELL_INFO_TO_REDUX_STORE_RECEIVED,\n          payload: wellInfo,\n        });\n      } catch (error) {\n        console.log(error)\n        dispatch({\n          type: SAVE_WELL_INFO_TO_REDUX_STORE_FAILED,\n          payload: error,\n        });\n      }\n    };\n  };\n  ","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/saveWellInfoToReduxStoreReducer.js",["193"],"import { SAVE_WELL_INFO_TO_REDUX_STORE_REQUESTED,\n  SAVE_WELL_INFO_TO_REDUX_STORE_RECEIVED,\n  SAVE_WELL_INFO_TO_REDUX_STORE_FAILED } from \"../ActionCreators/types\"\n\n  const INITIAL_STATE = {\n    response: {}, \n    status: \"\"\n  };\n\n  export default (state = INITIAL_STATE, { type, payload }) => {\n    \n    switch (type) {\n      case SAVE_WELL_INFO_TO_REDUX_STORE_REQUESTED:\n        return { ...state, status: 'waiting' };\n      case SAVE_WELL_INFO_TO_REDUX_STORE_RECEIVED:\n        return { ...state, response: payload, status: 'received' };\n      case SAVE_WELL_INFO_TO_REDUX_STORE_FAILED:\n        return { ...state, response: payload, status: 'failed' };\n      default:\n        return state;\n    }\n  };\n  ","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/postWellInfoToJSONDbReducer.js",["194"],"import { POST_WELLINFO_TO_JSONDB_REQUESTED,\n  POST_WELLINFO_TO_JSONDB_RECEIVED,\n  POST_WELLINFO_TO_JSONDB_FAILED } from \"../ActionCreators/types\"\n\nconst INITIAL_STATE = {\n  response: {},\n  status: \"\"\n}\n\nexport default (state = INITIAL_STATE, {type, payload}) => {\n  switch (type) {\n    case POST_WELLINFO_TO_JSONDB_REQUESTED:\n      return {...state, status: \"waiting\"}\n    case POST_WELLINFO_TO_JSONDB_RECEIVED:\n      return {...state, response: payload, status: \"received\"}\n    case POST_WELLINFO_TO_JSONDB_FAILED:\n      return {...state, response: payload, status: \"failed\"}\n    default:\n      return state;\n  }\n}","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/APIs/wells.js",[],["195","196"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/index.js",["197"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getWellsFromJSONDbReducer.js",["198"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/getWellsFromJSONDb.js",["199"],"import wells from \"../APIs/wells\"\n\nimport { GET_WELLS_FROM_JSON_REQUESTED,\n  GET_WELLS_FROM_JSON_RECEIVED,\n  GET_WELLS_FROM_JSON_FAILED } from \"./types\"\n\n\nexport default () => {\n  return async dispatch => {\n    dispatch({\n      type: GET_WELLS_FROM_JSON_REQUESTED\n    })\n    try {\n      const response = await wells.get(\"/wells\")\n      dispatch({\n        type: GET_WELLS_FROM_JSON_RECEIVED,\n        payload: response.data\n      })\n    } catch (error) {\n      dispatch({\n        type: GET_WELLS_FROM_JSON_FAILED,\n        payload: error\n      })\n    }\n  }\n}",["200","201"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/postWellInfoToJSONDb.js",["202","203"],"import wells from \"../APIs/wells\"\n\nimport { POST_WELLINFO_TO_JSONDB_REQUESTED,\n  POST_WELLINFO_TO_JSONDB_RECEIVED,\n  POST_WELLINFO_TO_JSONDB_FAILED } from './types';\n  \n  export default (wellInfo) => {\n\n    return async (dispatch, getState) => {\n      // let wellList = getState().getWellsFromJSONDbReducer.response\n      // console.log('should get wellList next')\n      // console.log(wellList)\n      const response = await wells.post(\"/wells\", wellInfo)\n      dispatch({\n        type: POST_WELLINFO_TO_JSONDB_REQUESTED,\n      });\n  \n      try {\n        dispatch({\n          type: POST_WELLINFO_TO_JSONDB_RECEIVED,\n          payload: wellInfo,\n        });\n      } catch (error) {\n        console.log(error)\n        dispatch({\n          type: POST_WELLINFO_TO_JSONDB_FAILED,\n          payload: error,\n        });\n      }\n    };\n  };\n  ","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/saveActiveWellToReduxStoreReducer.js",["204"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/saveActiveWellToReduxStore.js",["205","206"],"import { SAVE_ACTIVE_WELL_TO_REDUX_STORE_REQUESTED,\n  SAVE_ACTIVE_WELL_TO_REDUX_STORE_RECEIVED,\n  SAVE_ACTIVE_WELL_TO_REDUX_STORE_FAILED\n } from \"./types\"\n\nexport const saveSelectedAsActiveWell = (selectedWell) => {\n  return { type: SAVE_ACTIVE_WELL_TO_REDUX_STORE_RECEIVED, payload: {selectedWell} }\n}\n","/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/Surveys.js",[],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Components/LeaseLines.js",["207","208","209"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/postPlansToJSONDbReducer.js",["210"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/ActionCreators/postPlansToJSONDb.js",["211"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/Reducers/getWellPlansFromJSONDbReducer.js",["212"],"/Users/caseyrudick/Documents/landsharkrefactored-copy/client/src/HelperFunctions/Calculations/TVD.js",["213"],{"ruleId":"214","severity":1,"message":"215","line":2,"column":8,"nodeType":"216","messageId":"217","endLine":2,"endColumn":9},{"ruleId":"214","severity":1,"message":"218","line":12,"column":8,"nodeType":"216","messageId":"217","endLine":12,"endColumn":22},{"ruleId":"219","severity":1,"message":"220","line":30,"column":5,"nodeType":"221","endLine":30,"endColumn":7,"suggestions":"222"},{"ruleId":"214","severity":1,"message":"223","line":121,"column":7,"nodeType":"216","messageId":"217","endLine":121,"endColumn":15},{"ruleId":"214","severity":1,"message":"224","line":2,"column":8,"nodeType":"216","messageId":"217","endLine":2,"endColumn":16},{"ruleId":"214","severity":1,"message":"225","line":3,"column":40,"nodeType":"216","messageId":"217","endLine":3,"endColumn":55},{"ruleId":"226","severity":1,"message":"227","line":10,"column":1,"nodeType":"228","endLine":21,"endColumn":2},{"ruleId":"226","severity":1,"message":"227","line":8,"column":1,"nodeType":"228","endLine":15,"endColumn":2},{"ruleId":"226","severity":1,"message":"227","line":9,"column":1,"nodeType":"228","endLine":16,"endColumn":3},{"ruleId":"214","severity":1,"message":"229","line":1,"column":27,"nodeType":"216","messageId":"217","endLine":1,"endColumn":36},{"ruleId":"214","severity":1,"message":"230","line":4,"column":8,"nodeType":"216","messageId":"217","endLine":4,"endColumn":12},{"ruleId":"214","severity":1,"message":"231","line":5,"column":8,"nodeType":"216","messageId":"217","endLine":5,"endColumn":11},{"ruleId":"214","severity":1,"message":"232","line":14,"column":8,"nodeType":"216","messageId":"217","endLine":14,"endColumn":20},{"ruleId":"214","severity":1,"message":"230","line":5,"column":8,"nodeType":"216","messageId":"217","endLine":5,"endColumn":12},{"ruleId":"214","severity":1,"message":"231","line":6,"column":8,"nodeType":"216","messageId":"217","endLine":6,"endColumn":11},{"ruleId":"214","severity":1,"message":"233","line":8,"column":8,"nodeType":"216","messageId":"217","endLine":8,"endColumn":14},{"ruleId":"214","severity":1,"message":"234","line":12,"column":8,"nodeType":"216","messageId":"217","endLine":12,"endColumn":31},{"ruleId":"214","severity":1,"message":"235","line":13,"column":8,"nodeType":"216","messageId":"217","endLine":13,"endColumn":25},{"ruleId":"214","severity":1,"message":"232","line":14,"column":8,"nodeType":"216","messageId":"217","endLine":14,"endColumn":20},{"ruleId":"214","severity":1,"message":"236","line":23,"column":9,"nodeType":"216","messageId":"217","endLine":23,"endColumn":20},{"ruleId":"214","severity":1,"message":"237","line":1,"column":8,"nodeType":"216","messageId":"217","endLine":1,"endColumn":13},{"ruleId":"226","severity":1,"message":"227","line":4,"column":1,"nodeType":"228","endLine":12,"endColumn":2},{"ruleId":"226","severity":1,"message":"227","line":4,"column":1,"nodeType":"228","endLine":9,"endColumn":2},{"ruleId":"214","severity":1,"message":"238","line":6,"column":11,"nodeType":"216","messageId":"217","endLine":6,"endColumn":19},{"ruleId":"214","severity":1,"message":"237","line":1,"column":8,"nodeType":"216","messageId":"217","endLine":1,"endColumn":13},{"ruleId":"226","severity":1,"message":"227","line":6,"column":3,"nodeType":"228","endLine":25,"endColumn":5},{"ruleId":"214","severity":1,"message":"239","line":15,"column":8,"nodeType":"216","messageId":"217","endLine":15,"endColumn":21},{"ruleId":"240","replacedBy":"241"},{"ruleId":"242","replacedBy":"243"},{"ruleId":"214","severity":1,"message":"244","line":27,"column":10,"nodeType":"216","messageId":"217","endLine":27,"endColumn":18},{"ruleId":"214","severity":1,"message":"245","line":27,"column":20,"nodeType":"216","messageId":"217","endLine":27,"endColumn":31},{"ruleId":"219","severity":1,"message":"246","line":52,"column":6,"nodeType":"221","endLine":52,"endColumn":8,"suggestions":"247"},{"ruleId":"214","severity":1,"message":"248","line":54,"column":9,"nodeType":"216","messageId":"217","endLine":54,"endColumn":28},{"ruleId":"249","severity":1,"message":"250","line":55,"column":27,"nodeType":"251","messageId":"252","endLine":55,"endColumn":29},{"ruleId":"214","severity":1,"message":"215","line":12,"column":8,"nodeType":"216","messageId":"217","endLine":12,"endColumn":9},{"ruleId":"219","severity":1,"message":"253","line":38,"column":6,"nodeType":"221","endLine":38,"endColumn":8,"suggestions":"254"},{"ruleId":"214","severity":1,"message":"255","line":41,"column":9,"nodeType":"216","messageId":"217","endLine":41,"endColumn":22},{"ruleId":"214","severity":1,"message":"256","line":149,"column":9,"nodeType":"216","messageId":"217","endLine":149,"endColumn":25},{"ruleId":"226","severity":1,"message":"227","line":5,"column":3,"nodeType":"228","endLine":24,"endColumn":5},{"ruleId":"226","severity":1,"message":"227","line":10,"column":3,"nodeType":"228","endLine":22,"endColumn":5},{"ruleId":"226","severity":1,"message":"227","line":10,"column":1,"nodeType":"228","endLine":21,"endColumn":2},{"ruleId":"240","replacedBy":"257"},{"ruleId":"242","replacedBy":"258"},{"ruleId":"214","severity":1,"message":"259","line":8,"column":8,"nodeType":"216","messageId":"217","endLine":8,"endColumn":32},{"ruleId":"226","severity":1,"message":"227","line":10,"column":3,"nodeType":"228","endLine":21,"endColumn":4},{"ruleId":"226","severity":1,"message":"227","line":8,"column":1,"nodeType":"228","endLine":26,"endColumn":2},{"ruleId":"240","replacedBy":"260"},{"ruleId":"242","replacedBy":"261"},{"ruleId":"226","severity":1,"message":"227","line":7,"column":3,"nodeType":"228","endLine":31,"endColumn":5},{"ruleId":"214","severity":1,"message":"238","line":13,"column":13,"nodeType":"216","messageId":"217","endLine":13,"endColumn":21},{"ruleId":"226","severity":1,"message":"227","line":9,"column":1,"nodeType":"228","endLine":20,"endColumn":2},{"ruleId":"214","severity":1,"message":"262","line":1,"column":10,"nodeType":"216","messageId":"217","endLine":1,"endColumn":51},{"ruleId":"214","severity":1,"message":"263","line":3,"column":3,"nodeType":"216","messageId":"217","endLine":3,"endColumn":41},{"ruleId":"214","severity":1,"message":"229","line":1,"column":27,"nodeType":"216","messageId":"217","endLine":1,"endColumn":36},{"ruleId":"214","severity":1,"message":"230","line":4,"column":8,"nodeType":"216","messageId":"217","endLine":4,"endColumn":12},{"ruleId":"214","severity":1,"message":"231","line":5,"column":8,"nodeType":"216","messageId":"217","endLine":5,"endColumn":11},{"ruleId":"226","severity":1,"message":"227","line":9,"column":1,"nodeType":"228","endLine":20,"endColumn":2},{"ruleId":"226","severity":1,"message":"227","line":6,"column":1,"nodeType":"228","endLine":27,"endColumn":2},{"ruleId":"226","severity":1,"message":"227","line":11,"column":1,"nodeType":"228","endLine":22,"endColumn":2},{"ruleId":"226","severity":1,"message":"227","line":4,"column":1,"nodeType":"228","endLine":16,"endColumn":2},"no-unused-vars","'_' is defined but never used.","Identifier","unusedVar","'DropdownButton' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchWellsFromJSON'. Either include it or remove the dependency array. If 'fetchWellsFromJSON' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["264"],"'wellInfo' is assigned a value but never used.","'_default' is defined but never used.","'SET_ACTIVE_WELL' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useEffect' is defined but never used.","'Form' is defined but never used.","'Row' is defined but never used.","'wellsReducer' is defined but never used.","'Button' is defined but never used.","'saveNewPlanToReduxStore' is defined but never used.","'postPlanstoJSONdb' is defined but never used.","'initialGrid' is assigned a value but never used.","'React' is defined but never used.","'response' is assigned a value but never used.","'ExistingPlans' is defined but never used.","no-native-reassign",["265"],"no-negated-in-lhs",["266"],"'editGrid' is assigned a value but never used.","'setEditGrid' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleAddRows'. Either include it or remove the dependency array.",["267"],"'performCalculations' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'getWellsFromJSONDb'. Either include it or remove the dependency array.",["268"],"'renderedWells' is defined but never used.","'renderSelectWell' is assigned a value but never used.",["265"],["266"],"'postPlansToJSONDbReducer' is defined but never used.",["265"],["266"],"'SAVE_ACTIVE_WELL_TO_REDUX_STORE_REQUESTED' is defined but never used.","'SAVE_ACTIVE_WELL_TO_REDUX_STORE_FAILED' is defined but never used.",{"desc":"269","fix":"270"},"no-global-assign","no-unsafe-negation",{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},"Update the dependencies array to be: [fetchWellsFromJSON]",{"range":"275","text":"276"},"Update the dependencies array to be: [handleAddRows]",{"range":"277","text":"278"},"Update the dependencies array to be: [getWellsFromJSONDb]",{"range":"279","text":"280"},[1271,1273],"[fetchWellsFromJSON]",[2625,2627],"[handleAddRows]",[1585,1587],"[getWellsFromJSONDb]"]