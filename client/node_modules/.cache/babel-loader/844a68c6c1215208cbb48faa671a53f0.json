{"ast":null,"code":"/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar Registry = require('../registry');\n\nexports.getDelay = function (fullLayout) {\n  if (!fullLayout._has) return 0;\n  return fullLayout._has('gl3d') || fullLayout._has('gl2d') || fullLayout._has('mapbox') ? 500 : 0;\n};\n\nexports.getRedrawFunc = function (gd) {\n  return function () {\n    var fullLayout = gd._fullLayout || {};\n\n    var hasPolar = fullLayout._has && fullLayout._has('polar');\n\n    var hasLegacyPolar = !hasPolar && gd.data && gd.data[0] && gd.data[0].r;\n\n    if (!hasLegacyPolar) {\n      Registry.getComponentMethod('colorbar', 'draw')(gd);\n    }\n  };\n};\n\nexports.encodeSVG = function (svg) {\n  return 'data:image/svg+xml,' + encodeURIComponent(svg);\n};\n\nexports.encodeJSON = function (json) {\n  return 'data:application/json,' + encodeURIComponent(json);\n};\n\nvar DOM_URL = window.URL || window.webkitURL;\n\nexports.createObjectURL = function (blob) {\n  return DOM_URL.createObjectURL(blob);\n};\n\nexports.revokeObjectURL = function (url) {\n  return DOM_URL.revokeObjectURL(url);\n};\n\nexports.createBlob = function (url, format) {\n  if (format === 'svg') {\n    return new window.Blob([url], {\n      type: 'image/svg+xml;charset=utf-8'\n    });\n  } else if (format === 'full-json') {\n    return new window.Blob([url], {\n      type: 'application/json;charset=utf-8'\n    });\n  } else {\n    var binary = fixBinary(window.atob(url));\n    return new window.Blob([binary], {\n      type: 'image/' + format\n    });\n  }\n};\n\nexports.octetStream = function (s) {\n  document.location.href = 'data:application/octet-stream' + s;\n}; // Taken from https://bl.ocks.org/nolanlawson/0eac306e4dac2114c752\n\n\nfunction fixBinary(b) {\n  var len = b.length;\n  var buf = new ArrayBuffer(len);\n  var arr = new Uint8Array(buf);\n\n  for (var i = 0; i < len; i++) {\n    arr[i] = b.charCodeAt(i);\n  }\n\n  return buf;\n}\n\nexports.IMAGE_URL_PREFIX = /^data:image\\/\\w+;base64,/;\nexports.MSG_IE_BAD_FORMAT = 'Sorry IE does not support downloading from canvas. Try {format:\\'svg\\'} instead.';","map":{"version":3,"sources":["/Users/caseyrudick/Documents/landsharkrefactored-copy/client/node_modules/plotly.js/src/snapshot/helpers.js"],"names":["Registry","require","exports","getDelay","fullLayout","_has","getRedrawFunc","gd","_fullLayout","hasPolar","hasLegacyPolar","data","r","getComponentMethod","encodeSVG","svg","encodeURIComponent","encodeJSON","json","DOM_URL","window","URL","webkitURL","createObjectURL","blob","revokeObjectURL","url","createBlob","format","Blob","type","binary","fixBinary","atob","octetStream","s","document","location","href","b","len","length","buf","ArrayBuffer","arr","Uint8Array","i","charCodeAt","IMAGE_URL_PREFIX","MSG_IE_BAD_FORMAT"],"mappings":"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","sourcesContent":["/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Registry = require('../registry');\n\nexports.getDelay = function(fullLayout) {\n    if(!fullLayout._has) return 0;\n\n    return (\n        fullLayout._has('gl3d') ||\n        fullLayout._has('gl2d') ||\n        fullLayout._has('mapbox')\n    ) ? 500 : 0;\n};\n\nexports.getRedrawFunc = function(gd) {\n    return function() {\n        var fullLayout = gd._fullLayout || {};\n        var hasPolar = fullLayout._has && fullLayout._has('polar');\n        var hasLegacyPolar = !hasPolar && gd.data && gd.data[0] && gd.data[0].r;\n\n        if(!hasLegacyPolar) {\n            Registry.getComponentMethod('colorbar', 'draw')(gd);\n        }\n    };\n};\n\nexports.encodeSVG = function(svg) {\n    return 'data:image/svg+xml,' + encodeURIComponent(svg);\n};\n\nexports.encodeJSON = function(json) {\n    return 'data:application/json,' + encodeURIComponent(json);\n};\n\nvar DOM_URL = window.URL || window.webkitURL;\n\nexports.createObjectURL = function(blob) {\n    return DOM_URL.createObjectURL(blob);\n};\n\nexports.revokeObjectURL = function(url) {\n    return DOM_URL.revokeObjectURL(url);\n};\n\nexports.createBlob = function(url, format) {\n    if(format === 'svg') {\n        return new window.Blob([url], {type: 'image/svg+xml;charset=utf-8'});\n    } else if(format === 'full-json') {\n        return new window.Blob([url], {type: 'application/json;charset=utf-8'});\n    } else {\n        var binary = fixBinary(window.atob(url));\n        return new window.Blob([binary], {type: 'image/' + format});\n    }\n};\n\nexports.octetStream = function(s) {\n    document.location.href = 'data:application/octet-stream' + s;\n};\n\n// Taken from https://bl.ocks.org/nolanlawson/0eac306e4dac2114c752\nfunction fixBinary(b) {\n    var len = b.length;\n    var buf = new ArrayBuffer(len);\n    var arr = new Uint8Array(buf);\n    for(var i = 0; i < len; i++) {\n        arr[i] = b.charCodeAt(i);\n    }\n    return buf;\n}\n\nexports.IMAGE_URL_PREFIX = /^data:image\\/\\w+;base64,/;\n\nexports.MSG_IE_BAD_FORMAT = 'Sorry IE does not support downloading from canvas. Try {format:\\'svg\\'} instead.';\n"]},"metadata":{},"sourceType":"script"}