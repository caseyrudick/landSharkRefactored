{"ast":null,"code":"\"use strict\";\n\nvar determinant = require(\"robust-determinant\");\n\nvar NUM_EXPAND = 6;\n\nfunction generateSolver(n) {\n  var funcName = \"robustLinearSolve\" + n + \"d\";\n  var code = [\"function \", funcName, \"(A,b){return [\"];\n\n  for (var i = 0; i < n; ++i) {\n    code.push(\"det([\");\n\n    for (var j = 0; j < n; ++j) {\n      if (j > 0) {\n        code.push(\",\");\n      }\n\n      code.push(\"[\");\n\n      for (var k = 0; k < n; ++k) {\n        if (k > 0) {\n          code.push(\",\");\n        }\n\n        if (k === i) {\n          code.push(\"+b[\", j, \"]\");\n        } else {\n          code.push(\"+A[\", j, \"][\", k, \"]\");\n        }\n      }\n\n      code.push(\"]\");\n    }\n\n    code.push(\"]),\");\n  }\n\n  code.push(\"det(A)]}return \", funcName);\n  var proc = new Function(\"det\", code.join(\"\"));\n\n  if (n < 6) {\n    return proc(determinant[n]);\n  }\n\n  return proc(determinant);\n}\n\nfunction robustLinearSolve0d() {\n  return [0];\n}\n\nfunction robustLinearSolve1d(A, b) {\n  return [[b[0]], [A[0][0]]];\n}\n\nvar CACHE = [robustLinearSolve0d, robustLinearSolve1d];\n\nfunction generateDispatch() {\n  while (CACHE.length < NUM_EXPAND) {\n    CACHE.push(generateSolver(CACHE.length));\n  }\n\n  var procArgs = [];\n  var code = [\"function dispatchLinearSolve(A,b){switch(A.length){\"];\n\n  for (var i = 0; i < NUM_EXPAND; ++i) {\n    procArgs.push(\"s\" + i);\n    code.push(\"case \", i, \":return s\", i, \"(A,b);\");\n  }\n\n  code.push(\"}var s=CACHE[A.length];if(!s)s=CACHE[A.length]=g(A.length);return s(A,b)}return dispatchLinearSolve\");\n  procArgs.push(\"CACHE\", \"g\", code.join(\"\"));\n  var proc = Function.apply(undefined, procArgs);\n  module.exports = proc.apply(undefined, CACHE.concat([CACHE, generateSolver]));\n\n  for (var i = 0; i < NUM_EXPAND; ++i) {\n    module.exports[i] = CACHE[i];\n  }\n}\n\ngenerateDispatch();","map":{"version":3,"sources":["/Users/caseyrudick/Documents/landsharkrefactored-copy/client/node_modules/robust-linear-solve/linsolve.js"],"names":["determinant","require","NUM_EXPAND","generateSolver","n","funcName","code","i","push","j","k","proc","Function","join","robustLinearSolve0d","robustLinearSolve1d","A","b","CACHE","generateDispatch","length","procArgs","apply","undefined","module","exports","concat"],"mappings":"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","sourcesContent":["\"use strict\"\n\nvar determinant = require(\"robust-determinant\")\n\nvar NUM_EXPAND = 6\n\nfunction generateSolver(n) {\n  var funcName = \"robustLinearSolve\" + n + \"d\"\n  var code = [\"function \", funcName, \"(A,b){return [\"]\n  for(var i=0; i<n; ++i) {\n    code.push(\"det([\")\n    for(var j=0; j<n; ++j) {\n      if(j > 0) {\n        code.push(\",\")\n      }\n      code.push(\"[\")\n      for(var k=0; k<n; ++k) {\n        if(k > 0) {\n          code.push(\",\")\n        }\n        if(k === i) {\n          code.push(\"+b[\", j, \"]\")\n        } else {\n          code.push(\"+A[\", j, \"][\", k, \"]\")\n        }\n      }\n      code.push(\"]\")\n    }\n    code.push(\"]),\")\n  }\n  code.push(\"det(A)]}return \", funcName)\n  var proc = new Function(\"det\", code.join(\"\"))\n  if(n < 6) {\n    return proc(determinant[n])\n  }\n  return proc(determinant)\n}\n\nfunction robustLinearSolve0d() {\n  return [ 0 ]\n}\n\nfunction robustLinearSolve1d(A, b) {\n  return [ [ b[0] ], [ A[0][0] ] ]\n}\n\nvar CACHE = [\n  robustLinearSolve0d,\n  robustLinearSolve1d\n]\n\nfunction generateDispatch() {\n  while(CACHE.length < NUM_EXPAND) {\n    CACHE.push(generateSolver(CACHE.length))\n  }\n  var procArgs = []\n  var code = [\"function dispatchLinearSolve(A,b){switch(A.length){\"]\n  for(var i=0; i<NUM_EXPAND; ++i) {\n    procArgs.push(\"s\" + i)\n    code.push(\"case \", i, \":return s\", i, \"(A,b);\")\n  }\n  code.push(\"}var s=CACHE[A.length];if(!s)s=CACHE[A.length]=g(A.length);return s(A,b)}return dispatchLinearSolve\")\n  procArgs.push(\"CACHE\", \"g\", code.join(\"\"))\n  var proc = Function.apply(undefined, procArgs)\n  module.exports = proc.apply(undefined, CACHE.concat([CACHE, generateSolver]))\n  for(var i=0; i<NUM_EXPAND; ++i) {\n    module.exports[i] = CACHE[i]\n  }\n}\n\ngenerateDispatch()"]},"metadata":{},"sourceType":"script"}