{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Components/Plans.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport ReactDataSheet from 'react-datasheet';\n\nconst Plans = () => {\n  _s();\n\n  const initialGrid = [[{\n    readOnly: true,\n    value: ''\n  }, {\n    value: 'A',\n    readOnly: true\n  }, {\n    value: 'B',\n    readOnly: true\n  }, {\n    value: 'C',\n    readOnly: true\n  }, {\n    value: 'D',\n    readOnly: true\n  }], [{\n    readOnly: true,\n    value: 1\n  }, {\n    value: 1\n  }, {\n    value: 3\n  }, {\n    value: 3\n  }, {\n    value: 3\n  }], [{\n    readOnly: true,\n    value: 2\n  }, {\n    value: 2\n  }, {\n    value: 4\n  }, {\n    value: 4\n  }, {\n    value: 4\n  }], [{\n    readOnly: true,\n    value: 3\n  }, {\n    value: 1\n  }, {\n    value: 3\n  }, {\n    value: 3\n  }, {\n    value: 3\n  }], [{\n    readOnly: true,\n    value: 4\n  }, {\n    value: 2\n  }, {\n    value: 4\n  }, {\n    value: 4\n  }, {\n    value: 4\n  }]];\n  const [grid, setGrid] = useState(initialGrid);\n\n  valueRenderer = cell => cell.value;\n\n  onCellsChanged = changes => {\n    const grid = grid;\n    changes.forEach(({\n      cell,\n      row,\n      col,\n      value\n    }) => {\n      grid[row][col] = { ...grid[row][col],\n        value\n      };\n    });\n    setState(grid);\n  };\n\n  onContextMenu = (e, cell, i, j) => cell.readOnly ? e.preventDefault() : null;\n\n  return /*#__PURE__*/_jsxDEV(Datasheet, {\n    data: grid,\n    valueRenderer: valueRenderer,\n    onContextMenu: onContextMenu,\n    onCellsChanged: onCellsChanged\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Plans, \"AwkJSX1oACPagmKnbp0h0/fPMH4=\");\n\n_c = Plans;\nexport default connect(null)(Plans);\n\nvar _c;\n\n$RefreshReg$(_c, \"Plans\");","map":{"version":3,"sources":["/Users/caseyrudick/Documents/LandShark/landsharkrefactored/client/src/Components/Plans.js"],"names":["React","useState","connect","ReactDataSheet","Plans","initialGrid","readOnly","value","grid","setGrid","valueRenderer","cell","onCellsChanged","changes","forEach","row","col","setState","onContextMenu","e","i","j","preventDefault"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,cAAP,MAA2B,iBAA3B;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,WAAW,GAAG,CAClB,CACE;AAAEC,IAAAA,QAAQ,EAAE,IAAZ;AAAkBC,IAAAA,KAAK,EAAE;AAAzB,GADF,EAEE;AAAEA,IAAAA,KAAK,EAAE,GAAT;AAAcD,IAAAA,QAAQ,EAAE;AAAxB,GAFF,EAGE;AAAEC,IAAAA,KAAK,EAAE,GAAT;AAAcD,IAAAA,QAAQ,EAAE;AAAxB,GAHF,EAIE;AAAEC,IAAAA,KAAK,EAAE,GAAT;AAAcD,IAAAA,QAAQ,EAAE;AAAxB,GAJF,EAKE;AAAEC,IAAAA,KAAK,EAAE,GAAT;AAAcD,IAAAA,QAAQ,EAAE;AAAxB,GALF,CADkB,EAQlB,CACE;AAAEA,IAAAA,QAAQ,EAAE,IAAZ;AAAkBC,IAAAA,KAAK,EAAE;AAAzB,GADF,EAEE;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAFF,EAGE;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAHF,EAIE;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAJF,EAKE;AAAEA,IAAAA,KAAK,EAAE;AAAT,GALF,CARkB,EAelB,CACE;AAAED,IAAAA,QAAQ,EAAE,IAAZ;AAAkBC,IAAAA,KAAK,EAAE;AAAzB,GADF,EAEE;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAFF,EAGE;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAHF,EAIE;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAJF,EAKE;AAAEA,IAAAA,KAAK,EAAE;AAAT,GALF,CAfkB,EAsBlB,CACE;AAAED,IAAAA,QAAQ,EAAE,IAAZ;AAAkBC,IAAAA,KAAK,EAAE;AAAzB,GADF,EAEE;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAFF,EAGE;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAHF,EAIE;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAJF,EAKE;AAAEA,IAAAA,KAAK,EAAE;AAAT,GALF,CAtBkB,EA6BlB,CACE;AAAED,IAAAA,QAAQ,EAAE,IAAZ;AAAkBC,IAAAA,KAAK,EAAE;AAAzB,GADF,EAEE;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAFF,EAGE;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAHF,EAIE;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAJF,EAKE;AAAEA,IAAAA,KAAK,EAAE;AAAT,GALF,CA7BkB,CAApB;AAqCA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAACI,WAAD,CAAhC;;AACAK,EAAAA,aAAa,GAAGC,IAAI,IAAIA,IAAI,CAACJ,KAA7B;;AACAK,EAAAA,cAAc,GAAGC,OAAO,IAAI;AAC1B,UAAML,IAAI,GAAGA,IAAb;AACAK,IAAAA,OAAO,CAACC,OAAR,CAAgB,CAAC;AAAEH,MAAAA,IAAF;AAAQI,MAAAA,GAAR;AAAaC,MAAAA,GAAb;AAAkBT,MAAAA;AAAlB,KAAD,KAA+B;AAC7CC,MAAAA,IAAI,CAACO,GAAD,CAAJ,CAAUC,GAAV,IAAiB,EAAE,GAAGR,IAAI,CAACO,GAAD,CAAJ,CAAUC,GAAV,CAAL;AAAqBT,QAAAA;AAArB,OAAjB;AACD,KAFD;AAGAU,IAAAA,QAAQ,CAACT,IAAD,CAAR;AACD,GAND;;AAOAU,EAAAA,aAAa,GAAG,CAACC,CAAD,EAAIR,IAAJ,EAAUS,CAAV,EAAaC,CAAb,KAChBV,IAAI,CAACL,QAAL,GAAgBa,CAAC,CAACG,cAAF,EAAhB,GAAqC,IADrC;;AAEA,sBACE,QAAC,SAAD;AACI,IAAA,IAAI,EAAEd,IADV;AAEI,IAAA,aAAa,EAAEE,aAFnB;AAGI,IAAA,aAAa,EAAEQ,aAHnB;AAII,IAAA,cAAc,EAAEN;AAJpB;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAzDD;;GAAMR,K;;KAAAA,K;AA2DN,eAAeF,OAAO,CAAC,IAAD,CAAP,CAAcE,KAAd,CAAf","sourcesContent":["import React, { useState } from \"react\"\nimport { connect } from \"react-redux\"\nimport ReactDataSheet from 'react-datasheet';\n\nconst Plans = () => {\n  const initialGrid = [\n    [\n      { readOnly: true, value: '' },\n      { value: 'A', readOnly: true },\n      { value: 'B', readOnly: true },\n      { value: 'C', readOnly: true },\n      { value: 'D', readOnly: true },\n    ],\n    [\n      { readOnly: true, value: 1 },\n      { value: 1 },\n      { value: 3 },\n      { value: 3 },\n      { value: 3 },\n    ],\n    [\n      { readOnly: true, value: 2 },\n      { value: 2 },\n      { value: 4 },\n      { value: 4 },\n      { value: 4 },\n    ],\n    [\n      { readOnly: true, value: 3 },\n      { value: 1 },\n      { value: 3 },\n      { value: 3 },\n      { value: 3 },\n    ],\n    [\n      { readOnly: true, value: 4 },\n      { value: 2 },\n      { value: 4 },\n      { value: 4 },\n      { value: 4 },\n    ]\n  ]\n  const [grid, setGrid] = useState(initialGrid)\n  valueRenderer = cell => cell.value;\n  onCellsChanged = changes => {\n    const grid = grid;\n    changes.forEach(({ cell, row, col, value }) => {\n      grid[row][col] = { ...grid[row][col], value };\n    });\n    setState(grid)\n  };\n  onContextMenu = (e, cell, i, j) =>\n  cell.readOnly ? e.preventDefault() : null;\n  return (\n    <Datasheet\n        data={grid}\n        valueRenderer={valueRenderer}\n        onContextMenu={onContextMenu}\n        onCellsChanged={onCellsChanged}\n    />\n  )\n}\n\nexport default connect(null)(Plans)"]},"metadata":{},"sourceType":"module"}