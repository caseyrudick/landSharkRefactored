{"ast":null,"code":"import _slicedToArray from\"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";// react\nimport React,{useState,useEffect}from'react';// react-bootstrap\nimport Container from'react-bootstrap/Container';import Row from'react-bootstrap/Row';import Col from'react-bootstrap/Col';import Button from'react-bootstrap/Button';import Form from'react-bootstrap/Form';import Dropdown from'react-bootstrap/Dropdown';// other libs/imports\nimport{connect}from'react-redux';import _ from'lodash';// images\n// components\n// action creators\n// import getWellNamesFromDynamoDb from 'ActionCreators/getWellNamesFromDynamoDb';\nimport saveWellInfoToReduxStore from\"../ActionCreators/saveWellInfoToReduxStore\";import getWellPlansFromDynamoDb from'../ActionCreators/getWellPlansFromDynamoDb';// import postWellInfoToJSONDb from \"../ActionCreators/postWellInfoToJSONDb\"\n// import getWellPlansFromJSONDb from \"../ActionCreators/getWellPlansFromJSONDb\"\nimport saveActiveWellToReduxStore from\"../ActionCreators/saveActiveWellToReduxStore\";// import getLeaseLinesFromJSONDb from \"../ActionCreators/getLeaseLinesFromJSONDb\"\n// import getWellsWithLeaseLinesFromJSONDb from \"../ActionCreators/getWellsWithLeaseLinesFromJSONDb\"\n// import getSurveysFromJSONDb from \"../ActionCreators/getSurveysFromJSONDb\"\n//import getWellsWithSurveysFromJSONDb from \"../ActionCreators/getWellsWithSurveysFromJSONDb\"\n//import getWellsWithHardLinesFromJSONDb from \"../ActionCreators/getWellsWithHardLinesFromJSONDb\"\nimport getHardLinesFromDynamoDb from\"../ActionCreators/getHardLinesFromDynamoDb\";import postWellInfoToDynamoDb from\"../ActionCreators/postWellInfoToDynamoDb\";import getWellsFromDynamoDb from\"../ActionCreators/getWellsFromDynamoDb\";import getLeaseLinesFromDynamoDb from'../ActionCreators/getLeaseLinesFromDynamoDb';import getSurveysFromDynamoDb from\"../ActionCreators/getSurveysFromDynamoDb\";var Home=function Home(_ref){var getHardLinesFromDynamoDb=_ref.getHardLinesFromDynamoDb,getSurveysFromDynamoDb=_ref.getSurveysFromDynamoDb,getWellPlansFromDynamoDb=_ref.getWellPlansFromDynamoDb,getWellsFromDynamoDbReducer=_ref.getWellsFromDynamoDbReducer,getWellsFromDynamoDb=_ref.getWellsFromDynamoDb,postWellInfoToDynamoDb=_ref.postWellInfoToDynamoDb,saveActiveWellToReduxStore=_ref.saveActiveWellToReduxStore,saveWellInfoToReduxStore=_ref.saveWellInfoToReduxStore,saveWellInfoToReduxStoreReducer=_ref.saveWellInfoToReduxStoreReducer,getLeaseLinesFromDynamoDb=_ref.getLeaseLinesFromDynamoDb;var _useState=useState('None'),_useState2=_slicedToArray(_useState,2),activeWell=_useState2[0],setActiveWell=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),operator=_useState4[0],setOperator=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),rig=_useState6[0],setRig=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),well=_useState8[0],setWell=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),county=_useState10[0],setCounty=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),usState=_useState12[0],setUSstate=_useState12[1];var _useState13=useState(''),_useState14=_slicedToArray(_useState13,2),northing=_useState14[0],setNorthing=_useState14[1];var _useState15=useState(''),_useState16=_slicedToArray(_useState15,2),easting=_useState16[0],setEasting=_useState16[1];useEffect(function(){// getWellsWithLeaseLinesFromJSONDb()\n// getWellsWithSurveysFromJSONDb()\n// getWellsWithHardLinesFromJSONDb()\ngetWellsFromDynamoDb();},[]);var renderWellNames=function renderWellNames(){if(getWellsFromDynamoDbReducer.status===\"received\"){var wells=getWellsFromDynamoDbReducer.response.Items;return/*#__PURE__*/_jsx(Dropdown.Menu,{children:wells.map(function(well){return/*#__PURE__*/_jsxs(Dropdown.Item,{href:\"\",onClick:function onClick(){setActiveWell(\"\".concat(well.Operator.S,\" - \").concat(well.Rig.S,\" - \").concat(well.Well_Name.S));saveActiveWellToReduxStore(well);console.log();},children:[well.Operator.S,\" - \",well.Rig.S,\" - \",well.Well_Name.S]},\"\".concat(well.Operator.S).concat(well.Well_Name.S));})});}else{return\"Data loading\";}};var createNewWell=function createNewWell(){return/*#__PURE__*/_jsxs(Col,{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"my-4\",children:\"Add new well data\"}),/*#__PURE__*/_jsx(Form.Control,{className:\"mt-3\",placeholder:\"Operator\",onChange:function onChange(event){return setOperator(event.target.value);}}),/*#__PURE__*/_jsx(Form.Control,{className:\"mt-3\",placeholder:\"Rig\",onChange:function onChange(event){return setRig(event.target.value);}}),/*#__PURE__*/_jsx(Form.Control,{className:\"mt-3\",placeholder:\"Well\",onChange:function onChange(event){return setWell(event.target.value);}}),/*#__PURE__*/_jsx(Form.Control,{className:\"mt-3\",placeholder:\"County\",onChange:function onChange(event){return setCounty(event.target.value);}}),/*#__PURE__*/_jsx(Form.Control,{className:\"mt-3\",placeholder:\"State\",onChange:function onChange(event){return setUSstate(event.target.value);}}),/*#__PURE__*/_jsx(Form.Control,{className:\"mt-3\",placeholder:\"Northing\",onChange:function onChange(event){return setNorthing(event.target.value);}}),/*#__PURE__*/_jsx(Form.Control,{className:\"mt-3\",placeholder:\"Easting\",onChange:function onChange(event){return setEasting(event.target.value);}}),/*#__PURE__*/_jsx(Button,{className:\"mt-4\",variant:\"info\",disabled:operator===\"\"||rig===\"\"||well===\"\"||county===\"\"||usState===\"\"?true:false,onClick:function onClick(){return handleNewWellSubmit();},children:\"Submit and begin adding well data\"})]});};var handleNewWellSubmit=function handleNewWellSubmit(){var wellInfo={operator:operator,rig:rig,well:well,county:county,usState:usState,northing:northing,easting:easting};// postWellInfoToJSONDb(wellInfo)\nconsole.log(\"submit puta\");postWellInfoToDynamoDb(wellInfo);saveWellInfoToReduxStore(wellInfo);saveActiveWellToReduxStore(wellInfo);};var handleFetchData=function handleFetchData(){getWellPlansFromDynamoDb(activeWell);getLeaseLinesFromDynamoDb(activeWell);getHardLinesFromDynamoDb(activeWell);getSurveysFromDynamoDb(activeWell);// setTimeout(getWellPlansFromJSONDb, 500, activeWell);\n//setTimeout(getLeaseLinesFromJSONDb, 1000, activeWell);\n// setTimeout(getSurveysFromJSONDb, 1500, activeWell)\n//getHardLinesFromJSONDb(activeWell)\n//   // setTimeout(getWellHardLinesFromDynamoDb(selectedWell), 1000);\n//   // setTimeout(getWellSurveysFromDynamoDb(selectedWell), 2000);\n//   // setTimeout(getOffsets(selectedWell), 2500);\n};var selectExistingWell=function selectExistingWell(){return/*#__PURE__*/_jsxs(Col,{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"my-4\",children:\"Select Existing Well\"}),/*#__PURE__*/_jsxs(Dropdown,{children:[/*#__PURE__*/_jsx(Dropdown.Toggle,{variant:\"primary\",id:\"dropdown-basic\",children:activeWell?activeWell:\"Select Well:\"}),renderWellNames()]}),/*#__PURE__*/_jsx(Button,{className:\"mt-4\",variant:\"success\",disabled:activeWell===\"None\"?true:false,onClick:handleFetchData,children:\"Fetch well data\"})]});};return/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsxs(Row,{children:[createNewWell(),selectExistingWell()]})});};var mapStateToProps=function mapStateToProps(_ref2){var getSurveysFromDynamoDbReducer=_ref2.getSurveysFromDynamoDbReducer,getWellsFromDynamoDbReducer=_ref2.getWellsFromDynamoDbReducer,postWellInfoToDynamoDbReducer=_ref2.postWellInfoToDynamoDbReducer,saveActiveWellToReduxStoreReducer=_ref2.saveActiveWellToReduxStoreReducer,saveWellInfoToReduxStoreReducer=_ref2.saveWellInfoToReduxStoreReducer;return{saveWellInfoToReduxStoreReducer:saveWellInfoToReduxStoreReducer,postWellInfoToDynamoDbReducer:postWellInfoToDynamoDbReducer,getWellsFromDynamoDbReducer:getWellsFromDynamoDbReducer};};export default connect(mapStateToProps,{getLeaseLinesFromDynamoDb:getLeaseLinesFromDynamoDb,getWellPlansFromDynamoDb:getWellPlansFromDynamoDb,getSurveysFromDynamoDb:getSurveysFromDynamoDb,getWellsFromDynamoDb:getWellsFromDynamoDb,postWellInfoToDynamoDb:postWellInfoToDynamoDb,getHardLinesFromDynamoDb:getHardLinesFromDynamoDb,saveActiveWellToReduxStore:saveActiveWellToReduxStore,saveWellInfoToReduxStore:saveWellInfoToReduxStore})(Home);","map":{"version":3,"sources":["/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Components/Home.js"],"names":["React","useState","useEffect","Container","Row","Col","Button","Form","Dropdown","connect","_","saveWellInfoToReduxStore","getWellPlansFromDynamoDb","saveActiveWellToReduxStore","getHardLinesFromDynamoDb","postWellInfoToDynamoDb","getWellsFromDynamoDb","getLeaseLinesFromDynamoDb","getSurveysFromDynamoDb","Home","getWellsFromDynamoDbReducer","saveWellInfoToReduxStoreReducer","activeWell","setActiveWell","operator","setOperator","rig","setRig","well","setWell","county","setCounty","usState","setUSstate","northing","setNorthing","easting","setEasting","renderWellNames","status","wells","response","Items","map","Operator","S","Rig","Well_Name","console","log","createNewWell","event","target","value","handleNewWellSubmit","wellInfo","handleFetchData","selectExistingWell","mapStateToProps","getSurveysFromDynamoDbReducer","postWellInfoToDynamoDbReducer","saveActiveWellToReduxStoreReducer"],"mappings":"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","sourcesContent":["// react\nimport React, { useState, useEffect } from 'react';\n// react-bootstrap\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Dropdown from 'react-bootstrap/Dropdown';\n// other libs/imports\nimport { connect } from 'react-redux';\nimport _ from 'lodash'\n// images\n// components\n// action creators\n// import getWellNamesFromDynamoDb from 'ActionCreators/getWellNamesFromDynamoDb';\nimport saveWellInfoToReduxStore from \"../ActionCreators/saveWellInfoToReduxStore\"\nimport getWellPlansFromDynamoDb from '../ActionCreators/getWellPlansFromDynamoDb';\n// import postWellInfoToJSONDb from \"../ActionCreators/postWellInfoToJSONDb\"\n// import getWellPlansFromJSONDb from \"../ActionCreators/getWellPlansFromJSONDb\"\nimport saveActiveWellToReduxStore from \"../ActionCreators/saveActiveWellToReduxStore\"\n// import getLeaseLinesFromJSONDb from \"../ActionCreators/getLeaseLinesFromJSONDb\"\n// import getWellsWithLeaseLinesFromJSONDb from \"../ActionCreators/getWellsWithLeaseLinesFromJSONDb\"\n// import getSurveysFromJSONDb from \"../ActionCreators/getSurveysFromJSONDb\"\n//import getWellsWithSurveysFromJSONDb from \"../ActionCreators/getWellsWithSurveysFromJSONDb\"\n//import getWellsWithHardLinesFromJSONDb from \"../ActionCreators/getWellsWithHardLinesFromJSONDb\"\nimport getHardLinesFromDynamoDb from \"../ActionCreators/getHardLinesFromDynamoDb\"\nimport postWellInfoToDynamoDb from \"../ActionCreators/postWellInfoToDynamoDb\"\nimport getWellsFromDynamoDb from \"../ActionCreators/getWellsFromDynamoDb\"\nimport getLeaseLinesFromDynamoDb from '../ActionCreators/getLeaseLinesFromDynamoDb';\nimport getSurveysFromDynamoDb from \"../ActionCreators/getSurveysFromDynamoDb\"\n\nconst Home = ({ \n  getHardLinesFromDynamoDb, \n  getSurveysFromDynamoDb,\n  getWellPlansFromDynamoDb, \n  getWellsFromDynamoDbReducer, \n  getWellsFromDynamoDb, \n  postWellInfoToDynamoDb, \n  saveActiveWellToReduxStore, \n  saveWellInfoToReduxStore, \n  saveWellInfoToReduxStoreReducer, \n  getLeaseLinesFromDynamoDb}) => {\n\n  const [activeWell, setActiveWell] = useState('None');\n  const [operator, setOperator] = useState('');\n  const [rig, setRig] = useState('');\n  const [well, setWell] = useState('');\n  const [county, setCounty] = useState('');\n  const [usState, setUSstate] = useState('');\n  const [northing, setNorthing] = useState('');\n  const [easting, setEasting] = useState('');\n\n\n  useEffect(() => {\n    // getWellsWithLeaseLinesFromJSONDb()\n    // getWellsWithSurveysFromJSONDb()\n    // getWellsWithHardLinesFromJSONDb()\n    getWellsFromDynamoDb()\n  }, []);\n\n\n  const renderWellNames = () => {\n    if (getWellsFromDynamoDbReducer.status === \"received\") {\n      let wells = getWellsFromDynamoDbReducer.response.Items\n      return (\n        <Dropdown.Menu>\n          {wells.map(well => {\n            return (\n              <Dropdown.Item \n                href=\"\" \n                key={`${well.Operator.S}${well.Well_Name.S}`} \n                onClick={()=> {\n                  setActiveWell(`${well.Operator.S} - ${well.Rig.S} - ${well.Well_Name.S}`)\n                  saveActiveWellToReduxStore(well)\n                  console.log()\n              } }>\n                {well.Operator.S} - {well.Rig.S} - {well.Well_Name.S}\n              </Dropdown.Item>\n            )\n          })}\n        </Dropdown.Menu>\n      )\n    }\n    else {\n      return \"Data loading\"\n    }\n  }\n\n  const createNewWell = () => {\n    return (\n      <Col>\n        <h3 className=\"my-4\">Add new well data</h3>\n        <Form.Control className=\"mt-3\" placeholder=\"Operator\" onChange={event => setOperator(event.target.value)} />\n        <Form.Control className=\"mt-3\" placeholder=\"Rig\" onChange={event => setRig(event.target.value)} />\n        <Form.Control className=\"mt-3\" placeholder=\"Well\" onChange={event => setWell(event.target.value)} />\n        <Form.Control className=\"mt-3\" placeholder=\"County\" onChange={event => setCounty(event.target.value)} />\n        <Form.Control className=\"mt-3\" placeholder=\"State\" onChange={event => setUSstate(event.target.value)} />\n        <Form.Control className=\"mt-3\" placeholder=\"Northing\" onChange={event => setNorthing(event.target.value)} />\n        <Form.Control className=\"mt-3\" placeholder=\"Easting\" onChange={event => setEasting(event.target.value)} />\n        <Button className=\"mt-4\" variant=\"info\" disabled={ operator === \"\" || rig === \"\" || well === \"\" || county === \"\" || usState === \"\" ? true : false } onClick={()=>handleNewWellSubmit()}>Submit and begin adding well data</Button>\n      </Col>\n    )\n  }\n\n  const handleNewWellSubmit = () => {\n    const wellInfo = {\n      operator,\n      rig,\n      well,\n      county,\n      usState,\n      northing,\n      easting\n    }\n    // postWellInfoToJSONDb(wellInfo)\n    console.log(\"submit puta\")\n    postWellInfoToDynamoDb(wellInfo)\n    saveWellInfoToReduxStore(wellInfo)\n    saveActiveWellToReduxStore(wellInfo)\n  }\n\n  const handleFetchData = () => {\n    getWellPlansFromDynamoDb(activeWell)\n    getLeaseLinesFromDynamoDb(activeWell)\n    getHardLinesFromDynamoDb(activeWell)\n    getSurveysFromDynamoDb(activeWell)\n    // setTimeout(getWellPlansFromJSONDb, 500, activeWell);\n    //setTimeout(getLeaseLinesFromJSONDb, 1000, activeWell);\n    // setTimeout(getSurveysFromJSONDb, 1500, activeWell)\n    //getHardLinesFromJSONDb(activeWell)\n  //   // setTimeout(getWellHardLinesFromDynamoDb(selectedWell), 1000);\n  //   // setTimeout(getWellSurveysFromDynamoDb(selectedWell), 2000);\n  //   // setTimeout(getOffsets(selectedWell), 2500);\n  }\n\n\n\n  const selectExistingWell = () => {\n    return (\n      <Col>\n        <h3 className=\"my-4\">Select Existing Well</h3>\n        <Dropdown>\n          <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\">\n            {activeWell ? activeWell : `Select Well:`}\n          </Dropdown.Toggle>\n          {renderWellNames()}\n        </Dropdown>\n        <Button className=\"mt-4\" variant=\"success\" disabled={ activeWell === \"None\" ? true : false } onClick={handleFetchData}>Fetch well data</Button>\n      </Col>\n    )\n  }\n\n\n  return (\n      <Container>\n        <Row>\n          {createNewWell()}\n          {selectExistingWell()}\n        </Row>\n      </Container>\n    )\n\n}\n\nconst mapStateToProps = ({\n  getSurveysFromDynamoDbReducer, \n  getWellsFromDynamoDbReducer, \n  postWellInfoToDynamoDbReducer, \n  saveActiveWellToReduxStoreReducer, \n  saveWellInfoToReduxStoreReducer }) => {\n  \n  return {\n    saveWellInfoToReduxStoreReducer,\n    postWellInfoToDynamoDbReducer,\n    getWellsFromDynamoDbReducer\n  }\n}\n\nexport default connect(\n  mapStateToProps, \n  { getLeaseLinesFromDynamoDb, \n    getWellPlansFromDynamoDb,\n    getSurveysFromDynamoDb, \n    getWellsFromDynamoDb, \n    postWellInfoToDynamoDb, \n    getHardLinesFromDynamoDb, \n    saveActiveWellToReduxStore, \n    saveWellInfoToReduxStore \n  })(Home);\n"]},"metadata":{},"sourceType":"module"}