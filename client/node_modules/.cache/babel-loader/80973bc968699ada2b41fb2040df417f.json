{"ast":null,"code":"'use strict';\n\nmodule.exports = createViewController;\n\nvar createTurntable = require('turntable-camera-controller');\n\nvar createOrbit = require('orbit-camera-controller');\n\nvar createMatrix = require('matrix-camera-controller');\n\nfunction ViewController(controllers, mode) {\n  this._controllerNames = Object.keys(controllers);\n  this._controllerList = this._controllerNames.map(function (n) {\n    return controllers[n];\n  });\n  this._mode = mode;\n  this._active = controllers[mode];\n\n  if (!this._active) {\n    this._mode = 'turntable';\n    this._active = controllers.turntable;\n  }\n\n  this.modes = this._controllerNames;\n  this.computedMatrix = this._active.computedMatrix;\n  this.computedEye = this._active.computedEye;\n  this.computedUp = this._active.computedUp;\n  this.computedCenter = this._active.computedCenter;\n  this.computedRadius = this._active.computedRadius;\n}\n\nvar proto = ViewController.prototype;\nvar COMMON_METHODS = [['flush', 1], ['idle', 1], ['lookAt', 4], ['rotate', 4], ['pan', 4], ['translate', 4], ['setMatrix', 2], ['setDistanceLimits', 2], ['setDistance', 2]];\nCOMMON_METHODS.forEach(function (method) {\n  var name = method[0];\n  var argNames = [];\n\n  for (var i = 0; i < method[1]; ++i) {\n    argNames.push('a' + i);\n  }\n\n  var code = 'var cc=this._controllerList;for(var i=0;i<cc.length;++i){cc[i].' + method[0] + '(' + argNames.join() + ')}';\n  proto[name] = Function.apply(null, argNames.concat(code));\n});\n\nproto.recalcMatrix = function (t) {\n  this._active.recalcMatrix(t);\n};\n\nproto.getDistance = function (t) {\n  return this._active.getDistance(t);\n};\n\nproto.getDistanceLimits = function (out) {\n  return this._active.getDistanceLimits(out);\n};\n\nproto.lastT = function () {\n  return this._active.lastT();\n};\n\nproto.setMode = function (mode) {\n  if (mode === this._mode) {\n    return;\n  }\n\n  var idx = this._controllerNames.indexOf(mode);\n\n  if (idx < 0) {\n    return;\n  }\n\n  var prev = this._active;\n  var next = this._controllerList[idx];\n  var lastT = Math.max(prev.lastT(), next.lastT());\n  prev.recalcMatrix(lastT);\n  next.setMatrix(lastT, prev.computedMatrix);\n  this._active = next;\n  this._mode = mode; //Update matrix properties\n\n  this.computedMatrix = this._active.computedMatrix;\n  this.computedEye = this._active.computedEye;\n  this.computedUp = this._active.computedUp;\n  this.computedCenter = this._active.computedCenter;\n  this.computedRadius = this._active.computedRadius;\n};\n\nproto.getMode = function () {\n  return this._mode;\n};\n\nfunction createViewController(options) {\n  options = options || {};\n  var eye = options.eye || [0, 0, 1];\n  var center = options.center || [0, 0, 0];\n  var up = options.up || [0, 1, 0];\n  var limits = options.distanceLimits || [0, Infinity];\n  var mode = options.mode || 'turntable';\n  var turntable = createTurntable();\n  var orbit = createOrbit();\n  var matrix = createMatrix();\n  turntable.setDistanceLimits(limits[0], limits[1]);\n  turntable.lookAt(0, eye, center, up);\n  orbit.setDistanceLimits(limits[0], limits[1]);\n  orbit.lookAt(0, eye, center, up);\n  matrix.setDistanceLimits(limits[0], limits[1]);\n  matrix.lookAt(0, eye, center, up);\n  return new ViewController({\n    turntable: turntable,\n    orbit: orbit,\n    matrix: matrix\n  }, mode);\n}","map":{"version":3,"sources":["/Users/caseyrudick/Documents/landsharkrefactored-copy/client/node_modules/3d-view/view.js"],"names":["module","exports","createViewController","createTurntable","require","createOrbit","createMatrix","ViewController","controllers","mode","_controllerNames","Object","keys","_controllerList","map","n","_mode","_active","turntable","modes","computedMatrix","computedEye","computedUp","computedCenter","computedRadius","proto","prototype","COMMON_METHODS","forEach","method","name","argNames","i","push","code","join","Function","apply","concat","recalcMatrix","t","getDistance","getDistanceLimits","out","lastT","setMode","idx","indexOf","prev","next","Math","max","setMatrix","getMode","options","eye","center","up","limits","distanceLimits","Infinity","orbit","matrix","setDistanceLimits","lookAt"],"mappings":"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","sourcesContent":["'use strict'\n\nmodule.exports = createViewController\n\nvar createTurntable = require('turntable-camera-controller')\nvar createOrbit     = require('orbit-camera-controller')\nvar createMatrix    = require('matrix-camera-controller')\n\nfunction ViewController(controllers, mode) {\n  this._controllerNames = Object.keys(controllers)\n  this._controllerList = this._controllerNames.map(function(n) {\n    return controllers[n]\n  })\n  this._mode   = mode\n  this._active = controllers[mode]\n  if(!this._active) {\n    this._mode   = 'turntable'\n    this._active = controllers.turntable\n  }\n  this.modes = this._controllerNames\n  this.computedMatrix = this._active.computedMatrix\n  this.computedEye    = this._active.computedEye\n  this.computedUp     = this._active.computedUp\n  this.computedCenter = this._active.computedCenter\n  this.computedRadius = this._active.computedRadius\n}\n\nvar proto = ViewController.prototype\n\nvar COMMON_METHODS = [\n  ['flush', 1],\n  ['idle', 1],\n  ['lookAt', 4],\n  ['rotate', 4],\n  ['pan', 4],\n  ['translate', 4],\n  ['setMatrix', 2],\n  ['setDistanceLimits', 2],\n  ['setDistance', 2]\n]\n\nCOMMON_METHODS.forEach(function(method) {\n  var name = method[0]\n  var argNames = []\n  for(var i=0; i<method[1]; ++i) {\n    argNames.push('a'+i)\n  }\n  var code = 'var cc=this._controllerList;for(var i=0;i<cc.length;++i){cc[i].'+method[0]+'('+argNames.join()+')}'\n  proto[name] = Function.apply(null, argNames.concat(code))\n})\n\nproto.recalcMatrix = function(t) {\n  this._active.recalcMatrix(t)\n}\n\nproto.getDistance = function(t) {\n  return this._active.getDistance(t)\n}\nproto.getDistanceLimits = function(out) {\n  return this._active.getDistanceLimits(out)\n}\n\nproto.lastT = function() {\n  return this._active.lastT()\n}\n\nproto.setMode = function(mode) {\n  if(mode === this._mode) {\n    return\n  }\n  var idx = this._controllerNames.indexOf(mode)\n  if(idx < 0) {\n    return\n  }\n  var prev  = this._active\n  var next  = this._controllerList[idx]\n  var lastT = Math.max(prev.lastT(), next.lastT())\n\n  prev.recalcMatrix(lastT)\n  next.setMatrix(lastT, prev.computedMatrix)\n  \n  this._active = next\n  this._mode   = mode\n\n  //Update matrix properties\n  this.computedMatrix = this._active.computedMatrix\n  this.computedEye    = this._active.computedEye\n  this.computedUp     = this._active.computedUp\n  this.computedCenter = this._active.computedCenter\n  this.computedRadius = this._active.computedRadius\n}\n\nproto.getMode = function() {\n  return this._mode\n}\n\nfunction createViewController(options) {\n  options = options || {}\n\n  var eye       = options.eye    || [0,0,1]\n  var center    = options.center || [0,0,0]\n  var up        = options.up     || [0,1,0]\n  var limits    = options.distanceLimits || [0, Infinity]\n  var mode      = options.mode   || 'turntable'\n\n  var turntable = createTurntable()\n  var orbit     = createOrbit()\n  var matrix    = createMatrix()\n\n  turntable.setDistanceLimits(limits[0], limits[1])\n  turntable.lookAt(0, eye, center, up)\n  orbit.setDistanceLimits(limits[0], limits[1])\n  orbit.lookAt(0, eye, center, up)\n  matrix.setDistanceLimits(limits[0], limits[1])\n  matrix.lookAt(0, eye, center, up)\n\n  return new ViewController({\n    turntable: turntable,\n    orbit: orbit,\n    matrix: matrix\n  }, mode)\n}"]},"metadata":{},"sourceType":"script"}