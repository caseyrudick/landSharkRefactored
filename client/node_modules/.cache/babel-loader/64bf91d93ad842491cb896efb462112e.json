{"ast":null,"code":"import _toConsumableArray from\"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useEffect,useState}from\"react\";import{connect}from\"react-redux\";import Container from\"react-bootstrap/esm/Container\";import Form from\"react-bootstrap/Form\";import Row from\"react-bootstrap/Row\";import Col from\"react-bootstrap/Col\";import Button from\"react-bootstrap/Button\";import'react-datasheet/lib/react-datasheet.css';import ReactDataSheet from\"react-datasheet\";import{get}from\"lodash\";var ExistingHardLines=function ExistingHardLines(_ref){var getHardLinesFromDynamoDbReducer=_ref.getHardLinesFromDynamoDbReducer,activeWell=_ref.activeWell;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),hardLines=_useState2[0],setHardLines=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),grid=_useState4[0],setGrid=_useState4[1];useEffect(function(){if(getHardLinesFromDynamoDbReducer.status===\"received\"){createCopy();}},[getHardLinesFromDynamoDbReducer.response.Items]);useEffect(function(){createReactDataSheetGridFromHardLines();},[hardLines]);var createCopy=function createCopy(){console.log(getHardLinesFromDynamoDbReducer.response.Items);setHardLines(_toConsumableArray(getHardLinesFromDynamoDbReducer.response.Items));};var createReactDataSheetGridFromHardLines=function createReactDataSheetGridFromHardLines(){var dataSheetHeader=[[{value:'',readOnly:true,width:'3rem'},{value:'Northing',readOnly:true,width:'7rem'},{value:'Easting',readOnly:true,width:'7rem'}]];var hardLinesCopy=_toConsumableArray(hardLines);hardLinesCopy.forEach(function(hardLineItem,idx){var newRow=[];newRow[0]={value:idx+1,width:\"4rem\",readOnly:true};newRow[1]={value:parseInt(hardLineItem.Northing),width:\"7rem\"};newRow[2]={value:parseInt(hardLineItem.Easting),width:\"7rem\"};dataSheetHeader.push(newRow);});setGrid(dataSheetHeader);};var renderMain=function renderMain(){if(getHardLinesFromDynamoDbReducer.status===\"received\"){var _activeWell$response=activeWell.response,operator=_activeWell$response.operator,rig=_activeWell$response.rig,well=_activeWell$response.well;return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsx(ReactDataSheet,{data:grid,valueRenderer:function valueRenderer(cell){return cell.value;},width:true})});}};if(getHardLinesFromDynamoDbReducer.status===\"received\"){return/*#__PURE__*/_jsx(Container,{children:renderMain()});}else{return\"error\";}};var mapStateToProps=function mapStateToProps(_ref2){var activeWell=_ref2.activeWell,getHardLinesFromDynamoDbReducer=_ref2.getHardLinesFromDynamoDbReducer;return{activeWell:activeWell,getHardLinesFromDynamoDbReducer:getHardLinesFromDynamoDbReducer};};export default connect(mapStateToProps)(ExistingHardLines);","map":{"version":3,"sources":["/Users/caseyrudick/Documents/Work/landsharkfinal/landSharkRefactored/client/src/Components/ExistingHardLines.js"],"names":["React","useEffect","useState","connect","Container","Form","Row","Col","Button","ReactDataSheet","get","ExistingHardLines","getHardLinesFromDynamoDbReducer","activeWell","hardLines","setHardLines","grid","setGrid","status","createCopy","response","Items","createReactDataSheetGridFromHardLines","console","log","dataSheetHeader","value","readOnly","width","hardLinesCopy","forEach","hardLineItem","idx","newRow","parseInt","Northing","Easting","push","renderMain","operator","rig","well","cell","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { connect } from \"react-redux\"\n\nimport Container from \"react-bootstrap/esm/Container\"\nimport Form from \"react-bootstrap/Form\"\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\nimport Button from \"react-bootstrap/Button\"\n\nimport 'react-datasheet/lib/react-datasheet.css'\nimport ReactDataSheet from \"react-datasheet\"\nimport { get } from \"lodash\"\n\nconst ExistingHardLines = ({getHardLinesFromDynamoDbReducer, activeWell}) => {\n  const [hardLines, setHardLines] = useState([])\n  const [grid, setGrid] = useState([])\n\n  useEffect(()=>{\n    if (getHardLinesFromDynamoDbReducer.status === \"received\") {\n      createCopy()\n    }\n  },[getHardLinesFromDynamoDbReducer.response.Items])\n\n  useEffect(() => {\n    createReactDataSheetGridFromHardLines()\n  }, [hardLines])\n\n  const createCopy = () => {\n    console.log(getHardLinesFromDynamoDbReducer.response.Items)\n    setHardLines([...getHardLinesFromDynamoDbReducer.response.Items])\n  }\n\n  const createReactDataSheetGridFromHardLines = () => {\n    let dataSheetHeader = [[{value: '', readOnly: true, width: '3rem'},  {value: 'Northing', readOnly: true, width: '7rem'}, {value: 'Easting', readOnly: true, width: '7rem'}]]\n    let hardLinesCopy = [...hardLines];\n    hardLinesCopy.forEach((hardLineItem, idx) => {\n      let newRow = [];\n      newRow[0] = {value: idx + 1, width: \"4rem\", readOnly: true}\n      newRow[1] = {value: parseInt(hardLineItem.Northing), width: \"7rem\"}\n      newRow[2] = {value: parseInt(hardLineItem.Easting), width: \"7rem\"}\n      dataSheetHeader.push(newRow)\n    })\n    setGrid(dataSheetHeader)\n  }\n\n  const renderMain = () => {\n    if (getHardLinesFromDynamoDbReducer.status === \"received\") {\n      const {operator, rig, well } = activeWell.response\n      return (\n        <React.Fragment>\n          {/* <h3 className=\"my-4\">{operator} - {rig} - {well}</h3> */}\n          <ReactDataSheet data = {grid} valueRenderer = {cell => cell.value} width></ReactDataSheet>\n        </React.Fragment>\n      )\n    }\n  }\n\n  if (getHardLinesFromDynamoDbReducer.status === \"received\") {\n    return (\n      <Container>\n        {renderMain()}\n      </Container>\n    )\n  } else {\n        return \"error\"\n    }\n}\n\nconst mapStateToProps = ({activeWell, getHardLinesFromDynamoDbReducer}) => {\n return {\n  activeWell, \n  getHardLinesFromDynamoDbReducer\n }\n}\n\nexport default connect(mapStateToProps)(ExistingHardLines)"]},"metadata":{},"sourceType":"module"}