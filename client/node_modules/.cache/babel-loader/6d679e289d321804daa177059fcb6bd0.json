{"ast":null,"code":"/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n'use strict';\n\nvar Axes = require('../../plots/cartesian/axes');\n\nvar alignPeriod = require('../../plots/cartesian/align_period');\n\nvar arraysToCalcdata = require('./arrays_to_calcdata');\n\nvar calcSelection = require('../scatter/calc_selection');\n\nvar BADNUM = require('../../constants/numerical').BADNUM;\n\nmodule.exports = function calc(gd, trace) {\n  var xa = Axes.getFromId(gd, trace.xaxis || 'x');\n  var ya = Axes.getFromId(gd, trace.yaxis || 'y');\n  var size, pos, origPos, i, cdi;\n  var hasPeriod;\n\n  if (trace.orientation === 'h') {\n    size = xa.makeCalcdata(trace, 'x');\n    origPos = ya.makeCalcdata(trace, 'y');\n    pos = alignPeriod(trace, ya, 'y', origPos);\n    hasPeriod = !!trace.yperiodalignment;\n  } else {\n    size = ya.makeCalcdata(trace, 'y');\n    origPos = xa.makeCalcdata(trace, 'x');\n    pos = alignPeriod(trace, xa, 'x', origPos);\n    hasPeriod = !!trace.xperiodalignment;\n  } // create the \"calculated data\" to plot\n\n\n  var serieslen = Math.min(pos.length, size.length);\n  var cd = new Array(serieslen); // Unlike other bar-like traces funnels do not support base attribute.\n  // bases for funnels are computed internally in a way that\n  // the mid-point of each bar are located on the axis line.\n\n  trace._base = []; // set position and size\n\n  for (i = 0; i < serieslen; i++) {\n    // treat negative values as bad numbers\n    if (size[i] < 0) size[i] = BADNUM;\n    var connectToNext = false;\n\n    if (size[i] !== BADNUM) {\n      if (i + 1 < serieslen && size[i + 1] !== BADNUM) {\n        connectToNext = true;\n      }\n    }\n\n    cdi = cd[i] = {\n      p: pos[i],\n      s: size[i],\n      cNext: connectToNext\n    };\n    trace._base[i] = -0.5 * cdi.s;\n\n    if (hasPeriod) {\n      cd[i].orig_p = origPos[i]; // used by hover\n    }\n\n    if (trace.ids) {\n      cdi.id = String(trace.ids[i]);\n    } // calculate total values\n\n\n    if (i === 0) cd[0].vTotal = 0;\n    cd[0].vTotal += fixNum(cdi.s); // ratio from initial value\n\n    cdi.begR = fixNum(cdi.s) / fixNum(cd[0].s);\n  }\n\n  var prevGoodNum;\n\n  for (i = 0; i < serieslen; i++) {\n    cdi = cd[i];\n    if (cdi.s === BADNUM) continue; // ratio of total value\n\n    cdi.sumR = cdi.s / cd[0].vTotal; // ratio of previous (good) value\n\n    cdi.difR = prevGoodNum !== undefined ? cdi.s / prevGoodNum : 1;\n    prevGoodNum = cdi.s;\n  }\n\n  arraysToCalcdata(cd, trace);\n  calcSelection(cd, trace);\n  return cd;\n};\n\nfunction fixNum(a) {\n  return a === BADNUM ? 0 : a;\n}","map":{"version":3,"sources":["/Users/caseyrudick/Documents/landsharkrefactored-copy/client/node_modules/plotly.js/src/traces/funnel/calc.js"],"names":["Axes","require","alignPeriod","arraysToCalcdata","calcSelection","BADNUM","module","exports","calc","gd","trace","xa","getFromId","xaxis","ya","yaxis","size","pos","origPos","i","cdi","hasPeriod","orientation","makeCalcdata","yperiodalignment","xperiodalignment","serieslen","Math","min","length","cd","Array","_base","connectToNext","p","s","cNext","orig_p","ids","id","String","vTotal","fixNum","begR","prevGoodNum","sumR","difR","undefined","a"],"mappings":"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","sourcesContent":["/**\n* Copyright 2012-2020, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Axes = require('../../plots/cartesian/axes');\nvar alignPeriod = require('../../plots/cartesian/align_period');\nvar arraysToCalcdata = require('./arrays_to_calcdata');\nvar calcSelection = require('../scatter/calc_selection');\nvar BADNUM = require('../../constants/numerical').BADNUM;\n\nmodule.exports = function calc(gd, trace) {\n    var xa = Axes.getFromId(gd, trace.xaxis || 'x');\n    var ya = Axes.getFromId(gd, trace.yaxis || 'y');\n    var size, pos, origPos, i, cdi;\n\n    var hasPeriod;\n    if(trace.orientation === 'h') {\n        size = xa.makeCalcdata(trace, 'x');\n        origPos = ya.makeCalcdata(trace, 'y');\n        pos = alignPeriod(trace, ya, 'y', origPos);\n        hasPeriod = !!trace.yperiodalignment;\n    } else {\n        size = ya.makeCalcdata(trace, 'y');\n        origPos = xa.makeCalcdata(trace, 'x');\n        pos = alignPeriod(trace, xa, 'x', origPos);\n        hasPeriod = !!trace.xperiodalignment;\n    }\n\n    // create the \"calculated data\" to plot\n    var serieslen = Math.min(pos.length, size.length);\n    var cd = new Array(serieslen);\n\n    // Unlike other bar-like traces funnels do not support base attribute.\n    // bases for funnels are computed internally in a way that\n    // the mid-point of each bar are located on the axis line.\n    trace._base = [];\n\n    // set position and size\n    for(i = 0; i < serieslen; i++) {\n        // treat negative values as bad numbers\n        if(size[i] < 0) size[i] = BADNUM;\n\n        var connectToNext = false;\n        if(size[i] !== BADNUM) {\n            if(i + 1 < serieslen && size[i + 1] !== BADNUM) {\n                connectToNext = true;\n            }\n        }\n\n        cdi = cd[i] = {\n            p: pos[i],\n            s: size[i],\n            cNext: connectToNext\n        };\n\n        trace._base[i] = -0.5 * cdi.s;\n\n        if(hasPeriod) {\n            cd[i].orig_p = origPos[i]; // used by hover\n        }\n\n        if(trace.ids) {\n            cdi.id = String(trace.ids[i]);\n        }\n\n        // calculate total values\n        if(i === 0) cd[0].vTotal = 0;\n        cd[0].vTotal += fixNum(cdi.s);\n\n        // ratio from initial value\n        cdi.begR = fixNum(cdi.s) / fixNum(cd[0].s);\n    }\n\n    var prevGoodNum;\n    for(i = 0; i < serieslen; i++) {\n        cdi = cd[i];\n        if(cdi.s === BADNUM) continue;\n\n        // ratio of total value\n        cdi.sumR = cdi.s / cd[0].vTotal;\n\n        // ratio of previous (good) value\n        cdi.difR = (prevGoodNum !== undefined) ? cdi.s / prevGoodNum : 1;\n\n        prevGoodNum = cdi.s;\n    }\n\n    arraysToCalcdata(cd, trace);\n    calcSelection(cd, trace);\n\n    return cd;\n};\n\nfunction fixNum(a) {\n    return (a === BADNUM) ? 0 : a;\n}\n"]},"metadata":{},"sourceType":"script"}